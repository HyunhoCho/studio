/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 313);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = __extends;
/* unused harmony export __assign */
/* unused harmony export __rest */
/* unused harmony export __decorate */
/* unused harmony export __param */
/* unused harmony export __metadata */
/* unused harmony export __awaiter */
/* unused harmony export __generator */
/* unused harmony export __createBinding */
/* unused harmony export __exportStar */
/* unused harmony export __values */
/* unused harmony export __read */
/* unused harmony export __spread */
/* unused harmony export __spreadArrays */
/* unused harmony export __await */
/* unused harmony export __asyncGenerator */
/* unused harmony export __asyncDelegator */
/* unused harmony export __asyncValues */
/* unused harmony export __makeTemplateObject */
/* unused harmony export __importStar */
/* unused harmony export __importDefault */
/* unused harmony export __classPrivateFieldGet */
/* unused harmony export __classPrivateFieldSet */
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/**
 * Source: option-utils.js
 * Created by daewon.park on 2017-03-30.
 */

var numberFmtRgx = /{(0*[\,\.]0*)}|{(0*\,0*\.0*)}/g;

exports.default = {
    hasAggregation: function hasAggregation(selectedColumn) {
        return selectedColumn.aggregation && selectedColumn.aggregation !== 'none';
    },
    getColumnList: function getColumnList(dataSource, sourceIndex) {
        sourceIndex = sourceIndex || 0;
        var columnList;
        if (dataSource.dataType === 'lazy') {
            if (typeof dataSource.lazyData[sourceIndex].columns === 'function') {
                columnList = dataSource.lazyData[sourceIndex].columns();
            } else {
                columnList = dataSource.lazyData[sourceIndex].columns;
            }
        } else {
            columnList = dataSource.localData[sourceIndex].columns;
        }
        return columnList;
    },
    getColumnLabel: function getColumnLabel(selectedColumn) {
        if (!selectedColumn) return;
        var labels = {
            'max': 'Max({0})',
            'min': 'Min({0})',
            'sum': 'Sum({0})',
            'average': 'Average({0})',
            'count': 'Count({0})',
            'unique_count': 'Unique Count({0})'
        };
        if (labels[selectedColumn.aggregation]) {
            return labels[selectedColumn.aggregation].replace(/\{(\d+)\}/g, selectedColumn.name);
        } else {
            return selectedColumn.name;
        }
    },
    getColumnSet: function getColumnSet(options) {
        return options.source.localData[0].columns;
    },
    getXColumns: function getXColumns(options) {
        if (options.xAxis[0].axisType) {
            return [{
                type: 'string',
                axisType: options.xAxis[0].axisType
            }];
        } else {
            for (var s in options.xAxis[0].selected) {
                options.xAxis[0].selected[s].type = this.getColumnType(options.xAxis[0].selected[s].name, this.getColumnSet(options));
            }
            return options.xAxis[0].selected;
        }
    },
    // 18.01.11 axisType을 selected 안으로 spec 변경(axisType과 일반 column을  multi 개로 입력 가능
    getXAxisType: function getXAxisType(options) {
        return options.xAxis[0].axisType || options.xAxis[0].selected[0].axisType || 'default';
    },
    getYColumns: function getYColumns(options) {
        for (var s in options.yAxis[0].selected) {
            if (!options.yAxis[0].selected[s]) continue;
            options.yAxis[0].selected[s].type = this.getColumnType(options.yAxis[0].selected[s].name, this.getColumnSet(options));
        }
        return options.yAxis[0].selected;
    },
    getYAxisType: function getYAxisType(options) {
        return options.yAxis[0].axisType || 'default';
    },
    getColumnType: function getColumnType(columnName, columnSet) {
        for (var c in columnSet) {
            if (columnSet[c].name == columnName) {
                return columnSet[c].type;
            }
        }
    },
    leastSquares: function leastSquares(xData, yData) {
        var xDataLen = xData.length;
        var xSum = xData.reduce(function (prev, curr) {
            return prev + curr;
        });
        var c = xSum;
        var xSumOfSquare = xData.map(function (value, index) {
            return value * value;
        }).reduce(function (prev, curr) {
            return prev + curr;
        });
        var det = xDataLen * xSumOfSquare - xSum * c;
        var ySum = yData.reduce(function (prev, curr) {
            return prev + curr;
        });
        var f = function () {
            var sum = 0;
            for (var i = 0; i < xDataLen; i++) {
                sum = sum + xData[i] * yData[i];
            }
            return sum;
        }();
        var x = det !== 0 ? [(xSumOfSquare * ySum - xSum * f) / det, (xDataLen * f - xSum * ySum) / det] : [Number.NaN, Number.NaN];
        var xMin = Math.min.apply(null, xData);
        var xMax = Math.max.apply(null, xData);
        return [xMin, x[0] + x[1] * xMin, xMax, x[0] + x[1] * xMax];
    },
    getSelectedColumnCount: function getSelectedColumnCount(arr) {
        var cnt = 0;
        for (var a in arr) {
            if (arr[a].selected) {
                for (var s in arr[a].selected) {
                    if (arr[a].selected[s].name) {
                        cnt++;
                    }
                }
            }
        }
        return cnt;
    },
    getColumnIndex: function getColumnIndex(column, allColumns) {
        var indexes = this.getColumnIndexes([column], allColumns);
        return indexes.length > 0 ? indexes[0] : -1;
    },
    getColumnIndexes: function getColumnIndexes(columns, allColumns) {
        var indexes = [];
        for (var i in columns) {
            // if (!columns.name) continue;
            var idx = -1;
            for (var j in allColumns) {
                if (columns[i] && columns[i].axisType) {
                    idx = columns[i].axisType;
                    break;
                }
                if (columns[i] && columns[i].name == allColumns[j].name) {
                    idx = parseInt(j);
                    break;
                }
            }
            indexes.push(idx);
        }
        return indexes;
    },
    getAxisType: function getAxisType(axis) {
        var type;
        var axisTmp = axis;
        if (Array.isArray(axisTmp)) {
            if (axisTmp.length > 1) return 'category';else axisTmp = axis[0];
        }
        if (axisTmp && axisTmp.type.toLowerCase() === 'string' && (typeof axisTmp.aggregation === 'undefined' || axisTmp.aggregation === 'none')) {
            type = 'category';
        } else if (axisTmp && axisTmp.type.toLowerCase() === 'date') {
            type = 'time';
        } else {
            type = 'value';
        }
        return type;
    },
    /**
     * parse format string to type, digits.
     * ex)
     * 0.00e+0 -> exponential, 2
     * 0.00000 -> number, 5
     * @param fmtStr
     */
    parseFmtStrToObj: function parseFmtStrToObj(fmtStr) {
        var type, digit;
        if (fmtStr.includes('e') && fmtStr.includes('.')) {
            type = 'exponential';
            digit = fmtStr.indexOf('e') - fmtStr.indexOf('.') - 1;
        } else if (fmtStr.includes('.')) {
            type = 'number';
            digit = fmtStr.length - fmtStr.indexOf('.') - 1;
        } else {
            type = 'custom';
            digit = -1;
        }
        return { type: type, digit: digit };
    },
    parseFmtObjToStr: function parseFmtObjToStr(fmtObj) {
        var _zeroLoop = function _zeroLoop(target, repeatCnt) {
            for (var idx = 0; idx < repeatCnt; idx++) {
                target += '0';
            }
            return target;
        };

        var rtnStr = '';
        if (fmtObj.type === 'exponential') {
            rtnStr += '0.' + _zeroLoop('', fmtObj.digit) + 'e+0';
        } else if (['number', 'double', 'integer'].includes(fmtObj.type)) {
            rtnStr += '0.' + _zeroLoop('', fmtObj.digit);
        } else {
            rtnStr = fmtObj.digit;
        }
        return rtnStr;
    },
    numericSortRule: function numericSortRule(a, b) {
        if (!isFinite(a - b)) {
            return !isFinite(a) ? 1 : -1;
        } else if (typeof a === 'string') {
            return Number(a) - Number(b);
        } else {
            return a - b;
        }
    },
    timeSortRule: function timeSortRule(a, b) {
        var timeA = Date.parse(a);
        var timeB = Date.parse(b);
        if (!isFinite(timeA - timeB)) {
            return !isFinite(timeA) ? 1 : -1;
        } else {
            return timeA - timeB;
        }
    },
    stringSortRule: function stringSortRule(a, b) {
        if (typeof a !== 'string' || typeof b !== 'string') {
            return typeof a !== 'string' ? 1 : -1;
        } else if (a < b) {
            return -1;
        } else if (a == b) {
            return 0;
        } else return 1;
    },
    dateFormatString: function dateFormatString(data, format) {
        var dateVal = new Date(data);

        /*
         * Date Format 1.2.3
         * (c) 2007-2009 Steven Levithan <stevenlevithan.com>
         * MIT license
         *
         * Includes enhancements by Scott Trenda <scott.trenda.net>
         * and Kris Kowal <cixar.com/~kris.kowal/>
         *
         * Accepts a date, a mask, or a date and a mask.
         * Returns a formatted version of the given date.
         * The date defaults to the current date/time.
         * The mask defaults to dateFormat.masks.default.
         */
        var dateFormat = function () {
            var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|"[^"]*"|'[^']*'/g,
                timezone = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,
                timezoneClip = /[^-+\dA-Z]/g,
                pad = function pad(val, len) {
                val = String(val);
                len = len || 2;
                while (val.length < len) {
                    val = '0' + val;
                }return val;
            };

            // Regexes and supporting functions are cached through closure
            return function (date, mask, utc) {
                var dF = dateFormat;

                // You can't provide utc if you skip other args (use the "UTC:" mask prefix)
                if (arguments.length == 1 && Object.prototype.toString.call(date) == '[object String]' && !/\d/.test(date)) {
                    mask = date;
                    date = undefined;
                }

                // Passing date through Date applies Date.parse, if necessary
                date = date ? new Date(date) : new Date();
                if (isNaN(date)) throw SyntaxError('invalid date');

                mask = String(dF.masks[mask] || mask || dF.masks.default);

                // Allow setting the utc argument via the mask
                if (mask.slice(0, 4) == 'UTC:') {
                    mask = mask.slice(4);
                    utc = true;
                }

                var _ = utc ? 'getUTC' : 'get',
                    d = date[_ + 'Date'](),
                    D = date[_ + 'Day'](),
                    m = date[_ + 'Month'](),
                    y = date[_ + 'FullYear'](),
                    H = date[_ + 'Hours'](),
                    M = date[_ + 'Minutes'](),
                    s = date[_ + 'Seconds'](),
                    L = date[_ + 'Milliseconds'](),
                    o = utc ? 0 : date.getTimezoneOffset(),
                    flags = {
                    d: d,
                    dd: pad(d),
                    ddd: dF.i18n.dayNames[D],
                    dddd: dF.i18n.dayNames[D + 7],
                    m: m + 1,
                    mm: pad(m + 1),
                    mmm: dF.i18n.monthNames[m],
                    mmmm: dF.i18n.monthNames[m + 12],
                    yy: String(y).slice(2),
                    yyyy: y,
                    h: H % 12 || 12,
                    hh: pad(H % 12 || 12),
                    H: H,
                    HH: pad(H),
                    M: M,
                    MM: pad(M),
                    s: s,
                    ss: pad(s),
                    l: pad(L, 3),
                    L: pad(L > 99 ? Math.round(L / 10) : L),
                    t: H < 12 ? 'a' : 'p',
                    tt: H < 12 ? 'am' : 'pm',
                    T: H < 12 ? 'A' : 'P',
                    TT: H < 12 ? 'AM' : 'PM',
                    Z: utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),
                    o: (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),
                    S: ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10]
                };

                return mask.replace(token, function ($0) {
                    return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);
                });
            };
        }();

        // Some common format strings
        dateFormat.masks = {
            'default': 'ddd mmm dd yyyy HH:MM:ss',
            shortDate: 'm/d/yy',
            mediumDate: 'mmm d, yyyy',
            longDate: 'mmmm d, yyyy',
            fullDate: 'dddd, mmmm d, yyyy',
            shortTime: 'h:MM TT',
            mediumTime: 'h:MM:ss TT',
            longTime: 'h:MM:ss TT Z',
            isoDate: 'yyyy-mm-dd',
            isoTime: 'HH:MM:ss',
            isoDateTime: 'yyyy-mm-dd\'T\'HH:MM:ss',
            isoUtcDateTime: 'UTC:yyyy-mm-dd\'T\'HH:MM:ss\'Z\''
        };

        // Internationalization strings
        dateFormat.i18n = {
            dayNames: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
            monthNames: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
        };
        return dateFormat(dateVal, format);
    },
    /**
     * returns label formatter function
     * @param formatter
     * ex) '${value}' or '{0,0.000}'...
     * @returns {Function}
     */
    formatLabel: function formatLabel(formatter) {
        return function (value, index) {
            if ((Number(value) === 0 || Boolean(Number(value))) && numberFmtRgx.test(formatter)) {
                var resultFmt = numberFmtRgx.exec(formatter) || numberFmtRgx.exec(formatter);
                return formatter.replace(numberFmtRgx, value != null ? numeral(value).format(resultFmt[1] || resultFmt[2]) : '');
            } else {
                return formatter.replace('{value}', value != null ? value : '');
            }
        };
    }
};

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Decorator(builder, options) {
    this.builder = builder;
    this.options = options;
    this.eOptions = this.builder.eOptions;
    this.bOptions = this.builder.bOptions;
    this.plotOptions = this.builder.plotOptions;
}

Decorator.prototype.decorate = function () {};

Decorator.prototype._getColumnNamesCategories = function () {
    var categories = [];
    var yAxis = this.bOptions.yAxis[0].selected;

    for (var i = 0; i < yAxis.length; i++) {
        if (!yAxis[i]) continue;
        categories.push(_optionUtils2.default.getColumnLabel(yAxis[i]));
    }
    return categories;
};

exports.default = Decorator;

/***/ }),
/* 3 */,
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Subscriber; });
/* unused harmony export SafeSubscriber */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_isFunction__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Observer__ = __webpack_require__(245);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Subscription__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__internal_symbol_rxSubscriber__ = __webpack_require__(105);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__config__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__util_hostReportError__ = __webpack_require__(103);
/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */







var Subscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](Subscriber, _super);
    function Subscriber(destinationOrNext, error, complete) {
        var _this = _super.call(this) || this;
        _this.syncErrorValue = null;
        _this.syncErrorThrown = false;
        _this.syncErrorThrowable = false;
        _this.isStopped = false;
        switch (arguments.length) {
            case 0:
                _this.destination = __WEBPACK_IMPORTED_MODULE_2__Observer__["a" /* empty */];
                break;
            case 1:
                if (!destinationOrNext) {
                    _this.destination = __WEBPACK_IMPORTED_MODULE_2__Observer__["a" /* empty */];
                    break;
                }
                if (typeof destinationOrNext === 'object') {
                    if (destinationOrNext instanceof Subscriber) {
                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;
                        _this.destination = destinationOrNext;
                        destinationOrNext.add(_this);
                    }
                    else {
                        _this.syncErrorThrowable = true;
                        _this.destination = new SafeSubscriber(_this, destinationOrNext);
                    }
                    break;
                }
            default:
                _this.syncErrorThrowable = true;
                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);
                break;
        }
        return _this;
    }
    Subscriber.prototype[__WEBPACK_IMPORTED_MODULE_4__internal_symbol_rxSubscriber__["a" /* rxSubscriber */]] = function () { return this; };
    Subscriber.create = function (next, error, complete) {
        var subscriber = new Subscriber(next, error, complete);
        subscriber.syncErrorThrowable = false;
        return subscriber;
    };
    Subscriber.prototype.next = function (value) {
        if (!this.isStopped) {
            this._next(value);
        }
    };
    Subscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            this.isStopped = true;
            this._error(err);
        }
    };
    Subscriber.prototype.complete = function () {
        if (!this.isStopped) {
            this.isStopped = true;
            this._complete();
        }
    };
    Subscriber.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.isStopped = true;
        _super.prototype.unsubscribe.call(this);
    };
    Subscriber.prototype._next = function (value) {
        this.destination.next(value);
    };
    Subscriber.prototype._error = function (err) {
        this.destination.error(err);
        this.unsubscribe();
    };
    Subscriber.prototype._complete = function () {
        this.destination.complete();
        this.unsubscribe();
    };
    Subscriber.prototype._unsubscribeAndRecycle = function () {
        var _parentOrParents = this._parentOrParents;
        this._parentOrParents = null;
        this.unsubscribe();
        this.closed = false;
        this.isStopped = false;
        this._parentOrParents = _parentOrParents;
        return this;
    };
    return Subscriber;
}(__WEBPACK_IMPORTED_MODULE_3__Subscription__["a" /* Subscription */]));

var SafeSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SafeSubscriber, _super);
    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {
        var _this = _super.call(this) || this;
        _this._parentSubscriber = _parentSubscriber;
        var next;
        var context = _this;
        if (Object(__WEBPACK_IMPORTED_MODULE_1__util_isFunction__["a" /* isFunction */])(observerOrNext)) {
            next = observerOrNext;
        }
        else if (observerOrNext) {
            next = observerOrNext.next;
            error = observerOrNext.error;
            complete = observerOrNext.complete;
            if (observerOrNext !== __WEBPACK_IMPORTED_MODULE_2__Observer__["a" /* empty */]) {
                context = Object.create(observerOrNext);
                if (Object(__WEBPACK_IMPORTED_MODULE_1__util_isFunction__["a" /* isFunction */])(context.unsubscribe)) {
                    _this.add(context.unsubscribe.bind(context));
                }
                context.unsubscribe = _this.unsubscribe.bind(_this);
            }
        }
        _this._context = context;
        _this._next = next;
        _this._error = error;
        _this._complete = complete;
        return _this;
    }
    SafeSubscriber.prototype.next = function (value) {
        if (!this.isStopped && this._next) {
            var _parentSubscriber = this._parentSubscriber;
            if (!__WEBPACK_IMPORTED_MODULE_5__config__["a" /* config */].useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                this.__tryOrUnsub(this._next, value);
            }
            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _parentSubscriber = this._parentSubscriber;
            var useDeprecatedSynchronousErrorHandling = __WEBPACK_IMPORTED_MODULE_5__config__["a" /* config */].useDeprecatedSynchronousErrorHandling;
            if (this._error) {
                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                    this.__tryOrUnsub(this._error, err);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parentSubscriber, this._error, err);
                    this.unsubscribe();
                }
            }
            else if (!_parentSubscriber.syncErrorThrowable) {
                this.unsubscribe();
                if (useDeprecatedSynchronousErrorHandling) {
                    throw err;
                }
                Object(__WEBPACK_IMPORTED_MODULE_6__util_hostReportError__["a" /* hostReportError */])(err);
            }
            else {
                if (useDeprecatedSynchronousErrorHandling) {
                    _parentSubscriber.syncErrorValue = err;
                    _parentSubscriber.syncErrorThrown = true;
                }
                else {
                    Object(__WEBPACK_IMPORTED_MODULE_6__util_hostReportError__["a" /* hostReportError */])(err);
                }
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.complete = function () {
        var _this = this;
        if (!this.isStopped) {
            var _parentSubscriber = this._parentSubscriber;
            if (this._complete) {
                var wrappedComplete = function () { return _this._complete.call(_this._context); };
                if (!__WEBPACK_IMPORTED_MODULE_5__config__["a" /* config */].useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                    this.__tryOrUnsub(wrappedComplete);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);
                    this.unsubscribe();
                }
            }
            else {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            this.unsubscribe();
            if (__WEBPACK_IMPORTED_MODULE_5__config__["a" /* config */].useDeprecatedSynchronousErrorHandling) {
                throw err;
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_6__util_hostReportError__["a" /* hostReportError */])(err);
            }
        }
    };
    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {
        if (!__WEBPACK_IMPORTED_MODULE_5__config__["a" /* config */].useDeprecatedSynchronousErrorHandling) {
            throw new Error('bad call');
        }
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            if (__WEBPACK_IMPORTED_MODULE_5__config__["a" /* config */].useDeprecatedSynchronousErrorHandling) {
                parent.syncErrorValue = err;
                parent.syncErrorThrown = true;
                return true;
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_6__util_hostReportError__["a" /* hostReportError */])(err);
                return true;
            }
        }
        return false;
    };
    SafeSubscriber.prototype._unsubscribe = function () {
        var _parentSubscriber = this._parentSubscriber;
        this._context = null;
        this._parentSubscriber = null;
        _parentSubscriber.unsubscribe();
    };
    return SafeSubscriber;
}(Subscriber));

//# sourceMappingURL=Subscriber.js.map


/***/ }),
/* 5 */,
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.registerChartWrapper = registerChartWrapper;
exports.getChartWrapper = getChartWrapper;
exports.createChartWrapper = createChartWrapper;

var _bchartIndex = __webpack_require__(87);

var Charts = _interopRequireWildcard(_bchartIndex);

var _wrapperIndex = __webpack_require__(354);

var Wrapper = _interopRequireWildcard(_wrapperIndex);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

/**
 * Created by sds on 2018-03-20.
 */
var chartWrapper = {};

//private
function _init() {
    var chartTypeList = Object.keys(Charts);
    chartTypeList.forEach(function (chartType) {
        chartWrapper[Charts[chartType].Attr.Key] = Wrapper[chartType];
    });
}

exports.default = chartWrapper;
function registerChartWrapper(option) {
    if ($.isEmptyObject(chartWrapper)) {
        _init();
        console.log('chart wrapper register is empty');
    }
    chartWrapper[option.Key] = option.Func;
}

function getChartWrapper(chartType) {
    if ($.isEmptyObject(chartWrapper)) {
        _init();
    }
    return chartWrapper[chartType];
}

function createChartWrapper(chartType, parentId, options) {
    if ($.isEmptyObject(chartWrapper)) {
        _init();
    }
    if (!chartWrapper[chartType] || !parentId || !options) {
        throw new Error('Cannot create chart wrapper. ' + chartType);
    }
    return new chartWrapper[chartType](parentId, options);
}

/***/ }),
/* 7 */,
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipDecorator(builder) {
    _decorator2.default.call(this, builder);
}

TooltipDecorator.prototype = Object.create(_decorator2.default.prototype);
TooltipDecorator.prototype.constructor = TooltipDecorator;

TooltipDecorator.prototype.decorate = function () {
    if (this.eOptions.tooltip.formatter) {
        var _builder = $.extend(true, {}, this.builder);
        this.eOptions.tooltip.formatter = this.eOptions.tooltip.formatter.bind(_builder);
    } else if (this.eOptions.tooltip.trigger == 'item') {
        this._buildItemTooltip();
    } else if (this.eOptions.tooltip.trigger == 'axis') {
        this._buildAxisTooltip();
    }
};

TooltipDecorator.prototype._buildItemTooltip = function () {
    var builder = this.builder;
    var _this = this;

    var keyColumns = builder.getTooltipKeyColumns();
    var dataColumns = builder.getTooltipDataColumns();
    var chartType = builder.bOptions.chart.type;
    var isMultiYAxis = builder.bOptions.yAxis[0].selected.length > 1;
    _this.eOptions.tooltip.formatter = function (params, ticket, callback) {
        var series = builder.series;
        var seriesIndex = params.seriesIndex;
        var toolItems = [];

        if (params.seriesName && keyColumns.length > 0) {
            toolItems.push(_this._getLegendItemTooltip(params));
            toolItems = toolItems.concat(_this._getItemKeyTooltip(params, keyColumns));
        }
        if (params.componentType === 'markLine' || params.componentType === 'markPoint') {
            toolItems.push(params.name + ' : ' + params.value);
        } else if (_this._hasTooltipHeaders(series[seriesIndex])) {
            var tooltipHeaders = series[seriesIndex].tooltipHeaders;
            for (var i = 0; i < tooltipHeaders.length; i++) {
                toolItems.push(tooltipHeaders[i] + ' : ' + params.value[i]);
            }
        } else {
            toolItems.push(_this._getItemXTooltip(params, dataColumns));
            toolItems.push(_this._getItemYTooltip(params, dataColumns, isMultiYAxis));
            if (chartType === 'bubble') {
                toolItems.push(_this._getItemSizeByTooltip(params, dataColumns));
            }
        }

        return function () {
            var result = [];
            for (var t in toolItems) {
                if (result.indexOf(toolItems[t]) === -1) {
                    result.push(toolItems[t]);
                }
            }
            return result;
        }().join('<br>');
    };
};

TooltipDecorator.prototype._getLegendItemTooltip = function (params) {
    var seriesName = params.seriesName;
    var name = void 0;
    if (this.builder.bOptions.legend.legendMap && this.builder.bOptions.legend.legendMap[0]) {
        name = this.builder.bOptions.legend.legendMap[0][seriesName] ? this.builder.bOptions.legend.legendMap[0][seriesName] : seriesName;
    } else {
        name = seriesName;
    }
    return name;
};

TooltipDecorator.prototype._getItemKeyTooltip = function (params, keyColumns) {
    var keyItems = [];
    var extractor = this.builder._internalOptions().series[params.seriesIndex].extractor;
    for (var k = 0; k < keyColumns.length; k++) {
        keyItems.push(keyColumns[k].name + ' : ' + extractor.keys[k]);
    }
    return keyItems;
};

TooltipDecorator.prototype._getItemXTooltip = function (params, dataColumns) {
    var builder = this.builder;

    var value = params.value[0];
    if (builder._internalOptions().xAxis[0].type === 'value' || builder._internalOptions().xAxis[0].type === 'time') {
        if (builder._internalOptions().xAxis[0].type === 'time') value = _optionUtils2.default.dateFormatString(value, 'yyyy-mm-dd HH:MM:ss');
        if (builder._internalOptions().xAxis[0].data) {
            return _optionUtils2.default.getColumnLabel(dataColumns[0]) + ' : ' + builder._internalOptions().xAxis[0].data[value - 1];
        } else {
            return _optionUtils2.default.getColumnLabel(dataColumns[0]) + ' : ' + value;
        }
    } else {
        return _optionUtils2.default.getColumnLabel(dataColumns[0]) + ' : ' + value;
    }
};

TooltipDecorator.prototype._getItemYTooltip = function (params, dataColumns) {
    return _optionUtils2.default.getColumnLabel(dataColumns[1]) + ' : ' + params.value[1];
};

TooltipDecorator.prototype._buildAxisTooltip = function () {
    var builder = this.builder;
    var _this = this;

    var keyColumns = builder.getTooltipKeyColumns();
    var dataColumns = builder.getTooltipDataColumns();
    var seriesIndex;
    var isMultiYAxis = builder.bOptions.yAxis[0].selected.length > 1;
    this.eOptions.tooltip.formatter = function (params, ticket, callback) {
        var toolItems = [];
        if (Array.isArray(params)) {
            var series = builder.series;
            for (var p in params) {
                if (builder._internalOptions().series[params[p].seriesIndex].virtualSeries) continue;

                var axisNameTooltip = _this._getAxisNameTooltip(params[p], dataColumns);
                if (!axisNameTooltip) continue;
                toolItems.push(axisNameTooltip);

                var division = function division(text) {
                    return '<div title="' + text + '">' + text + '</div>';
                };
                if (params[p].seriesName || params[p].seriesType === 'line') {
                    division = function division(text) {
                        return '<div title="' + text + '" style="color: ' + params[p].color + ';" series-name:"' + params[p].seriesName + '">' + text + '</div>';
                    };
                    toolItems.push(_this._getLegendAxisTooltip(params[p], division));
                    toolItems = toolItems.concat(_this._getAxisKeyTooltip(params[p], division, keyColumns));
                }
                seriesIndex = params[p].seriesIndex;
                if (_this._hasTooltipHeaders(series[seriesIndex])) {
                    toolItems.push(division(series[seriesIndex].tooltipHeaders[1] + ':' + params[p].value[1]));
                } else {
                    // Y 컬럼
                    toolItems.push(division(_this._getAxisValueTooltip(params[p], dataColumns, isMultiYAxis)));
                }
            }
        } else {
            if (params.componentType === 'markLine' || params.componentType === 'markPoint') {
                toolItems.push(params.name + ' : ' + params.value);
            }
        }

        return function () {
            var result = [];
            for (var t in toolItems) {
                if (result.indexOf(toolItems[t]) === -1) {
                    result.push(toolItems[t]);
                }
            }
            return result;
        }().join('');
    };
};

TooltipDecorator.prototype._getAxisNameTooltip = function (param, dataColumns) {
    var builder = this.builder;
    var name = param.value[0];

    if (builder._internalOptions().xAxis[0].type === 'value' || builder._internalOptions().xAxis[0].type === 'time') {
        if (typeof param.value === 'undefined') return;
        if (builder._internalOptions().xAxis[0].type === 'time') name = _optionUtils2.default.dateFormatString(name, 'yyyy-mm-dd HH:MM:ss');
        return _optionUtils2.default.getColumnLabel(dataColumns[0]) + ' : ' + name;
    } else {
        return _optionUtils2.default.getColumnLabel(dataColumns[0]) + ' : ' + name;
    }
};

TooltipDecorator.prototype._getLegendAxisTooltip = function (params, division) {
    var seriesName = params.seriesName;
    var name = void 0;
    if (this.builder.bOptions.legend.legendMap && this.builder.bOptions.legend.legendMap[0]) {
        name = this.builder.bOptions.legend.legendMap[0][seriesName] ? this.builder.bOptions.legend.legendMap[0][seriesName] : seriesName;
    } else {
        name = seriesName;
    }
    return division(name);
};

TooltipDecorator.prototype._getAxisKeyTooltip = function (param, division, keyColumns) {
    var builder = this.builder;
    var keyItems = [];
    if (builder._internalOptions().series[param.seriesIndex]) {
        var extractor = builder._internalOptions().series[param.seriesIndex].extractor;
        if (extractor) {
            for (var k = 0; k < keyColumns.length; k++) {
                keyItems.push(division(keyColumns[k].name + ' : ' + extractor.keys[k]));
            }
        }
    } else {
        keyItems.push(division(param.seriesName));
    }

    return keyItems;
};

TooltipDecorator.prototype._hasTooltipHeaders = function (series) {
    return series && series.tooltipHeaders;
};

TooltipDecorator.prototype._getAxisValueTooltip = function (param, dataColumns) {
    return _optionUtils2.default.getColumnLabel(dataColumns[1]) + ' : ' + param.value[1];
};

TooltipDecorator.prototype._getItemSizeByTooltip = function (params, dataColumns) {
    var columnName = dataColumns[2] ? _optionUtils2.default.getColumnLabel(dataColumns[2]) : 'Count';
    return columnName + ' : ' + params.value[2];
};

exports.default = TooltipDecorator;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/**
 * Source: default-options.js
 * Created by ng1123.kim on 2017-05-22.
 */
exports.default = {
    ColorSet: ['#FFC14A', '#20BAC2', '#6952DB', '#1E5FCB', '#0EBB59', '#D7C7FE', '#FD9C94', '#5C0931', '#8EDDCF', '#166440', '#E6E6E6', '#7394FF', '#8B21A6', '#BDBDBD', '#F56813', '#EBE3FE', '#FECDC9', '#AE8498', '#C6EEE7', '#8BB2A0', '#F2F2F2', '#B9C9FF', '#C590D2', '#DEDEDE', '#FAB489'],
    VisualMapColorSet: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026'],
    Grid: {
        left: '10%',
        right: '10%',
        top: '60px',
        bottom: '60px',
        width: 'auto',
        height: 'auto'
    },
    AxisLabel: {
        show: true,
        rotate: 0,
        textStyle: {
            color: '#000000',
            fontSize: 12,
            fontFamily: ''
        },
        interval: 'auto'
    },
    SplitLine: {
        show: false,
        lineStyle: {
            color: '#cccccc',
            width: 1,
            type: 'solid'
        }
    },
    Title: {
        show: true,
        text: '',
        subtext: '',
        rotate: 0,
        textStyle: {
            color: '#000000',
            fontSize: 12,
            fontFamily: ''
        },
        subtextStyle: {
            color: '#000000',
            fontSize: 12,
            fontFamily: ''
        }
    },
    Legend: {
        show: true,
        orientation: 'horizontal',
        left: '50%',
        right: 'auto',
        top: '10px',
        bottom: 'auto',
        textStyle: {
            color: '#000000',
            fontSize: 12,
            fontFamily: '',
            fontStyle: 'normal',
            fontWeight: 'normal',
            fontDecoration: 'none'
        },
        legendMap: [{}],
        grid: {
            use: false,
            rowColumnCount: 1
        }
    },
    VisualMap: {
        show: true,
        left: 0,
        right: 'auto',
        top: '10px',
        bottom: 'auto',
        colorSet: ["#313695", "#a50026"], //min, max
        textStyle: {
            color: '#000000',
            fontSize: 12,
            fontFamily: '',
            fontStyle: 'normal',
            fontWeight: 'normal',
            fontDecoration: 'none'
        }
    },
    Marker: {
        symbolSize: 1,
        itemStyle: {
            normal: {
                opacity: 1
            }
        }

    },
    MarkLine: {
        lineStyle: {
            normal: {
                color: '#000000',
                type: 'solid',
                width: 1
            }
        },
        data: [{}]
    },
    StripLine: {
        lineStyle: {
            normal: {
                color: '#000000',
                type: 'solid',
                width: 1
            }
        },
        data: [{}]
    },
    TrendLine: {
        lineStyle: {
            normal: {
                color: '#000000',
                type: 'solid',
                width: 1
            }
        },
        data: [{}]
    },
    extend: function extend(options) {
        return $.extend(true, {}, {
            colorSet: this.ColorSet,
            title: $.extend(true, {}, this.Title, { left: '50%', top: '0px' }),
            toolbar: {
                show: false,
                right: '8px',
                top: '8px',
                orientation: 'horizontal',
                //todo: 2017 pvr zoom 라이브러리 버그(filter mode)로 인한 줌기능 제거
                menu: {
                    // zoom: {}
                }
            },
            chart: {
                border: '1px #000000 none',
                background: 'rgba(255, 255, 255,1)',
                animationDuration: 1000
            },
            tooltip: {
                triggerOn: 'mousemove', //'click',
                confine: true,
                extraCssText: 'z-index:9999'
            },
            grid: this.Grid,
            xAxis: [{
                selected: [],
                title: $.extend(true, {}, this.Title, { left: '50%', bottom: '5px' }),
                axisTick: { show: true },
                axisLine: {
                    onZero: false
                },
                scale: true,
                axisLabel: this.AxisLabel,
                splitLine: this.SplitLine,
                zlevel: 1
            }],
            yAxis: [{
                selected: [],
                title: $.extend(true, {}, this.Title, { left: '8px', top: '50%', rotate: -90 }),
                axisTick: { show: true },
                axisLine: {
                    onZero: false
                },
                scale: true,
                axisLabel: this.AxisLabel,
                splitLine: this.SplitLine,
                zlevel: 1
            }],
            colorBy: [{
                selected: []
            }],
            legend: this.Legend,
            noDataMessage: ''
        }, options);
    }
};

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _columnHelper2 = __webpack_require__(134);

var _columnHelper3 = _interopRequireDefault(_columnHelper2);

var _chartUtils = __webpack_require__(24);

var _chartUtils2 = _interopRequireDefault(_chartUtils);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _problemLibrary = __webpack_require__(88);

var _problemLibrary2 = _interopRequireDefault(_problemLibrary);

var _problem = __webpack_require__(317);

var _problem2 = _interopRequireDefault(_problem);

var _warning = __webpack_require__(318);

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Created by SDS on 2017-05-10.
 */
function ChartValidatorBase(options) {
    this.options = options;
    this.problemList = [];
    this.warningList = [];
    this._isValidDataSource = false;
    this._columnList = [];
    this.setColumnHelper(this.options);
}

ChartValidatorBase.prototype.validate = function () {
    this.validateDataSource();

    this.configureAxis();
    this.validateAxis();

    this._validateAxisViewRange();
    this._validateAxisFramePadding();
    this.validateStripLineType();
    this.validateScale();
    this._validateImplement();
};

ChartValidatorBase.prototype.setColumnHelper = function (helperOption) {
    var _columnHelper = new _columnHelper3.default({
        type: helperOption.chart.type,
        columnConf: helperOption.columnConf
    });
    this._columnConf = _columnHelper.getColumnConf();
};

ChartValidatorBase.prototype.validateDataSource = function () {
    var _this = this;
    this._validateDataSourceIsExist(this.options.source);
    if (this._isValidDataSource) {
        if (this.options.source.dataType !== 'lazy') {
            this.getDataSrcOptions().forEach(function (dataSrcOpt, dsIdx) {
                _this._validateData(dataSrcOpt.label, _this.options.source.localData, dsIdx);
            });
        } else {
            this.getDataSrcOptions().forEach(function (dataSrcOpt, dsIdx) {
                _this._validateData(dataSrcOpt.label, _this.options.source.lazyData, dsIdx);
            });
        }
    }
};

//@implement
ChartValidatorBase.prototype.getDataSrcOptions = function () {
    return [{
        label: 'Data Source'
    }];
};

//@implement
ChartValidatorBase.prototype.getAxisOptions = function () {
    return [{
        key: 'xAxis'
    }, {
        key: 'yAxis'
    }, {
        key: 'colorBy'
    }];
};

ChartValidatorBase.prototype._getAxisColumnConf = function (columnSpec) {
    if (typeof columnSpec.chartIdx != 'undefined') {
        var chartType = this.options.complex[columnSpec.chartIdx].chart.type;
        return this._columnConf[columnSpec.key][chartType];
    } else {
        return this._columnConf[columnSpec.key];
    }
};

/**
 * configure: configure logic에 따라 option에 default값을 강제로 세팅함.
 * - setting available aggregation or unset aggregation
 * - slice columns when it is not allowed multiple
 */
ChartValidatorBase.prototype.configureAxis = function () {
    var _this = this;
    var chartType = this.options.chart.type;
    var funcList, valueRef, dataSetIdx, columnConf;

    var columnList = this.getAxisOptions();
    if (!columnList || columnList.length < 1) {
        return;
    }
    columnList.forEach(function (colSpec) {
        funcList = [];
        dataSetIdx = colSpec.dataSetIndex || 0;
        columnConf = _this._getAxisColumnConf(colSpec);
        if (columnConf) {
            if (colSpec.value) {
                //biplot, complex
                valueRef = colSpec.value;
            } else {
                if (typeof _this.options[colSpec.key] !== 'undefined') {
                    valueRef = _this.options[colSpec.key];
                } else {
                    valueRef = _chartUtils2.default.getPlotOptions(_this.options, chartType)[colSpec.key];
                }

                if (dataSetIdx == 0 && _this.getDataSrcOptions().length == 1) {
                    valueRef.splice(1, 1);
                    valueRef = valueRef[0];
                } else {
                    valueRef = valueRef[dataSetIdx];
                }
            }

            if (!columnConf.multiple) {
                valueRef.selected = valueRef.selected.slice(0, 1);
            }

            valueRef.selected.forEach(function (axisSelectedObj) {
                if (columnConf.aggregationEnabled) {
                    _this._setValidAggr(columnConf, axisSelectedObj, dataSetIdx);
                } else {
                    _this._unsetAggr(axisSelectedObj);
                }
            });
        }
    });
};

ChartValidatorBase.prototype._setValidAggr = function (columnConf, selectedColumn, dataSetIndex) {
    if (selectedColumn) {
        var columnType = this._getColumnTypeByName(selectedColumn.name, dataSetIndex);
        if (columnConf.aggregationMap[columnType]) {
            var aggrMapVal = columnConf.aggregationMap[columnType].map(function (elem) {
                return elem.value;
            });
            if ($.inArray(selectedColumn.aggregation, aggrMapVal) == -1) {
                selectedColumn.aggregation = columnConf.aggregationMap[columnType][0].value;
            }
        }
    }
};

ChartValidatorBase.prototype._unsetAggr = function (selectedColumn) {
    if (selectedColumn && selectedColumn.aggregation) {
        selectedColumn.aggregation = 'none';
    }
};

/**
 * validator: validation logic 조건에 맞지 않는경우 chart 그리지않음. 에러발생
 * _validateAxisExists
 *   - 선택된 칼럼이 있는지 체크.
 *   - 필수선택 칼럼일 경우 체크필요.(ex. scatter의 경우 x축, y축이 해당)
 *   - multiple의 경우 _validateEachAxisExists
 * _validateColumnExistsInColumnList
 *   - 선택한 칼럼이 column list에 존재하는지 체크
 *   - multiple의 경우 _validateEachColumnExistsInColumnList
 * _validateSelectableType
 *   - 선택한 칼럼이 선택가능한 타입(string, number, ...)인지 체크
 *   - multiple의 경우 _validateEachColumnSelectableType
 */

ChartValidatorBase.prototype.validateAxis = function () {
    var _this = this;
    var chartType = this.options.chart.type;
    var funcList, valueRef, dataSetIdx, columnConf;

    var columnList = this.getAxisOptions();
    if (!columnList || columnList.length < 1) {
        return;
    }
    columnList.forEach(function (colSpec) {
        funcList = [];
        dataSetIdx = colSpec.dataSetIndex || 0;
        columnConf = _this._getAxisColumnConf(colSpec);
        if (columnConf) {
            if (colSpec.value) {
                //biplot, complex
                valueRef = colSpec.value;
            } else if (typeof _this.options[colSpec.key] !== 'undefined') {
                valueRef = _this.options[colSpec.key][dataSetIdx];
            } else {
                valueRef = _chartUtils2.default.getPlotOptions(_this.options, chartType)[colSpec.key][dataSetIdx];
            }

            var isRequired = columnConf.mandatory;
            if (columnConf.multiple) {
                if (isRequired) {
                    funcList.push(_this._validateEachAxisExists);
                }
                funcList = funcList.concat([_this._validateEachColumnExistsInColumnList, _this._validateEachColumnSelectableType]);
                valueRef = valueRef.selected ? valueRef.selected : valueRef;
            } else {
                var isSchema = columnConf.axisTypeList && valueRef.axisType;
                if (isRequired) {
                    funcList.push(_this._validateAxisExists);
                }
                funcList = funcList.concat([_this._validateColumnExistsInColumnList, _this._validateSelectableType]);
                valueRef = isSchema ? valueRef.axisType : valueRef.selected[0];
            }
            _this.validateInOrder(funcList, {
                key: colSpec.key,
                value: valueRef,
                chartIdx: colSpec.chartIdx, //complex chart
                dataSetIndex: dataSetIdx //biplot chart
            });
        }
    });
};

/**
 * funcList에 있는 validation function을 순차적으로 실행하며, fail의 경우 이후 validation수행하지 않음.
 * @param validateFuncList ( [this._validateAxisExists, this._validateColumnExistsInColumnList])
 * @param validateOpts = {}
 */
ChartValidatorBase.prototype.validateInOrder = function (validateFuncList, validateOpts) {
    if (!$.isArray(validateFuncList)) {
        return;
    }
    for (var funcIdx = 0; funcIdx < validateFuncList.length; funcIdx++) {
        if (validateFuncList[funcIdx].call(this, validateOpts) === false) {
            break;
        }
    }
};

ChartValidatorBase.prototype._validateAxisViewRange = function () {
    this._validateLessValue('X Axis', {
        value1: this.options.xAxis[0].min,
        value2: this.options.xAxis[0].max
    }, ['X Axis View Range', 'Min', 'Max']);
    this._validateLessValue('Y Axis', {
        value1: this.options.yAxis[0].min,
        value2: this.options.yAxis[0].max
    }, ['Y Axis View Range', 'Min', 'Max']);
};

ChartValidatorBase.prototype._validateAxisFramePadding = function () {
    var position = ['left', 'top', 'right', 'bottom'];

    var _this = this;
    position.forEach(function (positionStr) {
        var checkVal = _this.options.grid[positionStr] + '';
        if (checkVal && checkVal.indexOf('%') >= 0) {
            _this._validateLessEqualValue(positionStr, {
                value1: Number(_this.options.grid[positionStr].replace('%', '')),
                value2: 100
            }, ['Chart Position', positionStr, '100%']);
            _this._validateGreaterEqualValue(positionStr, {
                value1: Number(_this.options.grid[positionStr].replace('%', '')),
                value2: 0
            }, ['Chart Position', positionStr, '0%']);
        }
    });
};

ChartValidatorBase.prototype._validateDataSourceIsExist = function (dataSource) {
    if (ChartValidatorBase.isEmpty(dataSource)) {
        this._createProblem('datasource-001');
    } else {
        this._isValidDataSource = true;
    }
};

ChartValidatorBase.prototype._validateData = function (target, dataSetList, dataIndex) {
    var noDataMsgId, noColumnMsgId;
    if (dataSetList && dataSetList.length > 1) {
        noDataMsgId = 'datasource-002-01';
        noColumnMsgId = 'datasource-003-01';
    } else {
        noDataMsgId = 'datasource-002';
        noColumnMsgId = 'datasource-003';
    }
    var dataSet = dataSetList[dataIndex];
    var targetObj = { target: target };
    if (ChartValidatorBase.isEmpty(dataSet)) {
        this._createProblem(noDataMsgId, [target], targetObj);
    } else if (dataSet.id && dataSet.id.value === '') {
        this._createProblem(noDataMsgId, [target], targetObj);
        this._isValidDataSource = false;
    } else if (ChartValidatorBase.isEmpty(dataSet.columns)) {
        this._createProblem(noColumnMsgId, [target], targetObj);
    } else if (typeof dataSet.columns === 'function') {
        var columns = dataSet.columns();
        if (typeof columns === 'undefined' || columns.length === 0) {
            this._createProblem(noColumnMsgId, [target], targetObj);
        } else {
            this._columnList[dataIndex] = columns;
        }
    } else if (dataSet.columns.length === 0) {
        this._createProblem(noColumnMsgId, [target], targetObj);
    } else {
        this._columnList[dataIndex] = dataSet.columns;
    }

    if (!this._columnList[dataIndex]) {
        this._columnList[dataIndex] = [];
    }
};

ChartValidatorBase.prototype._validateAxisExists = function (options) {
    if (ChartValidatorBase.isEmpty(options.value)) {
        this._createProblem('axis-001', [this._getAxisColumnConf(options).label], {
            target: this._getAxisColumnConf(options).label
        });
        return false;
    }
};

ChartValidatorBase.prototype.validateStripLineType = function (dataIdx) {
    if (!this._isValueType(this.options.xAxis[0], dataIdx)) {
        this._createWarning('axis-001', ['X-axis'], {
            target: 'xAxis'
        });
    }
};

ChartValidatorBase.prototype.validateScale = function (dataIdx) {
    if (!this._isValueType(this.options.xAxis[0], dataIdx)) {
        this._createWarning('axis-002', ['X-axis'], {
            target: 'xaxis'
        });
    }
};

ChartValidatorBase.prototype._isValueType = function (axis, idx) {
    var dataIdx = typeof idx != 'undefined' ? idx : 0;
    if (axis.axisType) {
        return false;
    } else {
        var xAxisCol = this._columnList[dataIdx].find(function (columnObj) {
            return axis.selected[0] && columnObj.name == axis.selected[0].name;
        });
        return _optionUtils2.default.getAxisType(xAxisCol) == 'value';
    }
};

ChartValidatorBase.prototype._validateColumnExistsInColumnList = function (options, targetIndex) {
    var refValue = options.value;
    var dataSetIndex = ChartValidatorBase.isEmpty(options.dataSetIndex) ? 0 : options.dataSetIndex;
    if (!$.isEmptyObject(refValue)) {
        var existedCol;
        if (typeof refValue === 'string') {
            existedCol = $.inArray(refValue, this._getAxisColumnConf(options).axisTypeList) > -1;
        } else {
            var refValueLabel = refValue.name || refValue.column;
            if (!refValueLabel) {
                return;
            }
            existedCol = this._columnList[dataSetIndex].some(function (column) {
                return column.name === refValueLabel;
            });
        }
        if (!existedCol) {
            var targetObj = { target: this._getAxisColumnConf(options).label, index: targetIndex };
            this._createProblem('axis-004', [this._getAxisColumnConf(options).label, refValueLabel], targetObj);
            return false;
        }
    }
};

/**
 * 1) chart 별 ColumnConf에 columnType이 정의되어 있는 경우: 선택한 칼럼이 ColumnConf columnType에 해당하는지 체크(ex. boxplot의 yAxis)
 * 2) 정의되어있지 않는 경우: ValidatorConst.selectableColumnType 에 정의되어있는 타입인지 체크
 * @param options
 * @param targetIndex
 * @returns {boolean}
 * @private
 */
ChartValidatorBase.prototype._validateSelectableType = function (options, targetIndex) {
    if ($.isEmptyObject(options.value)) {
        return;
    }
    var dataSetIndex = ChartValidatorBase.isEmpty(options.dataSetIndex) ? 0 : options.dataSetIndex;
    var typeOfSelectedColumn = this._getColumnTypeByName(options.value.name, dataSetIndex);
    if (!ChartValidatorBase.isEmpty(typeOfSelectedColumn)) {
        var columnConfTypeList = this._getAxisColumnConf(options).columnType || _problemLibrary2.default.selectableColumnType;
        if ($.inArray(typeOfSelectedColumn, columnConfTypeList) < 0) {
            this._createProblem('axis-005', [this._getAxisColumnConf(options).label, columnConfTypeList], { target: this._getAxisColumnConf(options).label, index: targetIndex });
            return false;
        }
    }
};

ChartValidatorBase.prototype._validateEachColumn = function (execFunc, options) {
    if (!$.isArray(options.value)) {
        console.warn(options.label + ' is not array type.');
        return;
    }
    if (options.value.length === 0) {
        return execFunc.call(this, options, 0);
    } else {
        var singleColumnOpts = $.extend(true, {}, options);
        var result = true;
        for (var i = 0; i < options.value.length; i++) {
            singleColumnOpts.value = options.value[i];
            if (execFunc.call(this, singleColumnOpts, i) === false) {
                result = false;
                // return false;
            }
        }
        return result;
    }
};

ChartValidatorBase.prototype._validateEachAxisExists = function (options) {
    if (!$.isArray(options.value)) {
        console.warn(options.label + ' is not array type.');
        return;
    }
    var isValid = options.value.some(function (value) {
        return value && value.name;
    });
    if (options.value.length === 0 || !isValid) {
        this._createProblem('axis-001', [this._getAxisColumnConf(options).label], {
            target: this._getAxisColumnConf(options).label
        });
        return false;
    }
};

ChartValidatorBase.prototype._validateEachColumnExistsInColumnList = function (options) {
    this._validateEachColumn(this._validateColumnExistsInColumnList, options);
};

ChartValidatorBase.prototype._validateEachColumnSelectableType = function (options) {
    this._validateEachColumn(this._validateSelectableType, options);
};

ChartValidatorBase.prototype._validateNumberType = function (refValue) {
    if (typeof refValue.value1 === 'number' && typeof refValue.value2 === 'number') {
        return true;
    } else if (!ChartValidatorBase.isEmpty(refValue.value1) && !ChartValidatorBase.isEmpty(refValue.value2)) {
        console.warn('Comparing values are not both number.');
        return false;
    }
};

//refValue1 must be smaller than refValue2
ChartValidatorBase.prototype._validateLessValue = function (targetLabel, refValue, msgParam) {
    if (this._validateNumberType(refValue) && refValue.value1 >= refValue.value2) {
        this._createProblem('value-001', msgParam, { target: targetLabel });
    }
};

//refValue1 must be greater than refValue2
ChartValidatorBase.prototype._validateGreaterValue = function (targetLabel, refValue, msgParam) {
    if (this._validateNumberType(refValue) && refValue.value1 <= refValue.value2) {
        this._createProblem('value-002', msgParam, { target: targetLabel });
    }
};

//refValue1 must be smaller than or equal to refValue2
ChartValidatorBase.prototype._validateLessEqualValue = function (targetLabel, refValue, msgParam) {
    if (this._validateNumberType(refValue) && refValue.value1 > refValue.value2) {
        this._createProblem('value-003', msgParam, { target: targetLabel });
    }
};

//refValue1 must be greater than equal to refValue2
ChartValidatorBase.prototype._validateGreaterEqualValue = function (targetLabel, refValue, msgParam) {
    if (this._validateNumberType(refValue) && refValue.value1 < refValue.value2) {
        this._createProblem('value-004', msgParam, { target: targetLabel });
    }
};

//chart validator util
ChartValidatorBase.isEmpty = function (target) {
    if (target === null || typeof target === 'undefined') {
        return true;
    } else {
        return false;
    }
};

ChartValidatorBase.prototype._getColumnTypeByName = function (colName, dataSetIndex) {
    var columnList = this._columnList[dataSetIndex] || [];
    if (!$.isArray(columnList)) {
        return;
    }

    var foundCol = columnList.find(function (columnList) {
        return columnList.name === colName;
    });
    if (foundCol) {
        return foundCol.type;
    } else {
        return undefined;
    }
};

ChartValidatorBase.prototype._validateImplement = function () {};

ChartValidatorBase.prototype._createProblem = function (key, param, target) {
    this.problemList.push(new _problem2.default(key, param, target));
};

ChartValidatorBase.prototype._createWarning = function (key, param, target) {
    this.warningList.push(new _warning2.default(key, param, target));
};

exports.default = ChartValidatorBase;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsExtractor = __webpack_require__(45);

var _echartsExtractor2 = _interopRequireDefault(_echartsExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PointExtractor() {
    _echartsExtractor2.default.call(this);
    this._keyPointMap = {};
}

PointExtractor.prototype = Object.create(_echartsExtractor2.default.prototype);
PointExtractor.prototype.constructor = PointExtractor;

PointExtractor.prototype.push = function (row, rowIndex) {
    var pointer = this._getKeyPointer(row, rowIndex);
    var index = Number(rowIndex);
    var value;
    var point = [];
    var prePointList = [];
    var currentPointList = [];
    var indexes;

    for (var i = 0; i < this._columnIndices.length; i++) {
        indexes = this._columnIndices[i];
        prePointList = currentPointList.concat([]);
        currentPointList = [];
        for (var j = 0; j < indexes.length; j++) {
            value = this._getPointValue(row, indexes[j], index);
            if (this._typeList[i] === 'category') {
                this._setCategory(i, value);
            }
            if (prePointList.length === 0) {
                currentPointList.push([value]);
            } else {
                for (var k = 0; k < prePointList.length; k++) {
                    currentPointList.push(prePointList[k].concat([value]));
                }
            }
        }
    }

    pointer.point = pointer.point.concat(currentPointList);
    pointer.indexList.push(index);
};

PointExtractor.prototype._getPointValue = function (row, columnIndex, rowIndex) {
    return row[columnIndex];
};

PointExtractor.prototype._getKeyPointer = function (row, rowIndex) {
    var keys = this._getKeyList(row, rowIndex);

    var keyStr = keys.join('|');
    this._keyPointMap[keyStr] = this._keyPointMap[keyStr] || { value: keys, point: [], indexList: [] };

    return this._keyPointMap[keyStr];
};

PointExtractor.prototype._setCategory = function (targetId, value) {
    this._categoryMap[targetId] = this._categoryMap[targetId] || {};
    this._categoryMap[targetId][value] = true;
};

PointExtractor.prototype.getCategory = function (targetId) {
    return Object.keys(this._categoryMap[targetId]);
};

PointExtractor.prototype.getCategoryMap = function (targetId) {
    return this._categoryMap[targetId];
};

PointExtractor.prototype.setExtractOperator = function (extractOperator) {
    this._extractOperator = extractOperator;
};

PointExtractor.prototype._getKeyList = function (row, rowIndex) {
    if (!this._hasKey) return [rowIndex];
    var keys = [];
    for (var i = 0; i < this._keys.length; i++) {
        keys.push(row[this._keys[i]]);
    }
    return keys;
};

PointExtractor.prototype.extract = function (extractOperator) {
    if (typeof extractOperator === 'function') {
        return extractOperator(this._keyPointMap);
    } else {
        var answer = [];
        var pointObject;
        for (var i in this._keyPointMap) {
            pointObject = this._keyPointMap[i];
            answer = answer.concat(this._extract(pointObject));
        }
        return answer;
    }
};

PointExtractor.prototype._extract = function (pointObject) {
    if (this._extractOperator) {
        return this._extractOperator(pointObject);
    } else if (pointObject.point.length === 1) {
        return { value: pointObject.point[0], dataIndexes: pointObject.indexList };
    } else {
        return { value: pointObject.point, dataIndexes: pointObject.indexList };
    }
};

exports.default = PointExtractor;

/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Observable; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_canReportError__ = __webpack_require__(102);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_toSubscriber__ = __webpack_require__(432);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__symbol_observable__ = __webpack_require__(47);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_pipe__ = __webpack_require__(106);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__config__ = __webpack_require__(66);
/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */





var Observable = /*@__PURE__*/ (function () {
    function Observable(subscribe) {
        this._isScalar = false;
        if (subscribe) {
            this._subscribe = subscribe;
        }
    }
    Observable.prototype.lift = function (operator) {
        var observable = new Observable();
        observable.source = this;
        observable.operator = operator;
        return observable;
    };
    Observable.prototype.subscribe = function (observerOrNext, error, complete) {
        var operator = this.operator;
        var sink = Object(__WEBPACK_IMPORTED_MODULE_1__util_toSubscriber__["a" /* toSubscriber */])(observerOrNext, error, complete);
        if (operator) {
            sink.add(operator.call(sink, this.source));
        }
        else {
            sink.add(this.source || (__WEBPACK_IMPORTED_MODULE_4__config__["a" /* config */].useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?
                this._subscribe(sink) :
                this._trySubscribe(sink));
        }
        if (__WEBPACK_IMPORTED_MODULE_4__config__["a" /* config */].useDeprecatedSynchronousErrorHandling) {
            if (sink.syncErrorThrowable) {
                sink.syncErrorThrowable = false;
                if (sink.syncErrorThrown) {
                    throw sink.syncErrorValue;
                }
            }
        }
        return sink;
    };
    Observable.prototype._trySubscribe = function (sink) {
        try {
            return this._subscribe(sink);
        }
        catch (err) {
            if (__WEBPACK_IMPORTED_MODULE_4__config__["a" /* config */].useDeprecatedSynchronousErrorHandling) {
                sink.syncErrorThrown = true;
                sink.syncErrorValue = err;
            }
            if (Object(__WEBPACK_IMPORTED_MODULE_0__util_canReportError__["a" /* canReportError */])(sink)) {
                sink.error(err);
            }
            else {
                console.warn(err);
            }
        }
    };
    Observable.prototype.forEach = function (next, promiseCtor) {
        var _this = this;
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
            var subscription;
            subscription = _this.subscribe(function (value) {
                try {
                    next(value);
                }
                catch (err) {
                    reject(err);
                    if (subscription) {
                        subscription.unsubscribe();
                    }
                }
            }, reject, resolve);
        });
    };
    Observable.prototype._subscribe = function (subscriber) {
        var source = this.source;
        return source && source.subscribe(subscriber);
    };
    Observable.prototype[__WEBPACK_IMPORTED_MODULE_2__symbol_observable__["a" /* observable */]] = function () {
        return this;
    };
    Observable.prototype.pipe = function () {
        var operations = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            operations[_i] = arguments[_i];
        }
        if (operations.length === 0) {
            return this;
        }
        return Object(__WEBPACK_IMPORTED_MODULE_3__util_pipe__["b" /* pipeFromArray */])(operations)(this);
    };
    Observable.prototype.toPromise = function (promiseCtor) {
        var _this = this;
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
            var value;
            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });
        });
    };
    Observable.create = function (subscribe) {
        return new Observable(subscribe);
    };
    return Observable;
}());

function getPromiseCtor(promiseCtor) {
    if (!promiseCtor) {
        promiseCtor = __WEBPACK_IMPORTED_MODULE_4__config__["a" /* config */].Promise || Promise;
    }
    if (!promiseCtor) {
        throw new Error('no Promise impl found');
    }
    return promiseCtor;
}
//# sourceMappingURL=Observable.js.map


/***/ }),
/* 13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return OuterSubscriber; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


var OuterSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](OuterSubscriber, _super);
    function OuterSubscriber() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    OuterSubscriber.prototype.notifyError = function (error, innerSub) {
        this.destination.error(error);
    };
    OuterSubscriber.prototype.notifyComplete = function (innerSub) {
        this.destination.complete();
    };
    return OuterSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));

//# sourceMappingURL=OuterSubscriber.js.map


/***/ }),
/* 14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = subscribeToResult;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__InnerSubscriber__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__subscribeTo__ = __webpack_require__(113);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Observable__ = __webpack_require__(12);
/** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo,_Observable PURE_IMPORTS_END */



function subscribeToResult(outerSubscriber, result, outerValue, outerIndex, innerSubscriber) {
    if (innerSubscriber === void 0) {
        innerSubscriber = new __WEBPACK_IMPORTED_MODULE_0__InnerSubscriber__["a" /* InnerSubscriber */](outerSubscriber, outerValue, outerIndex);
    }
    if (innerSubscriber.closed) {
        return undefined;
    }
    if (result instanceof __WEBPACK_IMPORTED_MODULE_2__Observable__["a" /* Observable */]) {
        return result.subscribe(innerSubscriber);
    }
    return Object(__WEBPACK_IMPORTED_MODULE_1__subscribeTo__["a" /* subscribeTo */])(result)(innerSubscriber);
}
//# sourceMappingURL=subscribeToResult.js.map


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _chartOptionBuilder = __webpack_require__(63);

var _chartOptionBuilder2 = _interopRequireDefault(_chartOptionBuilder);

var _decoratorRegister = __webpack_require__(141);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsOptionBuilder() {
    _chartOptionBuilder2.default.call(this);
}

EChartsOptionBuilder.prototype = Object.create(_chartOptionBuilder2.default.prototype);
EChartsOptionBuilder.prototype.constructor = EChartsOptionBuilder;

EChartsOptionBuilder.prototype.buildOptions = function (options) {
    this.bOptions = options;
    this.plotOptions = this.getPlotOptions();
    this.eOptions = this._defaultOptions();
    this._setUpOptions();
    this._buildSeries();
    this._decorate();
    this._configureChartOptions();
    this._setSeriesLargeThreshold();
    return this.eOptions;
};

EChartsOptionBuilder.prototype._defaultOptions = function () {
    var opt = {
        tooltip: {
            trigger: 'item',
            showDelay: 0
        },
        toolbox: {
            show: false
        },
        legend: {
            show: false
        },
        xAxis: [{
            type: 'value',
            scale: true,
            splitLine: { show: false },
            axisLine: { onZero: false }
        }],
        yAxis: [{
            type: 'value',
            scale: true,
            splitLine: { show: false },
            axisLine: { onZero: false }
        }]
        // brush: {
        //     xAxisIndex: 0,
        //     yAxisIndex: 0
        // }
    };

    opt.color = this.bOptions.colorSet;
    opt.grid = this.bOptions.grid;
    $.extend(true, opt.tooltip, this.bOptions.tooltip, this.plotOptions.tooltip);
    $.extend(true, opt.xAxis, this.bOptions.xAxis);
    $.extend(true, opt.yAxis, this.bOptions.yAxis);
    // $.extend(true, opt.toolbox, this.bOptions.toolbox);

    return opt;
};

EChartsOptionBuilder.prototype._setUpOptions = function () {
    this.optionDecoratorKeys = [];
};

EChartsOptionBuilder.prototype._decorate = function () {
    for (var k in this._decoratorList) {
        if (!this._decoratorList[k]) continue;
        this._decoratorList[k].decorate(this.eOptions);
    }
};

EChartsOptionBuilder.prototype._configureChartOptions = function () {};

EChartsOptionBuilder.prototype._buildSeries = function () {
    var series = {};
    var localData = this.getLocalData(0);
    var keyIndexes = this.getSeriesKeyColumnIndexes(0);

    var i, row, seriesName, seriesItem;
    for (i in localData.data) {
        row = localData.data[i];
        seriesName = this.getSeriesName(row, keyIndexes);
        seriesItem = this._getSeriesItem(series, seriesName);
        series[seriesName] = seriesItem;
        if (!seriesItem.extractor) {
            seriesItem.extractor = this._newSeriesExtractor();
            seriesItem.extractor.keys = this.getCellText(row, keyIndexes);
            seriesItem.keys = seriesItem.extractor.keys;
        }
        seriesItem.extractor.push(row, i);
    }

    this._setSeries(series);
    this._buildSeriesData();
    this.eOptions.series = this.series;
};

EChartsOptionBuilder.prototype._registerDecorator = function (type, options) {
    this._decoratorList = this._decoratorList || [];
    this._decoratorList.push((0, _decoratorRegister.createDecorator)(type, this, options));
};

EChartsOptionBuilder.prototype.buildSeries = function () {};

EChartsOptionBuilder.prototype._getSeriesItem = function (series, name) {
    var seriesItem = series[name];
    if (!seriesItem) {
        seriesItem = this._newSeriesItem();
        seriesItem.name = name;
    }
    return seriesItem;
};

EChartsOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = {
        type: this.bOptions.chart.type,
        animationDuration: this.bOptions.chart.animationDuration,
        large: true,
        largeThreshold: 5000,
        data: []
    };

    return seriesItem;
};

//todo : to decorator
EChartsOptionBuilder.prototype._applySeriesOptions = function (seriesItem, plotOptions, attributes) {
    var tmp = {};
    for (var i in attributes) {
        var attr = attributes[i];
        if (typeof plotOptions[attr] !== 'undefined') {
            tmp[attr] = plotOptions[attr];
        }
    }
    $.extend(true, seriesItem, tmp);
};

EChartsOptionBuilder.prototype._setSeries = function (series) {
    this.series = function () {
        var answer = [];
        for (var s in series) {
            answer.push(series[s]);
        }
        answer.sort(function (a, b) {
            if (typeof a.sortOrder === 'undefined' || a.sortOrder === b.sortOrder) {
                if (a.name == b.name) return 0;else if (a.name > b.name) return 1;else return -1;
            } else {
                if (a.sortOrder > b.sortOrder) return 1;else return -1;
            }
        });
        return answer;
    }();
};

EChartsOptionBuilder.prototype._buildSeriesData = function () {
    for (var s in this.series) {
        this.series[s].data = this.series[s].extractor.extract();
    }
};

//todo : to decorator
EChartsOptionBuilder.prototype._sortSeriesData = function () {
    var builder = this.builder;
    var dataColumns = builder.getSeriesDataColumns();
    var xAxisType = _optionUtils2.default.getAxisType(builder.filterNullColumn(this.bOptions.xAxis[0].selected));
    var yAxisType = _optionUtils2.default.getAxisType(builder.filterNullColumn(this.bOptions.yAxis[0].selected));

    var sortRule = function sortRule(a, b) {
        var xComp;
        if (xAxisType === 'category') xComp = _optionUtils2.default.stringSortRule(a[0], b[0]);else if (xAxisType === 'time') xComp = _optionUtils2.default.timeSortRule(a[0], b[0]);else xComp = _optionUtils2.default.numericSortRule(a[0], b[0]);

        if (xComp === 0) {
            var yComp;
            if (yAxisType === 'category') yComp = _optionUtils2.default.stringSortRule(a[1], b[1]);else if (yAxisType === 'time') yComp = _optionUtils2.default.timeSortRule(a[1], b[1]);else yComp = _optionUtils2.default.numericSortRule(a[1], b[1]);
            return yComp;
        } else {
            return xComp;
        }
    };

    for (var s in this.series) {
        this.series[s].data.sort(sortRule);
    }
    return this.series;
};

EChartsOptionBuilder.prototype._newSeriesExtractor = function () {};

EChartsOptionBuilder.prototype.hasLegendData = function () {

    var series,
        seriesMap = {};

    for (var i = 0; i < this.eOptions.series.length; i++) {
        series = this.eOptions.series[i];
        if (series.virtualSeries) continue;
        seriesMap[series.name] = true;
    }

    var keyColumns = this.getSeriesKeyColumns();
    if (keyColumns.length > 0) return true;else if (Object.keys(seriesMap).length > 1) return true;else false;
};

EChartsOptionBuilder.prototype._getColumnDataType = function (column) {
    var localData = this.getLocalData();
    var indexes = _optionUtils2.default.getColumnIndexes(column, localData.columns);
    return _optionUtils2.default.getAxisType(localData.columns[indexes[0]]);
};

EChartsOptionBuilder.prototype._setSeriesLargeThreshold = function () {
    var series;

    for (var i = 0; i < this.eOptions.series.length; i++) {
        series = this.eOptions.series[i];
        if (series.virtualSeries) continue;
        if (series.data && series.data.length > 5000) {
            series.largeThreshold = parseInt(series.data.length * 1.1);
        }
    }
};

exports.default = EChartsOptionBuilder;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _validationError = __webpack_require__(36);

var _validationError2 = _interopRequireDefault(_validationError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function AggregationOperator(x) {
    this.x = x;
    this.dataIndexes = [];
    this.nonNumericValues = [];
    this.values = [];
    this.sumValue = 0;
} /**
   * Source: aggregation-operator.js
   * Created by daewon.park on 2017-03-22.
   */


AggregationOperator.prototype.add = function (index, value) {
    this.dataIndexes.push(parseInt(index));
    this.values.push(value);
    this.sumValue += value;
    if (!Number.isFinite(value)) {
        this.nonNumericValues.push(value + '');
    }
};

AggregationOperator.prototype._toFixed = function (val) {
    if (typeof val !== 'number' || !Number.isFinite(val)) {
        throw new _validationError2.default(['This Chart Contains None Numeric Data.', '   [' + this.nonNumericValues.join(', ') + ']']);
    }
    return Number(val.toFixed(14));
};

AggregationOperator.prototype.sum = function () {
    return this._toFixed(this.sumValue);
};

AggregationOperator.prototype.average = function () {
    return this._toFixed(this.dataIndexes.length ? this.sumValue / this.dataIndexes.length : 0);
};

AggregationOperator.prototype.count = function () {
    return this.dataIndexes.length;
};

AggregationOperator.prototype.uniqueCount = function () {
    var counts = {};
    for (var i = 0; i < this.values.length; i++) {
        counts[this.values[i]] = 1 + (counts[this.values[i]] || 0);
    }
    return Object.keys(counts).length;
};

AggregationOperator.prototype.min = function () {
    var min = this._toFixed(Math.min.apply(null, this.values));
    return Number.isFinite(min) ? min : 0;
};

AggregationOperator.prototype.max = function () {
    var max = this._toFixed(Math.max.apply(null, this.values));
    return Number.isFinite(max) ? max : 0;
};

AggregationOperator.prototype.calc = function (operator) {
    switch (operator) {
        case 'sum':
            return this.sum();
        case 'average':
            return this.average();
        case 'count':
            return this.count();
        case 'unique_count':
            return this.uniqueCount();
        case 'min':
            return this.min();
        case 'max':
            return this.max();
    }
    return this.sum();
};

exports.default = AggregationOperator;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _widget = __webpack_require__(31);

var _widget2 = _interopRequireDefault(_widget);

var _chartUtils = __webpack_require__(24);

var _chartUtils2 = _interopRequireDefault(_chartUtils);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _chartValidator = __webpack_require__(133);

var _chartValidator2 = _interopRequireDefault(_chartValidator);

var _chartComponent = __webpack_require__(61);

var _validationError = __webpack_require__(36);

var _validationError2 = _interopRequireDefault(_validationError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//reload 1 : lazy data load & render chart. (ex.changed column or datasource...)
//reload 0 : render chart only. (ex.changed other chart options...)
//relaod -1 : render nothing. (ex.changed datasource label)
/**
 * Source: bchart-base.js
 * Created by daewon.park on 2017-03-23.
 */
var CONST_RELOAD_ALL = 1,
    CONST_RELOAD_CHART = 0,
    CONST_RELOAD_NOTHING = -1;
// var lazyLoadCompleted, currentJob;

// import * as ChartComponent from '../component/chart-component'
function BBaseCharts(parentId, options) {
    this.lazyLoadCompleted = false;
    this.currentJob = {};

    options = this._configureOptions(options);

    _widget2.default.call(this, parentId, options);
}

BBaseCharts.prototype = Object.create(_widget2.default.prototype);
BBaseCharts.prototype.constructor = BBaseCharts;

BBaseCharts.prototype.destroy = function () {
    this._destroyChart();
    this._destroyTitle();
    this._destroyAxisTitle();
    this._destroyToolbar();
};

BBaseCharts.prototype._configureOptions = function (options) {
    return options;
};

BBaseCharts.prototype._destroyChart = function () {
    if (this.chart) {
        this.chart.destroy();
        this.chart = null;
    }
};

BBaseCharts.prototype.bindEvent = function (eventName, callback) {
    this.$parent.bind(eventName, callback);
};

BBaseCharts.prototype.triggerEvent = function (eventName, params) {
    this.$parent.trigger(eventName, params);
};

BBaseCharts.prototype._createContents = function () {
    this._createChartComponent();
    this._createFrameComponent();
    this._bindRenderedCompleteCallback();

    this.render();
};

BBaseCharts.prototype._createFrameComponent = function () {
    this._createTitle();
    this._createAxisTitle();
    this._createToolbar();
    this._createLoadingPanel();
    this._createErrorPanel();
};

BBaseCharts.prototype._createChartComponent = function () {
    this._createChart();
    this._createLegend();
    this.bindEvent('bindingComplete', this._lazyRenderChart.bind(this));
};

BBaseCharts.prototype._bindRenderedCompleteCallback = function () {
    if (this.options.rendered) this.bindEvent('bindingComplete', this.options.rendered.bind(this.options));
};

BBaseCharts.prototype._lazyRenderChart = function () {
    try {
        if (this.chart) {
            this._showChart();
            this.chart.render();
            if (typeof this.chart.redrawLayout === 'function') {
                this.chart.redrawLayout();
            }
            if (this.legend) {
                this.legend.render(this.chart.getLegendData());
            }
        }
    } catch (ex) {
        if (ex instanceof _validationError2.default) {
            this._renderError(ex.message);
        } else {
            throw ex;
        }
    }
};

BBaseCharts.prototype._lazyRenderTitle = function () {
    if (this.title) {
        this.title.render(this.options.title.text, this.options.source.localData);
    }
};

BBaseCharts.prototype._createChart = function () {};

BBaseCharts.prototype._createLegend = function () {
    var _this = this;
    _this.options.legend.selected = function (name) {
        _this.chart.toggleLegend(name);
    };
    this.legend = new _chartComponent.Legend(this.$parent, function () {
        return _this.options.legend;
    });
};

BBaseCharts.prototype._createTitle = function () {
    // TODO options 를 callback 함수로 넘겨주는 이유는 setOptions 를 통해 this.options 를 변경할 때
    // TODO this.options 하위의 field 의 reference 가 유실된다. 이를 방지하기 위해 callback 함수를 이용 by daewon.park since 2017-05-24
    if ($.isEmptyObject(this.options.title)) {
        return;
    }

    var _this = this;
    this.title = new _chartComponent.Title(this.$parent, function () {
        return _this.options.title;
    });

    this.bindEvent('bindingComplete', this._lazyRenderTitle.bind(this));
};

BBaseCharts.prototype._destroyTitle = function () {
    if (this.title) {
        this.title.destroy();
        this.title = null;
    }
};

BBaseCharts.prototype._createAxisTitle = function () {
    var _this = this;
    this.xAxisTitle = new _chartComponent.AxisTitle(this.$parent, function () {
        return _this.options.xAxis[0].title;
    });
    this.yAxisTitle = new _chartComponent.AxisTitle(this.$parent, function () {
        return _this.options.yAxis[0].title;
    });
};

BBaseCharts.prototype._destroyAxisTitle = function () {
    if (this.xAxisTitle) {
        this.xAxisTitle.destroy();
        this.xAxisTitle = null;
    }
    if (this.yAxisTitle) {
        this.yAxisTitle.destroy();
        this.yAxisTitle = null;
    }
};

BBaseCharts.prototype._createToolbar = function () {
    var _this = this;
    if (!this.options.toolbar.show) {
        return;
    }

    this.toolbar = new _chartComponent.Toolbar(this.$parent, function () {
        _this.options.toolbar.selected = function (action) {
            if (action === 'toggle-brush-type' || action === 'toggle-brush-mode') {
                var opt = {
                    brushType: _this.toolbar.getSelectedBrushType(),
                    brushMode: _this.toolbar.getSelectedBrushMode()
                };
                _this.chart.setBrushType(opt);
            } else if (action === 'btn-clear-selection') {
                _this.chart.clearBrushArea();
            } else if (action === 'toggle-zoom-slider') {
                var zoom = _this.toolbar.getZoomMode();
                _this.$parent.attr('zoom', zoom);
                var zoomType = _this._getZoomType(); // ZoomType을 가져오도록 함.
                // _this.chart.setZoomMode(zoom);
                zoomType.zoom = zoom; // zoom : true||false
                _this.chart.setZoomMode(zoomType, _this._getZoomFilterMode());
            }
        };
        return _this.options.toolbar;
    });
};

BBaseCharts.prototype.setBrushType = function (opt) {
    this.chart.setBrushType(opt);
};

BBaseCharts.prototype.setBrushStyle = function (opt) {
    if (this.chart.setBrushStyle) {
        this.chart.setBrushStyle(opt);
    }
};

BBaseCharts.prototype._getZoomType = function () {
    return this.options.toolbar.menu.zoom;
};

BBaseCharts.prototype._getZoomFilterMode = function () {
    // default: filter
    return 'filter';
};

BBaseCharts.prototype._destroyToolbar = function () {
    if (this.toolbar) {
        this.toolbar.destroy();
        this.toolbar = null;
    }
};

BBaseCharts.prototype._createLoadingPanel = function () {
    this.$parent.append('<div class="bcharts-loading"><i class="fa fa-circle-o-notch fa-spin fa-5x fa-fw"></i></div>');
};

BBaseCharts.prototype._createErrorPanel = function () {
    this.$parent.append('' + '<div class="bcharts-error">' + '<div class="bcharts-error-text"></div>' + '</div>');

    if (this.options.guide) {
        var $guide = $('' + '<div class="bcharts-error-guide">' + '   <div class="bcharts-error-guide-message">' + this.options.guide.message + '</div>' + '   <div class="bcharts-error-guide-icon"></div>' + '</div>');

        this.$parent.find('.bcharts-error').append($guide);
    }
};

BBaseCharts.prototype.showLoading = function () {
    this.$parent.children('.bcharts-loading').show();
};

BBaseCharts.prototype.hideLoading = function () {
    this.$parent.children('.bcharts-loading').hide();
};

BBaseCharts.prototype._stopCurrentJob = function () {
    for (var i in this.currentJob) {
        if (typeof this.currentJob[i].aborted === 'function') {
            this.currentJob[i].aborted();
        }
        delete this.currentJob[i];
    }
};

BBaseCharts.prototype._lazyLoad = function (doneCallback, failCallback) {
    var _this = this;
    _this.chartInstanceId = _this.chartInstanceId || Date.now();
    _this.options.source.localData = [];
    _this._stopCurrentJob();
    _this._initFilter();

    for (var i = 0; i < _this.options.source.lazyData.length; i++) {
        if (typeof _this.options.source.lazyData[i].data === 'function') {
            var prepare = {
                chartInstanceId: _this.chartInstanceId + '-' + i,
                uid: Date.now(),
                filters: _this._selectedFilters,
                index: i,
                options: {
                    chart: $.extend(true, {}, _this.options.chart),
                    xAxis: $.extend(true, {}, _this.options.xAxis),
                    yAxis: $.extend(true, {}, _this.options.yAxis),
                    colorBy: $.extend(true, {}, _this.options.colorBy),
                    plotOptions: $.extend(true, {}, _this.options.plotOptions)
                },
                fail: function fail(err) {
                    if (failCallback) failCallback(err);
                    delete _this.currentJob[this.uid];
                },
                done: function done(result) {
                    _this.options.source.localData[this.index] = _this.options.source.localData[this.index] || {};

                    _this.options.source.localData[this.index].dataType = result.dataType;
                    _this.options.source.localData[this.index].chartColumns = result.columns;

                    _this.options.source.localData[this.index].count = result.count;
                    _this.options.source.localData[this.index].offset = result.offset;

                    _this.options.source.localData[this.index].columns = _optionUtils2.default.getColumnList(_this.options.source, this.index);

                    _this.options.source.localData[this.index].data = result.data;

                    if (result.data.length === 0) {
                        failCallback(_this.options.noDataMessage != '' ? [_this.options.noDataMessage] : ['No data to display']);
                    } else if (doneCallback) {
                        try {
                            doneCallback();
                        } catch (ex) {
                            failCallback(ex.message);
                            if (!(ex instanceof _validationError2.default)) {
                                var errObj = new Error('Failed to Load Chart');
                                errObj.stack += '\n' + ex.stack;
                                console.error(errObj); //TEMP
                                throw errObj;
                            }
                        }
                    }
                    delete _this.currentJob[this.uid];
                }
            };
            _this.currentJob[prepare.uid] = prepare;
            _this.options.source.lazyData[i].data(prepare);
        } else {
            throw new Error('Callback function for data loading is not defined.');
        }
    }
};

BBaseCharts.prototype._initFilter = function () {
    if (this.options.filter && !this._selectedFilters) {
        this._selectedFilters = this.options.filter;
    }
};

BBaseCharts.prototype._verifyOptions = function () {
    var validator = new _chartValidator2.default(this.options);
    this._reloadColumnConf(); //validation시 columnConf 봄.
    var problems = validator.doValidate();
    var messages = [];
    problems.forEach(function (problem) {
        messages.push(problem.message);
    });
    if (messages.length > 0) return messages;
};

BBaseCharts.prototype.render = function (reloadData) {
    if (reloadData > 0) {
        this.lazyLoadCompleted = false;
    } else if (reloadData < 0) {
        return;
    }
    this.hideLoading();

    var message = this._verifyOptions();
    if (message) {
        this._renderError(message);
    } else {
        this._renderFrame();
        this._hideErrorPanel();
        this._renderChart();
        // this._showChart();
    }
};

BBaseCharts.prototype._renderError = function (message) {
    this._stopCurrentJob();
    this._showErrorPanel(message);
    this._hideChart();
    try {
        this._setFinished();
    } catch (e) {}
};

BBaseCharts.prototype._renderFrame = function () {
    var renderTextFont = function renderTextFont(target) {
        var fontFamliy = target.textStyle ? target.textStyle.fontFamily ? target.textStyle.fontFamily + ',' : '' : '';
        target.textStyle.fontFamily = fontFamliy + 'Gulim,"Gulim"';
    };

    if (this.title) {
        this.title.render(this.options.title.text);
    }
    if (this.xAxisTitle) {
        renderTextFont(this.options.xAxis[0].axisLabel);
        this.xAxisTitle.render(this.options.xAxis[0]);
    }
    if (this.yAxisTitle) {
        renderTextFont(this.options.yAxis[0].axisLabel);
        this.yAxisTitle.render(this.options.yAxis[0]);
    }
    if (this.toolbar) {
        this.toolbar.render();
        this._configureToolbar();
    }
};

BBaseCharts.prototype._showErrorPanel = function (error) {
    var cvtError = function () {
        if ($.isArray(error)) {
            return error.map(function (errObj) {
                return Brightics.Chart.Helper.ChartUtils.convertHTMLSpecialChar(errObj);
            }).join('<br>');
        } else {
            return Brightics.Chart.Helper.ChartUtils.convertHTMLSpecialChar(error);
        }
    }();
    this.$parent.find('.bcharts-error-text').html(cvtError);
    this.$parent.find('.bcharts-error').attr('title', $.isArray(error) ? error.join('\n') : error);
    this.$parent.find('.bcharts-error').show();
    this.$parent.attr('status', 'error');
};

BBaseCharts.prototype._hideErrorPanel = function () {
    this.$parent.find('.bcharts-error-text').text();
    this.$parent.find('.bcharts-error').hide();
    this.$parent.attr('status', '');
};

BBaseCharts.prototype._renderChart = function (reloadData) {
    var _this = this;

    try {
        _this.showLoading();
        if (_this.options.source.dataType === 'lazy' && _this.lazyLoadCompleted == false) {
            this._lazyLoad(function () {
                if (_this.options.source.lazyData.length == _this.options.source.localData.length) {
                    if (!_this.chart) return;
                    _this.chart.clear();
                    _this.triggerEvent('bindingComplete');
                    _this.hideLoading();
                    _this.lazyLoadCompleted = true;
                }
            }, function (err) {
                _this._showErrorPanel(err);
                _this._hideChart();
                _this.hideLoading();
                _this.triggerEvent('bindingError');
                _this.lazyLoadCompleted = false;
            });
        } else {
            _this.triggerEvent('bindingComplete');
            _this.hideLoading();
        }
    } catch (ex) {
        if (ex instanceof _validationError2.default) {
            _this.hideLoading();
            _this._renderError(ex.message);
        } else {
            var errObj = new Error('Failed to Load Chart');
            errObj.stack += '\n' + ex.stack;
            console.error(errObj); //TEMP
            throw errObj;
        }
    }
};

BBaseCharts.prototype._showChart = function () {
    if (this.chart) {
        this.chart.show();
    }
    if (this.legend) {
        this.legend.show();
    }
};

BBaseCharts.prototype._hideChart = function () {
    if (this.chart) {
        this.chart.hide();
    }
    if (this.legend) {
        this.legend.hide();
    }
};

BBaseCharts.prototype._isChanged = function (original, changing) {
    if (typeof changing === 'undefined') return false;
    return JSON.stringify(original) !== JSON.stringify(changing);
};

BBaseCharts.prototype._isSelectionChanged = function (original, changing) {
    var selectionChanged = this._isChanged(this._retrieveSelected(original), this._retrieveSelected(changing));
    var axisTypeChanged = this._isChanged(this._retrieveAxisType(original), this._retrieveAxisType(changing));
    return selectionChanged || axisTypeChanged;
};

/**
 * selected 정보만 추출
 * @param arr [ { selected: [ {name: 'Species', aggregation: 'count', type: 'string'} ], title: {} } ]
 * @private
 * @return [ { selected: [ {name: 'Species', aggregation: 'count'} ] } ]
 */
BBaseCharts.prototype._retrieveSelected = function (arr) {
    if (arr && $.isArray(arr)) {
        var answer = $.map(arr, function (element) {
            if (element) {
                return {
                    selected: $.map(element.selected, function (selection) {
                        if (selection) {
                            return {
                                name: selection.name,
                                aggregation: selection.aggregation
                            };
                        } else {
                            return selection;
                        }
                    })
                };
            }
        });
        return answer;
    } else {
        return arr;
    }
};

BBaseCharts.prototype._retrieveAxisType = function (arr) {
    if (arr && $.isArray(arr)) {
        var answer = $.map(arr, function (element) {
            if (element) {
                return element.axisType;
            }
        });
        return answer;
    } else {
        return arr;
    }
};

BBaseCharts.prototype._changeOptions = function (options) {
    $.extend(true, this.options, options);
    _chartUtils2.default.assignArray(this.options, options);
};

BBaseCharts.prototype.setOptions = function (options) {
    var reload = this.isReload(options);
    if (!reload) reload |= this._isSelectionChanged(this.options.xAxis, options.xAxis);
    if (!reload) reload |= this._isSelectionChanged(this.options.yAxis, options.yAxis);
    if (!reload) reload |= this._isSelectionChanged(this.options.colorBy, options.colorBy);
    this._changeOptions(options);
    this.render(reload);
};

BBaseCharts.prototype.isReload = function (options) {
    var result = CONST_RELOAD_CHART;
    if (options.source) {
        result = CONST_RELOAD_ALL;
        if (options.source.dataType === 'local') {
            this.chart.clear();
            this.options.source = options.source;
        } else if (options.source.dataType === 'lazy' && !options.source.lazyData[0].data) {
            result = CONST_RELOAD_NOTHING;
        }
    } else if (this._selectedFilters) {
        result = CONST_RELOAD_ALL;
    }
    return result;
};

BBaseCharts.prototype.selectRange = function (args) {
    if (this.toolbar) {
        this.toolbar.unselectAllItems();
    }
    if (this.chart) {
        this.chart.selectRange(args);
    }
};

BBaseCharts.prototype.setFilter = function (filters) {
    if (this.chart && filters) {
        this._selectedFilters = filters;
        this.render(CONST_RELOAD_ALL);
    }
};

BBaseCharts.prototype.initFilter = function (filters) {
    if (this.chart) {
        this._selectedFilters = filters;
    }
};

BBaseCharts.prototype.getFilter = function () {
    return this._selectedFilters;
};

BBaseCharts.prototype.getSelectedRange = function () {
    if (this.chart) {
        return this.chart.getSelectedRange();
    }
};

BBaseCharts.prototype.getDataURL = function (options) {
    if (this.chart) {
        return this.chart.getDataURL(options);
    }
};

BBaseCharts.prototype.setFinished = function (callback) {
    if (this.chart) {
        this.chart.setFinished(callback);
        this._setFinished = callback;
        if (this.$parent.attr('status') === 'error') callback();
    }
};

BBaseCharts.prototype._reloadColumnConf = function () {};

BBaseCharts.prototype._configureToolbar = function () {};
BBaseCharts.prototype.dispatchAction = function (action) {
    if (this.chart && this.chart.dispatchAction) {
        this.chart.dispatchAction(action);
    }
};
BBaseCharts.prototype.zoom = function (range) {
    if (this.chart && this.chart.zoom) {
        this.chart.zoom(range);
    }
};
BBaseCharts.prototype.resetZoom = function () {
    if (this.chart && this.chart.resetZoom) {
        this.chart.resetZoom();
    }
};
BBaseCharts.prototype.onCellPointClick = function (callback) {
    if (this.chart && this.chart.onCellPointClick) {
        this.chart.onCellPointClick(callback);
    }
};
BBaseCharts.prototype.offCellPointClick = function (callback) {
    if (this.chart && this.chart.offCellPointClick) {
        this.chart.offCellPointClick(callback);
    }
};
BBaseCharts.prototype.offCellPointClick = function (callback) {
    if (this.chart && this.chart.offCellPointClick) {
        this.chart.offCellPointClick(callback);
    }
};
BBaseCharts.prototype.onBrush = function (callback) {
    if (this.chart && this.chart.onBrush) {
        this.chart.onBrush(callback);
    }
};
BBaseCharts.prototype.offBrush = function (callback) {
    if (this.chart && this.chart.offBrush) {
        this.chart.offBrush(callback);
    }
};
BBaseCharts.prototype.onBrushSelected = function (callback) {
    if (this.chart && this.chart.onBrushSelected) {
        this.chart.onBrushSelected(callback);
    }
};
BBaseCharts.prototype.offBrushSelected = function (callback) {
    if (this.chart && this.chart.offBrushSelected) {
        this.chart.offBrushSelected(callback);
    }
};

BBaseCharts.prototype.setSelectedRangeGetter = function (callback) {
    if (this.chart && this.chart.setSelectedRangeGetter) {
        this.chart.setSelectedRangeGetter(callback);
    }
};

BBaseCharts.prototype.clearBrushSelected = function () {
    if (this.chart && this.chart.clearBrushSelected) {
        this.chart.clearBrushSelected();
    }
};

exports.default = BBaseCharts;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _widget = __webpack_require__(31);

var _widget2 = _interopRequireDefault(_widget);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsWrapper(parentId, options) {
    _widget2.default.call(this, parentId, options);
    this._triggerClearBrushSelected();
    this._echartOptionCache = null;
} /**
   * Source: echarts.wrapper.js
   * Created by daewon.park on 2017-03-23.
   */


EChartsWrapper.prototype = Object.create(_widget2.default.prototype);
EChartsWrapper.prototype.constructor = EChartsWrapper;

EChartsWrapper.prototype.parseComplex = function (isComplex) {
    this.isComplex = isComplex;
    return this;
};

EChartsWrapper.prototype.destroy = function () {
    if (this.echart) {
        $(window).off('resize', this.resizeHandler);

        if (this._brushSelected) {
            this._triggerClearBrushSelected();
        }

        this.echart.clear();
        this.echart.dispose();
        echarts.dispose(this.echart);
        echarts.dispose(this.$mainControl[0]);
        this.echart = null;
    }
};

EChartsWrapper.prototype._setEChartOption = function (opt) {
    this._initEchartOption = opt;
    if (opt.color && this.echart.getOption() && this.echart.getOption().color && opt.color.length !== this.echart.getOption().color.length) {
        this.echart.setOption(opt, true);
    } else {
        this.echart.setOption(opt);
    }
    this._echartOptionCache = null;
};

EChartsWrapper.prototype._getEChartOption = function (opt) {
    if (!this._echartOptionCache) {
        this._echartOptionCache = this.echart.getOption();
    }
    return this._echartOptionCache;
};

EChartsWrapper.prototype._extractSeriesSelection = function (batch, series, keyColumns) {
    var selected = [];
    if (keyColumns.length > 0) {
        for (var s in batch.selected) {
            var seriesIndex = batch.selected[s].seriesIndex;
            var selection = {};
            for (var k in keyColumns) {
                var seriesKey = keyColumns[k].name;
                var seriesValue = series[seriesIndex].keys[k];
                selection[seriesKey] = seriesValue;
            }
            selected.push(selection);
        }
    } else {
        selected.push({});
    }
    return selected;
};

EChartsWrapper.prototype._convertToSelection = function (axis, columnName, range) {
    if (axis.type === 'value' || axis.type === 'time') {
        return {
            min: range[0],
            max: range[1]
        };
    } else {
        return {
            min: axis.data[range[0]],
            max: axis.data[range[1]]
        };
    }
};

EChartsWrapper.prototype.createBrushSelectedHandler = function () {
    var _this = this;
    this.brushSelectedHandler = function (eventData) {
        if (_this.dataSelected) {
            _this._restoreItemStyles();
            _this.dataSelected = false;
        }
        _this._triggerPendingBrushSelected(eventData);
    };
};

EChartsWrapper.prototype._createSelectedRange = function (eventData) {
    var _this = this;
    var keyColumns = _this.seriesHelper.getSeriesKeyColumns();
    var selectedRangeList = [];
    for (var b in eventData.batch) {
        var batch = eventData.batch[b];
        batch.selected = batch.selected.filter(function (range) {
            return range.dataIndex.length > 0;
        });
        var cnt = batch.selected.length;
        if (cnt === 0) continue;

        var selectedSeries = _this._extractSeriesSelection(batch, this._getEChartOption().series, keyColumns);

        for (var a in batch.areas) {
            var selection = this._getSelectionFromArea(batch.areas[a]);

            var selectionArray = [];
            if (Array.isArray(selection)) {
                selection.forEach(function (selectionItem) {
                    selectedSeries.map(function (item) {
                        selectionArray.push($.extend(true, {}, item, selectionItem));
                    });
                });
            } else {
                selectedSeries.map(function (item) {
                    selectionArray.push($.extend(true, {}, item, selection));
                });
            }
            selectedRangeList = selectedRangeList.concat(selectionArray);
        }
    }
    return selectedRangeList;
};

EChartsWrapper.prototype._getDataSourceKeys = function () {
    var dataSourceKeys = [];
    if (this.options.source.lazyData) {
        for (var i in this.options.source.lazyData) {
            if (this.options.source.lazyData[i] && this.options.source.lazyData[i].id && this.options.source.lazyData[i].id.value) {
                dataSourceKeys.push(this.options.source.lazyData[i].id.value);
            }
        }
    }
    return dataSourceKeys;
};

EChartsWrapper.prototype._createSelectedRowIndexMap = function (eventData) {

    var _this = this;
    var selectedRowIndexMap = {};
    selectedRowIndexMap.dataSourceKeys = this._getDataSourceKeys();
    var series = _this.seriesHelper.series;
    for (var b in eventData.batch) {
        var batch = eventData.batch[b];
        batch.selected = batch.selected.filter(function (range) {
            return range.dataIndex.length > 0;
        });
        var cnt = batch.selected.length;
        if (cnt === 0) continue;

        for (var s in batch.selected) {
            var selected = batch.selected[s];
            var seriesIndex = selected.seriesIndex;
            var selectedDataIndex = selected.dataIndex;
            for (var i in selectedDataIndex) {
                var dataInSeries = series[seriesIndex].data[selectedDataIndex[i]];
                for (var j in dataInSeries.dataIndexes) {
                    selectedRowIndexMap[dataInSeries.dataIndexes[j]] = true;
                }
            }
        }
    }
    return selectedRowIndexMap;
};

EChartsWrapper.prototype._getSelectionFromArea = function (batchArea) {
    var selection = {};
    var _this = this;
    var dataColumns = _this.seriesHelper.getSeriesDataColumns();
    var xAxis = this._getEChartOption().xAxis[0];
    var yAxis = this._getEChartOption().yAxis[0];
    if (batchArea.brushType === 'lineX') {
        selection[dataColumns[0].name] = _this._convertToSelection(xAxis, dataColumns[0].name, batchArea.coordRange);
    } else if (batchArea.brushType === 'lineY') {
        if (yAxis.type === 'category' || !dataColumns[1].aggregation || dataColumns[1].aggregation === 'none') {
            selection[dataColumns[1].name] = _this._convertToSelection(yAxis, dataColumns[1].name, batchArea.coordRange);
        }
    } else {
        selection[dataColumns[0].name] = _this._convertToSelection(xAxis, dataColumns[0].name, batchArea.coordRange[0]);
        if (yAxis.type === 'category' || !dataColumns[1].aggregation || dataColumns[1].aggregation === 'none') {
            selection[dataColumns[1].name] = _this._convertToSelection(yAxis, dataColumns[1].name, batchArea.coordRange[1]);
        }
    }
    return selection;
};

EChartsWrapper.prototype._bindBrushSelected = function () {
    this.createBrushSelectedHandler();
    this.echart.on('brushSelected', this.brushSelectedHandler);
};

EChartsWrapper.prototype.onCellPointClick = function (callback) {
    if (this.echart) {
        this.echart.on('click', callback);
    }
};

EChartsWrapper.prototype.offCellPointClick = function (callback) {
    if (this.echart) {
        this.echart.off('click', callback);
    }
};

EChartsWrapper.prototype.onBrush = function (callback) {
    if (this.echart) {
        this.echart.on('brush', callback);
    }
};

EChartsWrapper.prototype.offBrush = function (callback) {
    if (this.echart) {
        this.echart.off('brush', callback);
    }
};

EChartsWrapper.prototype.onBrushSelected = function (callback) {
    if (this.echart) {
        this.echart.on('brushSelected', callback);
    }
};

EChartsWrapper.prototype.offBrushSelected = function (callback) {
    if (this.echart) {
        this.echart.off('brushSelected', callback);
    }
};

EChartsWrapper.prototype._triggerPendingBrushSelected = function (eventData) {
    var _this = this;
    if (_this._pendingBrushSelected) {
        clearTimeout(_this._pendingBrushSelected);
        _this._pendingBrushSelected = null;
    }
    _this._pendingBrushSelected = setTimeout(function () {
        var params = _this._createBrushSelectedData(eventData);
        if (_this._getterSelectedRangeWithAreaHandler && eventData.batch && eventData.batch[0].areas) {
            var returnValue = { areas: eventData.batch[0].areas, filter: params.selected };
            _this._getterSelectedRangeWithAreaHandler(returnValue);
        }
        _this.$parent.trigger('brushSelected', params);
    }, 1000);
};

EChartsWrapper.prototype._createBrushSelectedData = function (eventData) {
    var params = {
        type: 'brushSelected',
        originalEvent: eventData,
        selected: []
    };
    if (eventData.batch.length === 1 && eventData.batch[0].areas.length === 0) {
        params.type = 'brushCleared';
    } else {
        params.type = 'brushSelected';
        params.selected = this._createSelectedRange(eventData);
        params.rowIndexMap = this._createSelectedRowIndexMap(eventData);
    }
    this._selectedRange = params.selected;
    this._setBrushSelected(params.type);
    return params;
};

EChartsWrapper.prototype._setBrushSelected = function (selected) {
    if (selected === true || selected === 'brushSelected') {
        this._brushSelected = true;
    } else {
        this._brushSelected = false;
    }
};

EChartsWrapper.prototype._triggerClearBrushSelected = function () {
    var _this = this;
    var params = {
        type: 'brushCleared',
        selected: []
    };
    _this.$parent.trigger('brushSelected', params);
    _this._setBrushSelected(false);

    if (_this.dataSelected) {
        _this._restoreItemStyles();
        _this.dataSelected = false;
    }
};

EChartsWrapper.prototype._unbindBrushSelected = function () {
    var _this = this;
    this.echart.off('brushSelected', this.brushSelectedHandler);
};

EChartsWrapper.prototype._createContents = function ($parent) {
    var _this = this;
    this.$mainControl = $('<div class="bcharts-chart" chart-vendor="echarts"></div>');
    $parent.append(this.$mainControl);

    this.echart = echarts.init(this.$mainControl[0]);
    this.echart.clear();
    if (this.options.toolbar && this.options.toolbar.menu.brush) {
        this._bindBrushSelected();
    }

    this.resizeHandler = function () {
        _this.redrawLayout();
    };
    $(window).resize(this.resizeHandler);
};

EChartsWrapper.prototype._backupItemStyles = function () {
    this._backupStyles = [];
    var series = this._getEChartOption().series;
    for (var i in series) {
        this._backupStyles.push(series[i].itemStyle);
    }
    this._backupStyles = this._backupStyles.map(function (el) {
        if (el && (typeof el.normal === 'undefined' || typeof el.normal.color === 'undefined')) {
            el.normal = el.normal || {};
            el.normal.color = null;
        }
        return el;
    });
};

EChartsWrapper.prototype._restoreItemStyles = function () {
    if (this._backupStyles) {
        var series = this._getEChartOption().series;
        var seriesStyles = [];
        for (var s in series) {
            seriesStyles.push({
                itemStyle: this._backupStyles[s]
            });
        }
        this._setEChartOption({
            series: seriesStyles
        });
    }
};

EChartsWrapper.prototype._checkSameDataSource = function (interactedParams) {
    var result = true;
    var currentDataSourceKeys = this._getDataSourceKeys();
    if (interactedParams.rowIndexMap && interactedParams.rowIndexMap.dataSourceKeys) {
        var interactedDataSourceKeys = interactedParams.rowIndexMap.dataSourceKeys;
        result = false;
        for (var i in currentDataSourceKeys) {
            for (var j in interactedDataSourceKeys) {
                if (currentDataSourceKeys[i] === interactedDataSourceKeys[j]) return true;
            }
        }
    }
    return result;
};

EChartsWrapper.prototype.selectRange = function (args) {
    var _this = this;

    if (!this.options.toolbar.menu.brush) {
        return;
    }

    if (args.type == 'brushCleared') {
        if (this.dataSelected) {
            this._restoreItemStyles();
            this.dataSelected = false;
        } else if (this._brushSelected) {
            this._unbindBrushSelected();
            this.clearBrushArea();
            this._bindBrushSelected();
        }
    } else if (this._checkSameDataSource(args) === true) {
        this._unbindBrushSelected();
        this.clearBrushArea();
        this._bindBrushSelected();

        var series = this._getEChartOption().series;
        var seriesStyles = [];

        for (var s in series) {
            seriesStyles.push({
                itemStyle: {
                    normal: {
                        color: function color(params) {
                            var intersection = _this._interacted(args, params);
                            if (intersection) {
                                return _this.options.colorSet[params.seriesIndex];
                            } else {
                                return '#ddd';
                            }
                        }
                    }
                }
            });
        }
        this._setEChartOption({
            series: seriesStyles
        });
        this.dataSelected = true;
    }
};

EChartsWrapper.prototype.getSelectedRange = function () {
    return this._selectedRange;
};

EChartsWrapper.prototype._interactedSelection = function (selection, columns, row) {
    for (var col in selection) {
        var indexes = this.seriesHelper.getColumnIndexes([{ name: col }], columns);
        var values = this.seriesHelper.getCellValues(row, indexes);
        var index;
        if ($.isPlainObject(selection[col])) {
            for (var i in indexes) {
                index = indexes[i];
                var value = values[0];
                var min = selection[col].min;
                var max = selection[col].max;
                if (index >= 0 && columns[index].type === 'date') {
                    value = new Date(value).getTime();
                    min = new Date(min).getTime();
                    max = new Date(max).getTime();
                }
                if (value >= min && value <= max) {
                    // 적합
                } else {
                    return false;
                }
            }
        } else {
            if (values[0] != selection[col]) {
                return false;
            }
        }
    }
    return true;
};

EChartsWrapper.prototype._interacted = function (interactedParams, pointParams) {
    if (interactedParams.rowIndexMap) {
        var dataIndexes = pointParams.data.dataIndexes;
        var rowIndexMap = interactedParams.rowIndexMap;
        for (var i in dataIndexes) {
            if (rowIndexMap[dataIndexes[i]]) return true;
        }
    } else {
        var localData = this.seriesHelper.getLocalData();
        for (var i in pointParams.data.dataIndexes) {
            var row = localData.data[pointParams.data.dataIndexes[i]];
            for (var s in interactedParams.selected) {
                var selection = interactedParams.selected[s];
                if (this._interactedSelection(selection, localData.columns, row)) {
                    return true;
                }
            }
        }
    }
    return false;
};

EChartsWrapper.prototype.clear = function () {
    this._triggerClearBrushSelected();
    this.echart.clear();

    // TODO tooltip 을 위한 div 가 render 할 때 마다 생성됨, 강제로 삭제 by daewon.park since 2017-05-23
    this.$mainControl.children('div:nth-child(2)').remove();
};

EChartsWrapper.prototype._bindInternalOptions = function (opt) {
    var _this = this;
    opt._internalOptions = function () {
        return _this._getEChartOption();
    };
};

EChartsWrapper.prototype.getDataURL = function (options) {
    if (this.echart) {
        return this.echart.getDataURL(options);
    }
};

EChartsWrapper.prototype.setFinished = function (callback) {
    if (this.echart) {
        this.echart.on('finished', function () {
            callback();
        });
    } else {
        callback();
    }
};

EChartsWrapper.prototype.render = function () {};

EChartsWrapper.prototype.redrawLayout = function () {
    var _this = this;

    clearTimeout(this._redrawLayoutJob);
    this._redrawLayoutJob = setTimeout(function () {
        if (_this.echart && _this.echart._dom) {
            if (_this.echart._dom.parentElement.getAttribute('status') !== 'error') {
                _this.echart._dom.style.display = 'block';
                if (_this.echart._dom.offsetWidth != 0 && _this.echart._dom.offsetHeight != 0) {
                    _this.echart.resize();
                } else if (_this.echart._dom.offsetWidth == 0 || _this.echart._dom.offsetHeight == 0) {
                    _this.echart._dom.style.display = 'none';
                }
            }
        }
    }, 300);
};

EChartsWrapper.prototype.setBrushType = function (opt) {
    this._unbindBrushSelected();

    this.echart.dispatchAction({
        type: 'takeGlobalCursor',
        key: 'brush',
        brushOption: {
            brushType: opt.brushType,
            brushMode: opt.brushMode
        }
    });

    this._bindBrushSelected();
};

EChartsWrapper.prototype.setBrushStyle = function (brushOption) {
    this._setEChartOption({
        brush: brushOption
    });
};

EChartsWrapper.prototype.setZoomMode = function (zoomType, filterMode) {
    var xZoom = false,
        yZoom = false;

    if (zoomType.zoomAxis === 'all') {
        xZoom = true;
        yZoom = true;
    } else if (zoomType.zoomAxis === 'xAxis') {
        xZoom = true;
    } else if (zoomType.zoomAxis === 'yAxis') {
        yZoom = true;
    }

    var dataZoom = function (x, y, f) {
        var xf = x ? f : 'none';
        var yf = y ? f : 'none';
        return [{
            id: 'insideZoomX',
            type: 'inside',
            xAxisIndex: [0],
            filterMode: xf,
            disabled: !xZoom
        }, {
            id: 'insideZoomY',
            type: 'inside',
            yAxisIndex: [0],
            filterMode: yf,
            disabled: !yZoom
        }, {
            type: 'slider',
            xAxisIndex: [0],
            height: 20,
            handleSize: 24,
            show: xZoom,
            filterMode: xf
        }, {
            type: 'slider',
            yAxisIndex: [0],
            width: 20,
            handleSize: 24,
            show: yZoom,
            filterMode: yf
        }];
    }(xZoom, yZoom, filterMode);

    if (zoomType.zoom) {
        this._setEChartOption({
            dataZoom: dataZoom
        });
    } else {
        this._setEChartOption({
            dataZoom: [{
                type: 'slider',
                show: false
            }, {
                type: 'slider',
                show: false
            }, {
                id: 'insideZoomX',
                type: 'inside',
                disabled: true
            }, {
                id: 'insideZoomY',
                type: 'inside',
                disabled: true
            }]
        });
        this.echart.dispatchAction({
            type: 'dataZoom',
            start: 0,
            end: 100
        });
    }
};

EChartsWrapper.prototype.toggleLegend = function (name) {
    this.echart.dispatchAction({
        type: 'legendToggleSelect',
        name: name
    });
};

EChartsWrapper.prototype.dispatchAction = function (action) {
    this.echart.dispatchAction(action);
};

EChartsWrapper.prototype.zoom = function (range) {
    var options = {};
    for (var i = 0; i < range.length; i++) {
        range[i].disabled = false;
    }
    options.dataZoom = range;

    this._setEChartOption(options);
};

EChartsWrapper.prototype.resetZoom = function () {
    var options = {};
    options.dataZoom = [{
        type: 'inside',
        xAxisIndex: [0],
        start: 0,
        end: 100,
        disabled: true
    }, {
        type: 'inside',
        yAxisIndex: [0],
        start: 0,
        end: 100,
        disabled: true
    }];

    this._setEChartOption(options);
};

EChartsWrapper.prototype.clearBrushArea = function () {
    this.echart.dispatchAction({
        type: 'restore'
    });
};

EChartsWrapper.prototype.getLegendData = function () {
    var legendData = [];

    if (this._getEChartOption().legend && this._getEChartOption().legend[0]) {
        var legendSelection = this._getEChartOption().legend[0].selected;
        var hasLegend = this.seriesHelper.hasLegendData();

        if (hasLegend) {
            var opt = this.seriesHelper._internalOptions();
            for (var i in opt.series) {
                if (opt.series[i].virtualSeries) {
                    // true 일 경우만 skip
                } else {
                    var item = {
                        name: opt.series[i].name,
                        symbol: opt.series[i].symbol || 'circle',
                        symbolSize: opt.series[i].symbolSize || 10,
                        color: opt.color[parseFloat(i) % opt.color.length]
                    };
                    if (typeof legendSelection[item.name] === 'undefined') {
                        item.selected = true;
                    } else {
                        item.selected = legendSelection[item.name];
                    }
                    legendData.push(item);
                }
            }
        }
    }
    return legendData;
};

EChartsWrapper.prototype.setSelectedRangeGetter = function (callback) {
    this._getterSelectedRangeWithAreaHandler = function (eventData) {
        callback(eventData);
    }.bind(this);
};

EChartsWrapper.prototype.clearBrushSelected = function () {
    this.clearBrushArea();
};

exports.default = EChartsWrapper;

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

var _axisRangeDecorator = __webpack_require__(83);

var _axisRangeDecorator2 = _interopRequireDefault(_axisRangeDecorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _super = _echartsOptionBuilder2.default.prototype;

function EChartsAxisTypeOptionBuilder() {
    _super.constructor.call(this);
}

EChartsAxisTypeOptionBuilder.prototype = Object.create(_super);
EChartsAxisTypeOptionBuilder.prototype.constructor = EChartsAxisTypeOptionBuilder;

EChartsAxisTypeOptionBuilder.prototype._defaultOptions = function () {
    var opt = _super._defaultOptions.call(this);
    $.extend(true, opt, {
        dataZoom: [{
            id: 'insideZoomX',
            type: 'inside',
            filterMode: 'none',
            xAxisIndex: [0],
            disabled: true
        }, {
            id: 'insideZoomY',
            type: 'inside',
            filterMode: 'none',
            yAxisIndex: [0],
            disabled: true
        }]
    });
    return opt;
};

EChartsAxisTypeOptionBuilder.prototype._newSeriesExtractor = function (option) {
    option = option || {};
    var xAxisIndex = option.xAxisIndex || 0;
    var yAxisIndex = option.yAxisIndex || 0;

    var localData = this.getLocalData(0);
    var dataColumns = this.getSeriesDataColumns(0);
    var aggregation = dataColumns[1 + yAxisIndex].aggregation;
    var hasAggregation = aggregation && aggregation !== 'none';
    var xIndexes = this.getColumnIndexes(this.bOptions.xAxis[0].selected, localData.columns);
    var yIndexes = this.getColumnIndexes(this.bOptions.yAxis[0].selected, localData.columns);

    var extractor = new _echartsPointExtractor2.default();

    extractor.setTarget({
        index: [xIndexes[xAxisIndex]],
        type: _optionUtils2.default.getAxisType(localData.columns[xIndexes[0]]),
        isKey: hasAggregation ? true : false
    });

    extractor.setTarget({
        index: [yIndexes[yAxisIndex]],
        type: aggregation ? 'value' : _optionUtils2.default.getAxisType(localData.columns[yIndexes[0]]),
        isKey: false
    });

    if (hasAggregation) {
        extractor.setExtractOperator(function (pointObject) {
            var operator = new _aggregationOperator2.default(pointObject.value);
            for (var i = 0; i < pointObject.indexList.length; i++) {
                operator.add(pointObject.indexList[i], pointObject.point[i][1]);
            }
            return [{ value: pointObject.value.concat(operator.calc(aggregation)), dataIndexes: pointObject.indexList }];
        });
    }
    return extractor;
};

EChartsAxisTypeOptionBuilder.prototype._buildSeriesData = function () {
    var aggregation = this.filterNullColumn(this.bOptions.yAxis[0].selected)[0].aggregation;

    for (var s in this.series) {
        this.series[s].data = this.series[s].extractor.extract(aggregation);
        if (this._seriesDataSortRule) {
            this.series[s].data = this.series[s].data.sort(this._seriesDataSortRule);
        }
    }
};

EChartsAxisTypeOptionBuilder.prototype.getDistinctColorByList = function () {
    var colorByList = [];
    var colorByName;
    for (var s in this.eOptions.series) {
        if (this.eOptions.series[s].virtualSeries) continue;
        colorByName = this.eOptions.series[s].name;
        if (colorByList.indexOf(colorByName) === -1) colorByList.push(colorByName);
    }
    return colorByList.sort();
};

EChartsAxisTypeOptionBuilder.prototype._setSeriesDataSortRule = function () {
    var xAxisType = this._getColumnDataType(this.filterNullColumn(this.bOptions.xAxis[0].selected));
    var yAxisType = this._getColumnDataType(this.filterNullColumn(this.bOptions.yAxis[0].selected));

    var sortRule = function sortRule(a, b) {
        var xComp;
        if (xAxisType === 'category') xComp = _optionUtils2.default.stringSortRule(a.value[0], b.value[0]);else if (xAxisType === 'time') xComp = _optionUtils2.default.timeSortRule(a.value[0], b.value[0]);else xComp = _optionUtils2.default.numericSortRule(a.value[0], b.value[0]);

        if (xComp === 0) {
            var yComp;
            if (yAxisType === 'category') yComp = _optionUtils2.default.stringSortRule(a.value[1], b.value[1]);else if (yAxisType === 'time') yComp = _optionUtils2.default.timeSortRule(a.value[1], b.value[1]);else yComp = _optionUtils2.default.numericSortRule(a.value[1], b.value[1]);
            return yComp;
        } else {
            return xComp;
        }
    };

    this._seriesDataSortRule = sortRule;
};

EChartsAxisTypeOptionBuilder.prototype._decorate = function () {
    new _axisRangeDecorator2.default(this).decorate();
    _super._decorate.call(this);
};

exports.default = EChartsAxisTypeOptionBuilder;

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/**
 * Source: aggregation-env.js
 * Created by ng1123.kim on 2017-06-07.
 */

exports.default = {
    AggregationMap: {
        NONE: { label: "(None)", value: "none" },
        SUM: { label: "Sum", value: "sum" },
        AVG: { label: "Average", value: "average" },
        COUNT: { label: "Count", value: "count" },
        UNIQUE_COUNT: { label: "Unique Count", value: "unique_count" },
        MIN: { label: "Min", value: "min" },
        MAX: { label: "Max", value: "max" }
    },
    DistributionMap: {
        NONE: { label: "(None)", value: "none" },
        NORMAL: { label: "Normal Distribution", value: "normal" },
        EXP: { label: "Exponential Distribution", value: "exponential" },
        GAMMA: { label: "Gamma Distribution", value: "gamma" },
        LOGNORMAL: { label: "Log-normal Distribution", value: "lognormal" },
        BETA: { label: "Beta Distribution", value: "beta" }
    },
    extendAggregation: function extendAggregation(list) {
        var aggregationList = [];
        for (var key in this.AggregationMap) {
            if (list.indexOf(key) >= 0) {
                aggregationList.push(this.AggregationMap[key]);
            }
        }
        return aggregationList;
    },
    extendDistribution: function extendDistribution(list) {
        var distributionList = [];
        for (var key in this.DistributionMap) {
            if (list.indexOf(key) >= 0) {
                distributionList.push(this.DistributionMap[key]);
            }
        }
        return distributionList;
    },
    Key: {
        SCATTER: 'scatter',
        TABLE: 'table'
    }
};

/***/ }),
/* 21 */,
/* 22 */,
/* 23 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Subscription; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_isArray__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_isObject__ = __webpack_require__(104);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isFunction__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_UnsubscriptionError__ = __webpack_require__(246);
/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */




var Subscription = /*@__PURE__*/ (function () {
    function Subscription(unsubscribe) {
        this.closed = false;
        this._parentOrParents = null;
        this._subscriptions = null;
        if (unsubscribe) {
            this._unsubscribe = unsubscribe;
        }
    }
    Subscription.prototype.unsubscribe = function () {
        var errors;
        if (this.closed) {
            return;
        }
        var _a = this, _parentOrParents = _a._parentOrParents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;
        this.closed = true;
        this._parentOrParents = null;
        this._subscriptions = null;
        if (_parentOrParents instanceof Subscription) {
            _parentOrParents.remove(this);
        }
        else if (_parentOrParents !== null) {
            for (var index = 0; index < _parentOrParents.length; ++index) {
                var parent_1 = _parentOrParents[index];
                parent_1.remove(this);
            }
        }
        if (Object(__WEBPACK_IMPORTED_MODULE_2__util_isFunction__["a" /* isFunction */])(_unsubscribe)) {
            try {
                _unsubscribe.call(this);
            }
            catch (e) {
                errors = e instanceof __WEBPACK_IMPORTED_MODULE_3__util_UnsubscriptionError__["a" /* UnsubscriptionError */] ? flattenUnsubscriptionErrors(e.errors) : [e];
            }
        }
        if (Object(__WEBPACK_IMPORTED_MODULE_0__util_isArray__["a" /* isArray */])(_subscriptions)) {
            var index = -1;
            var len = _subscriptions.length;
            while (++index < len) {
                var sub = _subscriptions[index];
                if (Object(__WEBPACK_IMPORTED_MODULE_1__util_isObject__["a" /* isObject */])(sub)) {
                    try {
                        sub.unsubscribe();
                    }
                    catch (e) {
                        errors = errors || [];
                        if (e instanceof __WEBPACK_IMPORTED_MODULE_3__util_UnsubscriptionError__["a" /* UnsubscriptionError */]) {
                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));
                        }
                        else {
                            errors.push(e);
                        }
                    }
                }
            }
        }
        if (errors) {
            throw new __WEBPACK_IMPORTED_MODULE_3__util_UnsubscriptionError__["a" /* UnsubscriptionError */](errors);
        }
    };
    Subscription.prototype.add = function (teardown) {
        var subscription = teardown;
        if (!teardown) {
            return Subscription.EMPTY;
        }
        switch (typeof teardown) {
            case 'function':
                subscription = new Subscription(teardown);
            case 'object':
                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {
                    return subscription;
                }
                else if (this.closed) {
                    subscription.unsubscribe();
                    return subscription;
                }
                else if (!(subscription instanceof Subscription)) {
                    var tmp = subscription;
                    subscription = new Subscription();
                    subscription._subscriptions = [tmp];
                }
                break;
            default: {
                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');
            }
        }
        var _parentOrParents = subscription._parentOrParents;
        if (_parentOrParents === null) {
            subscription._parentOrParents = this;
        }
        else if (_parentOrParents instanceof Subscription) {
            if (_parentOrParents === this) {
                return subscription;
            }
            subscription._parentOrParents = [_parentOrParents, this];
        }
        else if (_parentOrParents.indexOf(this) === -1) {
            _parentOrParents.push(this);
        }
        else {
            return subscription;
        }
        var subscriptions = this._subscriptions;
        if (subscriptions === null) {
            this._subscriptions = [subscription];
        }
        else {
            subscriptions.push(subscription);
        }
        return subscription;
    };
    Subscription.prototype.remove = function (subscription) {
        var subscriptions = this._subscriptions;
        if (subscriptions) {
            var subscriptionIndex = subscriptions.indexOf(subscription);
            if (subscriptionIndex !== -1) {
                subscriptions.splice(subscriptionIndex, 1);
            }
        }
    };
    Subscription.EMPTY = (function (empty) {
        empty.closed = true;
        return empty;
    }(new Subscription()));
    return Subscription;
}());

function flattenUnsubscriptionErrors(errors) {
    return errors.reduce(function (errs, err) { return errs.concat((err instanceof __WEBPACK_IMPORTED_MODULE_3__util_UnsubscriptionError__["a" /* UnsubscriptionError */]) ? err.errors : err); }, []);
}
//# sourceMappingURL=Subscription.js.map


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /**
                                                                                                                                                                                                                                                                               * Source: chart-utils.js
                                                                                                                                                                                                                                                                               * Created by daewon.park on 2017-04-25.
                                                                                                                                                                                                                                                                               */

var _validationError = __webpack_require__(36);

var _validationError2 = _interopRequireDefault(_validationError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var chartPlotOptionKey = {
    'area-stacked': 'area',
    'area-stacked-100': 'area',
    'bar-stacked': 'bar',
    'bar-stacked-100': 'bar',
    'biplot': 'component',
    'column-stacked': 'column',
    'column-stacked-100': 'column',
    'heatmap-matrix': 'heatmap',
    'histogram': 'column',
    'pairwise-scatter': 'scatter'
};

exports.default = {
    assignArray: function assignArray(targetObject, sourceObject) {
        for (var key in sourceObject) {
            if ($.isPlainObject(sourceObject[key])) {
                this.assignArray(targetObject[key], sourceObject[key]);
            } else if ($.isArray(sourceObject[key])) {
                targetObject[key] = $.extend(true, [], sourceObject[key]);
            }
        }
    },
    getChartContainerSize: function getChartContainerSize($widget) {
        var chartContainer = $widget.closest('.bcharts-container');
        return {
            width: chartContainer.width(),
            height: chartContainer.height()
        };
    },
    extendChartOptionsWithDefaultOptions: function extendChartOptionsWithDefaultOptions(options, defaultOptions) {
        var colorSet = (options.colorSet || defaultOptions.colorSet).slice();
        options = this.deleteNullOrUndefinedOptions(options, defaultOptions);
        options = this.resetToolbarOption(options, defaultOptions);

        var ret = $.extend(true, {}, defaultOptions, options);
        ret.colorSet = colorSet;
        return ret;
    },
    deleteNullOrUndefinedOptions: function deleteNullOrUndefinedOptions(options, defaultOptions) {
        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object' && !Array.isArray(options)) {
            for (var key in options) {

                if (defaultOptions[key] === null || typeof defaultOptions[key] === 'undefined') continue;

                if (options[key] === null || typeof options[key] === 'undefined') {
                    delete options[key];
                } else if (_typeof(options[key]) === 'object' && !Array.isArray(options[key])) {
                    options[key] = this.deleteNullOrUndefinedOptions(options[key], defaultOptions[key]);
                }
            }
        }
        return options;
    },
    resetToolbarOption: function resetToolbarOption(options, defaultOptions) {
        if (options && options.toolbar && options.toolbar.type !== 'custom') {
            options.toolbar.show = defaultOptions.toolbar.show;
            options.toolbar.menu = defaultOptions.toolbar.menu;
        }
        return options;
    },
    limitMaxSeriesSize: function limitMaxSeriesSize(series) {
        var totalCount = 0;
        for (var i = 0; i < series.length; i++) {
            totalCount = totalCount + series[i].data.length;
        }

        if (totalCount > 3000) {
            throw new _validationError2.default('Too many category. Recommend other chart type or Change Column options.');
        }
    },
    getPlotOptions: function getPlotOptions(optionRef, chartType) {
        var parentChartType = chartPlotOptionKey[chartType] || chartType;
        return optionRef.plotOptions[parentChartType] || {};
    },
    convertHTMLSpecialChar: function convertHTMLSpecialChar(str) {
        if (str && typeof str === 'string') {
            str = str.replace(/&/g, '&amp;');
            str = str.replace(/</g, '&lt;');
            str = str.replace(/>/g, '&gt;');
            str = str.replace(/"/g, '&quot;');
            str = str.replace(/\s/g, '&nbsp;');
            return str;
        }
        return str;
    },
    parseString: function parseString(inptStr, isMultiLine) {
        if (inptStr) {
            if (isMultiLine) {
                return JSON.stringify(inptStr, null, '\t').replace(/\\"/g, '"');
            } else {
                return JSON.stringify(inptStr).replace(/\\"/g, '"');
            }
        } else {
            return JSON.stringify(inptStr);
        }
    },
    /**
     * colormap의 value, color값의 간격을 파악하여 color array 100개를 리턴함.
     * @param range, colorMap
     var range = {
            min: 0,
            max: 1000
         }
     var colorMap = [
     {
         "color": "#FD026C",
         "value": 124
     },
     {
         "color": "#4682B8",
         "value": 432
     },
     {
         "color": "#F5CC0A",
         "value": -64
     },
     {
         "color": "#1CED42",
         "value": 120
     },
     defaultColorSet: [ "#4682b8", "#5086ad"]   //min, max color
     ]
     * @returns {Array}
     [ "#4682b8", "#5086ad", "#5a8aa3", "#648f99", "#6f938f", ... (생략) ]
     * @private
     */
    genColorList: function genColorList(range, colorMap, defaultColorSet) {
        var _this = this;
        var defaultColorMap = {
            min: {
                color: defaultColorSet[0]
            },
            max: {
                color: defaultColorSet.slice(-1)[0]
            }
        };

        var colorValue = colorMap.filter(function (mapObj, pos) {
            return !Number.isNaN(mapObj.value) && mapObj.value >= range.min && mapObj.value <= range.max;
        });
        if (colorValue.length == 0) {
            return [];
            // } else if (colorValue.length == 1) {
            //     return [defaultColorMap.min.color, colorValue[0].color, defaultColorMap.max.color];
        } else {
            defaultColorMap.min.value = range.min;
            defaultColorMap.max.value = range.max;
            colorValue.push(defaultColorMap.min);
            colorValue.push(defaultColorMap.max);
        }

        var intervalArr = [0],
            genColorList = [];
        var uniqueColorMap = colorValue.slice().sort(function (prev, curr) {
            return prev.value > curr.value;
        }).reduce(function (prev, curr) {
            // slice(-1)[0] means last item in array without removing it (like .pop())
            if (!prev.slice(-1)[0] || prev.slice(-1)[0].value !== curr.value) {
                prev.push(curr);
            } else {
                prev[prev.length - 1] = curr;
            }
            return prev;
        }, []);

        // defaultColorMap.min.value = range.min;
        // defaultColorMap.max.value = range.max;
        // uniqueColorMap.unshift(defaultColorMap.min);
        // uniqueColorMap.push(defaultColorMap.max);

        for (var idx = 1; idx < uniqueColorMap.length; idx++) {
            intervalArr.push(uniqueColorMap[idx].value - uniqueColorMap[idx - 1].value);
        }
        if (intervalArr.length != 1) {

            var sum = intervalArr.reduce(function (prev, curr) {
                return prev + Math.abs(curr);
            });
            var numOfColorArr = intervalArr.map(function (elem) {
                return Math.abs(Math.round(elem / sum * 100));
            });

            numOfColorArr.forEach(function (numOfColor, index) {
                if (index > 0) {
                    genColorList = genColorList.concat(generateColor(uniqueColorMap[index - 1].color, uniqueColorMap[index].color, numOfColor));
                }
            });
        } else {
            //같은 값으로만 이루어진경우(ex. value가 모두 0)
            genColorList = [uniqueColorMap.slice(-1)[0].color];
        }
        return genColorList;

        function hex(c) {
            var s = "0123456789abcdef";
            var i = parseInt(c);
            if (i == 0 || isNaN(c)) return "00";
            i = Math.round(Math.min(Math.max(0, i), 255));
            return s.charAt((i - i % 16) / 16) + s.charAt(i % 16);
        }

        /* Convert an RGB triplet to a hex string */
        function convertToHex(rgb) {
            return hex(rgb[0]) + hex(rgb[1]) + hex(rgb[2]);
        }

        /* Remove '#' in color hex string */
        function trim(s) {
            return s.charAt(0) == '#' ? s.substring(1, 7) : s;
        }

        /* Convert a hex string to an RGB triplet */
        function convertToRGB(hex) {
            var color = [];
            color[0] = parseInt(trim(hex).substring(0, 2), 16);
            color[1] = parseInt(trim(hex).substring(2, 4), 16);
            color[2] = parseInt(trim(hex).substring(4, 6), 16);
            return color;
        }

        function generateColor(colorStart, colorEnd, colorCount) {

            // The beginning of your gradient
            var start = convertToRGB(colorStart);

            // The end of your gradient
            var end = convertToRGB(colorEnd);

            // The number of colors to compute
            var len = colorCount;

            //Alpha blending amount
            var alpha = 0.0;

            var saida = [];

            for (var i = 0; i < len; i++) {
                var c = [];
                alpha += 1.0 / len;

                c[0] = start[0] * alpha + (1 - alpha) * end[0];
                c[1] = start[1] * alpha + (1 - alpha) * end[1];
                c[2] = start[2] * alpha + (1 - alpha) * end[2];

                saida.push('#' + convertToHex(c));
            }
            return saida.reverse();
        }
    },
    getLegendOrigin: function getLegendOrigin(_ref) {
        var left = _ref.left,
            right = _ref.right,
            top = _ref.top,
            bottom = _ref.bottom;

        var horizontalAlignValue = function () {
            if (left == 0 || left === '0px') {
                return 'left';
            } else if (left === '50%') {
                return 'center';
            } else if (right == 0 || right === '0px') {
                return 'right';
            } else {
                left = 0;
                return 'center';
            }
        }();
        var verticalAlignValue = function () {
            if (top == 10 || top === '10px') {
                return 'top';
            } else if (top === '50%') {
                return 'center';
            } else if (bottom == 0 || bottom === '0px') {
                return 'bottom';
            } else {
                top = 10;
                return 'top';
            }
        }();
        return {
            h: horizontalAlignValue,
            v: verticalAlignValue
        };
    }
};

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PointWithCategoryKeyExtractor() {
    _echartsPointExtractor2.default.call(this);
}

PointWithCategoryKeyExtractor.prototype = Object.create(_echartsPointExtractor2.default.prototype);
PointWithCategoryKeyExtractor.prototype.constructor = PointWithCategoryKeyExtractor;

PointWithCategoryKeyExtractor.prototype.push = function (row, rowIndex) {
    var pointer = this._getKeyPointer(row, rowIndex);
    var index = Number(rowIndex);
    var value;
    var point = [];
    var prePointList = [];
    var currentPointList = [];
    var indexes;

    for (var i = 0; i < this._columnIndices.length; i++) {
        indexes = this._columnIndices[i];
        prePointList = currentPointList.concat([]);
        currentPointList = [];
        for (var j = 0; j < indexes.length; j++) {
            value = this._getPointValue(row, indexes[j], index);
            if (this._typeList[i] === 'category') {
                value += '';
                this._setCategory(i, value);
            }
            if (prePointList.length === 0) {
                currentPointList.push([value]);
            } else {
                for (var k = 0; k < prePointList.length; k++) {
                    currentPointList.push(prePointList[k].concat([value]));
                }
            }
        }
    }

    pointer.point = pointer.point.concat(currentPointList);
    pointer.indexList.push(index);
};

PointWithCategoryKeyExtractor.prototype._getKeyList = function (row, rowIndex) {
    if (!this._hasKey) return [rowIndex];
    var keys = [];
    for (var i = 0; i < this._keys.length; i++) {
        var key = row[this._keys[i]] + '';
        keys.push(key);
    }
    return keys;
};

exports.default = PointWithCategoryKeyExtractor;

/***/ }),
/* 26 */,
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return SubjectSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Subject; });
/* unused harmony export AnonymousSubject */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Subscription__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_ObjectUnsubscribedError__ = __webpack_require__(67);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__SubjectSubscription__ = __webpack_require__(248);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__internal_symbol_rxSubscriber__ = __webpack_require__(105);
/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */







var SubjectSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SubjectSubscriber, _super);
    function SubjectSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        return _this;
    }
    return SubjectSubscriber;
}(__WEBPACK_IMPORTED_MODULE_2__Subscriber__["a" /* Subscriber */]));

var Subject = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](Subject, _super);
    function Subject() {
        var _this = _super.call(this) || this;
        _this.observers = [];
        _this.closed = false;
        _this.isStopped = false;
        _this.hasError = false;
        _this.thrownError = null;
        return _this;
    }
    Subject.prototype[__WEBPACK_IMPORTED_MODULE_6__internal_symbol_rxSubscriber__["a" /* rxSubscriber */]] = function () {
        return new SubjectSubscriber(this);
    };
    Subject.prototype.lift = function (operator) {
        var subject = new AnonymousSubject(this, this);
        subject.operator = operator;
        return subject;
    };
    Subject.prototype.next = function (value) {
        if (this.closed) {
            throw new __WEBPACK_IMPORTED_MODULE_4__util_ObjectUnsubscribedError__["a" /* ObjectUnsubscribedError */]();
        }
        if (!this.isStopped) {
            var observers = this.observers;
            var len = observers.length;
            var copy = observers.slice();
            for (var i = 0; i < len; i++) {
                copy[i].next(value);
            }
        }
    };
    Subject.prototype.error = function (err) {
        if (this.closed) {
            throw new __WEBPACK_IMPORTED_MODULE_4__util_ObjectUnsubscribedError__["a" /* ObjectUnsubscribedError */]();
        }
        this.hasError = true;
        this.thrownError = err;
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].error(err);
        }
        this.observers.length = 0;
    };
    Subject.prototype.complete = function () {
        if (this.closed) {
            throw new __WEBPACK_IMPORTED_MODULE_4__util_ObjectUnsubscribedError__["a" /* ObjectUnsubscribedError */]();
        }
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].complete();
        }
        this.observers.length = 0;
    };
    Subject.prototype.unsubscribe = function () {
        this.isStopped = true;
        this.closed = true;
        this.observers = null;
    };
    Subject.prototype._trySubscribe = function (subscriber) {
        if (this.closed) {
            throw new __WEBPACK_IMPORTED_MODULE_4__util_ObjectUnsubscribedError__["a" /* ObjectUnsubscribedError */]();
        }
        else {
            return _super.prototype._trySubscribe.call(this, subscriber);
        }
    };
    Subject.prototype._subscribe = function (subscriber) {
        if (this.closed) {
            throw new __WEBPACK_IMPORTED_MODULE_4__util_ObjectUnsubscribedError__["a" /* ObjectUnsubscribedError */]();
        }
        else if (this.hasError) {
            subscriber.error(this.thrownError);
            return __WEBPACK_IMPORTED_MODULE_3__Subscription__["a" /* Subscription */].EMPTY;
        }
        else if (this.isStopped) {
            subscriber.complete();
            return __WEBPACK_IMPORTED_MODULE_3__Subscription__["a" /* Subscription */].EMPTY;
        }
        else {
            this.observers.push(subscriber);
            return new __WEBPACK_IMPORTED_MODULE_5__SubjectSubscription__["a" /* SubjectSubscription */](this, subscriber);
        }
    };
    Subject.prototype.asObservable = function () {
        var observable = new __WEBPACK_IMPORTED_MODULE_1__Observable__["a" /* Observable */]();
        observable.source = this;
        return observable;
    };
    Subject.create = function (destination, source) {
        return new AnonymousSubject(destination, source);
    };
    return Subject;
}(__WEBPACK_IMPORTED_MODULE_1__Observable__["a" /* Observable */]));

var AnonymousSubject = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](AnonymousSubject, _super);
    function AnonymousSubject(destination, source) {
        var _this = _super.call(this) || this;
        _this.destination = destination;
        _this.source = source;
        return _this;
    }
    AnonymousSubject.prototype.next = function (value) {
        var destination = this.destination;
        if (destination && destination.next) {
            destination.next(value);
        }
    };
    AnonymousSubject.prototype.error = function (err) {
        var destination = this.destination;
        if (destination && destination.error) {
            this.destination.error(err);
        }
    };
    AnonymousSubject.prototype.complete = function () {
        var destination = this.destination;
        if (destination && destination.complete) {
            this.destination.complete();
        }
    };
    AnonymousSubject.prototype._subscribe = function (subscriber) {
        var source = this.source;
        if (source) {
            return this.source.subscribe(subscriber);
        }
        else {
            return __WEBPACK_IMPORTED_MODULE_3__Subscription__["a" /* Subscription */].EMPTY;
        }
    };
    return AnonymousSubject;
}(Subject));

//# sourceMappingURL=Subject.js.map


/***/ }),
/* 28 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return isArray; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var isArray = /*@__PURE__*/ (function () { return Array.isArray || (function (x) { return x && typeof x.length === 'number'; }); })();
//# sourceMappingURL=isArray.js.map


/***/ }),
/* 29 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return asyncScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return async; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__AsyncAction__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AsyncScheduler__ = __webpack_require__(55);
/** PURE_IMPORTS_START _AsyncAction,_AsyncScheduler PURE_IMPORTS_END */


var asyncScheduler = /*@__PURE__*/ new __WEBPACK_IMPORTED_MODULE_1__AsyncScheduler__["a" /* AsyncScheduler */](__WEBPACK_IMPORTED_MODULE_0__AsyncAction__["a" /* AsyncAction */]);
var async = asyncScheduler;
//# sourceMappingURL=async.js.map


/***/ }),
/* 30 */,
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/**
 * Source: widget.js
 * Created by daewon.park on 2017-03-22.
 */

function Widget(parentId, options) {
    this.parentId = parentId;
    this.options = options;
    this._init();
    this._createContents(this.$parent);
}

Widget.prototype._init = function () {
    this._retrieveParent();

    $.extend(true, this.options, {
        style: {}
    });
};

Widget.prototype._retrieveParent = function () {
    this.$parent = typeof this.parentId === 'string' ? $(this.parentId) : this.parentId;
};

Widget.prototype._createContents = function ($parent) {};

Widget.prototype.getOptions = function () {
    if (typeof this.options === 'function') {
        return this.options();
    } else {
        return this.options;
    }
};

Widget.prototype.show = function () {
    if (this.$mainControl) {
        this.$mainControl.show();
    }
};

Widget.prototype.hide = function () {
    if (this.$mainControl) {
        this.$mainControl.hide();
    }
};

Widget.prototype.destroy = function () {};

Widget.prototype.uuid = function (length) {
    var ALPHABET = '23456789abcdefghijkmnpqrstuvwxyz';
    var size = length | 8;
    var rtn = '';
    for (var i = 0; i < size; i++) {
        rtn += ALPHABET.charAt(Math.floor(Math.random() * ALPHABET.length));
    }
    return rtn;
};

exports.default = Widget;

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _echartsAxisTypeOptionBuilder = __webpack_require__(19);

var _echartsAxisTypeOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeOptionBuilder);

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsAxisTypeCalculatedOptionBuilder() {
    _echartsAxisTypeOptionBuilder2.default.call(this);
}

EChartsAxisTypeCalculatedOptionBuilder.prototype = Object.create(_echartsAxisTypeOptionBuilder2.default.prototype);
EChartsAxisTypeCalculatedOptionBuilder.prototype.constructor = EChartsAxisTypeCalculatedOptionBuilder;

EChartsAxisTypeCalculatedOptionBuilder.prototype._buildSeriesData = function () {
    var aggregation = this.getSeriesDataColumns(0)[1].aggregation;

    for (var s in this.series) {
        this.series[s].data = this.series[s].extractor.extract(aggregation);
        if (this._seriesDataSortRule) {
            this.series[s].data = this.series[s].data.sort(this._seriesDataSortRule);
        }
    }
};

EChartsAxisTypeCalculatedOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData(0);
    var xIndexes = this.getColumnIndexes([{ name: 'xAxis' }], localData.chartColumns);
    var yIndexes = this.getColumnIndexes([{ name: 'yAxis' }], localData.chartColumns);

    var extractor = new _echartsPointExtractor2.default();

    extractor.setTarget({
        index: xIndexes,
        type: _optionUtils2.default.getAxisType(localData.chartColumns[xIndexes[0]]),
        isKey: false
    });

    extractor.setTarget({
        index: yIndexes,
        type: _optionUtils2.default.getAxisType(localData.chartColumns[yIndexes[0]]),
        isKey: false
    });

    return extractor;
};

EChartsAxisTypeCalculatedOptionBuilder.prototype.getSeriesKeyColumns = function () {
    return [{ name: 'colorBy' }];
};

EChartsAxisTypeCalculatedOptionBuilder.prototype.getSeriesKeyColumnIndexes = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    var localData = this.getLocalData(dataIndex);
    var keyColumns = this.getSeriesKeyColumns(dataIndex);
    return this.getColumnIndexes(keyColumns, localData.chartColumns);
};

exports.default = EChartsAxisTypeCalculatedOptionBuilder;

/***/ }),
/* 33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = map;
/* unused harmony export MapOperator */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function map(project, thisArg) {
    return function mapOperation(source) {
        if (typeof project !== 'function') {
            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
        }
        return source.lift(new MapOperator(project, thisArg));
    };
}
var MapOperator = /*@__PURE__*/ (function () {
    function MapOperator(project, thisArg) {
        this.project = project;
        this.thisArg = thisArg;
    }
    MapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));
    };
    return MapOperator;
}());

var MapSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](MapSubscriber, _super);
    function MapSubscriber(destination, project, thisArg) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.count = 0;
        _this.thisArg = thisArg || _this;
        return _this;
    }
    MapSubscriber.prototype._next = function (value) {
        var result;
        try {
            result = this.project.call(this.thisArg, value, this.count++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return MapSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=map.js.map


/***/ }),
/* 34 */,
/* 35 */,
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _baseError = __webpack_require__(132);

var _baseError2 = _interopRequireDefault(_baseError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _super = _baseError2.default.prototype; /**
                                             * Created by sds on 2018-03-05.
                                             */

function ValidationError(message) {
  _super.constructor.call(this, message);
  // this.name = 'ValidationError';
}

ValidationError.prototype = Object.create(_super);
ValidationError.prototype.constructor = ValidationError;

exports.default = ValidationError;

/***/ }),
/* 37 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EMPTY; });
/* harmony export (immutable) */ __webpack_exports__["b"] = empty;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

var EMPTY = /*@__PURE__*/ new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) { return subscriber.complete(); });
function empty(scheduler) {
    return scheduler ? emptyScheduled(scheduler) : EMPTY;
}
function emptyScheduled(scheduler) {
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });
}
//# sourceMappingURL=empty.js.map


/***/ }),
/* 38 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isScheduler;
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isScheduler(value) {
    return value && typeof value.schedule === 'function';
}
//# sourceMappingURL=isScheduler.js.map


/***/ }),
/* 39 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = from;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_subscribeTo__ = __webpack_require__(113);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scheduled_scheduled__ = __webpack_require__(260);
/** PURE_IMPORTS_START _Observable,_util_subscribeTo,_scheduled_scheduled PURE_IMPORTS_END */



function from(input, scheduler) {
    if (!scheduler) {
        if (input instanceof __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */]) {
            return input;
        }
        return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](Object(__WEBPACK_IMPORTED_MODULE_1__util_subscribeTo__["a" /* subscribeTo */])(input));
    }
    else {
        return Object(__WEBPACK_IMPORTED_MODULE_2__scheduled_scheduled__["a" /* scheduled */])(input, scheduler);
    }
}
//# sourceMappingURL=from.js.map


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.registerChart = registerChart;
exports.getChartTypeList = getChartTypeList;
exports.isRegisteredChart = isRegisteredChart;
exports.getChartAttr = getChartAttr;
exports.createChart = createChart;

var _bchartIndex = __webpack_require__(87);

var Charts = _interopRequireWildcard(_bchartIndex);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var chartRegistry = {}; /**
                         * Created by sds on 2017-12-19.
                         */

_init();

//private
function _init() {
    if ($.isEmptyObject(chartRegistry)) {
        console.log('register chart init');
    } else {
        console.log('chart already registered');
        return;
    }
    var chartTypeList = Object.keys(Charts);
    chartTypeList.forEach(function (chartType) {
        //FIXME: to delete
        Charts[chartType].DefaultOptions = Charts[chartType].Attr.DefaultOptions;
        Charts[chartType].ColumnConf = Charts[chartType].Attr.ColumnConf;
        Charts[chartType].Label = Charts[chartType].Attr.Label;
        Charts[chartType].Order = Charts[chartType].Attr.Order;

        chartRegistry[Charts[chartType].Attr.Key] = Charts[chartType];
    });
}

// export default function getChartRegistry(){
//     return chartRegistry;
// }
exports.default = chartRegistry;
function registerChart(option) {
    if ($.isEmptyObject(chartRegistry)) {
        console.log('chart register is empty');
    }
    //FIXME: to delete
    option.Func.DefaultOptions = option.Func.Attr.DefaultOptions;
    option.Func.ColumnConf = option.Func.Attr.ColumnConf;
    option.Func.Label = option.Func.Attr.Label;
    option.Func.Order = option.Func.Attr.Order;

    chartRegistry[option.Key] = option.Func;
}

function getChartTypeList() {
    return Object.keys(chartRegistry);
}

function isRegisteredChart(chartType) {
    return Object.keys(chartRegistry).includes(chartType);
}

function getChartAttr(chartType) {
    if (!chartRegistry[chartType]) {
        return;
    }
    return chartRegistry[chartType].Attr;
}

function createChart(chartType, parentId, options) {
    if (!chartRegistry[chartType] || !parentId || !options) {
        throw new Error('Cannot create chart. ' + chartType);
    }
    return new chartRegistry[chartType](parentId, options);
}

/***/ }),
/* 41 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InnerSubscriber; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


var InnerSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](InnerSubscriber, _super);
    function InnerSubscriber(parent, outerValue, outerIndex) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        _this.outerValue = outerValue;
        _this.outerIndex = outerIndex;
        _this.index = 0;
        return _this;
    }
    InnerSubscriber.prototype._next = function (value) {
        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);
    };
    InnerSubscriber.prototype._error = function (error) {
        this.parent.notifyError(error, this);
        this.unsubscribe();
    };
    InnerSubscriber.prototype._complete = function () {
        this.parent.notifyComplete(this);
        this.unsubscribe();
    };
    return InnerSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));

//# sourceMappingURL=InnerSubscriber.js.map


/***/ }),
/* 42 */,
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = identity;
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function identity(x) {
    return x;
}
//# sourceMappingURL=identity.js.map


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function AxisTypeDecorator(builder, options) {
    _decorator2.default.call(this, builder, options);
}

AxisTypeDecorator.prototype = Object.create(_decorator2.default.prototype);
AxisTypeDecorator.prototype.constructor = AxisTypeDecorator;

AxisTypeDecorator.prototype.decorate = function () {
    this.setAxisType();

    var xCategoryMap = {};
    var yCategoryMap = {};

    for (var s in this.eOptions.series) {
        if (!this.eOptions.series[s].extractor) continue;
        if (this.eOptions.xAxis[0].type === 'category') {
            $.extend(xCategoryMap, this.eOptions.series[s].extractor.getCategoryMap(0));
        }
        if (this.eOptions.yAxis[0].type === 'category') {
            $.extend(yCategoryMap, this.eOptions.series[s].extractor.getCategoryMap(1));
        }
    }

    if (this.eOptions.xAxis[0].type === 'category') {
        var xCategories = Object.keys(xCategoryMap);
        var sortRule = this._getSortRule(this.bOptions.xAxis[0].selected);
        xCategories.sort(sortRule);
        this.eOptions.xAxis[0].data = xCategories;
    }
    if (this.eOptions.yAxis[0].type === 'category') {
        var yCategories = Object.keys(yCategoryMap);
        var sortRule = this._getSortRule(this.bOptions.yAxis[0].selected);

        yCategories.sort(sortRule);
        this.eOptions.yAxis[0].data = yCategories;
    }
};

AxisTypeDecorator.prototype.setAxisType = function () {
    if (typeof this.options === 'undefined' || this.options.setAxisByColumn !== false) {
        var builder = this.builder;
        var localData = builder.getLocalData();
        var columnIndexes = builder.getSeriesDataColumnIndexes();
        var dataColumns = builder.getSeriesDataColumns();
        var xColumn = $.extend(true, {}, localData.columns[columnIndexes[0]], dataColumns[0]);
        var yColumn = $.extend(true, {}, localData.columns[columnIndexes[1]], dataColumns[1]);

        this.eOptions.xAxis[0].type = _optionUtils2.default.getAxisType(xColumn);
        this.eOptions.yAxis[0].type = _optionUtils2.default.getAxisType(yColumn);
    }
};

AxisTypeDecorator.prototype._getSortRule = function (target) {
    var builder = this.builder;
    var axisType = builder._getColumnDataType(builder.filterNullColumn(target));
    var axisSortRule = builder._axisSortRule;
    var rule = axisSortRule && axisSortRule.rule;
    var sortRule = function sortRule(a, b) {
        var comp;
        if (axisSortRule && axisSortRule.sort === false) comp = undefined;else if (axisType === 'category') rule === 'desc' ? comp = _optionUtils2.default.stringSortRule(b, a) : comp = _optionUtils2.default.stringSortRule(a, b);else if (axisType === 'time') rule === 'desc' ? comp = _optionUtils2.default.timeSortRule(b, a) : comp = _optionUtils2.default.timeSortRule(a, b);else rule === 'desc' ? comp = _optionUtils2.default.numericSortRule(b * 1, a * 1) : comp = _optionUtils2.default.numericSortRule(a * 1, b * 1);

        return comp;
    };
    return sortRule;
};

exports.default = AxisTypeDecorator;

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
function Extractor() {
    this._keys = [];
    this._typeList = [];
    this._columnIndices = [];
    this._aggregationList = [];
    this._categoryMap = {};
}

/**
 * @param target
 *  {
     *      index: [1],
     *      type: 'number', 'category' or 'date'
     *      aggregation: 'none', 'sum' ...
     *      isKey: true or false
     *  }
 *
 */

Extractor.prototype.setTarget = function (target) {
    this._columnIndices.push(target.index);
    this._typeList.push(target.type || 'category');
    this._categoryMap[target.index] = {};
    this._aggregationList.push(target.aggregation || 'none');
    if (target.isKey) {
        this._keys = this._keys.concat(target.index);
        this._hasKey = true;
    }
};

Extractor.prototype.setTargets = function (targets) {
    for (var i = 0; i < targets.length; i++) {
        this.setTarget(targets[i]);
    }
};

Extractor.prototype.push = function (row, rowIndex) {};

Extractor.prototype.extract = function () {};

exports.default = Extractor;

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

var _echartsAxisTypeOptionBuilder = __webpack_require__(19);

var _echartsAxisTypeOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeOptionBuilder);

var _echartsPointWithCategorykeyExtractor = __webpack_require__(25);

var _echartsPointWithCategorykeyExtractor2 = _interopRequireDefault(_echartsPointWithCategorykeyExtractor);

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsAxisTypeComplexOptionBuilder() {
    _echartsAxisTypeOptionBuilder2.default.call(this);
} /**
   * Created by sds on 2018-01-24.
   */

EChartsAxisTypeComplexOptionBuilder.prototype = Object.create(_echartsAxisTypeOptionBuilder2.default.prototype);
EChartsAxisTypeComplexOptionBuilder.prototype.constructor = EChartsAxisTypeComplexOptionBuilder;

EChartsAxisTypeComplexOptionBuilder.prototype.parseCategory = function (isCategoryKey) {
    this._categoryKey = isCategoryKey;
    return this;
};

/**
 * @param keyColumnObj =  {
     *  complexKey : {name: 'SepalWidth', aggregation: 'none'},
     *  seriesNameIdx: 1
     * }
 */
EChartsAxisTypeComplexOptionBuilder.prototype.setComplexOption = function (complexOption) {
    this.complexKey = complexOption.column;
    this.seriesNameIdx = complexOption.idx;
    return this;
};

EChartsAxisTypeComplexOptionBuilder.prototype.getSeriesName = function (row, columnIndexes) {
    var resultStr = _echartsAxisTypeOptionBuilder2.default.prototype.getSeriesName.call(this, row, columnIndexes);
    if (resultStr) {
        return _optionUtils2.default.getColumnLabel(this.complexKey) + ' ' + resultStr;
    } else {
        return _optionUtils2.default.getColumnLabel(this.complexKey);
    }
};

EChartsAxisTypeComplexOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData(0);
    var dataColumns = this.getSeriesDataColumns(0);
    var aggregation = dataColumns[1].aggregation;
    var hasAggregation = aggregation && aggregation !== 'none';
    var xIndexes = this.getColumnIndexes(this.bOptions.xAxis[0].selected, localData.columns);
    var yIndexes = this.getColumnIndexes(this.bOptions.yAxis[0].selected, localData.columns);

    var extractor = this._categoryKey ? new _echartsPointWithCategorykeyExtractor2.default() : new _echartsPointExtractor2.default();

    extractor.setTarget({
        index: xIndexes,
        type: this._categoryKey ? 'category' : _optionUtils2.default.getAxisType(localData.columns[xIndexes[0]]),
        isKey: hasAggregation ? true : false
    });

    extractor.setTarget({
        index: yIndexes,
        type: this._categoryKey || aggregation ? 'value' : _optionUtils2.default.getAxisType(localData.columns[yIndexes[0]]),
        isKey: false
    });

    if (hasAggregation) {
        extractor.setExtractOperator(function (pointObject) {
            var operator = new _aggregationOperator2.default(pointObject.value);
            for (var i = 0; i < pointObject.indexList.length; i++) {
                operator.add(pointObject.indexList[i], pointObject.point[i][1]);
            }
            return [{ value: pointObject.value.concat(operator.calc(aggregation)) }];
        });
    }
    return extractor;
};

EChartsAxisTypeComplexOptionBuilder.prototype._setUpOptions = function () {
    if (this._categoryKey) {
        this._registerDecorator('axisTypeWithCategoryX');
        this._registerDecorator('yAxisMin0', { aggr: ['count'] });
    } else {
        this._registerDecorator('axisType');
    }
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('tooltip'); //, {complexIdx: this.complexIdx});
    this._registerDecorator('seriesNameSet');
    this._registerDecorator('lineBy');
};
exports.default = EChartsAxisTypeComplexOptionBuilder;

/***/ }),
/* 47 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return observable; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var observable = /*@__PURE__*/ (function () { return typeof Symbol === 'function' && Symbol.observable || '@@observable'; })();
//# sourceMappingURL=observable.js.map


/***/ }),
/* 48 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = filter;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function filter(predicate, thisArg) {
    return function filterOperatorFunction(source) {
        return source.lift(new FilterOperator(predicate, thisArg));
    };
}
var FilterOperator = /*@__PURE__*/ (function () {
    function FilterOperator(predicate, thisArg) {
        this.predicate = predicate;
        this.thisArg = thisArg;
    }
    FilterOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));
    };
    return FilterOperator;
}());
var FilterSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](FilterSubscriber, _super);
    function FilterSubscriber(destination, predicate, thisArg) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.thisArg = thisArg;
        _this.count = 0;
        return _this;
    }
    FilterSubscriber.prototype._next = function (value) {
        var result;
        try {
            result = this.predicate.call(this.thisArg, value, this.count++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this.destination.next(value);
        }
    };
    return FilterSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=filter.js.map


/***/ }),
/* 49 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = multicast;
/* unused harmony export MulticastOperator */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_ConnectableObservable__ = __webpack_require__(247);
/** PURE_IMPORTS_START _observable_ConnectableObservable PURE_IMPORTS_END */

function multicast(subjectOrSubjectFactory, selector) {
    return function multicastOperatorFunction(source) {
        var subjectFactory;
        if (typeof subjectOrSubjectFactory === 'function') {
            subjectFactory = subjectOrSubjectFactory;
        }
        else {
            subjectFactory = function subjectFactory() {
                return subjectOrSubjectFactory;
            };
        }
        if (typeof selector === 'function') {
            return source.lift(new MulticastOperator(subjectFactory, selector));
        }
        var connectable = Object.create(source, __WEBPACK_IMPORTED_MODULE_0__observable_ConnectableObservable__["b" /* connectableObservableDescriptor */]);
        connectable.source = source;
        connectable.subjectFactory = subjectFactory;
        return connectable;
    };
}
var MulticastOperator = /*@__PURE__*/ (function () {
    function MulticastOperator(subjectFactory, selector) {
        this.subjectFactory = subjectFactory;
        this.selector = selector;
    }
    MulticastOperator.prototype.call = function (subscriber, source) {
        var selector = this.selector;
        var subject = this.subjectFactory();
        var subscription = selector(subject).subscribe(subscriber);
        subscription.add(source.subscribe(subject));
        return subscription;
    };
    return MulticastOperator;
}());

//# sourceMappingURL=multicast.js.map


/***/ }),
/* 50 */,
/* 51 */,
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.range = range;
exports.zip = zip;
exports.isUndefined = isUndefined;
exports.negate = negate;
exports.compact = compact;
exports.first = first;
exports.isNull = isNull;
exports.isEmpty = isEmpty;
/* -----------------------------------------------------
 *  utils.js
 *  Created by hyunseok.oh@samsung.com on 2018-08-17.
 * ---------------------------------------------------- */

function _range(from, to) {
    var res = [];
    for (var i = from; i < to; ++i) {
        res.push(i);
    }
    return res;
}

function range(a, b) {
    if (arguments.length > 1) return _range(a, b);
    return _range(0, a);
}

function zip(a, b) {
    return range(parseInt(Math.max(a.length, b.length))).map(function (i) {
        return [a[i], b[i]];
    });
}

function isUndefined(a) {
    return typeof a === 'undefined';
}

function negate(a) {
    return function () {
        return !a.apply(undefined, arguments);
    };
}

function compact(a) {
    return a.filter(negate(isUndefined));
}

function first(a) {
    return a[0];
}

function isNull(a) {
    return !a && (typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object';
}

function isEmpty(variable) {
    return variable === null || variable === '' || isUndefined(variable);
}

/***/ }),
/* 53 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isFunction;
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isFunction(x) {
    return typeof x === 'function';
}
//# sourceMappingURL=isFunction.js.map


/***/ }),
/* 54 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AsyncAction; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Action__ = __webpack_require__(434);
/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */


var AsyncAction = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](AsyncAction, _super);
    function AsyncAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        _this.pending = false;
        return _this;
    }
    AsyncAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (this.closed) {
            return this;
        }
        this.state = state;
        var id = this.id;
        var scheduler = this.scheduler;
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, delay);
        }
        this.pending = true;
        this.delay = delay;
        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);
        return this;
    };
    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        return setInterval(scheduler.flush.bind(scheduler, this), delay);
    };
    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay !== null && this.delay === delay && this.pending === false) {
            return id;
        }
        clearInterval(id);
        return undefined;
    };
    AsyncAction.prototype.execute = function (state, delay) {
        if (this.closed) {
            return new Error('executing a cancelled action');
        }
        this.pending = false;
        var error = this._execute(state, delay);
        if (error) {
            return error;
        }
        else if (this.pending === false && this.id != null) {
            this.id = this.recycleAsyncId(this.scheduler, this.id, null);
        }
    };
    AsyncAction.prototype._execute = function (state, delay) {
        var errored = false;
        var errorValue = undefined;
        try {
            this.work(state);
        }
        catch (e) {
            errored = true;
            errorValue = !!e && e || new Error(e);
        }
        if (errored) {
            this.unsubscribe();
            return errorValue;
        }
    };
    AsyncAction.prototype._unsubscribe = function () {
        var id = this.id;
        var scheduler = this.scheduler;
        var actions = scheduler.actions;
        var index = actions.indexOf(this);
        this.work = null;
        this.state = null;
        this.pending = false;
        this.scheduler = null;
        if (index !== -1) {
            actions.splice(index, 1);
        }
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, null);
        }
        this.delay = null;
    };
    return AsyncAction;
}(__WEBPACK_IMPORTED_MODULE_1__Action__["a" /* Action */]));

//# sourceMappingURL=AsyncAction.js.map


/***/ }),
/* 55 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AsyncScheduler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Scheduler__ = __webpack_require__(252);
/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */


var AsyncScheduler = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](AsyncScheduler, _super);
    function AsyncScheduler(SchedulerAction, now) {
        if (now === void 0) {
            now = __WEBPACK_IMPORTED_MODULE_1__Scheduler__["a" /* Scheduler */].now;
        }
        var _this = _super.call(this, SchedulerAction, function () {
            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {
                return AsyncScheduler.delegate.now();
            }
            else {
                return now();
            }
        }) || this;
        _this.actions = [];
        _this.active = false;
        _this.scheduled = undefined;
        return _this;
    }
    AsyncScheduler.prototype.schedule = function (work, delay, state) {
        if (delay === void 0) {
            delay = 0;
        }
        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {
            return AsyncScheduler.delegate.schedule(work, delay, state);
        }
        else {
            return _super.prototype.schedule.call(this, work, delay, state);
        }
    };
    AsyncScheduler.prototype.flush = function (action) {
        var actions = this.actions;
        if (this.active) {
            actions.push(action);
            return;
        }
        var error;
        this.active = true;
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (action = actions.shift());
        this.active = false;
        if (error) {
            while (action = actions.shift()) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsyncScheduler;
}(__WEBPACK_IMPORTED_MODULE_1__Scheduler__["a" /* Scheduler */]));

//# sourceMappingURL=AsyncScheduler.js.map


/***/ }),
/* 56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = fromArray;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_subscribeToArray__ = __webpack_require__(254);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scheduled_scheduleArray__ = __webpack_require__(109);
/** PURE_IMPORTS_START _Observable,_util_subscribeToArray,_scheduled_scheduleArray PURE_IMPORTS_END */



function fromArray(input, scheduler) {
    if (!scheduler) {
        return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](Object(__WEBPACK_IMPORTED_MODULE_1__util_subscribeToArray__["a" /* subscribeToArray */])(input));
    }
    else {
        return Object(__WEBPACK_IMPORTED_MODULE_2__scheduled_scheduleArray__["a" /* scheduleArray */])(input, scheduler);
    }
}
//# sourceMappingURL=fromArray.js.map


/***/ }),
/* 57 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ArgumentOutOfRangeError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var ArgumentOutOfRangeErrorImpl = /*@__PURE__*/ (function () {
    function ArgumentOutOfRangeErrorImpl() {
        Error.call(this);
        this.message = 'argument out of range';
        this.name = 'ArgumentOutOfRangeError';
        return this;
    }
    ArgumentOutOfRangeErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return ArgumentOutOfRangeErrorImpl;
})();
var ArgumentOutOfRangeError = ArgumentOutOfRangeErrorImpl;
//# sourceMappingURL=ArgumentOutOfRangeError.js.map


/***/ }),
/* 58 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EmptyError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var EmptyErrorImpl = /*@__PURE__*/ (function () {
    function EmptyErrorImpl() {
        Error.call(this);
        this.message = 'no elements in sequence';
        this.name = 'EmptyError';
        return this;
    }
    EmptyErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return EmptyErrorImpl;
})();
var EmptyError = EmptyErrorImpl;
//# sourceMappingURL=EmptyError.js.map


/***/ }),
/* 59 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export getSymbolIterator */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return iterator; });
/* unused harmony export $$iterator */
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function getSymbolIterator() {
    if (typeof Symbol !== 'function' || !Symbol.iterator) {
        return '@@iterator';
    }
    return Symbol.iterator;
}
var iterator = /*@__PURE__*/ getSymbolIterator();
var $$iterator = iterator;
//# sourceMappingURL=iterator.js.map


/***/ }),
/* 60 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = defaultIfEmpty;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function defaultIfEmpty(defaultValue) {
    if (defaultValue === void 0) {
        defaultValue = null;
    }
    return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };
}
var DefaultIfEmptyOperator = /*@__PURE__*/ (function () {
    function DefaultIfEmptyOperator(defaultValue) {
        this.defaultValue = defaultValue;
    }
    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));
    };
    return DefaultIfEmptyOperator;
}());
var DefaultIfEmptySubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](DefaultIfEmptySubscriber, _super);
    function DefaultIfEmptySubscriber(destination, defaultValue) {
        var _this = _super.call(this, destination) || this;
        _this.defaultValue = defaultValue;
        _this.isEmpty = true;
        return _this;
    }
    DefaultIfEmptySubscriber.prototype._next = function (value) {
        this.isEmpty = false;
        this.destination.next(value);
    };
    DefaultIfEmptySubscriber.prototype._complete = function () {
        if (this.isEmpty) {
            this.destination.next(this.defaultValue);
        }
        this.destination.complete();
    };
    return DefaultIfEmptySubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=defaultIfEmpty.js.map


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _axisTitle = __webpack_require__(351);

Object.keys(_axisTitle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _axisTitle[key];
    }
  });
});

var _legend = __webpack_require__(352);

Object.keys(_legend).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _legend[key];
    }
  });
});

var _pagination = __webpack_require__(140);

Object.keys(_pagination).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _pagination[key];
    }
  });
});

var _title = __webpack_require__(139);

Object.keys(_title).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _title[key];
    }
  });
});

var _toolbar = __webpack_require__(353);

Object.keys(_toolbar).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _toolbar[key];
    }
  });
});

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _echartsLineOptionBuilder = __webpack_require__(90);

var _echartsLineOptionBuilder2 = _interopRequireDefault(_echartsLineOptionBuilder);

var _echartsLineByrowindexOptionBuilder = __webpack_require__(355);

var _echartsLineByrowindexOptionBuilder2 = _interopRequireDefault(_echartsLineByrowindexOptionBuilder);

var _echartsLineComplexOptionBuilder = __webpack_require__(356);

var _echartsLineComplexOptionBuilder2 = _interopRequireDefault(_echartsLineComplexOptionBuilder);

var _echartsLineCalculatedOptionBuilder = __webpack_require__(215);

var _echartsLineCalculatedOptionBuilder2 = _interopRequireDefault(_echartsLineCalculatedOptionBuilder);

var _echartsLineBycolumnnamesOptionBuilder = __webpack_require__(357);

var _echartsLineBycolumnnamesOptionBuilder2 = _interopRequireDefault(_echartsLineBycolumnnamesOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsLine(parentId, options) {
    _echartsWrapper2.default.call(this, parentId, options);
} /**
   * Source: echarts.wrapper.js
   * Created by daewon.park on 2017-03-23.
   */

EChartsLine.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsLine.prototype.constructor = EChartsLine;

EChartsLine.prototype.render = function () {
    this.seriesHelper = this.getSeriesHelper();
    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._setEChartOption(opt);
};

EChartsLine.prototype.getLegendData = function () {
    var legendData = [];

    if (this._getEChartOption().legend && this._getEChartOption().legend[0]) {
        var legendSelection = this._getEChartOption().legend[0].selected;
        var colorByColumns = this.seriesHelper.getColorByColumns();
        if (colorByColumns.length > 0 || this.seriesHelper.hasLegendData()) {
            var opt = this.seriesHelper.eOptions;

            var colorByNames = this.seriesHelper.getDistinctColorByList();
            for (var i in colorByNames) {
                var item = {
                    name: colorByNames[i],
                    symbol: opt.series[0].symbol || 'circle',
                    symbolSize: opt.series[i].symbolSize || 10,
                    color: opt.color[i % opt.color.length]
                };
                if (typeof legendSelection[item.name] === 'undefined') {
                    item.selected = true;
                } else {
                    item.selected = legendSelection[item.name];
                }
                legendData.push(item);
            }
        }
    }

    return legendData;
};

EChartsLine.prototype.getSeriesHelper = function () {
    var xAxisType = _optionUtils2.default.getXAxisType(this.options);
    if (this.isComplex) {
        return new _echartsLineComplexOptionBuilder2.default();
    } else if (this.options.source.localData[0].dataType == 'chartdata') {
        return new _echartsLineCalculatedOptionBuilder2.default();
    } else if (xAxisType === 'byColumnNames') {
        return new _echartsLineBycolumnnamesOptionBuilder2.default();
    } else if (xAxisType === 'byRowIndex') {
        return new _echartsLineByrowindexOptionBuilder2.default();
    } else {
        return new _echartsLineOptionBuilder2.default();
    }
};

// Alias['line'] = EChartsLine;

exports.default = EChartsLine;

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _validationError = __webpack_require__(36);

var _validationError2 = _interopRequireDefault(_validationError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: chart-option-builder.js
 * Created by daewon.park on 2017-03-22.
 */
var chartPlotOptionKey = {
    'area-stacked': 'area',
    'area-stacked-100': 'area',
    'bar-stacked': 'bar',
    'bar-stacked-100': 'bar',
    'biplot': 'component',
    'column-stacked': 'column',
    'column-stacked-100': 'column',
    'heatmap-matrix': 'heatmap',
    'histogram': 'column',
    'pairwise-scatter': 'scatter'
};
// import * as ChartRegistry from '../types/bchart-register'


function ChartOptionBuilder() {}

ChartOptionBuilder.prototype._buildOptions = function (options) {
    this.bOptions = options;
};

ChartOptionBuilder.prototype.getColumnIndexes = function (columns, allColumns) {
    return _optionUtils2.default.getColumnIndexes(columns, allColumns);
};

ChartOptionBuilder.prototype.getCellText = function (row, columnIndexes, preFix) {
    var values = [];
    if (preFix) {
        values.push(preFix);
    }
    for (var i in columnIndexes) {
        var idx = columnIndexes[i];
        if (row[idx] || row[idx] === 0) {
            if ($.isArray(row[idx])) {
                values.push(row[idx]);
            } else {
                values.push('' + row[idx]);
            }
        } else {
            values.push('(empty)');
        }
    }
    return values;
};

ChartOptionBuilder.prototype.getCellValues = function (row, columnIndexes) {
    var values = [];
    for (var i in columnIndexes) {
        var idx = columnIndexes[i];
        values.push(row[idx]);
    }
    return values;
};

ChartOptionBuilder.prototype.getSeriesName = function (row, columnIndexes) {
    return this.getCellText(row, columnIndexes).join(' ');
};

ChartOptionBuilder.prototype.getSeriesItem = function (series, name) {
    var seriesItem = series[name];
    if (!seriesItem) {
        seriesItem = this._newSeriesItem();
        seriesItem.name = name;
    }
    return seriesItem;
};

ChartOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = {
        type: this.bOptions.chart.type,
        animationDuration: this.bOptions.chart.animationDuration,
        large: true,
        largeThreshold: 5000,
        data: []
    };

    return seriesItem;
};

ChartOptionBuilder.prototype.filterNullColumn = function (columns) {
    return columns.filter(function (col) {
        return col && col.name;
    });
};

ChartOptionBuilder.prototype.setSeriesKeyColumns = function (columns, dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    columns = this.filterNullColumn(columns);
    this._seriesKsyColumsList = this._seriesKsyColumsList || [];
    this._seriesKsyColumsList[dataIndex] = this._seriesKsyColumsList[dataIndex] || [];
    this._seriesKsyColumsList[dataIndex] = this._seriesKsyColumsList[dataIndex].concat(columns);
};

ChartOptionBuilder.prototype.getSeriesKeyColumns = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    if (this._seriesKsyColumsList && this._seriesKsyColumsList[dataIndex]) {
        return this._seriesKsyColumsList[dataIndex];
    } else {
        return this.bOptions.colorBy.length > 0 ? this.filterNullColumn(this.bOptions.colorBy[dataIndex].selected) : [];
    }
};

ChartOptionBuilder.prototype.getTooltipKeyColumns = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    return this.bOptions.colorBy.length > 0 ? this.filterNullColumn(this.bOptions.colorBy[dataIndex].selected) : [];
};

ChartOptionBuilder.prototype.setSeriesDataColumns = function (seriesDataColumns, dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    seriesDataColumns = this.filterNullColumn(seriesDataColumns);
    this.seriesDataColumns = this.seriesDataColumns || [];
    this.seriesDataColumns[dataIndex] = this.seriesDataColumns[dataIndex] || [];
    this.seriesDataColumns[dataIndex] = this.seriesDataColumns[dataIndex].concat(seriesDataColumns);
};

ChartOptionBuilder.prototype.getSeriesDataColumns = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    this.seriesDataColumns = this.seriesDataColumns || [];
    this.seriesDataColumns[dataIndex] = this.seriesDataColumns[dataIndex] || [];
    return this.seriesDataColumns[dataIndex];
};

ChartOptionBuilder.prototype.setTooltipDataColumns = function (tooltipDataColumns, dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    tooltipDataColumns = this.filterNullColumn(tooltipDataColumns);
    this.tooltipDataColumns = this.tooltipDataColumns || [];
    this.tooltipDataColumns[dataIndex] = this.tooltipDataColumns[dataIndex] || [];
    this.tooltipDataColumns[dataIndex] = this.tooltipDataColumns[dataIndex].concat(tooltipDataColumns);
};

ChartOptionBuilder.prototype.getTooltipDataColumns = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    this.tooltipDataColumns = this.tooltipDataColumns || [];
    this.tooltipDataColumns[dataIndex] = this.tooltipDataColumns[dataIndex] || [];
    return this.tooltipDataColumns[dataIndex];
};

ChartOptionBuilder.prototype.getLocalData = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    return this.bOptions.source.localData[dataIndex];
};

ChartOptionBuilder.prototype.getAllColumns = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    if (this.bOptions.source.localData[dataIndex]) {
        return this.bOptions.source.localData[dataIndex].columns;
    } else {
        return [];
    }
};

ChartOptionBuilder.prototype.getColorByColumns = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    return this.bOptions.colorBy && this.bOptions.colorBy.length > 0 ? this.filterNullColumn(this.bOptions.colorBy[dataIndex].selected) : [];
};

ChartOptionBuilder.prototype.getSeriesKeyColumnIndexes = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    var localData = this.getLocalData(dataIndex);
    var keyColumns = this.getSeriesKeyColumns(dataIndex);
    return this.getColumnIndexes(keyColumns, localData.columns);
};

ChartOptionBuilder.prototype.getTooltipKeyColumnIndexes = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    var localData = this.getLocalData(dataIndex);
    var keyColumns = this.getTooltipKeyColumns(dataIndex);
    return this.getColumnIndexes(keyColumns, localData.columns);
};

ChartOptionBuilder.prototype.getSeriesDataColumnIndexes = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    var localData = this.getLocalData(dataIndex);
    var dataColumns = this.getSeriesDataColumns(dataIndex);
    return this.getColumnIndexes(dataColumns, localData.columns);
};

ChartOptionBuilder.prototype.getTooltipDataColumnIndexes = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    var localData = this.getLocalData(dataIndex);
    var keyColumns = this.getTooltipDataColumns(dataIndex);
    return this.getColumnIndexes(keyColumns, localData.columns);
};

ChartOptionBuilder.prototype.getColorByColumnIndexes = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    var localData = this.getLocalData(dataIndex);
    var keyColumns = this.getColorByColumns(dataIndex);
    return this.getColumnIndexes(keyColumns, localData.columns);
};

ChartOptionBuilder.prototype.getColumnType = function (column) {
    var localData = this.getLocalData();
    for (var i in localData.columns) {
        if (localData.columns[i].name == column.name) {
            return localData.columns[i].type;
        }
    }
};

ChartOptionBuilder.prototype.getPlotOptions = function () {
    var chartType = this.bOptions.chart.type;
    if (this.bOptions.plotOptions) {
        //FIXME: parent chart type사용하지말고 차트별로 쪼개야함.
        var parentChartType = chartPlotOptionKey[chartType] || chartType;
        return this.bOptions.plotOptions[parentChartType] || {};
    } else {
        return {};
    }
};

ChartOptionBuilder.prototype._throwValidation = function (message) {
    throw new _validationError2.default(message);
};

exports.default = ChartOptionBuilder;

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PointByColumnNamesDataExtractor() {
    _echartsPointExtractor2.default.call(this);
    this._points = [];
}

PointByColumnNamesDataExtractor.prototype = Object.create(_echartsPointExtractor2.default.prototype);
PointByColumnNamesDataExtractor.prototype.constructor = PointByColumnNamesDataExtractor;

PointByColumnNamesDataExtractor.prototype.push = function (row, rowIndex) {
    var columnIndices = this._columnIndices[0].filter(function (columnIdx) {
        return columnIdx != -1;
    });

    for (var i = 0; i < columnIndices.length; i++) {
        var pointData = {
            value: [],
            categoryIndex: i,
            dataIndexes: [parseInt(rowIndex)] // point 에 해당하는 원본 데이터 인덱스
        };

        pointData.value = [i, row[columnIndices[i]]];
        this._points.push(pointData);
    }
};

// PointByColumnNamesDataExtractor.prototype.extract = function () {
//     return this._points;
// };
//
// PointExtractor.prototype.extract = function (extractOperator) {
//     if (typeof extractOperator === 'function') {
//         return extractOperator(this._keyPointMap);
//     } else {
//         var answer = [];
//         var pointObject;
//         for (var i in this._keyPointMap) {
//             pointObject = this._keyPointMap[i];
//             answer = answer.concat(this._extract(pointObject));
//         }
//         return answer;
//     }
// };

PointByColumnNamesDataExtractor.prototype.extract = function () {
    if (this._extractOperator) {
        return this._extractOperator(this._points);
    } else {
        return this._points;
    }
};

exports.default = PointByColumnNamesDataExtractor;

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _chartUtils = __webpack_require__(24);

var _chartUtils2 = _interopRequireDefault(_chartUtils);

var _echartsColumnOptionBuilder = __webpack_require__(229);

var _echartsColumnOptionBuilder2 = _interopRequireDefault(_echartsColumnOptionBuilder);

var _echartsColumnCalculatedOptionBuilder = __webpack_require__(379);

var _echartsColumnCalculatedOptionBuilder2 = _interopRequireDefault(_echartsColumnCalculatedOptionBuilder);

var _echartsColumnComplexOptionBuilder = __webpack_require__(230);

var _echartsColumnComplexOptionBuilder2 = _interopRequireDefault(_echartsColumnComplexOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsColumn(parentId, options) {
    _echartsWrapper2.default.call(this, parentId, options);
} /**
   * Source: echarts-column.js
   * Created by daewon.park on 2017-03-29.
   */


EChartsColumn.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsColumn.prototype.constructor = EChartsColumn;

EChartsColumn.prototype.render = function () {

    this.seriesHelper = this.getSeriesHelper();
    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._doDataValidation(opt);
    this._setEChartOption(opt);
    this._backupItemStyles();
};

EChartsColumn.prototype._doDataValidation = function (opt) {
    _chartUtils2.default.limitMaxSeriesSize(opt.series);
};

EChartsColumn.prototype._createSelectedRange = function (eventData) {
    var _this = this;
    var keyColumns = _this.seriesHelper.getSeriesKeyColumns();
    var dataColumns = _this.seriesHelper.getSeriesDataColumns();
    var selectedRangeList = [];
    var series = this.seriesHelper.series;
    for (var b in eventData.batch) {
        var batch = eventData.batch[b];
        for (var s in batch.selected) {
            if (batch.selected[s].dataIndex.length === 0) continue;
            var seriesIndex = batch.selected[s].seriesIndex;
            var template = {};
            for (var k in keyColumns) {
                var seriesKey = keyColumns[k].name;
                var seriesValue = series[seriesIndex].keys[k];
                template[seriesKey] = seriesValue;
            }
            for (var d in batch.selected[s].dataIndex) {
                var idx = batch.selected[s].dataIndex[d];
                var col = dataColumns[0].name;
                var val = series[seriesIndex].data[idx].value[0];
                if (_this.seriesHelper.getColumnType(dataColumns[0]) === 'number') {
                    val = Number(val);
                }
                var item = {};
                item[col] = val;
                $.extend(true, item, template);
                selectedRangeList.push(item);
            }
        }
    }
    return selectedRangeList;
};

EChartsColumn.prototype.getLegendData = function () {
    var legendData = _echartsWrapper2.default.prototype.getLegendData.call(this);
    for (var i in legendData) {
        legendData[i].symbol = 'square';
    }
    return legendData;
};

EChartsColumn.prototype.getSeriesHelper = function () {
    if (this.isComplex) {
        return new _echartsColumnComplexOptionBuilder2.default();
    } else if (this.options.source.localData[0].dataType == 'chartdata') {
        return new _echartsColumnCalculatedOptionBuilder2.default();
    } else {
        return new _echartsColumnOptionBuilder2.default();
    }
};

//complex용..  repository 만들어야할듯
// Alias['column'] = EChartsColumn;

exports.default = EChartsColumn;

/***/ }),
/* 66 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return config; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var _enable_super_gross_mode_that_will_cause_bad_things = false;
var config = {
    Promise: undefined,
    set useDeprecatedSynchronousErrorHandling(value) {
        if (value) {
            var error = /*@__PURE__*/ new Error();
            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n' + error.stack);
        }
        else if (_enable_super_gross_mode_that_will_cause_bad_things) {
            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');
        }
        _enable_super_gross_mode_that_will_cause_bad_things = value;
    },
    get useDeprecatedSynchronousErrorHandling() {
        return _enable_super_gross_mode_that_will_cause_bad_things;
    },
};
//# sourceMappingURL=config.js.map


/***/ }),
/* 67 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ObjectUnsubscribedError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var ObjectUnsubscribedErrorImpl = /*@__PURE__*/ (function () {
    function ObjectUnsubscribedErrorImpl() {
        Error.call(this);
        this.message = 'object unsubscribed';
        this.name = 'ObjectUnsubscribedError';
        return this;
    }
    ObjectUnsubscribedErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return ObjectUnsubscribedErrorImpl;
})();
var ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;
//# sourceMappingURL=ObjectUnsubscribedError.js.map


/***/ }),
/* 68 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return NotificationKind; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Notification; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_empty__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__observable_of__ = __webpack_require__(69);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__observable_throwError__ = __webpack_require__(110);
/** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */



var NotificationKind;
/*@__PURE__*/ (function (NotificationKind) {
    NotificationKind["NEXT"] = "N";
    NotificationKind["ERROR"] = "E";
    NotificationKind["COMPLETE"] = "C";
})(NotificationKind || (NotificationKind = {}));
var Notification = /*@__PURE__*/ (function () {
    function Notification(kind, value, error) {
        this.kind = kind;
        this.value = value;
        this.error = error;
        this.hasValue = kind === 'N';
    }
    Notification.prototype.observe = function (observer) {
        switch (this.kind) {
            case 'N':
                return observer.next && observer.next(this.value);
            case 'E':
                return observer.error && observer.error(this.error);
            case 'C':
                return observer.complete && observer.complete();
        }
    };
    Notification.prototype.do = function (next, error, complete) {
        var kind = this.kind;
        switch (kind) {
            case 'N':
                return next && next(this.value);
            case 'E':
                return error && error(this.error);
            case 'C':
                return complete && complete();
        }
    };
    Notification.prototype.accept = function (nextOrObserver, error, complete) {
        if (nextOrObserver && typeof nextOrObserver.next === 'function') {
            return this.observe(nextOrObserver);
        }
        else {
            return this.do(nextOrObserver, error, complete);
        }
    };
    Notification.prototype.toObservable = function () {
        var kind = this.kind;
        switch (kind) {
            case 'N':
                return Object(__WEBPACK_IMPORTED_MODULE_1__observable_of__["a" /* of */])(this.value);
            case 'E':
                return Object(__WEBPACK_IMPORTED_MODULE_2__observable_throwError__["a" /* throwError */])(this.error);
            case 'C':
                return Object(__WEBPACK_IMPORTED_MODULE_0__observable_empty__["b" /* empty */])();
        }
        throw new Error('unexpected notification kind value');
    };
    Notification.createNext = function (value) {
        if (typeof value !== 'undefined') {
            return new Notification('N', value);
        }
        return Notification.undefinedValueNotification;
    };
    Notification.createError = function (err) {
        return new Notification('E', undefined, err);
    };
    Notification.createComplete = function () {
        return Notification.completeNotification;
    };
    Notification.completeNotification = new Notification('C');
    Notification.undefinedValueNotification = new Notification('N', undefined);
    return Notification;
}());

//# sourceMappingURL=Notification.js.map


/***/ }),
/* 69 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = of;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_isScheduler__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__fromArray__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scheduled_scheduleArray__ = __webpack_require__(109);
/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_scheduled_scheduleArray PURE_IMPORTS_END */



function of() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var scheduler = args[args.length - 1];
    if (Object(__WEBPACK_IMPORTED_MODULE_0__util_isScheduler__["a" /* isScheduler */])(scheduler)) {
        args.pop();
        return Object(__WEBPACK_IMPORTED_MODULE_2__scheduled_scheduleArray__["a" /* scheduleArray */])(args, scheduler);
    }
    else {
        return Object(__WEBPACK_IMPORTED_MODULE_1__fromArray__["a" /* fromArray */])(args);
    }
}
//# sourceMappingURL=of.js.map


/***/ }),
/* 70 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AsyncSubject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subject__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subscription__ = __webpack_require__(23);
/** PURE_IMPORTS_START tslib,_Subject,_Subscription PURE_IMPORTS_END */



var AsyncSubject = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](AsyncSubject, _super);
    function AsyncSubject() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.value = null;
        _this.hasNext = false;
        _this.hasCompleted = false;
        return _this;
    }
    AsyncSubject.prototype._subscribe = function (subscriber) {
        if (this.hasError) {
            subscriber.error(this.thrownError);
            return __WEBPACK_IMPORTED_MODULE_2__Subscription__["a" /* Subscription */].EMPTY;
        }
        else if (this.hasCompleted && this.hasNext) {
            subscriber.next(this.value);
            subscriber.complete();
            return __WEBPACK_IMPORTED_MODULE_2__Subscription__["a" /* Subscription */].EMPTY;
        }
        return _super.prototype._subscribe.call(this, subscriber);
    };
    AsyncSubject.prototype.next = function (value) {
        if (!this.hasCompleted) {
            this.value = value;
            this.hasNext = true;
        }
    };
    AsyncSubject.prototype.error = function (error) {
        if (!this.hasCompleted) {
            _super.prototype.error.call(this, error);
        }
    };
    AsyncSubject.prototype.complete = function () {
        this.hasCompleted = true;
        if (this.hasNext) {
            _super.prototype.next.call(this, this.value);
        }
        _super.prototype.complete.call(this);
    };
    return AsyncSubject;
}(__WEBPACK_IMPORTED_MODULE_1__Subject__["a" /* Subject */]));

//# sourceMappingURL=AsyncSubject.js.map


/***/ }),
/* 71 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = concat;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__of__ = __webpack_require__(69);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__operators_concatAll__ = __webpack_require__(259);
/** PURE_IMPORTS_START _of,_operators_concatAll PURE_IMPORTS_END */


function concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return Object(__WEBPACK_IMPORTED_MODULE_1__operators_concatAll__["a" /* concatAll */])()(__WEBPACK_IMPORTED_MODULE_0__of__["a" /* of */].apply(void 0, observables));
}
//# sourceMappingURL=concat.js.map


/***/ }),
/* 72 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["b"] = mergeMap;
/* unused harmony export MergeMapOperator */
/* unused harmony export MergeMapSubscriber */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return flatMap; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_subscribeToResult__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__InnerSubscriber__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__map__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__observable_from__ = __webpack_require__(39);
/** PURE_IMPORTS_START tslib,_util_subscribeToResult,_OuterSubscriber,_InnerSubscriber,_map,_observable_from PURE_IMPORTS_END */






function mergeMap(project, resultSelector, concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    if (typeof resultSelector === 'function') {
        return function (source) { return source.pipe(mergeMap(function (a, i) { return Object(__WEBPACK_IMPORTED_MODULE_5__observable_from__["a" /* from */])(project(a, i)).pipe(Object(__WEBPACK_IMPORTED_MODULE_4__map__["a" /* map */])(function (b, ii) { return resultSelector(a, b, i, ii); })); }, concurrent)); };
    }
    else if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
    }
    return function (source) { return source.lift(new MergeMapOperator(project, concurrent)); };
}
var MergeMapOperator = /*@__PURE__*/ (function () {
    function MergeMapOperator(project, concurrent) {
        if (concurrent === void 0) {
            concurrent = Number.POSITIVE_INFINITY;
        }
        this.project = project;
        this.concurrent = concurrent;
    }
    MergeMapOperator.prototype.call = function (observer, source) {
        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));
    };
    return MergeMapOperator;
}());

var MergeMapSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](MergeMapSubscriber, _super);
    function MergeMapSubscriber(destination, project, concurrent) {
        if (concurrent === void 0) {
            concurrent = Number.POSITIVE_INFINITY;
        }
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.concurrent = concurrent;
        _this.hasCompleted = false;
        _this.buffer = [];
        _this.active = 0;
        _this.index = 0;
        return _this;
    }
    MergeMapSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            this._tryNext(value);
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeMapSubscriber.prototype._tryNext = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.active++;
        this._innerSub(result, value, index);
    };
    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {
        var innerSubscriber = new __WEBPACK_IMPORTED_MODULE_3__InnerSubscriber__["a" /* InnerSubscriber */](this, value, index);
        var destination = this.destination;
        destination.add(innerSubscriber);
        var innerSubscription = Object(__WEBPACK_IMPORTED_MODULE_1__util_subscribeToResult__["a" /* subscribeToResult */])(this, ish, undefined, undefined, innerSubscriber);
        if (innerSubscription !== innerSubscriber) {
            destination.add(innerSubscription);
        }
    };
    MergeMapSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            this.destination.complete();
        }
        this.unsubscribe();
    };
    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            this.destination.complete();
        }
    };
    return MergeMapSubscriber;
}(__WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__["a" /* OuterSubscriber */]));

var flatMap = mergeMap;
//# sourceMappingURL=mergeMap.js.map


/***/ }),
/* 73 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isNumeric;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isArray__ = __webpack_require__(28);
/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */

function isNumeric(val) {
    return !Object(__WEBPACK_IMPORTED_MODULE_0__isArray__["a" /* isArray */])(val) && (val - parseFloat(val) + 1) >= 0;
}
//# sourceMappingURL=isNumeric.js.map


/***/ }),
/* 74 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = throwIfEmpty;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_EmptyError__ = __webpack_require__(58);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_util_EmptyError,_Subscriber PURE_IMPORTS_END */



function throwIfEmpty(errorFactory) {
    if (errorFactory === void 0) {
        errorFactory = defaultErrorFactory;
    }
    return function (source) {
        return source.lift(new ThrowIfEmptyOperator(errorFactory));
    };
}
var ThrowIfEmptyOperator = /*@__PURE__*/ (function () {
    function ThrowIfEmptyOperator(errorFactory) {
        this.errorFactory = errorFactory;
    }
    ThrowIfEmptyOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ThrowIfEmptySubscriber(subscriber, this.errorFactory));
    };
    return ThrowIfEmptyOperator;
}());
var ThrowIfEmptySubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ThrowIfEmptySubscriber, _super);
    function ThrowIfEmptySubscriber(destination, errorFactory) {
        var _this = _super.call(this, destination) || this;
        _this.errorFactory = errorFactory;
        _this.hasValue = false;
        return _this;
    }
    ThrowIfEmptySubscriber.prototype._next = function (value) {
        this.hasValue = true;
        this.destination.next(value);
    };
    ThrowIfEmptySubscriber.prototype._complete = function () {
        if (!this.hasValue) {
            var err = void 0;
            try {
                err = this.errorFactory();
            }
            catch (e) {
                err = e;
            }
            this.destination.error(err);
        }
        else {
            return this.destination.complete();
        }
    };
    return ThrowIfEmptySubscriber;
}(__WEBPACK_IMPORTED_MODULE_2__Subscriber__["a" /* Subscriber */]));
function defaultErrorFactory() {
    return new __WEBPACK_IMPORTED_MODULE_1__util_EmptyError__["a" /* EmptyError */]();
}
//# sourceMappingURL=throwIfEmpty.js.map


/***/ }),
/* 75 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = reduce;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scan__ = __webpack_require__(120);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__takeLast__ = __webpack_require__(119);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__defaultIfEmpty__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_pipe__ = __webpack_require__(106);
/** PURE_IMPORTS_START _scan,_takeLast,_defaultIfEmpty,_util_pipe PURE_IMPORTS_END */




function reduce(accumulator, seed) {
    if (arguments.length >= 2) {
        return function reduceOperatorFunctionWithSeed(source) {
            return Object(__WEBPACK_IMPORTED_MODULE_3__util_pipe__["a" /* pipe */])(Object(__WEBPACK_IMPORTED_MODULE_0__scan__["a" /* scan */])(accumulator, seed), Object(__WEBPACK_IMPORTED_MODULE_1__takeLast__["a" /* takeLast */])(1), Object(__WEBPACK_IMPORTED_MODULE_2__defaultIfEmpty__["a" /* defaultIfEmpty */])(seed))(source);
        };
    }
    return function reduceOperatorFunction(source) {
        return Object(__WEBPACK_IMPORTED_MODULE_3__util_pipe__["a" /* pipe */])(Object(__WEBPACK_IMPORTED_MODULE_0__scan__["a" /* scan */])(function (acc, value, index) { return accumulator(acc, value, index + 1); }), Object(__WEBPACK_IMPORTED_MODULE_1__takeLast__["a" /* takeLast */])(1))(source);
    };
}
//# sourceMappingURL=reduce.js.map


/***/ }),
/* 76 */,
/* 77 */,
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function MarkerDecorator(builder, options) {
    _decorator2.default.call(this, builder, options);
}

MarkerDecorator.prototype = Object.create(_decorator2.default.prototype);
MarkerDecorator.prototype.constructor = MarkerDecorator;

MarkerDecorator.prototype.decorate = function () {
    for (var s in this.eOptions.series) {
        var seriesItem = this.eOptions.series[s];
        if (seriesItem.virtualSeries) continue;
        var plotOptions = this.plotOptions;
        var dicmalLength = 0;

        if (plotOptions && typeof plotOptions.marker !== 'undefined') {
            for (var attrName in plotOptions.marker) {
                if (typeof this.options != 'undefined' && typeof this.options.isKey != 'undefined' && this.options.isKey[s] == true && attrName == 'symbolSize') continue;
                //$.extend(true, seriesItem[attrName], plotOptions.marker[attrName]);
                if (_typeof(seriesItem[attrName]) === 'object') {
                    $.extend(true, seriesItem[attrName], plotOptions.marker[attrName]);
                } else {
                    seriesItem[attrName] = plotOptions.marker[attrName];
                }
            }
            for (var attrName in plotOptions.marker) {
                if (attrName === 'leng') {
                    dicmalLength = plotOptions.marker.leng[0].selected;
                } else if (attrName === 'numberFormat') {
                    seriesItem.label.normal.formatter = this._chartFormatter(plotOptions.marker.numberFormat.use, dicmalLength);
                }
            }
        }
    }
};

MarkerDecorator.prototype._chartFormatter = function (formatter, length) {
    var numberFmtRgx = /{(0*[\,\.]0*[a-zA-Z]?)}|{(0*\,0*\.0*[a-zA-Z]?)}/g;

    if (!formatter) {
        return function (params) {
            if (isNaN(params.value[1])) return params.value[1];else return parseFloat(params.value[1]).toFixed(length);
        };
    } else {
        return function (params) {
            if (!isNaN(params.value[1]) && numberFmtRgx.test(formatter)) {
                var resultFmt = numberFmtRgx.exec(formatter) || numberFmtRgx.exec(formatter);
                return formatter.replace(numberFmtRgx, params.value[1] != null ? numeral(params.value[1]).format(resultFmt[1] || resultFmt[2]) : '');
            } else {
                if (formatter.indexOf('{value}') > -1) {
                    return formatter.replace('{value}', params.value[1] != null ? params.value[1] : '');
                } else {
                    return params.value[1];
                }
            }
        };
    }
};

exports.default = MarkerDecorator;

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipItemCalculatedDecorator(builder) {
    _tooltipDecorator2.default.call(this, builder);
}

TooltipItemCalculatedDecorator.prototype = Object.create(_tooltipDecorator2.default.prototype);
TooltipItemCalculatedDecorator.prototype.constructor = TooltipItemCalculatedDecorator;

TooltipItemCalculatedDecorator.prototype._getItemKeyTooltip = function (params, keyColumns) {
    var keyItems = [];
    var extractor = this.builder._internalOptions().series[params.seriesIndex].extractor;
    var keyColumnNames = keyColumns.map(function (item) {
        return item.name;
    });
    if (extractor.keys.join(',').split(" ").length > 1) {
        keyItems.push(keyColumnNames.join(',') + ' : ' + extractor.keys.join(',').split(" ")[1]);
    } else {
        keyItems.push(keyColumnNames.join(',') + ' : ' + extractor.keys.join(','));
    }
    return keyItems;
};

TooltipItemCalculatedDecorator.prototype._getItemYTooltip = function (params, dataColumns, isMultiYAxis) {
    if (isMultiYAxis) {
        return params.seriesName.split(" ")[0] + ' : ' + params.value[1];
    } else {
        return _optionUtils2.default.getColumnLabel(dataColumns[1]) + ' : ' + params.value[1];
    }
};

exports.default = TooltipItemCalculatedDecorator;

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipTriggerAxisDecorator(builder) {
    _decorator2.default.call(this, builder);
}

TooltipTriggerAxisDecorator.prototype = Object.create(_decorator2.default.prototype);
TooltipTriggerAxisDecorator.prototype.constructor = TooltipTriggerAxisDecorator;

TooltipTriggerAxisDecorator.prototype.decorate = function () {
    if (this.plotOptions.hasOwnProperty('tooltip')) {
        if (!this.plotOptions.tooltip.hasOwnProperty('trigger')) {
            this.eOptions.tooltip.trigger = 'axis';
        }
    } else {
        this.eOptions.tooltip.trigger = 'axis';
    }
};

exports.default = TooltipTriggerAxisDecorator;

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipPieDecorator(builder) {
    _decorator2.default.call(this, builder);
}

TooltipPieDecorator.prototype = Object.create(_decorator2.default.prototype);
TooltipPieDecorator.prototype.constructor = TooltipPieDecorator;

TooltipPieDecorator.prototype.decorate = function () {
    var _this = this;
    var builder = this.builder;
    var dataColumns = builder.getTooltipDataColumns();
    var colorByColumns = builder.getColorByColumns();
    var sizeByColumns = dataColumns.slice(colorByColumns.length);

    this.eOptions.tooltip.formatter = function (params, ticket, callback) {
        var toolItems = [];

        toolItems.push(params.data.name);
        toolItems = toolItems.concat(_this._getItemKeyTooltip(params, colorByColumns));
        if (params.data.minusValue) {
            params.value = params.value * -1;
        }

        if (sizeByColumns.length > 0 && sizeByColumns[0]) {
            toolItems.push(_optionUtils2.default.getColumnLabel(sizeByColumns[0]) + ' : ' + params.value);
        } else {
            toolItems.push('Count : ' + params.value);
        }
        toolItems.push('Percent : '.concat(params.percent, '%'));

        return function () {
            var result = [];
            for (var t in toolItems) {
                if (result.indexOf(toolItems[t]) === -1) {
                    result.push(toolItems[t]);
                }
            }
            return result;
        }().join('<br>');
    };
};

TooltipPieDecorator.prototype._getItemKeyTooltip = function (params, keyColumns) {
    var keyItems = [];
    for (var i in keyColumns) {
        keyItems.push(_optionUtils2.default.getColumnLabel(keyColumns[i]) + ' : ' + params.data.keys[i]);
    }
    return keyItems;
};

exports.default = TooltipPieDecorator;

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipYAxisDecorator(builder) {
    _tooltipDecorator2.default.call(this, builder);
}

TooltipYAxisDecorator.prototype = Object.create(_tooltipDecorator2.default.prototype);
TooltipYAxisDecorator.prototype.constructor = TooltipYAxisDecorator;

TooltipYAxisDecorator.prototype._getAxisNameTooltip = function (param, dataColumns) {
    var builder = this.builder;
    var name = param.value[1];

    if (builder._internalOptions().yAxis[0].type === 'value' || builder._internalOptions().yAxis[0].type === 'time') {
        if (typeof param.value === 'undefined') return;
        if (builder._internalOptions().yAxis[0].type === 'time') name = _optionUtils2.default.dateFormatString(name, 'yyyy-mm-dd HH:MM:ss');
        return _optionUtils2.default.getColumnLabel(dataColumns[1]) + ' : ' + name;
    } else {
        return _optionUtils2.default.getColumnLabel(dataColumns[1]) + ' : ' + name;
    }
};

TooltipYAxisDecorator.prototype._getAxisValueTooltip = function (param, dataColumns) {
    return _optionUtils2.default.getColumnLabel(dataColumns[0]) + ' : ' + param.value[0];
};

exports.default = TooltipYAxisDecorator;

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); /* -----------------------------------------------------
axis-range-decorator.js
reated by hyunseok.oh@samsung.com on 2018-08-17.


var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

var _utils = __webpack_require__(52);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function AxisRangeDecorator(builder, options) {
    _decorator2.default.call(this, builder, options);
}

AxisRangeDecorator.prototype = Object.create(_decorator2.default.prototype);
AxisRangeDecorator.prototype.constructor = AxisRangeDecorator;

AxisRangeDecorator.prototype.decorate = function () {
    var _this = this;

    var mergeRange = function mergeRange(a, b) {
        var defaultTo = function defaultTo(x, y) {
            return (0, _utils.isUndefined)(x) ? y : x;
        };
        return {
            min: defaultTo(b.min, a.min),
            max: defaultTo(b.max, a.max)
        };
    };

    var mergeAxis = function mergeAxis(a, b, hasRange) {
        return (0, _utils.zip)(a, b).map(function (_ref) {
            var _ref2 = _slicedToArray(_ref, 2),
                x = _ref2[0],
                y = _ref2[1];

            var opt = Object.assign({}, x, hasRange ? mergeRange(x, y) : y);
            if ((0, _utils.isUndefined)(opt.min)) {
                delete opt.min;
            }
            if ((0, _utils.isUndefined)(opt.max)) {
                delete opt.max;
            }
            return opt;
        });
    };

    var half = function half(x) {
        return parseInt(x / 2, 10);
    };

    var upperBound = function upperBound(a, d, cmp) {
        if ((0, _utils.isNull)(d) || (0, _utils.isUndefined)(d)) return undefined;
        var res = undefined;
        var l = 0;
        var r = a.length - 1;
        while (l <= r) {
            var m = half(l + r);
            if (cmp(a[m], d) <= 0) {
                l = m + 1;
                res = m;
            } else {
                r = m - 1;
            }
        }

        return res;
    };

    var lowerBound = function lowerBound(a, d, cmp) {
        if ((0, _utils.isNull)(d) || (0, _utils.isUndefined)(d)) return undefined;
        var res = undefined;
        var l = 0;
        var r = a.length - 1;
        while (l <= r) {
            var m = half(l + r);
            if (cmp(a[m], d) >= 0) {
                r = m - 1;
                res = m;
            } else {
                l = m + 1;
            }
        }
        return res;
    };

    var toNumber = function toNumber(x) {
        return x ? Number(x) : x;
    };

    var convertByAxisType = function convertByAxisType(ea, ba) {
        var each = function each(e, b) {
            if (e.type !== 'category') {
                if (e.type === 'value') return { min: toNumber(b.min), max: toNumber(b.max) };
                return { min: b.min, max: b.max };
            }
            var sortRule = _this._getSortRule(e.selected);
            return {
                min: lowerBound(e.data, b.min, sortRule),
                max: upperBound(e.data, b.max, sortRule)
            };
        };
        return (0, _utils.zip)(ea, ba).map(function (_ref3) {
            var _ref4 = _slicedToArray(_ref3, 2),
                e = _ref4[0],
                b = _ref4[1];

            return each(e, b);
        });
    };

    var hasRange = {
        xAxis: ['line', 'scatter', 'bubble', 'bar', 'bar-stacked'].indexOf(this.bOptions.chart.type) >= 0,
        yAxis: ['line', 'scatter', 'bubble', 'column', 'column-stacked', 'area', 'area-stacked'].indexOf(this.bOptions.chart.type) >= 0
    };
    var clearRange = function clearRange(_) {
        return { min: undefined, max: undefined };
    };

    ['xAxis', 'yAxis'].forEach(function (axis) {
        if (_this.eOptions[axis]) {
            _this.eOptions[axis] = mergeAxis(_this.eOptions[axis], hasRange[axis] ? convertByAxisType(_this.eOptions[axis], _this.bOptions[axis]) : (0, _utils.range)(_this.bOptions[axis].length).map(clearRange), hasRange[axis]);
        }
    });
};

AxisRangeDecorator.prototype._getSortRule = function (target) {
    var builder = this.builder;
    var axisType = builder._getColumnDataType(builder.filterNullColumn(target));
    var axisSortRule = builder._axisSortRule;
    var rule = axisSortRule && axisSortRule.rule;
    var sortRule = function sortRule(a, b) {
        var comp, first, second;
        if (rule === 'desc') {
            first = b;
            second = a;
        } else {
            first = a;
            second = b;
        }
        if (axisType === 'category') comp = _optionUtils2.default.stringSortRule(first, second);else if (axisType === 'time') comp = _optionUtils2.default.timeSortRule(first, second);else comp = _optionUtils2.default.numericSortRule(first * 1, second * 1);

        return comp;
    };
    return sortRule;
};

exports.default = AxisRangeDecorator;

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipWordCloudDecorator(builder) {
    _tooltipDecorator2.default.call(this, builder);
}

TooltipWordCloudDecorator.prototype = Object.create(_tooltipDecorator2.default.prototype);
TooltipWordCloudDecorator.prototype.constructor = TooltipWordCloudDecorator;

TooltipWordCloudDecorator.prototype.decorate = function () {
    var _this = this;
    var builder = this.builder;
    var dataColumns = builder.getTooltipDataColumns();
    var colorByColumns = builder.getColorByColumns();
    var sizeByColumns = dataColumns.slice(colorByColumns.length);

    var dataSum = 0;
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
        for (var _iterator = builder.series[0].data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var data = _step.value;

            dataSum += data.value;
        }
    } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
    } finally {
        try {
            if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
            }
        } finally {
            if (_didIteratorError) {
                throw _iteratorError;
            }
        }
    }

    this.eOptions.tooltip.formatter = function (params, ticket, callback) {
        var toolItems = [];

        toolItems = toolItems.concat(_this._getItemKeyTooltip(params, colorByColumns));
        if (params.data.minusValue) {
            params.value = params.value * -1;
        }

        if (sizeByColumns.length > 0 && sizeByColumns[0]) {
            toolItems.push(_optionUtils2.default.getColumnLabel(sizeByColumns[0]) + ' : ' + params.value);
        } else {
            toolItems.push('Count : ' + params.value);
        }

        var percent = (params.value / dataSum + 0).toFixed(4) * 100;
        toolItems.push('Percent : '.concat(percent, '%'));

        return function () {
            var result = [];
            for (var t in toolItems) {
                if (result.indexOf(toolItems[t]) === -1) {
                    result.push(toolItems[t]);
                }
            }
            return result;
        }().join('<br>');
    };
};

TooltipWordCloudDecorator.prototype._getItemKeyTooltip = function (params, keyColumns) {
    var keyItems = [];
    for (var i in keyColumns) {
        keyItems.push(_optionUtils2.default.getColumnLabel(keyColumns[i]) + ' : ' + params.data.keys[i]);
    }
    return keyItems;
};

exports.default = TooltipWordCloudDecorator;

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeOptionBuilder = __webpack_require__(19);

var _echartsAxisTypeOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeOptionBuilder);

var _echartsPointByrowindexExtractor = __webpack_require__(91);

var _echartsPointByrowindexExtractor2 = _interopRequireDefault(_echartsPointByrowindexExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsScatterByRowIndexOptionBuilder() {
    _echartsAxisTypeOptionBuilder2.default.call(this);
}

EChartsScatterByRowIndexOptionBuilder.prototype = Object.create(_echartsAxisTypeOptionBuilder2.default.prototype);
EChartsScatterByRowIndexOptionBuilder.prototype.constructor = EChartsScatterByRowIndexOptionBuilder;

EChartsScatterByRowIndexOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['markPoint', 'markLine'];
    this._registerDecorator('axisTypeByRowIndex');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('tooltipByRowIndex');
    this._registerDecorator('marker');
    this._registerDecorator('plotOptions');
    this._registerDecorator('brush');
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this._registerDecorator('trendline');
};

EChartsScatterByRowIndexOptionBuilder.prototype._buildSeries = function () {
    var series = {};
    var localData = this.getLocalData();
    var keyIndexes = this.getSeriesKeyColumnIndexes();
    var yAxisSelected = this.filterNullColumn(this.bOptions.yAxis[0].selected);

    var i, row, seriesName, seriesItem, yAxisIndex, seriesNameList;

    for (i in localData.data) {
        row = localData.data[i];

        for (yAxisIndex = 0; yAxisIndex < yAxisSelected.length; yAxisIndex++) {

            seriesNameList = [];
            seriesNameList.push(yAxisSelected[yAxisIndex].name);
            seriesNameList.push(this.getSeriesName(row, keyIndexes));
            seriesName = seriesNameList.join(' ');

            seriesItem = this._getSeriesItem(series, seriesName);
            series[seriesName] = seriesItem;

            if (!seriesItem.extractor) {
                seriesItem.extractor = this._newSeriesExtractor(yAxisIndex);
                seriesItem.extractor.keys = this.getCellText(yAxisSelected[yAxisIndex].name, row, keyIndexes);
                seriesItem.keys = seriesItem.extractor.keys;
            }
            seriesItem.extractor.push(row, i);
        }
    }

    this._setSeries(series);
    this._buildSeriesData();
    this.eOptions.series = this.series;
};

EChartsScatterByRowIndexOptionBuilder.prototype.getCellText = function (row, columnIndexes, colName) {
    var values = [];
    if (colName) {
        values.push(colName);
    }
    for (var i in columnIndexes) {
        var idx = columnIndexes[i];
        if (row[idx] || row[idx] === 0) {
            if ($.isArray(row[idx])) {
                values.push(row[idx]);
            } else {
                values.push('' + row[idx]);
            }
        } else {
            values.push('(empty)');
        }
    }
    return values;
};

EChartsScatterByRowIndexOptionBuilder.prototype._newSeriesExtractor = function (yAxisIndex) {
    var localData = this.getLocalData();
    var yIndexes = this.getColumnIndexes(this.bOptions.yAxis[0].selected, localData.columns);

    var extractor = new _echartsPointByrowindexExtractor2.default();

    extractor.setTarget({
        index: [yIndexes[yAxisIndex]],
        type: 'value',
        isKey: false
    });

    return extractor;
};

EChartsScatterByRowIndexOptionBuilder.prototype.hasLegendData = function () {
    return true;
};

exports.default = EChartsScatterByRowIndexOptionBuilder;

/***/ }),
/* 86 */
/***/ (function(module, exports) {

/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 228);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var require;//! moment.js
//! version : 2.27.0
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

;(function (global, factory) {
     true ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, (function () { 'use strict';

    var hookCallback;

    function hooks() {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback(callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return (
            input instanceof Array ||
            Object.prototype.toString.call(input) === '[object Array]'
        );
    }

    function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return (
            input != null &&
            Object.prototype.toString.call(input) === '[object Object]'
        );
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
            return Object.getOwnPropertyNames(obj).length === 0;
        } else {
            var k;
            for (k in obj) {
                if (hasOwnProp(obj, k)) {
                    return false;
                }
            }
            return true;
        }
    }

    function isUndefined(input) {
        return input === void 0;
    }

    function isNumber(input) {
        return (
            typeof input === 'number' ||
            Object.prototype.toString.call(input) === '[object Number]'
        );
    }

    function isDate(input) {
        return (
            input instanceof Date ||
            Object.prototype.toString.call(input) === '[object Date]'
        );
    }

    function map(arr, fn) {
        var res = [],
            i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function createUTC(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty: false,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: false,
            invalidEra: null,
            invalidMonth: null,
            invalidFormat: false,
            userInvalidated: false,
            iso: false,
            parsedDateParts: [],
            era: null,
            meridiem: null,
            rfc2822: false,
            weekdayMismatch: false,
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function (fun) {
            var t = Object(this),
                len = t.length >>> 0,
                i;

            for (i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m),
                parsedParts = some.call(flags.parsedDateParts, function (i) {
                    return i != null;
                }),
                isNowValid =
                    !isNaN(m._d.getTime()) &&
                    flags.overflow < 0 &&
                    !flags.empty &&
                    !flags.invalidEra &&
                    !flags.invalidMonth &&
                    !flags.invalidWeekday &&
                    !flags.weekdayMismatch &&
                    !flags.nullInput &&
                    !flags.invalidFormat &&
                    !flags.userInvalidated &&
                    (!flags.meridiem || (flags.meridiem && parsedParts));

            if (m._strict) {
                isNowValid =
                    isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            } else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function createInvalid(flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        } else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    var momentProperties = (hooks.momentProperties = []),
        updateInProgress = false;

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN);
        }
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment(obj) {
        return (
            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)
        );
    }

    function warn(msg) {
        if (
            hooks.suppressDeprecationWarnings === false &&
            typeof console !== 'undefined' &&
            console.warn
        ) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [],
                    arg,
                    i,
                    key;
                for (i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (key in arguments[0]) {
                            if (hasOwnProp(arguments[0], key)) {
                                arg += key + ': ' + arguments[0][key] + ', ';
                            }
                        }
                        arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(
                    msg +
                        '\nArguments: ' +
                        Array.prototype.slice.call(args).join('') +
                        '\n' +
                        new Error().stack
                );
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return (
            (typeof Function !== 'undefined' && input instanceof Function) ||
            Object.prototype.toString.call(input) === '[object Function]'
        );
    }

    function set(config) {
        var prop, i;
        for (i in config) {
            if (hasOwnProp(config, i)) {
                prop = config[i];
                if (isFunction(prop)) {
                    this[i] = prop;
                } else {
                    this['_' + i] = prop;
                }
            }
        }
        this._config = config;
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
        // TODO: Remove "ordinalParse" fallback in next major release.
        this._dayOfMonthOrdinalParseLenient = new RegExp(
            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                '|' +
                /\d{1,2}/.source
        );
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig),
            prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (
                hasOwnProp(parentConfig, prop) &&
                !hasOwnProp(childConfig, prop) &&
                isObject(parentConfig[prop])
            ) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function (obj) {
            var i,
                res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay: '[Today at] LT',
        nextDay: '[Tomorrow at] LT',
        nextWeek: 'dddd [at] LT',
        lastDay: '[Yesterday at] LT',
        lastWeek: '[Last] dddd [at] LT',
        sameElse: 'L',
    };

    function calendar(key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (
            (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +
            absNumber
        );
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
        localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
        formatFunctions = {},
        formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken(token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(
                    func.apply(this, arguments),
                    token
                );
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens),
            i,
            length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '',
                i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i])
                    ? array[i].call(mom, format)
                    : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] =
            formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(
                localFormattingTokens,
                replaceLongDateFormatTokens
            );
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var defaultLongDateFormat = {
        LTS: 'h:mm:ss A',
        LT: 'h:mm A',
        L: 'MM/DD/YYYY',
        LL: 'MMMM D, YYYY',
        LLL: 'MMMM D, YYYY h:mm A',
        LLLL: 'dddd, MMMM D, YYYY h:mm A',
    };

    function longDateFormat(key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper
            .match(formattingTokens)
            .map(function (tok) {
                if (
                    tok === 'MMMM' ||
                    tok === 'MM' ||
                    tok === 'DD' ||
                    tok === 'dddd'
                ) {
                    return tok.slice(1);
                }
                return tok;
            })
            .join('');

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate() {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d',
        defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal(number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future: 'in %s',
        past: '%s ago',
        s: 'a few seconds',
        ss: '%d seconds',
        m: 'a minute',
        mm: '%d minutes',
        h: 'an hour',
        hh: '%d hours',
        d: 'a day',
        dd: '%d days',
        w: 'a week',
        ww: '%d weeks',
        M: 'a month',
        MM: '%d months',
        y: 'a year',
        yy: '%d years',
    };

    function relativeTime(number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return isFunction(output)
            ? output(number, withoutSuffix, string, isFuture)
            : output.replace(/%d/i, number);
    }

    function pastFuture(diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias(unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string'
            ? aliases[units] || aliases[units.toLowerCase()]
            : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [],
            u;
        for (u in unitsObj) {
            if (hasOwnProp(unitsObj, u)) {
                units.push({ unit: u, priority: priorities[u] });
            }
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    function absFloor(number) {
        if (number < 0) {
            // -0 -> 0
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    function makeGetSet(unit, keepTime) {
        return function (value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get(this, unit);
            }
        };
    }

    function get(mom, unit) {
        return mom.isValid()
            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()
            : NaN;
    }

    function set$1(mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (
                unit === 'FullYear' &&
                isLeapYear(mom.year()) &&
                mom.month() === 1 &&
                mom.date() === 29
            ) {
                value = toInt(value);
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](
                    value,
                    mom.month(),
                    daysInMonth(value, mom.month())
                );
            } else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    }

    // MOMENTS

    function stringGet(units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }

    function stringSet(units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units),
                i;
            for (i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    var match1 = /\d/, //       0 - 9
        match2 = /\d\d/, //      00 - 99
        match3 = /\d{3}/, //     000 - 999
        match4 = /\d{4}/, //    0000 - 9999
        match6 = /[+-]?\d{6}/, // -999999 - 999999
        match1to2 = /\d\d?/, //       0 - 99
        match3to4 = /\d\d\d\d?/, //     999 - 9999
        match5to6 = /\d\d\d\d\d\d?/, //   99999 - 999999
        match1to3 = /\d{1,3}/, //       0 - 999
        match1to4 = /\d{1,4}/, //       0 - 9999
        match1to6 = /[+-]?\d{1,6}/, // -999999 - 999999
        matchUnsigned = /\d+/, //       0 - inf
        matchSigned = /[+-]?\d+/, //    -inf - inf
        matchOffset = /Z|[+-]\d\d:?\d\d/gi, // +00:00 -00:00 +0000 -0000 or Z
        matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z
        matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, // 123456789 123456789.123
        // any word (or two) characters or numbers including two/three word month in arabic.
        // includes scottish gaelic two word and hyphenated months
        matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
        regexes;

    regexes = {};

    function addRegexToken(token, regex, strictRegex) {
        regexes[token] = isFunction(regex)
            ? regex
            : function (isStrict, localeData) {
                  return isStrict && strictRegex ? strictRegex : regex;
              };
    }

    function getParseRegexForToken(token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return regexEscape(
            s
                .replace('\\', '')
                .replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (
                    matched,
                    p1,
                    p2,
                    p3,
                    p4
                ) {
                    return p1 || p2 || p3 || p4;
                })
        );
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken(token, callback) {
        var i,
            func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (isNumber(callback)) {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken(token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0,
        MONTH = 1,
        DATE = 2,
        HOUR = 3,
        MINUTE = 4,
        SECOND = 5,
        MILLISECOND = 6,
        WEEK = 7,
        WEEKDAY = 8;

    function mod(n, x) {
        return ((n % x) + x) % x;
    }

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function (o) {
            // I know
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1
            ? isLeapYear(year)
                ? 29
                : 28
            : 31 - ((modMonth % 7) % 2);
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PRIORITY

    addUnitPriority('month', 8);

    // PARSING

    addRegexToken('M', match1to2);
    addRegexToken('MM', match1to2, match2);
    addRegexToken('MMM', function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
            '_'
        ),
        MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
        defaultMonthsShortRegex = matchWord,
        defaultMonthsRegex = matchWord;

    function localeMonths(m, format) {
        if (!m) {
            return isArray(this._months)
                ? this._months
                : this._months['standalone'];
        }
        return isArray(this._months)
            ? this._months[m.month()]
            : this._months[
                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)
                      ? 'format'
                      : 'standalone'
              ][m.month()];
    }

    function localeMonthsShort(m, format) {
        if (!m) {
            return isArray(this._monthsShort)
                ? this._monthsShort
                : this._monthsShort['standalone'];
        }
        return isArray(this._monthsShort)
            ? this._monthsShort[m.month()]
            : this._monthsShort[
                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'
              ][m.month()];
    }

    function handleStrictParse(monthName, format, strict) {
        var i,
            ii,
            mom,
            llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            // this is not used
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse(monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp(
                    '^' + this.months(mom, '').replace('.', '') + '$',
                    'i'
                );
                this._shortMonthsParse[i] = new RegExp(
                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',
                    'i'
                );
            }
            if (!strict && !this._monthsParse[i]) {
                regex =
                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (
                strict &&
                format === 'MMMM' &&
                this._longMonthsParse[i].test(monthName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'MMM' &&
                this._shortMonthsParse[i].test(monthName)
            ) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth(mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            // No op
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (!isNumber(value)) {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth(value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this;
        } else {
            return get(this, 'Month');
        }
    }

    function getDaysInMonth() {
        return daysInMonth(this.year(), this.month());
    }

    function monthsShortRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict
                ? this._monthsShortStrictRegex
                : this._monthsShortRegex;
        }
    }

    function monthsRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict
                ? this._monthsStrictRegex
                : this._monthsRegex;
        }
    }

    function computeMonthsParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom;
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }
        // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp(
            '^(' + longPieces.join('|') + ')',
            'i'
        );
        this._monthsShortStrictRegex = new RegExp(
            '^(' + shortPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? zeroFill(y, 4) : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY', 4], 0, 'year');
    addFormatToken(0, ['YYYYY', 5], 0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PRIORITIES

    addUnitPriority('year', 1);

    // PARSING

    addRegexToken('Y', matchSigned);
    addRegexToken('YY', match1to2, match2);
    addRegexToken('YYYY', match1to4, match4);
    addRegexToken('YYYYY', match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] =
            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    // HOOKS

    hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear() {
        return isLeapYear(this.year());
    }

    function createDate(y, m, d, h, M, s, ms) {
        // can't just apply() to create a date:
        // https://stackoverflow.com/q/181348
        var date;
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            date = new Date(y + 400, m, d, h, M, s, ms);
            if (isFinite(date.getFullYear())) {
                date.setFullYear(y);
            }
        } else {
            date = new Date(y, m, d, h, M, s, ms);
        }

        return date;
    }

    function createUTCDate(y) {
        var date, args;
        // the Date.UTC function remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            args = Array.prototype.slice.call(arguments);
            // preserve leap years using a full 400 year cycle, then reset
            args[0] = y + 400;
            date = new Date(Date.UTC.apply(null, args));
            if (isFinite(date.getUTCFullYear())) {
                date.setUTCFullYear(y);
            }
        } else {
            date = new Date(Date.UTC.apply(null, arguments));
        }

        return date;
    }

    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear,
            resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear,
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek,
            resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear,
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    // FORMATTING

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PRIORITIES

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    // PARSING

    addRegexToken('w', match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W', match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (
        input,
        week,
        config,
        token
    ) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // LOCALES

    function localeWeek(mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow: 0, // Sunday is the first day of the week.
        doy: 6, // The week that contains Jan 6th is the first week of the year.
    };

    function localeFirstDayOfWeek() {
        return this._week.dow;
    }

    function localeFirstDayOfYear() {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek(input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek(input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    // FORMATTING

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PRIORITY
    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    // PARSING

    addRegexToken('d', match1to2);
    addRegexToken('e', match1to2);
    addRegexToken('E', match1to2);
    addRegexToken('dd', function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd', function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd', function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    // LOCALES
    function shiftWeekdays(ws, n) {
        return ws.slice(n, 7).concat(ws.slice(0, n));
    }

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        defaultWeekdaysRegex = matchWord,
        defaultWeekdaysShortRegex = matchWord,
        defaultWeekdaysMinRegex = matchWord;

    function localeWeekdays(m, format) {
        var weekdays = isArray(this._weekdays)
            ? this._weekdays
            : this._weekdays[
                  m && m !== true && this._weekdays.isFormat.test(format)
                      ? 'format'
                      : 'standalone'
              ];
        return m === true
            ? shiftWeekdays(weekdays, this._week.dow)
            : m
            ? weekdays[m.day()]
            : weekdays;
    }

    function localeWeekdaysShort(m) {
        return m === true
            ? shiftWeekdays(this._weekdaysShort, this._week.dow)
            : m
            ? this._weekdaysShort[m.day()]
            : this._weekdaysShort;
    }

    function localeWeekdaysMin(m) {
        return m === true
            ? shiftWeekdays(this._weekdaysMin, this._week.dow)
            : m
            ? this._weekdaysMin[m.day()]
            : this._weekdaysMin;
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i,
            ii,
            mom,
            llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse(weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already

            mom = createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdays(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
                this._shortWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
                this._minWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
            }
            if (!this._weekdaysParse[i]) {
                regex =
                    '^' +
                    this.weekdays(mom, '') +
                    '|^' +
                    this.weekdaysShort(mom, '') +
                    '|^' +
                    this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (
                strict &&
                format === 'dddd' &&
                this._fullWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'ddd' &&
                this._shortWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'dd' &&
                this._minWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    function weekdaysRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict
                ? this._weekdaysStrictRegex
                : this._weekdaysRegex;
        }
    }

    function weekdaysShortRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict
                ? this._weekdaysShortStrictRegex
                : this._weekdaysShortRegex;
        }
    }

    function weekdaysMinRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict
                ? this._weekdaysMinStrictRegex
                : this._weekdaysMinRegex;
        }
    }

    function computeWeekdaysParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [],
            shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom,
            minp,
            shortp,
            longp;
        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, 1]).day(i);
            minp = regexEscape(this.weekdaysMin(mom, ''));
            shortp = regexEscape(this.weekdaysShort(mom, ''));
            longp = regexEscape(this.weekdays(mom, ''));
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }
        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp(
            '^(' + longPieces.join('|') + ')',
            'i'
        );
        this._weekdaysShortStrictRegex = new RegExp(
            '^(' + shortPieces.join('|') + ')',
            'i'
        );
        this._weekdaysMinStrictRegex = new RegExp(
            '^(' + minPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return (
            '' +
            hFormat.apply(this) +
            zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2)
        );
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return (
            '' +
            this.hours() +
            zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2)
        );
    });

    function meridiem(token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(
                this.hours(),
                this.minutes(),
                lowercase
            );
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PRIORITY
    addUnitPriority('hour', 13);

    // PARSING

    function matchMeridiem(isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a', matchMeridiem);
    addRegexToken('A', matchMeridiem);
    addRegexToken('H', match1to2);
    addRegexToken('h', match1to2);
    addRegexToken('k', match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);
    addRegexToken('kk', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4,
            pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4,
            pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    // LOCALES

    function localeIsPM(input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return (input + '').toLowerCase().charAt(0) === 'p';
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i,
        // Setting the hour should keep the time, because the user explicitly
        // specified which hour they want. So trying to maintain the same hour (in
        // a new timezone) makes sense. Adding/subtracting hours does not follow
        // this rule.
        getSetHour = makeGetSet('Hours', true);

    function localeMeridiem(hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse,
    };

    // internal storage for locale config files
    var locales = {},
        localeFamilies = {},
        globalLocale;

    function commonPrefix(arr1, arr2) {
        var i,
            minl = Math.min(arr1.length, arr2.length);
        for (i = 0; i < minl; i += 1) {
            if (arr1[i] !== arr2[i]) {
                return i;
            }
        }
        return minl;
    }

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0,
            j,
            next,
            locale,
            split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (
                    next &&
                    next.length >= j &&
                    commonPrefix(split, next) >= j - 1
                ) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return globalLocale;
    }

    function loadLocale(name) {
        var oldLocale = null,
            aliasedRequire;
        // TODO: Find a better way to register and load all the locales in Node
        if (
            locales[name] === undefined &&
            typeof module !== 'undefined' &&
            module &&
            module.exports
        ) {
            try {
                oldLocale = globalLocale._abbr;
                aliasedRequire = require;
                __webpack_require__(253)("./" + name);
                getSetGlobalLocale(oldLocale);
            } catch (e) {
                // mark as not found to avoid repeating expensive file require call causing high CPU
                // when trying to find en-US, en_US, en-us for every format call
                locales[name] = null; // null means not found
            }
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function getSetGlobalLocale(key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key);
            } else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            } else {
                if (typeof console !== 'undefined' && console.warn) {
                    //warn user if arguments are passed but the locale could not be set
                    console.warn(
                        'Locale ' + key + ' not found. Did you forget to load it?'
                    );
                }
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale(name, config) {
        if (config !== null) {
            var locale,
                parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple(
                    'defineLocaleOverride',
                    'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'
                );
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                        parentConfig = locale._config;
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = [];
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config,
                        });
                        return null;
                    }
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                });
            }

            // backwards compat for now: also set the locale
            // make sure we set the locale AFTER all child locales have been
            // created, so we won't end up with the child locale set.
            getSetGlobalLocale(name);

            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale,
                tmpLocale,
                parentConfig = baseConfig;

            if (locales[name] != null && locales[name].parentLocale != null) {
                // Update existing child locale in-place to avoid memory-leaks
                locales[name].set(mergeConfigs(locales[name]._config, config));
            } else {
                // MERGE
                tmpLocale = loadLocale(name);
                if (tmpLocale != null) {
                    parentConfig = tmpLocale._config;
                }
                config = mergeConfigs(parentConfig, config);
                if (tmpLocale == null) {
                    // updateLocale is called for creating a new locale
                    // Set abbr so it will have a name (getters return
                    // undefined otherwise).
                    config.abbr = name;
                }
                locale = new Locale(config);
                locale.parentLocale = locales[name];
                locales[name] = locale;
            }

            // backwards compat for now: also set the locale
            getSetGlobalLocale(name);
        } else {
            // pass null for config to unupdate, useful for tests
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                    if (name === getSetGlobalLocale()) {
                        getSetGlobalLocale(name);
                    }
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    // returns locale data
    function getLocale(key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function listLocales() {
        return keys(locales);
    }

    function checkOverflow(m) {
        var overflow,
            a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH] < 0 || a[MONTH] > 11
                    ? MONTH
                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])
                    ? DATE
                    : a[HOUR] < 0 ||
                      a[HOUR] > 24 ||
                      (a[HOUR] === 24 &&
                          (a[MINUTE] !== 0 ||
                              a[SECOND] !== 0 ||
                              a[MILLISECOND] !== 0))
                    ? HOUR
                    : a[MINUTE] < 0 || a[MINUTE] > 59
                    ? MINUTE
                    : a[SECOND] < 0 || a[SECOND] > 59
                    ? SECOND
                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999
                    ? MILLISECOND
                    : -1;

            if (
                getParsingFlags(m)._overflowDayOfYear &&
                (overflow < YEAR || overflow > DATE)
            ) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        tzRegex = /Z|[+-]\d\d(?::?\d\d)?/,
        isoDates = [
            ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
            ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
            ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
            ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
            ['YYYY-DDD', /\d{4}-\d{3}/],
            ['YYYY-MM', /\d{4}-\d\d/, false],
            ['YYYYYYMMDD', /[+-]\d{10}/],
            ['YYYYMMDD', /\d{8}/],
            ['GGGG[W]WWE', /\d{4}W\d{3}/],
            ['GGGG[W]WW', /\d{4}W\d{2}/, false],
            ['YYYYDDD', /\d{7}/],
            ['YYYYMM', /\d{6}/, false],
            ['YYYY', /\d{4}/, false],
        ],
        // iso time formats and regexes
        isoTimes = [
            ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
            ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
            ['HH:mm:ss', /\d\d:\d\d:\d\d/],
            ['HH:mm', /\d\d:\d\d/],
            ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
            ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
            ['HHmmss', /\d\d\d\d\d\d/],
            ['HHmm', /\d\d\d\d/],
            ['HH', /\d\d/],
        ],
        aspNetJsonRegex = /^\/?Date\((-?\d+)/i,
        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
        rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
        obsOffsets = {
            UT: 0,
            GMT: 0,
            EDT: -4 * 60,
            EST: -5 * 60,
            CDT: -5 * 60,
            CST: -6 * 60,
            MDT: -6 * 60,
            MST: -7 * 60,
            PDT: -7 * 60,
            PST: -8 * 60,
        };

    // date from iso format
    function configFromISO(config) {
        var i,
            l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime,
            dateFormat,
            timeFormat,
            tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        // match[2] should be 'T' or space
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    function extractFromRFC2822Strings(
        yearStr,
        monthStr,
        dayStr,
        hourStr,
        minuteStr,
        secondStr
    ) {
        var result = [
            untruncateYear(yearStr),
            defaultLocaleMonthsShort.indexOf(monthStr),
            parseInt(dayStr, 10),
            parseInt(hourStr, 10),
            parseInt(minuteStr, 10),
        ];

        if (secondStr) {
            result.push(parseInt(secondStr, 10));
        }

        return result;
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2000 + year;
        } else if (year <= 999) {
            return 1900 + year;
        }
        return year;
    }

    function preprocessRFC2822(s) {
        // Remove comments and folding whitespace and replace multiple-spaces with a single space
        return s
            .replace(/\([^)]*\)|[\n\t]/g, ' ')
            .replace(/(\s\s+)/g, ' ')
            .replace(/^\s\s*/, '')
            .replace(/\s\s*$/, '');
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(
                    parsedInput[0],
                    parsedInput[1],
                    parsedInput[2]
                ).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
            }
        }
        return true;
    }

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset];
        } else if (militaryOffset) {
            // the only allowed military tz is Z
            return 0;
        } else {
            var hm = parseInt(numOffset, 10),
                m = hm % 100,
                h = (hm - m) / 100;
            return h * 60 + m;
        }
    }

    // date and time from ref 2822 format
    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i)),
            parsedArray;
        if (match) {
            parsedArray = extractFromRFC2822Strings(
                match[4],
                match[3],
                match[2],
                match[5],
                match[6],
                match[7]
            );
            if (!checkWeekday(match[1], parsedArray, config)) {
                return;
            }

            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);

            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

            getParsingFlags(config).rfc2822 = true;
        } else {
            config._isValid = false;
        }
    }

    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);
        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        if (config._strict) {
            config._isValid = false;
        } else {
            // Final attempt, use Input Fallback
            hooks.createFromInputFallback(config);
        }
    }

    hooks.createFromInputFallback = deprecate(
        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
            'discouraged and will be removed in an upcoming major release. Please refer to ' +
            'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [
                nowValue.getUTCFullYear(),
                nowValue.getUTCMonth(),
                nowValue.getUTCDate(),
            ];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray(config) {
        var i,
            date,
            input = [],
            currentDate,
            expectedWeekday,
            yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (
                config._dayOfYear > daysInYear(yearToUse) ||
                config._dayOfYear === 0
            ) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] =
                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (
            config._a[HOUR] === 24 &&
            config._a[MINUTE] === 0 &&
            config._a[SECOND] === 0 &&
            config._a[MILLISECOND] === 0
        ) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(
            null,
            input
        );
        expectedWeekday = config._useUTC
            ? config._d.getUTCDay()
            : config._d.getDay();

        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }

        // check for mismatching day of week
        if (
            config._w &&
            typeof config._w.d !== 'undefined' &&
            config._w.d !== expectedWeekday
        ) {
            getParsingFlags(config).weekdayMismatch = true;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(
                w.GG,
                config._a[YEAR],
                weekOfYear(createLocal(), 1, 4).year
            );
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            curWeek = weekOfYear(createLocal(), dow, doy);

            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

            // Default to current week.
            week = defaults(w.w, curWeek.week);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from beginning of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                // default to beginning of week
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    // constant that refers to the ISO standard
    hooks.ISO_8601 = function () {};

    // constant that refers to the RFC 2822 form
    hooks.RFC_2822 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i,
            parsedInput,
            tokens,
            token,
            skipped,
            stringLength = string.length,
            totalParsedInputLength = 0,
            era;

        tokens =
            expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) ||
                [])[0];
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(
                    string.indexOf(parsedInput) + parsedInput.length
                );
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                } else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            } else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver =
            stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (
            config._a[HOUR] <= 12 &&
            getParsingFlags(config).bigHour === true &&
            config._a[HOUR] > 0
        ) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(
            config._locale,
            config._a[HOUR],
            config._meridiem
        );

        // handle era
        era = getParsingFlags(config).era;
        if (era !== null) {
            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
        }

        configFromArray(config);
        checkOverflow(config);
    }

    function meridiemFixWrap(locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    // date from string and array of format strings
    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,
            scoreToBeat,
            i,
            currentScore,
            validFormatFound,
            bestFormatIsValid = false;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            validFormatFound = false;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (isValid(tempConfig)) {
                validFormatFound = true;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (!bestFormatIsValid) {
                if (
                    scoreToBeat == null ||
                    currentScore < scoreToBeat ||
                    validFormatFound
                ) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                    if (validFormatFound) {
                        bestFormatIsValid = true;
                    }
                }
            } else {
                if (currentScore < scoreToBeat) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                }
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i),
            dayOrDate = i.day === undefined ? i.date : i.day;
        config._a = map(
            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],
            function (obj) {
                return obj && parseInt(obj, 10);
            }
        );

        configFromArray(config);
    }

    function createFromConfig(config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig(config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return createInvalid({ nullInput: true });
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
            config._d = input;
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        } else {
            configFromInput(config);
        }

        if (!isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (isObject(input)) {
            configFromObject(config);
        } else if (isNumber(input)) {
            // from milliseconds
            config._d = new Date(input);
        } else {
            hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC(input, format, locale, strict, isUTC) {
        var c = {};

        if (format === true || format === false) {
            strict = format;
            format = undefined;
        }

        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined;
        }

        if (
            (isObject(input) && isObjectEmpty(input)) ||
            (isArray(input) && input.length === 0)
        ) {
            input = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function createLocal(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other < this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        ),
        prototypeMax = deprecate(
            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other > this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function () {
        return Date.now ? Date.now() : +new Date();
    };

    var ordering = [
        'year',
        'quarter',
        'month',
        'week',
        'day',
        'hour',
        'minute',
        'second',
        'millisecond',
    ];

    function isDurationValid(m) {
        var key,
            unitHasDecimal = false,
            i;
        for (key in m) {
            if (
                hasOwnProp(m, key) &&
                !(
                    indexOf.call(ordering, key) !== -1 &&
                    (m[key] == null || !isNaN(m[key]))
                )
            ) {
                return false;
            }
        }

        for (i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false; // only allow non-integers for smallest unit
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                }
            }
        }

        return true;
    }

    function isValid$1() {
        return this._isValid;
    }

    function createInvalid$1() {
        return createDuration(NaN);
    }

    function Duration(duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        this._isValid = isDurationValid(normalizedInput);

        // representation for dateAddRemove
        this._milliseconds =
            +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days + weeks * 7;
        // It is impossible to translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months + quarters * 3 + years * 12;

        this._data = {};

        this._locale = getLocale();

        this._bubble();
    }

    function isDuration(obj) {
        return obj instanceof Duration;
    }

    function absRound(number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if (
                (dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))
            ) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    // FORMATTING

    function offset(token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset(),
                sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return (
                sign +
                zeroFill(~~(offset / 60), 2) +
                separator +
                zeroFill(~~offset % 60, 2)
            );
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z', matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher),
            chunk,
            parts,
            minutes;

        if (matches === null) {
            return null;
        }

        chunk = matches[matches.length - 1] || [];
        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        minutes = +(parts[1] * 60) + toInt(parts[2]);

        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff =
                (isMoment(input) || isDate(input)
                    ? input.valueOf()
                    : createLocal(input).valueOf()) - res.valueOf();
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res;
        } else {
            return createLocal(input).local();
        }
    }

    function getDateOffset(m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset());
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset(input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this;
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(
                        this,
                        createDuration(input - offset, 'm'),
                        1,
                        false
                    );
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone(input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC(keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal(keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset() {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone);
            } else {
                this.utcOffset(0, true);
            }
        }
        return this;
    }

    function hasAlignedHourOffset(input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime() {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted() {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {},
            other;

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted =
                this.isValid() && compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal() {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset() {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc() {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    // ASP.NET json date format regex
    var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
        // and further modified to allow for strings containing both week and day
        isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration(input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms: input._milliseconds,
                d: input._days,
                M: input._months,
            };
        } else if (isNumber(input) || !isNaN(+input)) {
            duration = {};
            if (key) {
                duration[key] = +input;
            } else {
                duration.milliseconds = +input;
            }
        } else if ((match = aspNetRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: 0,
                d: toInt(match[DATE]) * sign,
                h: toInt(match[HOUR]) * sign,
                m: toInt(match[MINUTE]) * sign,
                s: toInt(match[SECOND]) * sign,
                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match
            };
        } else if ((match = isoRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: parseIso(match[2], sign),
                M: parseIso(match[3], sign),
                w: parseIso(match[4], sign),
                d: parseIso(match[5], sign),
                h: parseIso(match[6], sign),
                m: parseIso(match[7], sign),
                s: parseIso(match[8], sign),
            };
        } else if (duration == null) {
            // checks for null or undefined
            duration = {};
        } else if (
            typeof duration === 'object' &&
            ('from' in duration || 'to' in duration)
        ) {
            diffRes = momentsDifference(
                createLocal(duration.from),
                createLocal(duration.to)
            );

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        if (isDuration(input) && hasOwnProp(input, '_isValid')) {
            ret._isValid = input._isValid;
        }

        return ret;
    }

    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso(inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {};

        res.months =
            other.month() - base.month() + (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +base.clone().add(res.months, 'M');

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return { milliseconds: 0, months: 0 };
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(
                    name,
                    'moment().' +
                        name +
                        '(period, number) is deprecated. Please use moment().' +
                        name +
                        '(number, period). ' +
                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'
                );
                tmp = val;
                val = period;
                period = tmp;
            }

            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this;
        };
    }

    function addSubtract(mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            // No op
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
            setMonth(mom, get(mom, 'Month') + months * isAdding);
        }
        if (days) {
            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months);
        }
    }

    var add = createAdder(1, 'add'),
        subtract = createAdder(-1, 'subtract');

    function isString(input) {
        return typeof input === 'string' || input instanceof String;
    }

    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined
    function isMomentInput(input) {
        return (
            isMoment(input) ||
            isDate(input) ||
            isString(input) ||
            isNumber(input) ||
            isNumberOrStringArray(input) ||
            isMomentInputObject(input) ||
            input === null ||
            input === undefined
        );
    }

    function isMomentInputObject(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input),
            propertyTest = false,
            properties = [
                'years',
                'year',
                'y',
                'months',
                'month',
                'M',
                'days',
                'day',
                'd',
                'dates',
                'date',
                'D',
                'hours',
                'hour',
                'h',
                'minutes',
                'minute',
                'm',
                'seconds',
                'second',
                's',
                'milliseconds',
                'millisecond',
                'ms',
            ],
            i,
            property;

        for (i = 0; i < properties.length; i += 1) {
            property = properties[i];
            propertyTest = propertyTest || hasOwnProp(input, property);
        }

        return objectTest && propertyTest;
    }

    function isNumberOrStringArray(input) {
        var arrayTest = isArray(input),
            dataTypeTest = false;
        if (arrayTest) {
            dataTypeTest =
                input.filter(function (item) {
                    return !isNumber(item) && isString(input);
                }).length === 0;
        }
        return arrayTest && dataTypeTest;
    }

    function isCalendarSpec(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input),
            propertyTest = false,
            properties = [
                'sameDay',
                'nextDay',
                'lastDay',
                'nextWeek',
                'lastWeek',
                'sameElse',
            ],
            i,
            property;

        for (i = 0; i < properties.length; i += 1) {
            property = properties[i];
            propertyTest = propertyTest || hasOwnProp(input, property);
        }

        return objectTest && propertyTest;
    }

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6
            ? 'sameElse'
            : diff < -1
            ? 'lastWeek'
            : diff < 0
            ? 'lastDay'
            : diff < 1
            ? 'sameDay'
            : diff < 2
            ? 'nextDay'
            : diff < 7
            ? 'nextWeek'
            : 'sameElse';
    }

    function calendar$1(time, formats) {
        // Support for single parameter, formats only overload to the calendar function
        if (arguments.length === 1) {
            if (isMomentInput(arguments[0])) {
                time = arguments[0];
                formats = undefined;
            } else if (isCalendarSpec(arguments[0])) {
                formats = arguments[0];
                time = undefined;
            }
        }
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse',
            output =
                formats &&
                (isFunction(formats[format])
                    ? formats[format].call(this, now)
                    : formats[format]);

        return this.format(
            output || this.localeData().calendar(format, this, createLocal(now))
        );
    }

    function clone() {
        return new Moment(this);
    }

    function isAfter(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween(from, to, units, inclusivity) {
        var localFrom = isMoment(from) ? from : createLocal(from),
            localTo = isMoment(to) ? to : createLocal(to);
        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
            return false;
        }
        inclusivity = inclusivity || '()';
        return (
            (inclusivity[0] === '('
                ? this.isAfter(localFrom, units)
                : !this.isBefore(localFrom, units)) &&
            (inclusivity[1] === ')'
                ? this.isBefore(localTo, units)
                : !this.isAfter(localTo, units))
        );
    }

    function isSame(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return (
                this.clone().startOf(units).valueOf() <= inputMs &&
                inputMs <= this.clone().endOf(units).valueOf()
            );
        }
    }

    function isSameOrAfter(input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
    }

    function isSameOrBefore(input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
    }

    function diff(input, units, asFloat) {
        var that, zoneDelta, output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        switch (units) {
            case 'year':
                output = monthDiff(this, that) / 12;
                break;
            case 'month':
                output = monthDiff(this, that);
                break;
            case 'quarter':
                output = monthDiff(this, that) / 3;
                break;
            case 'second':
                output = (this - that) / 1e3;
                break; // 1000
            case 'minute':
                output = (this - that) / 6e4;
                break; // 1000 * 60
            case 'hour':
                output = (this - that) / 36e5;
                break; // 1000 * 60 * 60
            case 'day':
                output = (this - that - zoneDelta) / 864e5;
                break; // 1000 * 60 * 60 * 24, negate dst
            case 'week':
                output = (this - that - zoneDelta) / 6048e5;
                break; // 1000 * 60 * 60 * 24 * 7, negate dst
            default:
                output = this - that;
        }

        return asFloat ? output : absFloor(output);
    }

    function monthDiff(a, b) {
        if (a.date() < b.date()) {
            // end-of-month calculations work correct when the start month has more
            // days than the end month.
            return -monthDiff(b, a);
        }
        // difference in months
        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2,
            adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        //check for negative zero, return zero if negative zero
        return -(wholeMonthDiff + adjust) || 0;
    }

    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString() {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function toISOString(keepOffset) {
        if (!this.isValid()) {
            return null;
        }
        var utc = keepOffset !== true,
            m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(
                m,
                utc
                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'
            );
        }
        if (isFunction(Date.prototype.toISOString)) {
            // native implementation is ~50x faster, use it when we can
            if (utc) {
                return this.toDate().toISOString();
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)
                    .toISOString()
                    .replace('Z', formatMoment(m, 'Z'));
            }
        }
        return formatMoment(
            m,
            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'
        );
    }

    /**
     * Return a human readable representation of a moment that can
     * also be evaluated to get a new moment which is the same
     *
     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
     */
    function inspect() {
        if (!this.isValid()) {
            return 'moment.invalid(/* ' + this._i + ' */)';
        }
        var func = 'moment',
            zone = '',
            prefix,
            year,
            datetime,
            suffix;
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
            zone = 'Z';
        }
        prefix = '[' + func + '("]';
        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
        datetime = '-MM-DD[T]HH:mm:ss.SSS';
        suffix = zone + '[")]';

        return this.format(prefix + year + datetime + suffix);
    }

    function format(inputString) {
        if (!inputString) {
            inputString = this.isUtc()
                ? hooks.defaultFormatUtc
                : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from(time, withoutSuffix) {
        if (
            this.isValid() &&
            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
        ) {
            return createDuration({ to: this, from: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow(withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
    }

    function to(time, withoutSuffix) {
        if (
            this.isValid() &&
            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
        ) {
            return createDuration({ from: this, to: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow(withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
    }

    // If passed a locale key, it will set the locale for this
    // instance.  Otherwise, it will return the locale configuration
    // variables for this instance.
    function locale(key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData() {
        return this._locale;
    }

    var MS_PER_SECOND = 1000,
        MS_PER_MINUTE = 60 * MS_PER_SECOND,
        MS_PER_HOUR = 60 * MS_PER_MINUTE,
        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

    // actual modulo - handles negative numbers (for dates before 1970):
    function mod$1(dividend, divisor) {
        return ((dividend % divisor) + divisor) % divisor;
    }

    function localStartOfDate(y, m, d) {
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return new Date(y, m, d).valueOf();
        }
    }

    function utcStartOfDate(y, m, d) {
        // Date.UTC remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return Date.UTC(y, m, d);
        }
    }

    function startOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year(), 0, 1);
                break;
            case 'quarter':
                time = startOfDate(
                    this.year(),
                    this.month() - (this.month() % 3),
                    1
                );
                break;
            case 'month':
                time = startOfDate(this.year(), this.month(), 1);
                break;
            case 'week':
                time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - this.weekday()
                );
                break;
            case 'isoWeek':
                time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - (this.isoWeekday() - 1)
                );
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date());
                break;
            case 'hour':
                time = this._d.valueOf();
                time -= mod$1(
                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                    MS_PER_HOUR
                );
                break;
            case 'minute':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_MINUTE);
                break;
            case 'second':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_SECOND);
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function endOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year() + 1, 0, 1) - 1;
                break;
            case 'quarter':
                time =
                    startOfDate(
                        this.year(),
                        this.month() - (this.month() % 3) + 3,
                        1
                    ) - 1;
                break;
            case 'month':
                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                break;
            case 'week':
                time =
                    startOfDate(
                        this.year(),
                        this.month(),
                        this.date() - this.weekday() + 7
                    ) - 1;
                break;
            case 'isoWeek':
                time =
                    startOfDate(
                        this.year(),
                        this.month(),
                        this.date() - (this.isoWeekday() - 1) + 7
                    ) - 1;
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                break;
            case 'hour':
                time = this._d.valueOf();
                time +=
                    MS_PER_HOUR -
                    mod$1(
                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                        MS_PER_HOUR
                    ) -
                    1;
                break;
            case 'minute':
                time = this._d.valueOf();
                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                break;
            case 'second':
                time = this._d.valueOf();
                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function valueOf() {
        return this._d.valueOf() - (this._offset || 0) * 60000;
    }

    function unix() {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate() {
        return new Date(this.valueOf());
    }

    function toArray() {
        var m = this;
        return [
            m.year(),
            m.month(),
            m.date(),
            m.hour(),
            m.minute(),
            m.second(),
            m.millisecond(),
        ];
    }

    function toObject() {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds(),
        };
    }

    function toJSON() {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
    }

    function isValid$2() {
        return isValid(this);
    }

    function parsingFlags() {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt() {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict,
        };
    }

    addFormatToken('N', 0, 0, 'eraAbbr');
    addFormatToken('NN', 0, 0, 'eraAbbr');
    addFormatToken('NNN', 0, 0, 'eraAbbr');
    addFormatToken('NNNN', 0, 0, 'eraName');
    addFormatToken('NNNNN', 0, 0, 'eraNarrow');

    addFormatToken('y', ['y', 1], 'yo', 'eraYear');
    addFormatToken('y', ['yy', 2], 0, 'eraYear');
    addFormatToken('y', ['yyy', 3], 0, 'eraYear');
    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');

    addRegexToken('N', matchEraAbbr);
    addRegexToken('NN', matchEraAbbr);
    addRegexToken('NNN', matchEraAbbr);
    addRegexToken('NNNN', matchEraName);
    addRegexToken('NNNNN', matchEraNarrow);

    addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (
        input,
        array,
        config,
        token
    ) {
        var era = config._locale.erasParse(input, token, config._strict);
        if (era) {
            getParsingFlags(config).era = era;
        } else {
            getParsingFlags(config).invalidEra = input;
        }
    });

    addRegexToken('y', matchUnsigned);
    addRegexToken('yy', matchUnsigned);
    addRegexToken('yyy', matchUnsigned);
    addRegexToken('yyyy', matchUnsigned);
    addRegexToken('yo', matchEraYearOrdinal);

    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);
    addParseToken(['yo'], function (input, array, config, token) {
        var match;
        if (config._locale._eraYearOrdinalRegex) {
            match = input.match(config._locale._eraYearOrdinalRegex);
        }

        if (config._locale.eraYearOrdinalParse) {
            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
        } else {
            array[YEAR] = parseInt(input, 10);
        }
    });

    function localeEras(m, format) {
        var i,
            l,
            date,
            eras = this._eras || getLocale('en')._eras;
        for (i = 0, l = eras.length; i < l; ++i) {
            switch (typeof eras[i].since) {
                case 'string':
                    // truncate time
                    date = hooks(eras[i].since).startOf('day');
                    eras[i].since = date.valueOf();
                    break;
            }

            switch (typeof eras[i].until) {
                case 'undefined':
                    eras[i].until = +Infinity;
                    break;
                case 'string':
                    // truncate time
                    date = hooks(eras[i].until).startOf('day').valueOf();
                    eras[i].until = date.valueOf();
                    break;
            }
        }
        return eras;
    }

    function localeErasParse(eraName, format, strict) {
        var i,
            l,
            eras = this.eras(),
            name,
            abbr,
            narrow;
        eraName = eraName.toUpperCase();

        for (i = 0, l = eras.length; i < l; ++i) {
            name = eras[i].name.toUpperCase();
            abbr = eras[i].abbr.toUpperCase();
            narrow = eras[i].narrow.toUpperCase();

            if (strict) {
                switch (format) {
                    case 'N':
                    case 'NN':
                    case 'NNN':
                        if (abbr === eraName) {
                            return eras[i];
                        }
                        break;

                    case 'NNNN':
                        if (name === eraName) {
                            return eras[i];
                        }
                        break;

                    case 'NNNNN':
                        if (narrow === eraName) {
                            return eras[i];
                        }
                        break;
                }
            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
                return eras[i];
            }
        }
    }

    function localeErasConvertYear(era, year) {
        var dir = era.since <= era.until ? +1 : -1;
        if (year === undefined) {
            return hooks(era.since).year();
        } else {
            return hooks(era.since).year() + (year - era.offset) * dir;
        }
    }

    function getEraName() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].name;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].name;
            }
        }

        return '';
    }

    function getEraNarrow() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].narrow;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].narrow;
            }
        }

        return '';
    }

    function getEraAbbr() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].abbr;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].abbr;
            }
        }

        return '';
    }

    function getEraYear() {
        var i,
            l,
            dir,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            dir = eras[i].since <= eras[i].until ? +1 : -1;

            // truncate time
            val = this.startOf('day').valueOf();

            if (
                (eras[i].since <= val && val <= eras[i].until) ||
                (eras[i].until <= val && val <= eras[i].since)
            ) {
                return (
                    (this.year() - hooks(eras[i].since).year()) * dir +
                    eras[i].offset
                );
            }
        }

        return this.year();
    }

    function erasNameRegex(isStrict) {
        if (!hasOwnProp(this, '_erasNameRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasNameRegex : this._erasRegex;
    }

    function erasAbbrRegex(isStrict) {
        if (!hasOwnProp(this, '_erasAbbrRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasAbbrRegex : this._erasRegex;
    }

    function erasNarrowRegex(isStrict) {
        if (!hasOwnProp(this, '_erasNarrowRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasNarrowRegex : this._erasRegex;
    }

    function matchEraAbbr(isStrict, locale) {
        return locale.erasAbbrRegex(isStrict);
    }

    function matchEraName(isStrict, locale) {
        return locale.erasNameRegex(isStrict);
    }

    function matchEraNarrow(isStrict, locale) {
        return locale.erasNarrowRegex(isStrict);
    }

    function matchEraYearOrdinal(isStrict, locale) {
        return locale._eraYearOrdinalRegex || matchUnsigned;
    }

    function computeErasParse() {
        var abbrPieces = [],
            namePieces = [],
            narrowPieces = [],
            mixedPieces = [],
            i,
            l,
            eras = this.eras();

        for (i = 0, l = eras.length; i < l; ++i) {
            namePieces.push(regexEscape(eras[i].name));
            abbrPieces.push(regexEscape(eras[i].abbr));
            narrowPieces.push(regexEscape(eras[i].narrow));

            mixedPieces.push(regexEscape(eras[i].name));
            mixedPieces.push(regexEscape(eras[i].abbr));
            mixedPieces.push(regexEscape(eras[i].narrow));
        }

        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');
        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');
        this._erasNarrowRegex = new RegExp(
            '^(' + narrowPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken(token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg', 'weekYear');
    addWeekYearFormatToken('ggggg', 'weekYear');
    addWeekYearFormatToken('GGGG', 'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PRIORITY

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);

    // PARSING

    addRegexToken('G', matchSigned);
    addRegexToken('g', matchSigned);
    addRegexToken('GG', match1to2, match2);
    addRegexToken('gg', match1to2, match2);
    addRegexToken('GGGG', match1to4, match4);
    addRegexToken('gggg', match1to4, match4);
    addRegexToken('GGGGG', match1to6, match6);
    addRegexToken('ggggg', match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (
        input,
        week,
        config,
        token
    ) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
    });

    // MOMENTS

    function getSetWeekYear(input) {
        return getSetWeekYearHelper.call(
            this,
            input,
            this.week(),
            this.weekday(),
            this.localeData()._week.dow,
            this.localeData()._week.doy
        );
    }

    function getSetISOWeekYear(input) {
        return getSetWeekYearHelper.call(
            this,
            input,
            this.isoWeek(),
            this.isoWeekday(),
            1,
            4
        );
    }

    function getISOWeeksInYear() {
        return weeksInYear(this.year(), 1, 4);
    }

    function getISOWeeksInISOWeekYear() {
        return weeksInYear(this.isoWeekYear(), 1, 4);
    }

    function getWeeksInYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getWeeksInWeekYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    // FORMATTING

    addFormatToken('Q', 0, 'Qo', 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PRIORITY

    addUnitPriority('quarter', 7);

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter(input) {
        return input == null
            ? Math.ceil((this.month() + 1) / 3)
            : this.month((input - 1) * 3 + (this.month() % 3));
    }

    // FORMATTING

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PRIORITY
    addUnitPriority('date', 9);

    // PARSING

    addRegexToken('D', match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        // TODO: Remove "ordinalParse" fallback in next major release.
        return isStrict
            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse
            : locale._dayOfMonthOrdinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    // FORMATTING

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PRIORITY
    addUnitPriority('dayOfYear', 4);

    // PARSING

    addRegexToken('DDD', match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    // MOMENTS

    function getSetDayOfYear(input) {
        var dayOfYear =
            Math.round(
                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5
            ) + 1;
        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
    }

    // FORMATTING

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PRIORITY

    addUnitPriority('minute', 14);

    // PARSING

    addRegexToken('m', match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    // FORMATTING

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PRIORITY

    addUnitPriority('second', 15);

    // PARSING

    addRegexToken('s', match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    // FORMATTING

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });

    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PRIORITY

    addUnitPriority('millisecond', 16);

    // PARSING

    addRegexToken('S', match1to3, match1);
    addRegexToken('SS', match1to3, match2);
    addRegexToken('SSS', match1to3, match3);

    var token, getSetMillisecond;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }

    getSetMillisecond = makeGetSet('Milliseconds', false);

    // FORMATTING

    addFormatToken('z', 0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr() {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName() {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var proto = Moment.prototype;

    proto.add = add;
    proto.calendar = calendar$1;
    proto.clone = clone;
    proto.diff = diff;
    proto.endOf = endOf;
    proto.format = format;
    proto.from = from;
    proto.fromNow = fromNow;
    proto.to = to;
    proto.toNow = toNow;
    proto.get = stringGet;
    proto.invalidAt = invalidAt;
    proto.isAfter = isAfter;
    proto.isBefore = isBefore;
    proto.isBetween = isBetween;
    proto.isSame = isSame;
    proto.isSameOrAfter = isSameOrAfter;
    proto.isSameOrBefore = isSameOrBefore;
    proto.isValid = isValid$2;
    proto.lang = lang;
    proto.locale = locale;
    proto.localeData = localeData;
    proto.max = prototypeMax;
    proto.min = prototypeMin;
    proto.parsingFlags = parsingFlags;
    proto.set = stringSet;
    proto.startOf = startOf;
    proto.subtract = subtract;
    proto.toArray = toArray;
    proto.toObject = toObject;
    proto.toDate = toDate;
    proto.toISOString = toISOString;
    proto.inspect = inspect;
    if (typeof Symbol !== 'undefined' && Symbol.for != null) {
        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {
            return 'Moment<' + this.format() + '>';
        };
    }
    proto.toJSON = toJSON;
    proto.toString = toString;
    proto.unix = unix;
    proto.valueOf = valueOf;
    proto.creationData = creationData;
    proto.eraName = getEraName;
    proto.eraNarrow = getEraNarrow;
    proto.eraAbbr = getEraAbbr;
    proto.eraYear = getEraYear;
    proto.year = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week = proto.weeks = getSetWeek;
    proto.isoWeek = proto.isoWeeks = getSetISOWeek;
    proto.weeksInYear = getWeeksInYear;
    proto.weeksInWeekYear = getWeeksInWeekYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
    proto.date = getSetDayOfMonth;
    proto.day = proto.days = getSetDayOfWeek;
    proto.weekday = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset = getSetOffset;
    proto.utc = setOffsetToUTC;
    proto.local = setOffsetToLocal;
    proto.parseZone = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST = isDaylightSavingTime;
    proto.isLocal = isLocal;
    proto.isUtcOffset = isUtcOffset;
    proto.isUtc = isUtc;
    proto.isUTC = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates = deprecate(
        'dates accessor is deprecated. Use date instead.',
        getSetDayOfMonth
    );
    proto.months = deprecate(
        'months accessor is deprecated. Use month instead',
        getSetMonth
    );
    proto.years = deprecate(
        'years accessor is deprecated. Use year instead',
        getSetYear
    );
    proto.zone = deprecate(
        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
        getSetZone
    );
    proto.isDSTShifted = deprecate(
        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
        isDaylightSavingTimeShifted
    );

    function createUnix(input) {
        return createLocal(input * 1000);
    }

    function createInZone() {
        return createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat(string) {
        return string;
    }

    var proto$1 = Locale.prototype;

    proto$1.calendar = calendar;
    proto$1.longDateFormat = longDateFormat;
    proto$1.invalidDate = invalidDate;
    proto$1.ordinal = ordinal;
    proto$1.preparse = preParsePostFormat;
    proto$1.postformat = preParsePostFormat;
    proto$1.relativeTime = relativeTime;
    proto$1.pastFuture = pastFuture;
    proto$1.set = set;
    proto$1.eras = localeEras;
    proto$1.erasParse = localeErasParse;
    proto$1.erasConvertYear = localeErasConvertYear;
    proto$1.erasAbbrRegex = erasAbbrRegex;
    proto$1.erasNameRegex = erasNameRegex;
    proto$1.erasNarrowRegex = erasNarrowRegex;

    proto$1.months = localeMonths;
    proto$1.monthsShort = localeMonthsShort;
    proto$1.monthsParse = localeMonthsParse;
    proto$1.monthsRegex = monthsRegex;
    proto$1.monthsShortRegex = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

    proto$1.weekdays = localeWeekdays;
    proto$1.weekdaysMin = localeWeekdaysMin;
    proto$1.weekdaysShort = localeWeekdaysShort;
    proto$1.weekdaysParse = localeWeekdaysParse;

    proto$1.weekdaysRegex = weekdaysRegex;
    proto$1.weekdaysShortRegex = weekdaysShortRegex;
    proto$1.weekdaysMinRegex = weekdaysMinRegex;

    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1(format, index, field, setter) {
        var locale = getLocale(),
            utc = createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl(format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return get$1(format, index, field, 'month');
        }

        var i,
            out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, 'month');
        }
        return out;
    }

    // ()
    // (5)
    // (fmt, 5)
    // (fmt)
    // (true)
    // (true, 5)
    // (true, fmt, 5)
    // (true, fmt)
    function listWeekdaysImpl(localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0,
            i,
            out = [];

        if (index != null) {
            return get$1(format, (index + shift) % 7, field, 'day');
        }

        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function listMonths(format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function listMonthsShort(format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function listWeekdays(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function listWeekdaysShort(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function listWeekdaysMin(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    getSetGlobalLocale('en', {
        eras: [
            {
                since: '0001-01-01',
                until: +Infinity,
                offset: 1,
                name: 'Anno Domini',
                narrow: 'AD',
                abbr: 'AD',
            },
            {
                since: '0000-12-31',
                until: -Infinity,
                offset: 1,
                name: 'Before Christ',
                narrow: 'BC',
                abbr: 'BC',
            },
        ],
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    toInt((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
    });

    // Side effect imports

    hooks.lang = deprecate(
        'moment.lang is deprecated. Use moment.locale instead.',
        getSetGlobalLocale
    );
    hooks.langData = deprecate(
        'moment.langData is deprecated. Use moment.localeData instead.',
        getLocale
    );

    var mathAbs = Math.abs;

    function abs() {
        var data = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days = mathAbs(this._days);
        this._months = mathAbs(this._months);

        data.milliseconds = mathAbs(data.milliseconds);
        data.seconds = mathAbs(data.seconds);
        data.minutes = mathAbs(data.minutes);
        data.hours = mathAbs(data.hours);
        data.months = mathAbs(data.months);
        data.years = mathAbs(data.years);

        return this;
    }

    function addSubtract$1(duration, input, value, direction) {
        var other = createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days += direction * other._days;
        duration._months += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function add$1(input, value) {
        return addSubtract$1(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function subtract$1(input, value) {
        return addSubtract$1(this, input, value, -1);
    }

    function absCeil(number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble() {
        var milliseconds = this._milliseconds,
            days = this._days,
            months = this._months,
            data = this._data,
            seconds,
            minutes,
            hours,
            years,
            monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (
            !(
                (milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0)
            )
        ) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds = absFloor(milliseconds / 1000);
        data.seconds = seconds % 60;

        minutes = absFloor(seconds / 60);
        data.minutes = minutes % 60;

        hours = absFloor(minutes / 60);
        data.hours = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days = days;
        data.months = months;
        data.years = years;

        return this;
    }

    function daysToMonths(days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return (days * 4800) / 146097;
    }

    function monthsToDays(months) {
        // the reverse of daysToMonths
        return (months * 146097) / 4800;
    }

    function as(units) {
        if (!this.isValid()) {
            return NaN;
        }
        var days,
            months,
            milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'quarter' || units === 'year') {
            days = this._days + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            switch (units) {
                case 'month':
                    return months;
                case 'quarter':
                    return months / 3;
                case 'year':
                    return months / 12;
            }
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week':
                    return days / 7 + milliseconds / 6048e5;
                case 'day':
                    return days + milliseconds / 864e5;
                case 'hour':
                    return days * 24 + milliseconds / 36e5;
                case 'minute':
                    return days * 1440 + milliseconds / 6e4;
                case 'second':
                    return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond':
                    return Math.floor(days * 864e5) + milliseconds;
                default:
                    throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function valueOf$1() {
        if (!this.isValid()) {
            return NaN;
        }
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs(alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms'),
        asSeconds = makeAs('s'),
        asMinutes = makeAs('m'),
        asHours = makeAs('h'),
        asDays = makeAs('d'),
        asWeeks = makeAs('w'),
        asMonths = makeAs('M'),
        asQuarters = makeAs('Q'),
        asYears = makeAs('y');

    function clone$1() {
        return createDuration(this);
    }

    function get$2(units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
    }

    function makeGetter(name) {
        return function () {
            return this.isValid() ? this._data[name] : NaN;
        };
    }

    var milliseconds = makeGetter('milliseconds'),
        seconds = makeGetter('seconds'),
        minutes = makeGetter('minutes'),
        hours = makeGetter('hours'),
        days = makeGetter('days'),
        months = makeGetter('months'),
        years = makeGetter('years');

    function weeks() {
        return absFloor(this.days() / 7);
    }

    var round = Math.round,
        thresholds = {
            ss: 44, // a few seconds to seconds
            s: 45, // seconds to minute
            m: 45, // minutes to hour
            h: 22, // hours to day
            d: 26, // days to month/week
            w: null, // weeks to month
            M: 11, // months to year
        };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {
        var duration = createDuration(posNegDuration).abs(),
            seconds = round(duration.as('s')),
            minutes = round(duration.as('m')),
            hours = round(duration.as('h')),
            days = round(duration.as('d')),
            months = round(duration.as('M')),
            weeks = round(duration.as('w')),
            years = round(duration.as('y')),
            a =
                (seconds <= thresholds.ss && ['s', seconds]) ||
                (seconds < thresholds.s && ['ss', seconds]) ||
                (minutes <= 1 && ['m']) ||
                (minutes < thresholds.m && ['mm', minutes]) ||
                (hours <= 1 && ['h']) ||
                (hours < thresholds.h && ['hh', hours]) ||
                (days <= 1 && ['d']) ||
                (days < thresholds.d && ['dd', days]);

        if (thresholds.w != null) {
            a =
                a ||
                (weeks <= 1 && ['w']) ||
                (weeks < thresholds.w && ['ww', weeks]);
        }
        a = a ||
            (months <= 1 && ['M']) ||
            (months < thresholds.M && ['MM', months]) ||
            (years <= 1 && ['y']) || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set the rounding function for relative time strings
    function getSetRelativeTimeRounding(roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof roundingFunction === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    // This function allows you to set a threshold for relative time strings
    function getSetRelativeTimeThreshold(threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === 's') {
            thresholds.ss = limit - 1;
        }
        return true;
    }

    function humanize(argWithSuffix, argThresholds) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var withSuffix = false,
            th = thresholds,
            locale,
            output;

        if (typeof argWithSuffix === 'object') {
            argThresholds = argWithSuffix;
            argWithSuffix = false;
        }
        if (typeof argWithSuffix === 'boolean') {
            withSuffix = argWithSuffix;
        }
        if (typeof argThresholds === 'object') {
            th = Object.assign({}, thresholds, argThresholds);
            if (argThresholds.s != null && argThresholds.ss == null) {
                th.ss = argThresholds.s - 1;
            }
        }

        locale = this.localeData();
        output = relativeTime$1(this, !withSuffix, th, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var abs$1 = Math.abs;

    function sign(x) {
        return (x > 0) - (x < 0) || +x;
    }

    function toISOString$1() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000,
            days = abs$1(this._days),
            months = abs$1(this._months),
            minutes,
            hours,
            years,
            s,
            total = this.asSeconds(),
            totalSign,
            ymSign,
            daysSign,
            hmsSign;

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes = absFloor(seconds / 60);
        hours = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';

        totalSign = total < 0 ? '-' : '';
        ymSign = sign(this._months) !== sign(total) ? '-' : '';
        daysSign = sign(this._days) !== sign(total) ? '-' : '';
        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

        return (
            totalSign +
            'P' +
            (years ? ymSign + years + 'Y' : '') +
            (months ? ymSign + months + 'M' : '') +
            (days ? daysSign + days + 'D' : '') +
            (hours || minutes || seconds ? 'T' : '') +
            (hours ? hmsSign + hours + 'H' : '') +
            (minutes ? hmsSign + minutes + 'M' : '') +
            (seconds ? hmsSign + s + 'S' : '')
        );
    }

    var proto$2 = Duration.prototype;

    proto$2.isValid = isValid$1;
    proto$2.abs = abs;
    proto$2.add = add$1;
    proto$2.subtract = subtract$1;
    proto$2.as = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds = asSeconds;
    proto$2.asMinutes = asMinutes;
    proto$2.asHours = asHours;
    proto$2.asDays = asDays;
    proto$2.asWeeks = asWeeks;
    proto$2.asMonths = asMonths;
    proto$2.asQuarters = asQuarters;
    proto$2.asYears = asYears;
    proto$2.valueOf = valueOf$1;
    proto$2._bubble = bubble;
    proto$2.clone = clone$1;
    proto$2.get = get$2;
    proto$2.milliseconds = milliseconds;
    proto$2.seconds = seconds;
    proto$2.minutes = minutes;
    proto$2.hours = hours;
    proto$2.days = days;
    proto$2.weeks = weeks;
    proto$2.months = months;
    proto$2.years = years;
    proto$2.humanize = humanize;
    proto$2.toISOString = toISOString$1;
    proto$2.toString = toISOString$1;
    proto$2.toJSON = toISOString$1;
    proto$2.locale = locale;
    proto$2.localeData = localeData;

    proto$2.toIsoString = deprecate(
        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
        toISOString$1
    );
    proto$2.lang = lang;

    // FORMATTING

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    //! moment.js

    hooks.version = '2.27.0';

    setHookCallback(createLocal);

    hooks.fn = proto;
    hooks.min = min;
    hooks.max = max;
    hooks.now = now;
    hooks.utc = createUTC;
    hooks.unix = createUnix;
    hooks.months = listMonths;
    hooks.isDate = isDate;
    hooks.locale = getSetGlobalLocale;
    hooks.invalid = createInvalid;
    hooks.duration = createDuration;
    hooks.isMoment = isMoment;
    hooks.weekdays = listWeekdays;
    hooks.parseZone = createInZone;
    hooks.localeData = getLocale;
    hooks.isDuration = isDuration;
    hooks.monthsShort = listMonthsShort;
    hooks.weekdaysMin = listWeekdaysMin;
    hooks.defineLocale = defineLocale;
    hooks.updateLocale = updateLocale;
    hooks.locales = listLocales;
    hooks.weekdaysShort = listWeekdaysShort;
    hooks.normalizeUnits = normalizeUnits;
    hooks.relativeTimeRounding = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat = getCalendarFormat;
    hooks.prototype = proto;

    // currently HTML5 input type only supports 24-hour formats
    hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type="datetime-local" step="0.001" />
        DATE: 'YYYY-MM-DD', // <input type="date" />
        TIME: 'HH:mm', // <input type="time" />
        TIME_SECONDS: 'HH:mm:ss', // <input type="time" step="1" />
        TIME_MS: 'HH:mm:ss.SSS', // <input type="time" step="0.001" />
        WEEK: 'GGGG-[W]WW', // <input type="week" />
        MONTH: 'YYYY-MM', // <input type="month" />
    };

    return hooks;

})));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(252)(module)))

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = __extends;
/* unused harmony export __assign */
/* unused harmony export __rest */
/* unused harmony export __decorate */
/* unused harmony export __param */
/* unused harmony export __metadata */
/* unused harmony export __awaiter */
/* unused harmony export __generator */
/* unused harmony export __createBinding */
/* unused harmony export __exportStar */
/* unused harmony export __values */
/* unused harmony export __read */
/* unused harmony export __spread */
/* unused harmony export __spreadArrays */
/* unused harmony export __await */
/* unused harmony export __asyncGenerator */
/* unused harmony export __asyncDelegator */
/* unused harmony export __asyncValues */
/* unused harmony export __makeTemplateObject */
/* unused harmony export __importStar */
/* unused harmony export __importDefault */
/* unused harmony export __classPrivateFieldGet */
/* unused harmony export __classPrivateFieldSet */
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Subscriber; });
/* unused harmony export SafeSubscriber */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_isFunction__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Observer__ = __webpack_require__(199);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Subscription__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__internal_symbol_rxSubscriber__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__config__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__util_hostReportError__ = __webpack_require__(46);
/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */







var Subscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](Subscriber, _super);
    function Subscriber(destinationOrNext, error, complete) {
        var _this = _super.call(this) || this;
        _this.syncErrorValue = null;
        _this.syncErrorThrown = false;
        _this.syncErrorThrowable = false;
        _this.isStopped = false;
        switch (arguments.length) {
            case 0:
                _this.destination = __WEBPACK_IMPORTED_MODULE_2__Observer__["a" /* empty */];
                break;
            case 1:
                if (!destinationOrNext) {
                    _this.destination = __WEBPACK_IMPORTED_MODULE_2__Observer__["a" /* empty */];
                    break;
                }
                if (typeof destinationOrNext === 'object') {
                    if (destinationOrNext instanceof Subscriber) {
                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;
                        _this.destination = destinationOrNext;
                        destinationOrNext.add(_this);
                    }
                    else {
                        _this.syncErrorThrowable = true;
                        _this.destination = new SafeSubscriber(_this, destinationOrNext);
                    }
                    break;
                }
            default:
                _this.syncErrorThrowable = true;
                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);
                break;
        }
        return _this;
    }
    Subscriber.prototype[__WEBPACK_IMPORTED_MODULE_4__internal_symbol_rxSubscriber__["a" /* rxSubscriber */]] = function () { return this; };
    Subscriber.create = function (next, error, complete) {
        var subscriber = new Subscriber(next, error, complete);
        subscriber.syncErrorThrowable = false;
        return subscriber;
    };
    Subscriber.prototype.next = function (value) {
        if (!this.isStopped) {
            this._next(value);
        }
    };
    Subscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            this.isStopped = true;
            this._error(err);
        }
    };
    Subscriber.prototype.complete = function () {
        if (!this.isStopped) {
            this.isStopped = true;
            this._complete();
        }
    };
    Subscriber.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.isStopped = true;
        _super.prototype.unsubscribe.call(this);
    };
    Subscriber.prototype._next = function (value) {
        this.destination.next(value);
    };
    Subscriber.prototype._error = function (err) {
        this.destination.error(err);
        this.unsubscribe();
    };
    Subscriber.prototype._complete = function () {
        this.destination.complete();
        this.unsubscribe();
    };
    Subscriber.prototype._unsubscribeAndRecycle = function () {
        var _parentOrParents = this._parentOrParents;
        this._parentOrParents = null;
        this.unsubscribe();
        this.closed = false;
        this.isStopped = false;
        this._parentOrParents = _parentOrParents;
        return this;
    };
    return Subscriber;
}(__WEBPACK_IMPORTED_MODULE_3__Subscription__["a" /* Subscription */]));

var SafeSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SafeSubscriber, _super);
    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {
        var _this = _super.call(this) || this;
        _this._parentSubscriber = _parentSubscriber;
        var next;
        var context = _this;
        if (Object(__WEBPACK_IMPORTED_MODULE_1__util_isFunction__["a" /* isFunction */])(observerOrNext)) {
            next = observerOrNext;
        }
        else if (observerOrNext) {
            next = observerOrNext.next;
            error = observerOrNext.error;
            complete = observerOrNext.complete;
            if (observerOrNext !== __WEBPACK_IMPORTED_MODULE_2__Observer__["a" /* empty */]) {
                context = Object.create(observerOrNext);
                if (Object(__WEBPACK_IMPORTED_MODULE_1__util_isFunction__["a" /* isFunction */])(context.unsubscribe)) {
                    _this.add(context.unsubscribe.bind(context));
                }
                context.unsubscribe = _this.unsubscribe.bind(_this);
            }
        }
        _this._context = context;
        _this._next = next;
        _this._error = error;
        _this._complete = complete;
        return _this;
    }
    SafeSubscriber.prototype.next = function (value) {
        if (!this.isStopped && this._next) {
            var _parentSubscriber = this._parentSubscriber;
            if (!__WEBPACK_IMPORTED_MODULE_5__config__["a" /* config */].useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                this.__tryOrUnsub(this._next, value);
            }
            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _parentSubscriber = this._parentSubscriber;
            var useDeprecatedSynchronousErrorHandling = __WEBPACK_IMPORTED_MODULE_5__config__["a" /* config */].useDeprecatedSynchronousErrorHandling;
            if (this._error) {
                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                    this.__tryOrUnsub(this._error, err);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parentSubscriber, this._error, err);
                    this.unsubscribe();
                }
            }
            else if (!_parentSubscriber.syncErrorThrowable) {
                this.unsubscribe();
                if (useDeprecatedSynchronousErrorHandling) {
                    throw err;
                }
                Object(__WEBPACK_IMPORTED_MODULE_6__util_hostReportError__["a" /* hostReportError */])(err);
            }
            else {
                if (useDeprecatedSynchronousErrorHandling) {
                    _parentSubscriber.syncErrorValue = err;
                    _parentSubscriber.syncErrorThrown = true;
                }
                else {
                    Object(__WEBPACK_IMPORTED_MODULE_6__util_hostReportError__["a" /* hostReportError */])(err);
                }
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.complete = function () {
        var _this = this;
        if (!this.isStopped) {
            var _parentSubscriber = this._parentSubscriber;
            if (this._complete) {
                var wrappedComplete = function () { return _this._complete.call(_this._context); };
                if (!__WEBPACK_IMPORTED_MODULE_5__config__["a" /* config */].useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                    this.__tryOrUnsub(wrappedComplete);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);
                    this.unsubscribe();
                }
            }
            else {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            this.unsubscribe();
            if (__WEBPACK_IMPORTED_MODULE_5__config__["a" /* config */].useDeprecatedSynchronousErrorHandling) {
                throw err;
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_6__util_hostReportError__["a" /* hostReportError */])(err);
            }
        }
    };
    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {
        if (!__WEBPACK_IMPORTED_MODULE_5__config__["a" /* config */].useDeprecatedSynchronousErrorHandling) {
            throw new Error('bad call');
        }
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            if (__WEBPACK_IMPORTED_MODULE_5__config__["a" /* config */].useDeprecatedSynchronousErrorHandling) {
                parent.syncErrorValue = err;
                parent.syncErrorThrown = true;
                return true;
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_6__util_hostReportError__["a" /* hostReportError */])(err);
                return true;
            }
        }
        return false;
    };
    SafeSubscriber.prototype._unsubscribe = function () {
        var _parentSubscriber = this._parentSubscriber;
        this._context = null;
        this._parentSubscriber = null;
        _parentSubscriber.unsubscribe();
    };
    return SafeSubscriber;
}(Subscriber));

//# sourceMappingURL=Subscriber.js.map


/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Observable; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_canReportError__ = __webpack_require__(45);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_toSubscriber__ = __webpack_require__(255);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__symbol_observable__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_pipe__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__config__ = __webpack_require__(33);
/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */





var Observable = /*@__PURE__*/ (function () {
    function Observable(subscribe) {
        this._isScalar = false;
        if (subscribe) {
            this._subscribe = subscribe;
        }
    }
    Observable.prototype.lift = function (operator) {
        var observable = new Observable();
        observable.source = this;
        observable.operator = operator;
        return observable;
    };
    Observable.prototype.subscribe = function (observerOrNext, error, complete) {
        var operator = this.operator;
        var sink = Object(__WEBPACK_IMPORTED_MODULE_1__util_toSubscriber__["a" /* toSubscriber */])(observerOrNext, error, complete);
        if (operator) {
            sink.add(operator.call(sink, this.source));
        }
        else {
            sink.add(this.source || (__WEBPACK_IMPORTED_MODULE_4__config__["a" /* config */].useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?
                this._subscribe(sink) :
                this._trySubscribe(sink));
        }
        if (__WEBPACK_IMPORTED_MODULE_4__config__["a" /* config */].useDeprecatedSynchronousErrorHandling) {
            if (sink.syncErrorThrowable) {
                sink.syncErrorThrowable = false;
                if (sink.syncErrorThrown) {
                    throw sink.syncErrorValue;
                }
            }
        }
        return sink;
    };
    Observable.prototype._trySubscribe = function (sink) {
        try {
            return this._subscribe(sink);
        }
        catch (err) {
            if (__WEBPACK_IMPORTED_MODULE_4__config__["a" /* config */].useDeprecatedSynchronousErrorHandling) {
                sink.syncErrorThrown = true;
                sink.syncErrorValue = err;
            }
            if (Object(__WEBPACK_IMPORTED_MODULE_0__util_canReportError__["a" /* canReportError */])(sink)) {
                sink.error(err);
            }
            else {
                console.warn(err);
            }
        }
    };
    Observable.prototype.forEach = function (next, promiseCtor) {
        var _this = this;
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
            var subscription;
            subscription = _this.subscribe(function (value) {
                try {
                    next(value);
                }
                catch (err) {
                    reject(err);
                    if (subscription) {
                        subscription.unsubscribe();
                    }
                }
            }, reject, resolve);
        });
    };
    Observable.prototype._subscribe = function (subscriber) {
        var source = this.source;
        return source && source.subscribe(subscriber);
    };
    Observable.prototype[__WEBPACK_IMPORTED_MODULE_2__symbol_observable__["a" /* observable */]] = function () {
        return this;
    };
    Observable.prototype.pipe = function () {
        var operations = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            operations[_i] = arguments[_i];
        }
        if (operations.length === 0) {
            return this;
        }
        return Object(__WEBPACK_IMPORTED_MODULE_3__util_pipe__["b" /* pipeFromArray */])(operations)(this);
    };
    Observable.prototype.toPromise = function (promiseCtor) {
        var _this = this;
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
            var value;
            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });
        });
    };
    Observable.create = function (subscribe) {
        return new Observable(subscribe);
    };
    return Observable;
}());

function getPromiseCtor(promiseCtor) {
    if (!promiseCtor) {
        promiseCtor = __WEBPACK_IMPORTED_MODULE_4__config__["a" /* config */].Promise || Promise;
    }
    if (!promiseCtor) {
        throw new Error('no Promise impl found');
    }
    return promiseCtor;
}
//# sourceMappingURL=Observable.js.map


/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return OuterSubscriber; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


var OuterSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](OuterSubscriber, _super);
    function OuterSubscriber() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    OuterSubscriber.prototype.notifyError = function (error, innerSub) {
        this.destination.error(error);
    };
    OuterSubscriber.prototype.notifyComplete = function (innerSub) {
        this.destination.complete();
    };
    return OuterSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));

//# sourceMappingURL=OuterSubscriber.js.map


/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = subscribeToResult;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__InnerSubscriber__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__subscribeTo__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Observable__ = __webpack_require__(3);
/** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo,_Observable PURE_IMPORTS_END */



function subscribeToResult(outerSubscriber, result, outerValue, outerIndex, innerSubscriber) {
    if (innerSubscriber === void 0) {
        innerSubscriber = new __WEBPACK_IMPORTED_MODULE_0__InnerSubscriber__["a" /* InnerSubscriber */](outerSubscriber, outerValue, outerIndex);
    }
    if (innerSubscriber.closed) {
        return undefined;
    }
    if (result instanceof __WEBPACK_IMPORTED_MODULE_2__Observable__["a" /* Observable */]) {
        return result.subscribe(innerSubscriber);
    }
    return Object(__WEBPACK_IMPORTED_MODULE_1__subscribeTo__["a" /* subscribeTo */])(result)(innerSubscriber);
}
//# sourceMappingURL=subscribeToResult.js.map


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(232);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var disableClass = 'brtc-state-disabled';
var errorFunction = function errorFunction(key) {
    return console.error(key + ' is undefined function');
};

var Base = function () {
    function Base($el, options) {
        _classCallCheck(this, Base);

        this.create($el, options);
    }

    _createClass(Base, [{
        key: 'create',
        value: function create($el, opt) {
            this.$elem = $el;
        }

        // Option get

    }, {
        key: 'getOption',
        value: function getOption(optNm) {
            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
            }

            return {
                'disabled': this._getDisabled,
                'value': this._getValue
            }[optNm].apply(this, args);
        }

        // Option setting

    }, {
        key: 'setOption',
        value: function setOption(opts) {
            var _this = this;

            this.lazyExecuteList = this.lazyExecuteList ? this.lazyExecuteList : [];
            this.lazyExecuteQueue = [];
            this.applyOpt = this._getForcePropertyList();

            Object.entries(opts).map(function (_ref) {
                var _ref2 = _slicedToArray(_ref, 2),
                    key = _ref2[0],
                    value = _ref2[1];

                return [key, _this._getPropertyList(key), value, _this.lazyExecuteList.some(function (lazy) {
                    return lazy === key;
                })];
            }).filter(function (_ref3) {
                var _ref4 = _slicedToArray(_ref3, 2),
                    key = _ref4[0],
                    func = _ref4[1];

                return !func ? errorFunction(key) && false : !!func;
            }).filter(function (_ref5) {
                var _ref6 = _slicedToArray(_ref5, 4),
                    func = _ref6[1],
                    value = _ref6[2],
                    lazy = _ref6[3];

                return lazy ? _this.lazyExecuteQueue.push(function () {
                    return func.call(_this, value);
                }) && false : !lazy;
            }).forEach(function (_ref7) {
                var _ref8 = _slicedToArray(_ref7, 3),
                    key = _ref8[0],
                    func = _ref8[1],
                    value = _ref8[2];

                func.call(_this, value);
            });
            this._applyOption(this.applyOpt);
            this.lazyExecuteQueue.forEach(function (func) {
                return func.call();
            });
        }

        // Method call

    }, {
        key: 'execute',
        value: function execute(name) {
            for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
            }

            return this._getMethodList(name).apply(this, args);
        }

        // EventCallback binding

    }, {
        key: 'subscribe',
        value: function subscribe(name) {
            var func = this._getEventList(name) || errorFunction(name);

            for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
                args[_key3 - 1] = arguments[_key3];
            }

            func.apply(this, args);
        }
    }, {
        key: '_setPreValue',
        value: function _setPreValue(preVal) {
            this._preValue = JSON.stringify(preVal);
        }
    }, {
        key: '_isChanged',
        value: function _isChanged(currentVal) {
            if (this._preValue !== JSON.stringify(currentVal)) {
                this._setPreValue(currentVal);
                return true;
            } else {
                return false;
            }
        }
    }, {
        key: '_setOnChange',
        value: function _setOnChange(func) {
            if (typeof func === 'function') {
                this.$elem.on('change', function (evt) {
                    // eslint-disable-next-line no-invalid-this
                    func.bind(this)(evt);
                });
            }
        }
    }, {
        key: '_setDisabled',
        value: function _setDisabled(val) {
            if (val === true) {
                this.$elem.addClass(disableClass);
            } else {
                this.$elem.removeClass(disableClass);
            }
        }

        // Base.prototype._getDisabled = function () {
        //     return getDisable(this.$elem)
        // };

    }, {
        key: '_setValue',
        value: function _setValue(val) {}
    }, {
        key: '_getValue',
        value: function _getValue() {}
    }, {
        key: '_addEvent',
        value: function _addEvent(evtNm, callback) {
            this.$elem.on(evtNm, callback);
        }
    }, {
        key: '_getPropertyList',
        value: function _getPropertyList(attrNm) {
            var setters = {};
            return setters[attrNm];
        }
    }, {
        key: '_getEventList',
        value: function _getEventList(name) {
            return {}[name];
        }
    }, {
        key: '_getMethodList',
        value: function _getMethodList(name) {
            return {}[name];
        }
    }, {
        key: '_getForcePropertyList',
        value: function _getForcePropertyList() {
            return {};
        }
    }, {
        key: '_applyOption',
        value: function _applyOption() {}
    }]);

    return Base;
}();

exports.default = Base;

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Subscription; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_isArray__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_isObject__ = __webpack_require__(47);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isFunction__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_UnsubscriptionError__ = __webpack_require__(200);
/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */




var Subscription = /*@__PURE__*/ (function () {
    function Subscription(unsubscribe) {
        this.closed = false;
        this._parentOrParents = null;
        this._subscriptions = null;
        if (unsubscribe) {
            this._unsubscribe = unsubscribe;
        }
    }
    Subscription.prototype.unsubscribe = function () {
        var errors;
        if (this.closed) {
            return;
        }
        var _a = this, _parentOrParents = _a._parentOrParents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;
        this.closed = true;
        this._parentOrParents = null;
        this._subscriptions = null;
        if (_parentOrParents instanceof Subscription) {
            _parentOrParents.remove(this);
        }
        else if (_parentOrParents !== null) {
            for (var index = 0; index < _parentOrParents.length; ++index) {
                var parent_1 = _parentOrParents[index];
                parent_1.remove(this);
            }
        }
        if (Object(__WEBPACK_IMPORTED_MODULE_2__util_isFunction__["a" /* isFunction */])(_unsubscribe)) {
            try {
                _unsubscribe.call(this);
            }
            catch (e) {
                errors = e instanceof __WEBPACK_IMPORTED_MODULE_3__util_UnsubscriptionError__["a" /* UnsubscriptionError */] ? flattenUnsubscriptionErrors(e.errors) : [e];
            }
        }
        if (Object(__WEBPACK_IMPORTED_MODULE_0__util_isArray__["a" /* isArray */])(_subscriptions)) {
            var index = -1;
            var len = _subscriptions.length;
            while (++index < len) {
                var sub = _subscriptions[index];
                if (Object(__WEBPACK_IMPORTED_MODULE_1__util_isObject__["a" /* isObject */])(sub)) {
                    try {
                        sub.unsubscribe();
                    }
                    catch (e) {
                        errors = errors || [];
                        if (e instanceof __WEBPACK_IMPORTED_MODULE_3__util_UnsubscriptionError__["a" /* UnsubscriptionError */]) {
                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));
                        }
                        else {
                            errors.push(e);
                        }
                    }
                }
            }
        }
        if (errors) {
            throw new __WEBPACK_IMPORTED_MODULE_3__util_UnsubscriptionError__["a" /* UnsubscriptionError */](errors);
        }
    };
    Subscription.prototype.add = function (teardown) {
        var subscription = teardown;
        if (!teardown) {
            return Subscription.EMPTY;
        }
        switch (typeof teardown) {
            case 'function':
                subscription = new Subscription(teardown);
            case 'object':
                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {
                    return subscription;
                }
                else if (this.closed) {
                    subscription.unsubscribe();
                    return subscription;
                }
                else if (!(subscription instanceof Subscription)) {
                    var tmp = subscription;
                    subscription = new Subscription();
                    subscription._subscriptions = [tmp];
                }
                break;
            default: {
                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');
            }
        }
        var _parentOrParents = subscription._parentOrParents;
        if (_parentOrParents === null) {
            subscription._parentOrParents = this;
        }
        else if (_parentOrParents instanceof Subscription) {
            if (_parentOrParents === this) {
                return subscription;
            }
            subscription._parentOrParents = [_parentOrParents, this];
        }
        else if (_parentOrParents.indexOf(this) === -1) {
            _parentOrParents.push(this);
        }
        else {
            return subscription;
        }
        var subscriptions = this._subscriptions;
        if (subscriptions === null) {
            this._subscriptions = [subscription];
        }
        else {
            subscriptions.push(subscription);
        }
        return subscription;
    };
    Subscription.prototype.remove = function (subscription) {
        var subscriptions = this._subscriptions;
        if (subscriptions) {
            var subscriptionIndex = subscriptions.indexOf(subscription);
            if (subscriptionIndex !== -1) {
                subscriptions.splice(subscriptionIndex, 1);
            }
        }
    };
    Subscription.EMPTY = (function (empty) {
        empty.closed = true;
        return empty;
    }(new Subscription()));
    return Subscription;
}());

function flattenUnsubscriptionErrors(errors) {
    return errors.reduce(function (errs, err) { return errs.concat((err instanceof __WEBPACK_IMPORTED_MODULE_3__util_UnsubscriptionError__["a" /* UnsubscriptionError */]) ? err.errors : err); }, []);
}
//# sourceMappingURL=Subscription.js.map


/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_juijs__ = __webpack_require__(250);

/* harmony default export */ __webpack_exports__["default"] = (__WEBPACK_IMPORTED_MODULE_0_juijs__["a" /* default */]);

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v3.5.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2020-05-04T22:49Z
 */
( function( global, factory ) {

	"use strict";

	if ( typeof module === "object" && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var flat = arr.flat ? function( array ) {
	return arr.flat.call( array );
} : function( array ) {
	return arr.concat.apply( [], array );
};


var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

      // Support: Chrome <=57, Firefox <=52
      // In some browsers, typeof returns "function" for HTML <object> elements
      // (i.e., `typeof document.createElement( "object" ) === "function"`).
      // We don't want to classify *any* DOM node as a function.
      return typeof obj === "function" && typeof obj.nodeType !== "number";
  };


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};


var document = window.document;



	var preservedScriptAttributes = {
		type: true,
		src: true,
		nonce: true,
		noModule: true
	};

	function DOMEval( code, node, doc ) {
		doc = doc || document;

		var i, val,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {

				// Support: Firefox 64+, Edge 18+
				// Some browsers don't support the "nonce" property on scripts.
				// On the other hand, just using `getAttribute` is not enough as
				// the `nonce` attribute is reset to an empty string whenever it
				// becomes browsing-context connected.
				// See https://github.com/whatwg/html/issues/2369
				// See https://html.spec.whatwg.org/#nonce-attributes
				// The `node.getAttribute` check was added for the sake of
				// `jQuery.globalEval` so that it can fake a nonce-containing node
				// via an object.
				val = node[ i ] || node.getAttribute && node.getAttribute( i );
				if ( val ) {
					script.setAttribute( i, val );
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.5.1",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	even: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return ( i + 1 ) % 2;
		} ) );
	},

	odd: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return i % 2;
		} ) );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				copy = options[ name ];

				// Prevent Object.prototype pollution
				// Prevent never-ending loop
				if ( name === "__proto__" || target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {
					src = target[ name ];

					// Ensure proper type for the source value
					if ( copyIsArray && !Array.isArray( src ) ) {
						clone = [];
					} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {
						clone = {};
					} else {
						clone = src;
					}
					copyIsArray = false;

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a provided context; falls back to the global one
	// if not specified.
	globalEval: function( code, options, doc ) {
		DOMEval( code, { nonce: options && options.nonce }, doc );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return flat( ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( _i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.5
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2020-03-14
 */
( function( window ) {
var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	nonnativeSelectorCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ( {} ).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	pushNative = arr.push,
	push = arr.push,
	slice = arr.slice,

	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[ i ] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|" +
		"ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
	identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace +
		"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +

		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +

		// "Attribute values must be CSS identifiers [capture 5]
		// or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" +
		whitespace + "*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +

		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +

		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +

		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" +
		whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace +
		"*" ),
	rdescend = new RegExp( whitespace + "|>" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
			whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" +
			whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),

		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace +
			"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace +
			"*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rhtml = /HTML$/i,
	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g" ),
	funescape = function( escape, nonHex ) {
		var high = "0x" + escape.slice( 1 ) - 0x10000;

		return nonHex ?

			// Strip the backslash prefix from a non-hex escape sequence
			nonHex :

			// Replace a hexadecimal escape sequence with the encoded Unicode code point
			// Support: IE <=11+
			// For values outside the Basic Multilingual Plane (BMP), manually construct a
			// surrogate pair
			high < 0 ?
				String.fromCharCode( high + 0x10000 ) :
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" +
				ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	inDisabledFieldset = addCombinator(
		function( elem ) {
			return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		( arr = slice.call( preferredDoc.childNodes ) ),
		preferredDoc.childNodes
	);

	// Support: Android<4.0
	// Detect silently failing push.apply
	// eslint-disable-next-line no-unused-expressions
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			pushNative.apply( target, slice.call( els ) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;

			// Can't trust NodeList.length
			while ( ( target[ j++ ] = els[ i++ ] ) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {
		setDocument( context );
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {

				// ID selector
				if ( ( m = match[ 1 ] ) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( ( elem = context.getElementById( m ) ) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && ( elem = newContext.getElementById( m ) ) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[ 2 ] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!nonnativeSelectorCache[ selector + " " ] &&
				( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&

				// Support: IE 8 only
				// Exclude object elements
				( nodeType !== 1 || context.nodeName.toLowerCase() !== "object" ) ) {

				newSelector = selector;
				newContext = context;

				// qSA considers elements outside a scoping root when evaluating child or
				// descendant combinators, which is not what we want.
				// In such cases, we work around the behavior by prefixing every selector in the
				// list with an ID selector referencing the scope context.
				// The technique has to be used as well when a leading combinator is used
				// as such selectors are not recognized by querySelectorAll.
				// Thanks to Andrew Dupont for this technique.
				if ( nodeType === 1 &&
					( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;

					// We can use :scope instead of the ID hack if the browser
					// supports it & if we're not changing the context.
					if ( newContext !== context || !support.scope ) {

						// Capture the context ID, setting it first if necessary
						if ( ( nid = context.getAttribute( "id" ) ) ) {
							nid = nid.replace( rcssescape, fcssescape );
						} else {
							context.setAttribute( "id", ( nid = expando ) );
						}
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[ i ] = ( nid ? "#" + nid : ":scope" ) + " " +
							toSelector( groups[ i ] );
					}
					newSelector = groups.join( "," );
				}

				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch ( qsaError ) {
					nonnativeSelectorCache( selector, true );
				} finally {
					if ( nid === expando ) {
						context.removeAttribute( "id" );
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {

		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {

			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return ( cache[ key + " " ] = value );
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement( "fieldset" );

	try {
		return !!fn( el );
	} catch ( e ) {
		return false;
	} finally {

		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}

		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split( "|" ),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[ i ] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( ( cur = cur.nextSibling ) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return ( name === "input" || name === "button" ) && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
					inDisabledFieldset( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction( function( argument ) {
		argument = +argument;
		return markFunction( function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ ( j = matchIndexes[ i ] ) ] ) {
					seed[ j ] = !( matches[ j ] = seed[ j ] );
				}
			}
		} );
	} );
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	var namespace = elem.namespaceURI,
		docElem = ( elem.ownerDocument || elem ).documentElement;

	// Support: IE <=8
	// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
	// https://bugs.jquery.com/ticket/4833
	return !rhtml.test( namespace || docElem && docElem.nodeName || "HTML" );
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9 - 11+, Edge 12 - 18+
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( preferredDoc != document &&
		( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
	// Safari 4 - 5 only, Opera <=11.6 - 12.x only
	// IE/Edge & older browsers don't support the :scope pseudo-class.
	// Support: Safari 6.0 only
	// Safari 6.0 supports :scope but it's an alias of :root there.
	support.scope = assert( function( el ) {
		docElem.appendChild( el ).appendChild( document.createElement( "div" ) );
		return typeof el.querySelectorAll !== "undefined" &&
			!el.querySelectorAll( ":scope fieldset div" ).length;
	} );

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert( function( el ) {
		el.className = "i";
		return !el.getAttribute( "className" );
	} );

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert( function( el ) {
		el.appendChild( document.createComment( "" ) );
		return !el.getElementsByTagName( "*" ).length;
	} );

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert( function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	} );

	// ID filter and find
	if ( support.getById ) {
		Expr.filter[ "ID" ] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute( "id" ) === attrId;
			};
		};
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter[ "ID" ] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode( "id" );
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode( "id" );
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( ( elem = elems[ i++ ] ) ) {
						node = elem.getAttributeNode( "id" );
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find[ "TAG" ] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,

				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( ( elem = results[ i++ ] ) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find[ "CLASS" ] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {

		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert( function( el ) {

			var input;

			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll( "[msallowcapture^='']" ).length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll( "[selected]" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push( "~=" );
			}

			// Support: IE 11+, Edge 15 - 18+
			// IE 11/Edge don't find elements on a `[name='']` query in some cases.
			// Adding a temporary attribute to the document before the selection works
			// around the issue.
			// Interestingly, IE 10 & older don't seem to have the issue.
			input = document.createElement( "input" );
			input.setAttribute( "name", "" );
			el.appendChild( input );
			if ( !el.querySelectorAll( "[name='']" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*name" + whitespace + "*=" +
					whitespace + "*(?:''|\"\")" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll( ":checked" ).length ) {
				rbuggyQSA.push( ":checked" );
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push( ".#.+[+~]" );
			}

			// Support: Firefox <=3.6 - 5 only
			// Old Firefox doesn't throw on a badly-escaped identifier.
			el.querySelectorAll( "\\\f" );
			rbuggyQSA.push( "[\\r\\n\\f]" );
		} );

		assert( function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement( "input" );
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll( "[name=d]" ).length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll( ":enabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll( ":disabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: Opera 10 - 11 only
			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll( "*,:x" );
			rbuggyQSA.push( ",.*:" );
		} );
	}

	if ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector ) ) ) ) {

		assert( function( el ) {

			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		} );
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( "|" ) );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( "|" ) );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			) );
		} :
		function( a, b ) {
			if ( b ) {
				while ( ( b = b.parentNode ) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		// Support: IE 11+, Edge 17 - 18+
		// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
		// two documents; shallow comparisons work.
		// eslint-disable-next-line eqeqeq
		compare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {

			// Choose the first element that is related to our preferred document
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( a == document || a.ownerDocument == preferredDoc &&
				contains( preferredDoc, a ) ) {
				return -1;
			}

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( b == document || b.ownerDocument == preferredDoc &&
				contains( preferredDoc, b ) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {

		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			return a == document ? -1 :
				b == document ? 1 :
				/* eslint-enable eqeqeq */
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( ( cur = cur.parentNode ) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( ( cur = cur.parentNode ) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[ i ] === bp[ i ] ) {
			i++;
		}

		return i ?

			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[ i ], bp[ i ] ) :

			// Otherwise nodes in our document sort first
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			ap[ i ] == preferredDoc ? -1 :
			bp[ i ] == preferredDoc ? 1 :
			/* eslint-enable eqeqeq */
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	setDocument( elem );

	if ( support.matchesSelector && documentIsHTML &&
		!nonnativeSelectorCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||

				// As well, disconnected nodes are said to be in a document
				// fragment in IE 9
				elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch ( e ) {
			nonnativeSelectorCache( expr, true );
		}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( context.ownerDocument || context ) != document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( elem.ownerDocument || elem ) != document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],

		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			( val = elem.getAttributeNode( name ) ) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return ( sel + "" ).replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( ( elem = results[ i++ ] ) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {

		// If no nodeType, this is expected to be an array
		while ( ( node = elem[ i++ ] ) ) {

			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {

		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {

			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}

	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[ 1 ] = match[ 1 ].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[ 3 ] = ( match[ 3 ] || match[ 4 ] ||
				match[ 5 ] || "" ).replace( runescape, funescape );

			if ( match[ 2 ] === "~=" ) {
				match[ 3 ] = " " + match[ 3 ] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {

			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[ 1 ] = match[ 1 ].toLowerCase();

			if ( match[ 1 ].slice( 0, 3 ) === "nth" ) {

				// nth-* requires argument
				if ( !match[ 3 ] ) {
					Sizzle.error( match[ 0 ] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[ 4 ] = +( match[ 4 ] ?
					match[ 5 ] + ( match[ 6 ] || 1 ) :
					2 * ( match[ 3 ] === "even" || match[ 3 ] === "odd" ) );
				match[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === "odd" );

				// other types prohibit arguments
			} else if ( match[ 3 ] ) {
				Sizzle.error( match[ 0 ] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[ 6 ] && match[ 2 ];

			if ( matchExpr[ "CHILD" ].test( match[ 0 ] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[ 3 ] ) {
				match[ 2 ] = match[ 4 ] || match[ 5 ] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&

				// Get excess from tokenize (recursively)
				( excess = tokenize( unquoted, true ) ) &&

				// advance to the next closing parenthesis
				( excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length ) ) {

				// excess is a negative index
				match[ 0 ] = match[ 0 ].slice( 0, excess );
				match[ 2 ] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() {
					return true;
				} :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				( pattern = new RegExp( "(^|" + whitespace +
					")" + className + "(" + whitespace + "|$)" ) ) && classCache(
						className, function( elem ) {
							return pattern.test(
								typeof elem.className === "string" && elem.className ||
								typeof elem.getAttribute !== "undefined" &&
									elem.getAttribute( "class" ) ||
								""
							);
				} );
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				/* eslint-disable max-len */

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
				/* eslint-enable max-len */

			};
		},

		"CHILD": function( type, what, _argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, _context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( ( node = node[ dir ] ) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}

								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || ( node[ expando ] = {} );

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								( outerCache[ node.uniqueID ] = {} );

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( ( node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								( diff = nodeIndex = 0 ) || start.pop() ) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {

							// Use previously-cached element index if available
							if ( useCache ) {

								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || ( node[ expando ] = {} );

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									( outerCache[ node.uniqueID ] = {} );

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {

								// Use the same loop as above to seek `elem` from the start
								while ( ( node = ++nodeIndex && node && node[ dir ] ||
									( diff = nodeIndex = 0 ) || start.pop() ) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] ||
												( node[ expando ] = {} );

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												( outerCache[ node.uniqueID ] = {} );

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {

			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction( function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[ i ] );
							seed[ idx ] = !( matches[ idx ] = matched[ i ] );
						}
					} ) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {

		// Potentially complex pseudos
		"not": markFunction( function( selector ) {

			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction( function( seed, matches, _context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( ( elem = unmatched[ i ] ) ) {
							seed[ i ] = !( matches[ i ] = elem );
						}
					}
				} ) :
				function( elem, _context, xml ) {
					input[ 0 ] = elem;
					matcher( input, null, xml, results );

					// Don't keep the element (issue #299)
					input[ 0 ] = null;
					return !results.pop();
				};
		} ),

		"has": markFunction( function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		} ),

		"contains": markFunction( function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;
			};
		} ),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {

			// lang value must be a valid identifier
			if ( !ridentifier.test( lang || "" ) ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( ( elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute( "xml:lang" ) || elem.getAttribute( "lang" ) ) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );
				return false;
			};
		} ),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement &&
				( !document.hasFocus || document.hasFocus() ) &&
				!!( elem.type || elem.href || ~elem.tabIndex );
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {

			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return ( nodeName === "input" && !!elem.checked ) ||
				( nodeName === "option" && !!elem.selected );
		},

		"selected": function( elem ) {

			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				// eslint-disable-next-line no-unused-expressions
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {

			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos[ "empty" ]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( ( attr = elem.getAttribute( "type" ) ) == null ||
					attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo( function() {
			return [ 0 ];
		} ),

		"last": createPositionalPseudo( function( _matchIndexes, length ) {
			return [ length - 1 ];
		} ),

		"eq": createPositionalPseudo( function( _matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		} ),

		"even": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"odd": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"lt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ?
				argument + length :
				argument > length ?
					length :
					argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"gt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} )
	}
};

Expr.pseudos[ "nth" ] = Expr.pseudos[ "eq" ];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || ( match = rcomma.exec( soFar ) ) ) {
			if ( match ) {

				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[ 0 ].length ) || soFar;
			}
			groups.push( ( tokens = [] ) );
		}

		matched = false;

		// Combinators
		if ( ( match = rcombinators.exec( soFar ) ) ) {
			matched = match.shift();
			tokens.push( {
				value: matched,

				// Cast descendant combinators to space
				type: match[ 0 ].replace( rtrim, " " )
			} );
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||
				( match = preFilters[ type ]( match ) ) ) ) {
				matched = match.shift();
				tokens.push( {
					value: matched,
					type: type,
					matches: match
				} );
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :

			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[ i ].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?

		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( ( elem = elem[ dir ] ) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || ( elem[ expando ] = {} );

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] ||
							( outerCache[ elem.uniqueID ] = {} );

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( ( oldCache = uniqueCache[ key ] ) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return ( newCache[ 2 ] = oldCache[ 2 ] );
						} else {

							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[ i ]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[ 0 ];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[ i ], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( ( elem = unmatched[ i ] ) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction( function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts(
				selector || "*",
				context.nodeType ? [ context ] : context,
				[]
			),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?

				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( ( elem = temp[ i ] ) ) {
					matcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {

					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( ( elem = matcherOut[ i ] ) ) {

							// Restore matcherIn since elem is not yet a final match
							temp.push( ( matcherIn[ i ] = elem ) );
						}
					}
					postFinder( null, ( matcherOut = [] ), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( ( elem = matcherOut[ i ] ) &&
						( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {

						seed[ temp ] = !( results[ temp ] = elem );
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	} );
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[ 0 ].type ],
		implicitRelative = leadingRelative || Expr.relative[ " " ],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				( checkContext = context ).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );

			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {
			matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];
		} else {
			matcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {

				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[ j ].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(

					// If the preceding token was a descendant combinator, insert an implicit any-element `*`
					tokens
						.slice( 0, i - 1 )
						.concat( { value: tokens[ i - 2 ].type === " " ? "*" : "" } )
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,

				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find[ "TAG" ]( "*", outermost ),

				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),
				len = elems.length;

			if ( outermost ) {

				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				outermostContext = context == document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;

					// Support: IE 11+, Edge 17 - 18+
					// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
					// two documents; shallow comparisons work.
					// eslint-disable-next-line eqeqeq
					if ( !context && elem.ownerDocument != document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( ( matcher = elementMatchers[ j++ ] ) ) {
						if ( matcher( elem, context || document, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {

					// They will have gone through all possible matchers
					if ( ( elem = !matcher && elem ) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( ( matcher = setMatchers[ j++ ] ) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {

					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !( unmatched[ i ] || setMatched[ i ] ) ) {
								setMatched[ i ] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {

		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[ i ] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache(
			selector,
			matcherFromGroupMatchers( elementMatchers, setMatchers )
		);

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( ( selector = compiled.selector || selector ) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[ 0 ] = match[ 0 ].slice( 0 );
		if ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === "ID" &&
			context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {

			context = ( Expr.find[ "ID" ]( token.matches[ 0 ]
				.replace( runescape, funescape ), context ) || [] )[ 0 ];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr[ "needsContext" ].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[ i ];

			// Abort if we hit a combinator
			if ( Expr.relative[ ( type = token.type ) ] ) {
				break;
			}
			if ( ( find = Expr.find[ type ] ) ) {

				// Search, expanding context for leading sibling combinators
				if ( ( seed = find(
					token.matches[ 0 ].replace( runescape, funescape ),
					rsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||
						context
				) ) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split( "" ).sort( sortOrder ).join( "" ) === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert( function( el ) {

	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement( "fieldset" ) ) & 1;
} );

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert( function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute( "href" ) === "#";
} ) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	} );
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert( function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
} ) ) {
	addHandle( "value", function( elem, _name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	} );
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert( function( el ) {
	return el.getAttribute( "disabled" ) == null;
} ) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
				( val = elem.getAttributeNode( name ) ) && val.specified ?
					val.value :
					null;
		}
	} );
}

return Sizzle;

} )( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

};
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, _i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, _i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, _i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		if ( elem.contentDocument != null &&

			// Support: IE 11+
			// <object> elements with no `data` attribute has an object
			// `contentDocument` with a `null` prototype.
			getProto( elem.contentDocument ) ) {

			return elem.contentDocument;
		}

		// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
		// Treat the template element as a regular one in browsers that
		// don't support it.
		if ( nodeName( elem, "template" ) ) {
			elem = elem.content || elem;
		}

		return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( _i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the master Deferred
			master = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						master.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( master.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return master.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
		}

		return master.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, _key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
					value :
					value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( _all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var documentElement = document.documentElement;



	var isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem );
		},
		composed = { composed: true };

	// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
	// Check attachment across shadow DOM boundaries when possible (gh-3504)
	// Support: iOS 10.0-10.2 only
	// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
	// leading to errors. We need to check for `getRootNode`.
	if ( documentElement.getRootNode ) {
		isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem ) ||
				elem.getRootNode( composed ) === elem.ownerDocument;
		};
	}
var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			isAttached( elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = elem.nodeType &&
			( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]*)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// Support: IE <=9 only
	// IE <=9 replaces <option> tags with their contents when inserted outside of
	// the select element.
	div.innerHTML = "<option></option>";
	support.option = !!div.lastChild;
} )();


// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// Support: IE <=9 only
if ( !support.option ) {
	wrapMap.optgroup = wrapMap.option = [ 1, "<select multiple='multiple'>", "</select>" ];
}


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, attached, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		attached = isAttached( elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( attached ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 - 11+
// focus() and blur() are asynchronous, except when they are no-op.
// So expect focus to be synchronous when the element is already active,
// and blur to be synchronous when the element is not already active.
// (focus and blur are always synchronous in other supported browsers,
// this just defines when we can count on it).
function expectSync( elem, type ) {
	return ( elem === safeActiveElement() ) === ( type === "focus" );
}

// Support: IE <=9 only
// Accessing document.activeElement can throw unexpectedly
// https://bugs.jquery.com/ticket/13393
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Only attach events to objects that accept data
		if ( !acceptData( elem ) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = Object.create( null );
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( nativeEvent ),

			handlers = (
					dataPriv.get( this, "events" ) || Object.create( null )
				)[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// If the event is namespaced, then each handler is only invoked if it is
				// specially universal or its namespaces are a superset of the event's.
				if ( !event.rnamespace || handleObj.namespace === false ||
					event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
							return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
							return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		click: {

			// Utilize native event to ensure correct state for checkable inputs
			setup: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Claim the first handler
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					// dataPriv.set( el, "click", ... )
					leverageNative( el, "click", returnTrue );
				}

				// Return false to allow normal processing in the caller
				return false;
			},
			trigger: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Force setup before triggering a click
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					leverageNative( el, "click" );
				}

				// Return non-false to allow normal event-path propagation
				return true;
			},

			// For cross-browser consistency, suppress native .click() on links
			// Also prevent it if we're currently inside a leveraged native-event stack
			_default: function( event ) {
				var target = event.target;
				return rcheckableType.test( target.type ) &&
					target.click && nodeName( target, "input" ) &&
					dataPriv.get( target, "click" ) ||
					nodeName( target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

// Ensure the presence of an event listener that handles manually-triggered
// synthetic events by interrupting progress until reinvoked in response to
// *native* events that it fires directly, ensuring that state changes have
// already occurred before other listeners are invoked.
function leverageNative( el, type, expectSync ) {

	// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
	if ( !expectSync ) {
		if ( dataPriv.get( el, type ) === undefined ) {
			jQuery.event.add( el, type, returnTrue );
		}
		return;
	}

	// Register the controller as a special universal handler for all event namespaces
	dataPriv.set( el, type, false );
	jQuery.event.add( el, type, {
		namespace: false,
		handler: function( event ) {
			var notAsync, result,
				saved = dataPriv.get( this, type );

			if ( ( event.isTrigger & 1 ) && this[ type ] ) {

				// Interrupt processing of the outer synthetic .trigger()ed event
				// Saved data should be false in such cases, but might be a leftover capture object
				// from an async native handler (gh-4350)
				if ( !saved.length ) {

					// Store arguments for use when handling the inner native event
					// There will always be at least one argument (an event object), so this array
					// will not be confused with a leftover capture object.
					saved = slice.call( arguments );
					dataPriv.set( this, type, saved );

					// Trigger the native event and capture its result
					// Support: IE <=9 - 11+
					// focus() and blur() are asynchronous
					notAsync = expectSync( this, type );
					this[ type ]();
					result = dataPriv.get( this, type );
					if ( saved !== result || notAsync ) {
						dataPriv.set( this, type, false );
					} else {
						result = {};
					}
					if ( saved !== result ) {

						// Cancel the outer synthetic event
						event.stopImmediatePropagation();
						event.preventDefault();
						return result.value;
					}

				// If this is an inner synthetic event for an event with a bubbling surrogate
				// (focus or blur), assume that the surrogate already propagated from triggering the
				// native event and prevent that from happening again here.
				// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
				// bubbling surrogate propagates *after* the non-bubbling base), but that seems
				// less bad than duplication.
				} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {
					event.stopPropagation();
				}

			// If this is a native event triggered above, everything is now in order
			// Fire an inner synthetic event with the original arguments
			} else if ( saved.length ) {

				// ...and capture the result
				dataPriv.set( this, type, {
					value: jQuery.event.trigger(

						// Support: IE <=9 - 11+
						// Extend with the prototype to reset the above stopImmediatePropagation()
						jQuery.extend( saved[ 0 ], jQuery.Event.prototype ),
						saved.slice( 1 ),
						this
					)
				} );

				// Abort handling of the native event
				event.stopImmediatePropagation();
			}
		}
	} );
}

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	code: true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,

	which: function( event ) {
		var button = event.button;

		// Add which for key events
		if ( event.which == null && rkeyEvent.test( event.type ) ) {
			return event.charCode != null ? event.charCode : event.keyCode;
		}

		// Add which for click: 1 === left; 2 === middle; 3 === right
		if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
			if ( button & 1 ) {
				return 1;
			}

			if ( button & 2 ) {
				return 3;
			}

			if ( button & 4 ) {
				return 2;
			}

			return 0;
		}

		return event.which;
	}
}, jQuery.event.addProp );

jQuery.each( { focus: "focusin", blur: "focusout" }, function( type, delegateType ) {
	jQuery.event.special[ type ] = {

		// Utilize native event if possible so blur/focus sequence is correct
		setup: function() {

			// Claim the first handler
			// dataPriv.set( this, "focus", ... )
			// dataPriv.set( this, "blur", ... )
			leverageNative( this, type, expectSync );

			// Return false to allow normal processing in the caller
			return false;
		},
		trigger: function() {

			// Force setup before trigger
			leverageNative( this, type );

			// Return non-false to allow normal event-path propagation
			return true;
		},

		delegateType: delegateType
	};
} );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.get( src );
		events = pdataOld.events;

		if ( events ) {
			dataPriv.remove( dest, "handle events" );

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = flat( args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl && !node.noModule ) {
								jQuery._evalUrl( node.src, {
									nonce: node.nonce || node.getAttribute( "nonce" )
								}, doc );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), node, doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && isAttached( node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html;
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = isAttached( elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var swap = function( elem, options, callback ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.call( elem );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		// Support: Chrome <=64
		// Don't get tricked when zoom affects offsetWidth (gh-4029)
		div.style.position = "absolute";
		scrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableTrDimensionsVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		},

		// Support: IE 9 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Behavior in IE 9 is more subtle than in newer versions & it passes
		// some versions of this test; make sure not to make it pass there!
		reliableTrDimensions: function() {
			var table, tr, trChild, trStyle;
			if ( reliableTrDimensionsVal == null ) {
				table = document.createElement( "table" );
				tr = document.createElement( "tr" );
				trChild = document.createElement( "div" );

				table.style.cssText = "position:absolute;left:-11111px";
				tr.style.height = "1px";
				trChild.style.height = "9px";

				documentElement
					.appendChild( table )
					.appendChild( tr )
					.appendChild( trChild );

				trStyle = window.getComputedStyle( tr );
				reliableTrDimensionsVal = parseInt( trStyle.height ) > 3;

				documentElement.removeChild( table );
			}
			return reliableTrDimensionsVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !isAttached( elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style,
	vendorProps = {};

// Return a vendor-prefixed property or undefined
function vendorPropName( name ) {

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
function finalPropName( name ) {
	var final = jQuery.cssProps[ name ] || vendorProps[ name ];

	if ( final ) {
		return final;
	}
	if ( name in emptyStyle ) {
		return name;
	}
	return vendorProps[ name ] = vendorPropName( name ) || name;
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	};

function setPositiveNumber( _elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		if ( box === "margin" ) {
			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5

		// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
		// Use an explicit zero to avoid NaN (gh-3964)
		) ) || 0;
	}

	return delta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),

		// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
		// Fake content-box until we know it's needed to know the true value.
		boxSizingNeeded = !support.boxSizingReliable() || extra,
		isBorderBox = boxSizingNeeded &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox,

		val = curCSS( elem, dimension, styles ),
		offsetProp = "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}


	// Support: IE 9 - 11 only
	// Use offsetWidth/offsetHeight for when box sizing is unreliable.
	// In those cases, the computed value can be trusted to be border-box.
	if ( ( !support.boxSizingReliable() && isBorderBox ||

		// Support: IE 10 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Interestingly, in some cases IE 9 doesn't suffer from this issue.
		!support.reliableTrDimensions() && nodeName( elem, "tr" ) ||

		// Fall back to offsetWidth/offsetHeight when value is "auto"
		// This happens for inline elements with no explicit setting (gh-3571)
		val === "auto" ||

		// Support: Android <=4.1 - 4.3 only
		// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) &&

		// Make sure the element is visible & connected
		elem.getClientRects().length ) {

		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Where available, offsetWidth/offsetHeight approximate border box dimensions.
		// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
		// retrieved value as a content box dimension.
		valueIsBorderBox = offsetProp in elem;
		if ( valueIsBorderBox ) {
			val = elem[ offsetProp ];
		}
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"gridArea": true,
		"gridColumn": true,
		"gridColumnEnd": true,
		"gridColumnStart": true,
		"gridRow": true,
		"gridRowEnd": true,
		"gridRowStart": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
			// "px" to a few hardcoded values.
			if ( type === "number" && !isCustomProp ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( _i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, dimension, extra );
						} ) :
						getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),

				// Only read styles.position if the test has a chance to fail
				// to avoid forcing a reflow.
				scrollboxSizeBuggy = !support.scrollboxSize() &&
					styles.position === "absolute",

				// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
				boxSizingNeeded = scrollboxSizeBuggy || extra,
				isBorderBox = boxSizingNeeded &&
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra ?
					boxModelAdjustment(
						elem,
						dimension,
						extra,
						isBorderBox,
						styles
					) :
					0;

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && scrollboxSizeBuggy ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
				) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 && (
					jQuery.cssHooks[ tween.prop ] ||
					tween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

			/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( _i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( _i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( isValidValue ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = classesToArray( value );

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
						"" :
						dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
					return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


support.focusin = "onfocusin" in window;


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = (
					dataPriv.get( cur, "events" ) || Object.create( null )
				)[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {

				// Handle: regular nodes (via `this.ownerDocument`), window
				// (via `this.document`) & document (via `this`).
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = { guid: Date.now() };

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	if ( a == null ) {
		return "";
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( _i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );
	originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() + " " ] =
									( responseHeaders[ match[ 1 ].toLowerCase() + " " ] || [] )
										.concat( match[ 2 ] );
							}
						}
						match = responseHeaders[ key.toLowerCase() + " " ];
					}
					return match == null ? null : match.join( ", " );
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce.guid++ ) +
					uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Use a noop converter for missing script
			if ( !isSuccess && jQuery.inArray( "script", s.dataTypes ) > -1 ) {
				s.converters[ "text script" ] = function() {};
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( _i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );

jQuery.ajaxPrefilter( function( s ) {
	var i;
	for ( i in s.headers ) {
		if ( i.toLowerCase() === "content-type" ) {
			s.contentType = s.headers[ i ] || "";
		}
	}
} );


jQuery._evalUrl = function( url, options, doc ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,

		// Only evaluate the response if it is successful (gh-4126)
		// dataFilter is not invoked for failure responses, so using it instead
		// of the default converter is kludgy but it works.
		converters: {
			"text script": function() {}
		},
		dataFilter: function( response ) {
			jQuery.globalEval( response, options, doc );
		}
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain or forced-by-attrs requests
	if ( s.crossDomain || s.scriptAttrs ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" )
					.attr( s.scriptAttrs || {} )
					.prop( { charset: s.scriptCharset, src: s.url } )
					.on( "load error", callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					} );

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce.guid++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			if ( typeof props.top === "number" ) {
				props.top += "px";
			}
			if ( typeof props.left === "number" ) {
				props.left += "px";
			}
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( _i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( _i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );

jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( _i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	} );




// Support: Android <=4.0 only
// Make sure we trim BOM and NBSP
var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};

jQuery.trim = function( text ) {
	return text == null ?
		"" :
		( text + "" ).replace( rtrim, "" );
};



// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( true ) {
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {
		return jQuery;
	}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( typeof noGlobal === "undefined" ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );


/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return SubjectSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Subject; });
/* unused harmony export AnonymousSubject */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Subscription__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_ObjectUnsubscribedError__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__SubjectSubscription__ = __webpack_require__(202);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__internal_symbol_rxSubscriber__ = __webpack_require__(48);
/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */







var SubjectSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SubjectSubscriber, _super);
    function SubjectSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        return _this;
    }
    return SubjectSubscriber;
}(__WEBPACK_IMPORTED_MODULE_2__Subscriber__["a" /* Subscriber */]));

var Subject = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](Subject, _super);
    function Subject() {
        var _this = _super.call(this) || this;
        _this.observers = [];
        _this.closed = false;
        _this.isStopped = false;
        _this.hasError = false;
        _this.thrownError = null;
        return _this;
    }
    Subject.prototype[__WEBPACK_IMPORTED_MODULE_6__internal_symbol_rxSubscriber__["a" /* rxSubscriber */]] = function () {
        return new SubjectSubscriber(this);
    };
    Subject.prototype.lift = function (operator) {
        var subject = new AnonymousSubject(this, this);
        subject.operator = operator;
        return subject;
    };
    Subject.prototype.next = function (value) {
        if (this.closed) {
            throw new __WEBPACK_IMPORTED_MODULE_4__util_ObjectUnsubscribedError__["a" /* ObjectUnsubscribedError */]();
        }
        if (!this.isStopped) {
            var observers = this.observers;
            var len = observers.length;
            var copy = observers.slice();
            for (var i = 0; i < len; i++) {
                copy[i].next(value);
            }
        }
    };
    Subject.prototype.error = function (err) {
        if (this.closed) {
            throw new __WEBPACK_IMPORTED_MODULE_4__util_ObjectUnsubscribedError__["a" /* ObjectUnsubscribedError */]();
        }
        this.hasError = true;
        this.thrownError = err;
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].error(err);
        }
        this.observers.length = 0;
    };
    Subject.prototype.complete = function () {
        if (this.closed) {
            throw new __WEBPACK_IMPORTED_MODULE_4__util_ObjectUnsubscribedError__["a" /* ObjectUnsubscribedError */]();
        }
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].complete();
        }
        this.observers.length = 0;
    };
    Subject.prototype.unsubscribe = function () {
        this.isStopped = true;
        this.closed = true;
        this.observers = null;
    };
    Subject.prototype._trySubscribe = function (subscriber) {
        if (this.closed) {
            throw new __WEBPACK_IMPORTED_MODULE_4__util_ObjectUnsubscribedError__["a" /* ObjectUnsubscribedError */]();
        }
        else {
            return _super.prototype._trySubscribe.call(this, subscriber);
        }
    };
    Subject.prototype._subscribe = function (subscriber) {
        if (this.closed) {
            throw new __WEBPACK_IMPORTED_MODULE_4__util_ObjectUnsubscribedError__["a" /* ObjectUnsubscribedError */]();
        }
        else if (this.hasError) {
            subscriber.error(this.thrownError);
            return __WEBPACK_IMPORTED_MODULE_3__Subscription__["a" /* Subscription */].EMPTY;
        }
        else if (this.isStopped) {
            subscriber.complete();
            return __WEBPACK_IMPORTED_MODULE_3__Subscription__["a" /* Subscription */].EMPTY;
        }
        else {
            this.observers.push(subscriber);
            return new __WEBPACK_IMPORTED_MODULE_5__SubjectSubscription__["a" /* SubjectSubscription */](this, subscriber);
        }
    };
    Subject.prototype.asObservable = function () {
        var observable = new __WEBPACK_IMPORTED_MODULE_1__Observable__["a" /* Observable */]();
        observable.source = this;
        return observable;
    };
    Subject.create = function (destination, source) {
        return new AnonymousSubject(destination, source);
    };
    return Subject;
}(__WEBPACK_IMPORTED_MODULE_1__Observable__["a" /* Observable */]));

var AnonymousSubject = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](AnonymousSubject, _super);
    function AnonymousSubject(destination, source) {
        var _this = _super.call(this) || this;
        _this.destination = destination;
        _this.source = source;
        return _this;
    }
    AnonymousSubject.prototype.next = function (value) {
        var destination = this.destination;
        if (destination && destination.next) {
            destination.next(value);
        }
    };
    AnonymousSubject.prototype.error = function (err) {
        var destination = this.destination;
        if (destination && destination.error) {
            this.destination.error(err);
        }
    };
    AnonymousSubject.prototype.complete = function () {
        var destination = this.destination;
        if (destination && destination.complete) {
            this.destination.complete();
        }
    };
    AnonymousSubject.prototype._subscribe = function (subscriber) {
        var source = this.source;
        if (source) {
            return this.source.subscribe(subscriber);
        }
        else {
            return __WEBPACK_IMPORTED_MODULE_3__Subscription__["a" /* Subscription */].EMPTY;
        }
    };
    return AnonymousSubject;
}(Subject));

//# sourceMappingURL=Subject.js.map


/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return isArray; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var isArray = /*@__PURE__*/ (function () { return Array.isArray || (function (x) { return x && typeof x.length === 'number'; }); })();
//# sourceMappingURL=isArray.js.map


/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return async; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__AsyncAction__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AsyncScheduler__ = __webpack_require__(24);
/** PURE_IMPORTS_START _AsyncAction,_AsyncScheduler PURE_IMPORTS_END */


var async = /*@__PURE__*/ new __WEBPACK_IMPORTED_MODULE_1__AsyncScheduler__["a" /* AsyncScheduler */](__WEBPACK_IMPORTED_MODULE_0__AsyncAction__["a" /* AsyncAction */]);
//# sourceMappingURL=async.js.map


/***/ }),
/* 13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = map;
/* unused harmony export MapOperator */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function map(project, thisArg) {
    return function mapOperation(source) {
        if (typeof project !== 'function') {
            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
        }
        return source.lift(new MapOperator(project, thisArg));
    };
}
var MapOperator = /*@__PURE__*/ (function () {
    function MapOperator(project, thisArg) {
        this.project = project;
        this.thisArg = thisArg;
    }
    MapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));
    };
    return MapOperator;
}());

var MapSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](MapSubscriber, _super);
    function MapSubscriber(destination, project, thisArg) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.count = 0;
        _this.thisArg = thisArg || _this;
        return _this;
    }
    MapSubscriber.prototype._next = function (value) {
        var result;
        try {
            result = this.project.call(this.thisArg, value, this.count++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return MapSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=map.js.map


/***/ }),
/* 14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EMPTY; });
/* harmony export (immutable) */ __webpack_exports__["b"] = empty;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

var EMPTY = /*@__PURE__*/ new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) { return subscriber.complete(); });
function empty(scheduler) {
    return scheduler ? emptyScheduled(scheduler) : EMPTY;
}
function emptyScheduled(scheduler) {
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });
}
//# sourceMappingURL=empty.js.map


/***/ }),
/* 15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isScheduler;
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isScheduler(value) {
    return value && typeof value.schedule === 'function';
}
//# sourceMappingURL=isScheduler.js.map


/***/ }),
/* 16 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = from;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_subscribeTo__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scheduled_scheduled__ = __webpack_require__(214);
/** PURE_IMPORTS_START _Observable,_util_subscribeTo,_scheduled_scheduled PURE_IMPORTS_END */



function from(input, scheduler) {
    if (!scheduler) {
        if (input instanceof __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */]) {
            return input;
        }
        return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](Object(__WEBPACK_IMPORTED_MODULE_1__util_subscribeTo__["a" /* subscribeTo */])(input));
    }
    else {
        return Object(__WEBPACK_IMPORTED_MODULE_2__scheduled_scheduled__["a" /* scheduled */])(input, scheduler);
    }
}
//# sourceMappingURL=from.js.map


/***/ }),
/* 17 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InnerSubscriber; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


var InnerSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](InnerSubscriber, _super);
    function InnerSubscriber(parent, outerValue, outerIndex) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        _this.outerValue = outerValue;
        _this.outerIndex = outerIndex;
        _this.index = 0;
        return _this;
    }
    InnerSubscriber.prototype._next = function (value) {
        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);
    };
    InnerSubscriber.prototype._error = function (error) {
        this.parent.notifyError(error, this);
        this.unsubscribe();
    };
    InnerSubscriber.prototype._complete = function () {
        this.parent.notifyComplete(this);
        this.unsubscribe();
    };
    return InnerSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));

//# sourceMappingURL=InnerSubscriber.js.map


/***/ }),
/* 18 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = identity;
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function identity(x) {
    return x;
}
//# sourceMappingURL=identity.js.map


/***/ }),
/* 19 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return observable; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var observable = /*@__PURE__*/ (function () { return typeof Symbol === 'function' && Symbol.observable || '@@observable'; })();
//# sourceMappingURL=observable.js.map


/***/ }),
/* 20 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = filter;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function filter(predicate, thisArg) {
    return function filterOperatorFunction(source) {
        return source.lift(new FilterOperator(predicate, thisArg));
    };
}
var FilterOperator = /*@__PURE__*/ (function () {
    function FilterOperator(predicate, thisArg) {
        this.predicate = predicate;
        this.thisArg = thisArg;
    }
    FilterOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));
    };
    return FilterOperator;
}());
var FilterSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](FilterSubscriber, _super);
    function FilterSubscriber(destination, predicate, thisArg) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.thisArg = thisArg;
        _this.count = 0;
        return _this;
    }
    FilterSubscriber.prototype._next = function (value) {
        var result;
        try {
            result = this.predicate.call(this.thisArg, value, this.count++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this.destination.next(value);
        }
    };
    return FilterSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=filter.js.map


/***/ }),
/* 21 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = multicast;
/* unused harmony export MulticastOperator */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_ConnectableObservable__ = __webpack_require__(201);
/** PURE_IMPORTS_START _observable_ConnectableObservable PURE_IMPORTS_END */

function multicast(subjectOrSubjectFactory, selector) {
    return function multicastOperatorFunction(source) {
        var subjectFactory;
        if (typeof subjectOrSubjectFactory === 'function') {
            subjectFactory = subjectOrSubjectFactory;
        }
        else {
            subjectFactory = function subjectFactory() {
                return subjectOrSubjectFactory;
            };
        }
        if (typeof selector === 'function') {
            return source.lift(new MulticastOperator(subjectFactory, selector));
        }
        var connectable = Object.create(source, __WEBPACK_IMPORTED_MODULE_0__observable_ConnectableObservable__["b" /* connectableObservableDescriptor */]);
        connectable.source = source;
        connectable.subjectFactory = subjectFactory;
        return connectable;
    };
}
var MulticastOperator = /*@__PURE__*/ (function () {
    function MulticastOperator(subjectFactory, selector) {
        this.subjectFactory = subjectFactory;
        this.selector = selector;
    }
    MulticastOperator.prototype.call = function (subscriber, source) {
        var selector = this.selector;
        var subject = this.subjectFactory();
        var subscription = selector(subject).subscribe(subscriber);
        subscription.add(source.subscribe(subject));
        return subscription;
    };
    return MulticastOperator;
}());

//# sourceMappingURL=multicast.js.map


/***/ }),
/* 22 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isFunction;
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isFunction(x) {
    return typeof x === 'function';
}
//# sourceMappingURL=isFunction.js.map


/***/ }),
/* 23 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AsyncAction; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Action__ = __webpack_require__(257);
/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */


var AsyncAction = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](AsyncAction, _super);
    function AsyncAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        _this.pending = false;
        return _this;
    }
    AsyncAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (this.closed) {
            return this;
        }
        this.state = state;
        var id = this.id;
        var scheduler = this.scheduler;
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, delay);
        }
        this.pending = true;
        this.delay = delay;
        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);
        return this;
    };
    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        return setInterval(scheduler.flush.bind(scheduler, this), delay);
    };
    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay !== null && this.delay === delay && this.pending === false) {
            return id;
        }
        clearInterval(id);
        return undefined;
    };
    AsyncAction.prototype.execute = function (state, delay) {
        if (this.closed) {
            return new Error('executing a cancelled action');
        }
        this.pending = false;
        var error = this._execute(state, delay);
        if (error) {
            return error;
        }
        else if (this.pending === false && this.id != null) {
            this.id = this.recycleAsyncId(this.scheduler, this.id, null);
        }
    };
    AsyncAction.prototype._execute = function (state, delay) {
        var errored = false;
        var errorValue = undefined;
        try {
            this.work(state);
        }
        catch (e) {
            errored = true;
            errorValue = !!e && e || new Error(e);
        }
        if (errored) {
            this.unsubscribe();
            return errorValue;
        }
    };
    AsyncAction.prototype._unsubscribe = function () {
        var id = this.id;
        var scheduler = this.scheduler;
        var actions = scheduler.actions;
        var index = actions.indexOf(this);
        this.work = null;
        this.state = null;
        this.pending = false;
        this.scheduler = null;
        if (index !== -1) {
            actions.splice(index, 1);
        }
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, null);
        }
        this.delay = null;
    };
    return AsyncAction;
}(__WEBPACK_IMPORTED_MODULE_1__Action__["a" /* Action */]));

//# sourceMappingURL=AsyncAction.js.map


/***/ }),
/* 24 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AsyncScheduler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Scheduler__ = __webpack_require__(206);
/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */


var AsyncScheduler = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](AsyncScheduler, _super);
    function AsyncScheduler(SchedulerAction, now) {
        if (now === void 0) {
            now = __WEBPACK_IMPORTED_MODULE_1__Scheduler__["a" /* Scheduler */].now;
        }
        var _this = _super.call(this, SchedulerAction, function () {
            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {
                return AsyncScheduler.delegate.now();
            }
            else {
                return now();
            }
        }) || this;
        _this.actions = [];
        _this.active = false;
        _this.scheduled = undefined;
        return _this;
    }
    AsyncScheduler.prototype.schedule = function (work, delay, state) {
        if (delay === void 0) {
            delay = 0;
        }
        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {
            return AsyncScheduler.delegate.schedule(work, delay, state);
        }
        else {
            return _super.prototype.schedule.call(this, work, delay, state);
        }
    };
    AsyncScheduler.prototype.flush = function (action) {
        var actions = this.actions;
        if (this.active) {
            actions.push(action);
            return;
        }
        var error;
        this.active = true;
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (action = actions.shift());
        this.active = false;
        if (error) {
            while (action = actions.shift()) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsyncScheduler;
}(__WEBPACK_IMPORTED_MODULE_1__Scheduler__["a" /* Scheduler */]));

//# sourceMappingURL=AsyncScheduler.js.map


/***/ }),
/* 25 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = fromArray;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_subscribeToArray__ = __webpack_require__(208);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scheduled_scheduleArray__ = __webpack_require__(52);
/** PURE_IMPORTS_START _Observable,_util_subscribeToArray,_scheduled_scheduleArray PURE_IMPORTS_END */



function fromArray(input, scheduler) {
    if (!scheduler) {
        return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](Object(__WEBPACK_IMPORTED_MODULE_1__util_subscribeToArray__["a" /* subscribeToArray */])(input));
    }
    else {
        return Object(__WEBPACK_IMPORTED_MODULE_2__scheduled_scheduleArray__["a" /* scheduleArray */])(input, scheduler);
    }
}
//# sourceMappingURL=fromArray.js.map


/***/ }),
/* 26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ArgumentOutOfRangeError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var ArgumentOutOfRangeErrorImpl = /*@__PURE__*/ (function () {
    function ArgumentOutOfRangeErrorImpl() {
        Error.call(this);
        this.message = 'argument out of range';
        this.name = 'ArgumentOutOfRangeError';
        return this;
    }
    ArgumentOutOfRangeErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return ArgumentOutOfRangeErrorImpl;
})();
var ArgumentOutOfRangeError = ArgumentOutOfRangeErrorImpl;
//# sourceMappingURL=ArgumentOutOfRangeError.js.map


/***/ }),
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EmptyError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var EmptyErrorImpl = /*@__PURE__*/ (function () {
    function EmptyErrorImpl() {
        Error.call(this);
        this.message = 'no elements in sequence';
        this.name = 'EmptyError';
        return this;
    }
    EmptyErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return EmptyErrorImpl;
})();
var EmptyError = EmptyErrorImpl;
//# sourceMappingURL=EmptyError.js.map


/***/ }),
/* 28 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export getSymbolIterator */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return iterator; });
/* unused harmony export $$iterator */
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function getSymbolIterator() {
    if (typeof Symbol !== 'function' || !Symbol.iterator) {
        return '@@iterator';
    }
    return Symbol.iterator;
}
var iterator = /*@__PURE__*/ getSymbolIterator();
var $$iterator = iterator;
//# sourceMappingURL=iterator.js.map


/***/ }),
/* 29 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = mergeMap;
/* unused harmony export MergeMapOperator */
/* unused harmony export MergeMapSubscriber */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_subscribeToResult__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__InnerSubscriber__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__map__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__observable_from__ = __webpack_require__(16);
/** PURE_IMPORTS_START tslib,_util_subscribeToResult,_OuterSubscriber,_InnerSubscriber,_map,_observable_from PURE_IMPORTS_END */






function mergeMap(project, resultSelector, concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    if (typeof resultSelector === 'function') {
        return function (source) { return source.pipe(mergeMap(function (a, i) { return Object(__WEBPACK_IMPORTED_MODULE_5__observable_from__["a" /* from */])(project(a, i)).pipe(Object(__WEBPACK_IMPORTED_MODULE_4__map__["a" /* map */])(function (b, ii) { return resultSelector(a, b, i, ii); })); }, concurrent)); };
    }
    else if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
    }
    return function (source) { return source.lift(new MergeMapOperator(project, concurrent)); };
}
var MergeMapOperator = /*@__PURE__*/ (function () {
    function MergeMapOperator(project, concurrent) {
        if (concurrent === void 0) {
            concurrent = Number.POSITIVE_INFINITY;
        }
        this.project = project;
        this.concurrent = concurrent;
    }
    MergeMapOperator.prototype.call = function (observer, source) {
        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));
    };
    return MergeMapOperator;
}());

var MergeMapSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](MergeMapSubscriber, _super);
    function MergeMapSubscriber(destination, project, concurrent) {
        if (concurrent === void 0) {
            concurrent = Number.POSITIVE_INFINITY;
        }
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.concurrent = concurrent;
        _this.hasCompleted = false;
        _this.buffer = [];
        _this.active = 0;
        _this.index = 0;
        return _this;
    }
    MergeMapSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            this._tryNext(value);
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeMapSubscriber.prototype._tryNext = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.active++;
        this._innerSub(result, value, index);
    };
    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {
        var innerSubscriber = new __WEBPACK_IMPORTED_MODULE_3__InnerSubscriber__["a" /* InnerSubscriber */](this, value, index);
        var destination = this.destination;
        destination.add(innerSubscriber);
        var innerSubscription = Object(__WEBPACK_IMPORTED_MODULE_1__util_subscribeToResult__["a" /* subscribeToResult */])(this, ish, undefined, undefined, innerSubscriber);
        if (innerSubscription !== innerSubscriber) {
            destination.add(innerSubscription);
        }
    };
    MergeMapSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            this.destination.complete();
        }
        this.unsubscribe();
    };
    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            this.destination.complete();
        }
    };
    return MergeMapSubscriber;
}(__WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__["a" /* OuterSubscriber */]));

//# sourceMappingURL=mergeMap.js.map


/***/ }),
/* 30 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = defaultIfEmpty;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function defaultIfEmpty(defaultValue) {
    if (defaultValue === void 0) {
        defaultValue = null;
    }
    return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };
}
var DefaultIfEmptyOperator = /*@__PURE__*/ (function () {
    function DefaultIfEmptyOperator(defaultValue) {
        this.defaultValue = defaultValue;
    }
    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));
    };
    return DefaultIfEmptyOperator;
}());
var DefaultIfEmptySubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](DefaultIfEmptySubscriber, _super);
    function DefaultIfEmptySubscriber(destination, defaultValue) {
        var _this = _super.call(this, destination) || this;
        _this.defaultValue = defaultValue;
        _this.isEmpty = true;
        return _this;
    }
    DefaultIfEmptySubscriber.prototype._next = function (value) {
        this.isEmpty = false;
        this.destination.next(value);
    };
    DefaultIfEmptySubscriber.prototype._complete = function () {
        if (this.isEmpty) {
            this.destination.next(this.defaultValue);
        }
        this.destination.complete();
    };
    return DefaultIfEmptySubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=defaultIfEmpty.js.map


/***/ }),
/* 31 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_juijs__ = __webpack_require__(382);

/* harmony default export */ __webpack_exports__["default"] = (__WEBPACK_IMPORTED_MODULE_0_juijs__["a" /* default */]);

/***/ }),
/* 32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__internal_Observable__ = __webpack_require__(3);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Observable", function() { return __WEBPACK_IMPORTED_MODULE_0__internal_Observable__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__internal_observable_ConnectableObservable__ = __webpack_require__(201);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "ConnectableObservable", function() { return __WEBPACK_IMPORTED_MODULE_1__internal_observable_ConnectableObservable__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__internal_operators_groupBy__ = __webpack_require__(203);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "GroupedObservable", function() { return __WEBPACK_IMPORTED_MODULE_2__internal_operators_groupBy__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__internal_symbol_observable__ = __webpack_require__(19);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "observable", function() { return __WEBPACK_IMPORTED_MODULE_3__internal_symbol_observable__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__internal_Subject__ = __webpack_require__(10);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Subject", function() { return __WEBPACK_IMPORTED_MODULE_4__internal_Subject__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__internal_BehaviorSubject__ = __webpack_require__(204);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "BehaviorSubject", function() { return __WEBPACK_IMPORTED_MODULE_5__internal_BehaviorSubject__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__internal_ReplaySubject__ = __webpack_require__(51);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "ReplaySubject", function() { return __WEBPACK_IMPORTED_MODULE_6__internal_ReplaySubject__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__internal_AsyncSubject__ = __webpack_require__(37);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncSubject", function() { return __WEBPACK_IMPORTED_MODULE_7__internal_AsyncSubject__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__internal_scheduler_asap__ = __webpack_require__(209);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "asapScheduler", function() { return __WEBPACK_IMPORTED_MODULE_8__internal_scheduler_asap__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__internal_scheduler_async__ = __webpack_require__(12);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "asyncScheduler", function() { return __WEBPACK_IMPORTED_MODULE_9__internal_scheduler_async__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__internal_scheduler_queue__ = __webpack_require__(205);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "queueScheduler", function() { return __WEBPACK_IMPORTED_MODULE_10__internal_scheduler_queue__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__internal_scheduler_animationFrame__ = __webpack_require__(262);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "animationFrameScheduler", function() { return __WEBPACK_IMPORTED_MODULE_11__internal_scheduler_animationFrame__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__internal_scheduler_VirtualTimeScheduler__ = __webpack_require__(265);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "VirtualTimeScheduler", function() { return __WEBPACK_IMPORTED_MODULE_12__internal_scheduler_VirtualTimeScheduler__["b"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "VirtualAction", function() { return __WEBPACK_IMPORTED_MODULE_12__internal_scheduler_VirtualTimeScheduler__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__internal_Scheduler__ = __webpack_require__(206);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Scheduler", function() { return __WEBPACK_IMPORTED_MODULE_13__internal_Scheduler__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__internal_Subscription__ = __webpack_require__(7);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Subscription", function() { return __WEBPACK_IMPORTED_MODULE_14__internal_Subscription__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__internal_Subscriber__ = __webpack_require__(2);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Subscriber", function() { return __WEBPACK_IMPORTED_MODULE_15__internal_Subscriber__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__internal_Notification__ = __webpack_require__(35);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Notification", function() { return __WEBPACK_IMPORTED_MODULE_16__internal_Notification__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "NotificationKind", function() { return __WEBPACK_IMPORTED_MODULE_16__internal_Notification__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__internal_util_pipe__ = __webpack_require__(49);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "pipe", function() { return __WEBPACK_IMPORTED_MODULE_17__internal_util_pipe__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__internal_util_noop__ = __webpack_require__(54);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "noop", function() { return __WEBPACK_IMPORTED_MODULE_18__internal_util_noop__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__internal_util_identity__ = __webpack_require__(18);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return __WEBPACK_IMPORTED_MODULE_19__internal_util_identity__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__internal_util_isObservable__ = __webpack_require__(266);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "isObservable", function() { return __WEBPACK_IMPORTED_MODULE_20__internal_util_isObservable__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__internal_util_ArgumentOutOfRangeError__ = __webpack_require__(26);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "ArgumentOutOfRangeError", function() { return __WEBPACK_IMPORTED_MODULE_21__internal_util_ArgumentOutOfRangeError__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__internal_util_EmptyError__ = __webpack_require__(27);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "EmptyError", function() { return __WEBPACK_IMPORTED_MODULE_22__internal_util_EmptyError__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__internal_util_ObjectUnsubscribedError__ = __webpack_require__(34);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "ObjectUnsubscribedError", function() { return __WEBPACK_IMPORTED_MODULE_23__internal_util_ObjectUnsubscribedError__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__internal_util_UnsubscriptionError__ = __webpack_require__(200);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "UnsubscriptionError", function() { return __WEBPACK_IMPORTED_MODULE_24__internal_util_UnsubscriptionError__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__internal_util_TimeoutError__ = __webpack_require__(210);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "TimeoutError", function() { return __WEBPACK_IMPORTED_MODULE_25__internal_util_TimeoutError__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__internal_observable_bindCallback__ = __webpack_require__(267);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "bindCallback", function() { return __WEBPACK_IMPORTED_MODULE_26__internal_observable_bindCallback__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__internal_observable_bindNodeCallback__ = __webpack_require__(268);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "bindNodeCallback", function() { return __WEBPACK_IMPORTED_MODULE_27__internal_observable_bindNodeCallback__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__internal_observable_combineLatest__ = __webpack_require__(55);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "combineLatest", function() { return __WEBPACK_IMPORTED_MODULE_28__internal_observable_combineLatest__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__internal_observable_concat__ = __webpack_require__(38);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return __WEBPACK_IMPORTED_MODULE_29__internal_observable_concat__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__internal_observable_defer__ = __webpack_require__(58);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "defer", function() { return __WEBPACK_IMPORTED_MODULE_30__internal_observable_defer__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__internal_observable_empty__ = __webpack_require__(14);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "empty", function() { return __WEBPACK_IMPORTED_MODULE_31__internal_observable_empty__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__internal_observable_forkJoin__ = __webpack_require__(277);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "forkJoin", function() { return __WEBPACK_IMPORTED_MODULE_32__internal_observable_forkJoin__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__internal_observable_from__ = __webpack_require__(16);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "from", function() { return __WEBPACK_IMPORTED_MODULE_33__internal_observable_from__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__internal_observable_fromEvent__ = __webpack_require__(278);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "fromEvent", function() { return __WEBPACK_IMPORTED_MODULE_34__internal_observable_fromEvent__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__internal_observable_fromEventPattern__ = __webpack_require__(279);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "fromEventPattern", function() { return __WEBPACK_IMPORTED_MODULE_35__internal_observable_fromEventPattern__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__internal_observable_generate__ = __webpack_require__(280);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "generate", function() { return __WEBPACK_IMPORTED_MODULE_36__internal_observable_generate__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__internal_observable_iif__ = __webpack_require__(281);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "iif", function() { return __WEBPACK_IMPORTED_MODULE_37__internal_observable_iif__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__internal_observable_interval__ = __webpack_require__(282);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "interval", function() { return __WEBPACK_IMPORTED_MODULE_38__internal_observable_interval__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__internal_observable_merge__ = __webpack_require__(215);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return __WEBPACK_IMPORTED_MODULE_39__internal_observable_merge__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__internal_observable_never__ = __webpack_require__(216);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "never", function() { return __WEBPACK_IMPORTED_MODULE_40__internal_observable_never__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__internal_observable_of__ = __webpack_require__(36);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "of", function() { return __WEBPACK_IMPORTED_MODULE_41__internal_observable_of__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__internal_observable_onErrorResumeNext__ = __webpack_require__(283);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNext", function() { return __WEBPACK_IMPORTED_MODULE_42__internal_observable_onErrorResumeNext__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__internal_observable_pairs__ = __webpack_require__(284);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "pairs", function() { return __WEBPACK_IMPORTED_MODULE_43__internal_observable_pairs__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__internal_observable_partition__ = __webpack_require__(285);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return __WEBPACK_IMPORTED_MODULE_44__internal_observable_partition__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__internal_observable_race__ = __webpack_require__(218);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "race", function() { return __WEBPACK_IMPORTED_MODULE_45__internal_observable_race__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__internal_observable_range__ = __webpack_require__(286);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "range", function() { return __WEBPACK_IMPORTED_MODULE_46__internal_observable_range__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__internal_observable_throwError__ = __webpack_require__(53);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "throwError", function() { return __WEBPACK_IMPORTED_MODULE_47__internal_observable_throwError__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__internal_observable_timer__ = __webpack_require__(219);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "timer", function() { return __WEBPACK_IMPORTED_MODULE_48__internal_observable_timer__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__internal_observable_using__ = __webpack_require__(287);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "using", function() { return __WEBPACK_IMPORTED_MODULE_49__internal_observable_using__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__internal_observable_zip__ = __webpack_require__(59);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return __WEBPACK_IMPORTED_MODULE_50__internal_observable_zip__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__internal_scheduled_scheduled__ = __webpack_require__(214);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "scheduled", function() { return __WEBPACK_IMPORTED_MODULE_51__internal_scheduled_scheduled__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "EMPTY", function() { return __WEBPACK_IMPORTED_MODULE_31__internal_observable_empty__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "NEVER", function() { return __WEBPACK_IMPORTED_MODULE_40__internal_observable_never__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__internal_config__ = __webpack_require__(33);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "config", function() { return __WEBPACK_IMPORTED_MODULE_52__internal_config__["a"]; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */























































//# sourceMappingURL=index.js.map


/***/ }),
/* 33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return config; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var _enable_super_gross_mode_that_will_cause_bad_things = false;
var config = {
    Promise: undefined,
    set useDeprecatedSynchronousErrorHandling(value) {
        if (value) {
            var error = /*@__PURE__*/ new Error();
            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n' + error.stack);
        }
        else if (_enable_super_gross_mode_that_will_cause_bad_things) {
            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');
        }
        _enable_super_gross_mode_that_will_cause_bad_things = value;
    },
    get useDeprecatedSynchronousErrorHandling() {
        return _enable_super_gross_mode_that_will_cause_bad_things;
    },
};
//# sourceMappingURL=config.js.map


/***/ }),
/* 34 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ObjectUnsubscribedError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var ObjectUnsubscribedErrorImpl = /*@__PURE__*/ (function () {
    function ObjectUnsubscribedErrorImpl() {
        Error.call(this);
        this.message = 'object unsubscribed';
        this.name = 'ObjectUnsubscribedError';
        return this;
    }
    ObjectUnsubscribedErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return ObjectUnsubscribedErrorImpl;
})();
var ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;
//# sourceMappingURL=ObjectUnsubscribedError.js.map


/***/ }),
/* 35 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return NotificationKind; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Notification; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_empty__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__observable_of__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__observable_throwError__ = __webpack_require__(53);
/** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */



var NotificationKind;
/*@__PURE__*/ (function (NotificationKind) {
    NotificationKind["NEXT"] = "N";
    NotificationKind["ERROR"] = "E";
    NotificationKind["COMPLETE"] = "C";
})(NotificationKind || (NotificationKind = {}));
var Notification = /*@__PURE__*/ (function () {
    function Notification(kind, value, error) {
        this.kind = kind;
        this.value = value;
        this.error = error;
        this.hasValue = kind === 'N';
    }
    Notification.prototype.observe = function (observer) {
        switch (this.kind) {
            case 'N':
                return observer.next && observer.next(this.value);
            case 'E':
                return observer.error && observer.error(this.error);
            case 'C':
                return observer.complete && observer.complete();
        }
    };
    Notification.prototype.do = function (next, error, complete) {
        var kind = this.kind;
        switch (kind) {
            case 'N':
                return next && next(this.value);
            case 'E':
                return error && error(this.error);
            case 'C':
                return complete && complete();
        }
    };
    Notification.prototype.accept = function (nextOrObserver, error, complete) {
        if (nextOrObserver && typeof nextOrObserver.next === 'function') {
            return this.observe(nextOrObserver);
        }
        else {
            return this.do(nextOrObserver, error, complete);
        }
    };
    Notification.prototype.toObservable = function () {
        var kind = this.kind;
        switch (kind) {
            case 'N':
                return Object(__WEBPACK_IMPORTED_MODULE_1__observable_of__["a" /* of */])(this.value);
            case 'E':
                return Object(__WEBPACK_IMPORTED_MODULE_2__observable_throwError__["a" /* throwError */])(this.error);
            case 'C':
                return Object(__WEBPACK_IMPORTED_MODULE_0__observable_empty__["b" /* empty */])();
        }
        throw new Error('unexpected notification kind value');
    };
    Notification.createNext = function (value) {
        if (typeof value !== 'undefined') {
            return new Notification('N', value);
        }
        return Notification.undefinedValueNotification;
    };
    Notification.createError = function (err) {
        return new Notification('E', undefined, err);
    };
    Notification.createComplete = function () {
        return Notification.completeNotification;
    };
    Notification.completeNotification = new Notification('C');
    Notification.undefinedValueNotification = new Notification('N', undefined);
    return Notification;
}());

//# sourceMappingURL=Notification.js.map


/***/ }),
/* 36 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = of;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_isScheduler__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__fromArray__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scheduled_scheduleArray__ = __webpack_require__(52);
/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_scheduled_scheduleArray PURE_IMPORTS_END */



function of() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var scheduler = args[args.length - 1];
    if (Object(__WEBPACK_IMPORTED_MODULE_0__util_isScheduler__["a" /* isScheduler */])(scheduler)) {
        args.pop();
        return Object(__WEBPACK_IMPORTED_MODULE_2__scheduled_scheduleArray__["a" /* scheduleArray */])(args, scheduler);
    }
    else {
        return Object(__WEBPACK_IMPORTED_MODULE_1__fromArray__["a" /* fromArray */])(args);
    }
}
//# sourceMappingURL=of.js.map


/***/ }),
/* 37 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AsyncSubject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subject__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subscription__ = __webpack_require__(7);
/** PURE_IMPORTS_START tslib,_Subject,_Subscription PURE_IMPORTS_END */



var AsyncSubject = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](AsyncSubject, _super);
    function AsyncSubject() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.value = null;
        _this.hasNext = false;
        _this.hasCompleted = false;
        return _this;
    }
    AsyncSubject.prototype._subscribe = function (subscriber) {
        if (this.hasError) {
            subscriber.error(this.thrownError);
            return __WEBPACK_IMPORTED_MODULE_2__Subscription__["a" /* Subscription */].EMPTY;
        }
        else if (this.hasCompleted && this.hasNext) {
            subscriber.next(this.value);
            subscriber.complete();
            return __WEBPACK_IMPORTED_MODULE_2__Subscription__["a" /* Subscription */].EMPTY;
        }
        return _super.prototype._subscribe.call(this, subscriber);
    };
    AsyncSubject.prototype.next = function (value) {
        if (!this.hasCompleted) {
            this.value = value;
            this.hasNext = true;
        }
    };
    AsyncSubject.prototype.error = function (error) {
        if (!this.hasCompleted) {
            _super.prototype.error.call(this, error);
        }
    };
    AsyncSubject.prototype.complete = function () {
        this.hasCompleted = true;
        if (this.hasNext) {
            _super.prototype.next.call(this, this.value);
        }
        _super.prototype.complete.call(this);
    };
    return AsyncSubject;
}(__WEBPACK_IMPORTED_MODULE_1__Subject__["a" /* Subject */]));

//# sourceMappingURL=AsyncSubject.js.map


/***/ }),
/* 38 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = concat;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__of__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__operators_concatAll__ = __webpack_require__(213);
/** PURE_IMPORTS_START _of,_operators_concatAll PURE_IMPORTS_END */


function concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return Object(__WEBPACK_IMPORTED_MODULE_1__operators_concatAll__["a" /* concatAll */])()(__WEBPACK_IMPORTED_MODULE_0__of__["a" /* of */].apply(void 0, observables));
}
//# sourceMappingURL=concat.js.map


/***/ }),
/* 39 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isNumeric;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isArray__ = __webpack_require__(11);
/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */

function isNumeric(val) {
    return !Object(__WEBPACK_IMPORTED_MODULE_0__isArray__["a" /* isArray */])(val) && (val - parseFloat(val) + 1) >= 0;
}
//# sourceMappingURL=isNumeric.js.map


/***/ }),
/* 40 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__internal_operators_audit__ = __webpack_require__(220);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "audit", function() { return __WEBPACK_IMPORTED_MODULE_0__internal_operators_audit__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__internal_operators_auditTime__ = __webpack_require__(288);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "auditTime", function() { return __WEBPACK_IMPORTED_MODULE_1__internal_operators_auditTime__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__internal_operators_buffer__ = __webpack_require__(289);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "buffer", function() { return __WEBPACK_IMPORTED_MODULE_2__internal_operators_buffer__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__internal_operators_bufferCount__ = __webpack_require__(290);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "bufferCount", function() { return __WEBPACK_IMPORTED_MODULE_3__internal_operators_bufferCount__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__internal_operators_bufferTime__ = __webpack_require__(291);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "bufferTime", function() { return __WEBPACK_IMPORTED_MODULE_4__internal_operators_bufferTime__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__internal_operators_bufferToggle__ = __webpack_require__(292);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "bufferToggle", function() { return __WEBPACK_IMPORTED_MODULE_5__internal_operators_bufferToggle__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__internal_operators_bufferWhen__ = __webpack_require__(293);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "bufferWhen", function() { return __WEBPACK_IMPORTED_MODULE_6__internal_operators_bufferWhen__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__internal_operators_catchError__ = __webpack_require__(294);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "catchError", function() { return __WEBPACK_IMPORTED_MODULE_7__internal_operators_catchError__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__internal_operators_combineAll__ = __webpack_require__(295);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "combineAll", function() { return __WEBPACK_IMPORTED_MODULE_8__internal_operators_combineAll__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__internal_operators_combineLatest__ = __webpack_require__(296);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "combineLatest", function() { return __WEBPACK_IMPORTED_MODULE_9__internal_operators_combineLatest__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__internal_operators_concat__ = __webpack_require__(297);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return __WEBPACK_IMPORTED_MODULE_10__internal_operators_concat__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__internal_operators_concatAll__ = __webpack_require__(213);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "concatAll", function() { return __WEBPACK_IMPORTED_MODULE_11__internal_operators_concatAll__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__internal_operators_concatMap__ = __webpack_require__(221);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "concatMap", function() { return __WEBPACK_IMPORTED_MODULE_12__internal_operators_concatMap__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__internal_operators_concatMapTo__ = __webpack_require__(298);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "concatMapTo", function() { return __WEBPACK_IMPORTED_MODULE_13__internal_operators_concatMapTo__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__internal_operators_count__ = __webpack_require__(299);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "count", function() { return __WEBPACK_IMPORTED_MODULE_14__internal_operators_count__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__internal_operators_debounce__ = __webpack_require__(300);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return __WEBPACK_IMPORTED_MODULE_15__internal_operators_debounce__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__internal_operators_debounceTime__ = __webpack_require__(301);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "debounceTime", function() { return __WEBPACK_IMPORTED_MODULE_16__internal_operators_debounceTime__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__internal_operators_defaultIfEmpty__ = __webpack_require__(30);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "defaultIfEmpty", function() { return __WEBPACK_IMPORTED_MODULE_17__internal_operators_defaultIfEmpty__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__internal_operators_delay__ = __webpack_require__(302);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "delay", function() { return __WEBPACK_IMPORTED_MODULE_18__internal_operators_delay__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__internal_operators_delayWhen__ = __webpack_require__(303);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "delayWhen", function() { return __WEBPACK_IMPORTED_MODULE_19__internal_operators_delayWhen__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__internal_operators_dematerialize__ = __webpack_require__(304);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "dematerialize", function() { return __WEBPACK_IMPORTED_MODULE_20__internal_operators_dematerialize__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__internal_operators_distinct__ = __webpack_require__(305);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "distinct", function() { return __WEBPACK_IMPORTED_MODULE_21__internal_operators_distinct__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__internal_operators_distinctUntilChanged__ = __webpack_require__(223);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "distinctUntilChanged", function() { return __WEBPACK_IMPORTED_MODULE_22__internal_operators_distinctUntilChanged__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__internal_operators_distinctUntilKeyChanged__ = __webpack_require__(306);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "distinctUntilKeyChanged", function() { return __WEBPACK_IMPORTED_MODULE_23__internal_operators_distinctUntilKeyChanged__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__internal_operators_elementAt__ = __webpack_require__(307);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "elementAt", function() { return __WEBPACK_IMPORTED_MODULE_24__internal_operators_elementAt__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__internal_operators_endWith__ = __webpack_require__(308);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "endWith", function() { return __WEBPACK_IMPORTED_MODULE_25__internal_operators_endWith__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__internal_operators_every__ = __webpack_require__(309);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "every", function() { return __WEBPACK_IMPORTED_MODULE_26__internal_operators_every__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__internal_operators_exhaust__ = __webpack_require__(310);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "exhaust", function() { return __WEBPACK_IMPORTED_MODULE_27__internal_operators_exhaust__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__internal_operators_exhaustMap__ = __webpack_require__(311);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "exhaustMap", function() { return __WEBPACK_IMPORTED_MODULE_28__internal_operators_exhaustMap__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__internal_operators_expand__ = __webpack_require__(312);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "expand", function() { return __WEBPACK_IMPORTED_MODULE_29__internal_operators_expand__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__internal_operators_filter__ = __webpack_require__(20);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return __WEBPACK_IMPORTED_MODULE_30__internal_operators_filter__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__internal_operators_finalize__ = __webpack_require__(313);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "finalize", function() { return __WEBPACK_IMPORTED_MODULE_31__internal_operators_finalize__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__internal_operators_find__ = __webpack_require__(224);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "find", function() { return __WEBPACK_IMPORTED_MODULE_32__internal_operators_find__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__internal_operators_findIndex__ = __webpack_require__(314);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "findIndex", function() { return __WEBPACK_IMPORTED_MODULE_33__internal_operators_findIndex__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__internal_operators_first__ = __webpack_require__(315);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "first", function() { return __WEBPACK_IMPORTED_MODULE_34__internal_operators_first__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__internal_operators_groupBy__ = __webpack_require__(203);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "groupBy", function() { return __WEBPACK_IMPORTED_MODULE_35__internal_operators_groupBy__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__internal_operators_ignoreElements__ = __webpack_require__(316);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "ignoreElements", function() { return __WEBPACK_IMPORTED_MODULE_36__internal_operators_ignoreElements__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__internal_operators_isEmpty__ = __webpack_require__(317);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "isEmpty", function() { return __WEBPACK_IMPORTED_MODULE_37__internal_operators_isEmpty__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__internal_operators_last__ = __webpack_require__(318);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "last", function() { return __WEBPACK_IMPORTED_MODULE_38__internal_operators_last__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__internal_operators_map__ = __webpack_require__(13);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return __WEBPACK_IMPORTED_MODULE_39__internal_operators_map__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__internal_operators_mapTo__ = __webpack_require__(319);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "mapTo", function() { return __WEBPACK_IMPORTED_MODULE_40__internal_operators_mapTo__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__internal_operators_materialize__ = __webpack_require__(320);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "materialize", function() { return __WEBPACK_IMPORTED_MODULE_41__internal_operators_materialize__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__internal_operators_max__ = __webpack_require__(321);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return __WEBPACK_IMPORTED_MODULE_42__internal_operators_max__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__internal_operators_merge__ = __webpack_require__(322);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return __WEBPACK_IMPORTED_MODULE_43__internal_operators_merge__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__internal_operators_mergeAll__ = __webpack_require__(57);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "mergeAll", function() { return __WEBPACK_IMPORTED_MODULE_44__internal_operators_mergeAll__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__internal_operators_mergeMap__ = __webpack_require__(29);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "mergeMap", function() { return __WEBPACK_IMPORTED_MODULE_45__internal_operators_mergeMap__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "flatMap", function() { return __WEBPACK_IMPORTED_MODULE_45__internal_operators_mergeMap__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__internal_operators_mergeMapTo__ = __webpack_require__(323);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "mergeMapTo", function() { return __WEBPACK_IMPORTED_MODULE_46__internal_operators_mergeMapTo__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__internal_operators_mergeScan__ = __webpack_require__(324);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "mergeScan", function() { return __WEBPACK_IMPORTED_MODULE_47__internal_operators_mergeScan__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__internal_operators_min__ = __webpack_require__(325);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return __WEBPACK_IMPORTED_MODULE_48__internal_operators_min__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__internal_operators_multicast__ = __webpack_require__(21);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "multicast", function() { return __WEBPACK_IMPORTED_MODULE_49__internal_operators_multicast__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__internal_operators_observeOn__ = __webpack_require__(207);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "observeOn", function() { return __WEBPACK_IMPORTED_MODULE_50__internal_operators_observeOn__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__internal_operators_onErrorResumeNext__ = __webpack_require__(326);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNext", function() { return __WEBPACK_IMPORTED_MODULE_51__internal_operators_onErrorResumeNext__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__internal_operators_pairwise__ = __webpack_require__(327);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "pairwise", function() { return __WEBPACK_IMPORTED_MODULE_52__internal_operators_pairwise__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_53__internal_operators_partition__ = __webpack_require__(328);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return __WEBPACK_IMPORTED_MODULE_53__internal_operators_partition__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_54__internal_operators_pluck__ = __webpack_require__(329);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "pluck", function() { return __WEBPACK_IMPORTED_MODULE_54__internal_operators_pluck__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_55__internal_operators_publish__ = __webpack_require__(330);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "publish", function() { return __WEBPACK_IMPORTED_MODULE_55__internal_operators_publish__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_56__internal_operators_publishBehavior__ = __webpack_require__(331);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "publishBehavior", function() { return __WEBPACK_IMPORTED_MODULE_56__internal_operators_publishBehavior__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_57__internal_operators_publishLast__ = __webpack_require__(332);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "publishLast", function() { return __WEBPACK_IMPORTED_MODULE_57__internal_operators_publishLast__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_58__internal_operators_publishReplay__ = __webpack_require__(333);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "publishReplay", function() { return __WEBPACK_IMPORTED_MODULE_58__internal_operators_publishReplay__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_59__internal_operators_race__ = __webpack_require__(334);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "race", function() { return __WEBPACK_IMPORTED_MODULE_59__internal_operators_race__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_60__internal_operators_reduce__ = __webpack_require__(42);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "reduce", function() { return __WEBPACK_IMPORTED_MODULE_60__internal_operators_reduce__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_61__internal_operators_repeat__ = __webpack_require__(335);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "repeat", function() { return __WEBPACK_IMPORTED_MODULE_61__internal_operators_repeat__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_62__internal_operators_repeatWhen__ = __webpack_require__(336);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "repeatWhen", function() { return __WEBPACK_IMPORTED_MODULE_62__internal_operators_repeatWhen__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_63__internal_operators_retry__ = __webpack_require__(337);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "retry", function() { return __WEBPACK_IMPORTED_MODULE_63__internal_operators_retry__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_64__internal_operators_retryWhen__ = __webpack_require__(338);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "retryWhen", function() { return __WEBPACK_IMPORTED_MODULE_64__internal_operators_retryWhen__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_65__internal_operators_refCount__ = __webpack_require__(50);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "refCount", function() { return __WEBPACK_IMPORTED_MODULE_65__internal_operators_refCount__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_66__internal_operators_sample__ = __webpack_require__(339);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "sample", function() { return __WEBPACK_IMPORTED_MODULE_66__internal_operators_sample__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_67__internal_operators_sampleTime__ = __webpack_require__(340);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "sampleTime", function() { return __WEBPACK_IMPORTED_MODULE_67__internal_operators_sampleTime__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_68__internal_operators_scan__ = __webpack_require__(62);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "scan", function() { return __WEBPACK_IMPORTED_MODULE_68__internal_operators_scan__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_69__internal_operators_sequenceEqual__ = __webpack_require__(341);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "sequenceEqual", function() { return __WEBPACK_IMPORTED_MODULE_69__internal_operators_sequenceEqual__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_70__internal_operators_share__ = __webpack_require__(342);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "share", function() { return __WEBPACK_IMPORTED_MODULE_70__internal_operators_share__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_71__internal_operators_shareReplay__ = __webpack_require__(343);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "shareReplay", function() { return __WEBPACK_IMPORTED_MODULE_71__internal_operators_shareReplay__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_72__internal_operators_single__ = __webpack_require__(344);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "single", function() { return __WEBPACK_IMPORTED_MODULE_72__internal_operators_single__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_73__internal_operators_skip__ = __webpack_require__(345);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "skip", function() { return __WEBPACK_IMPORTED_MODULE_73__internal_operators_skip__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_74__internal_operators_skipLast__ = __webpack_require__(346);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "skipLast", function() { return __WEBPACK_IMPORTED_MODULE_74__internal_operators_skipLast__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_75__internal_operators_skipUntil__ = __webpack_require__(347);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "skipUntil", function() { return __WEBPACK_IMPORTED_MODULE_75__internal_operators_skipUntil__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_76__internal_operators_skipWhile__ = __webpack_require__(348);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "skipWhile", function() { return __WEBPACK_IMPORTED_MODULE_76__internal_operators_skipWhile__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_77__internal_operators_startWith__ = __webpack_require__(349);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "startWith", function() { return __WEBPACK_IMPORTED_MODULE_77__internal_operators_startWith__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_78__internal_operators_subscribeOn__ = __webpack_require__(350);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeOn", function() { return __WEBPACK_IMPORTED_MODULE_78__internal_operators_subscribeOn__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_79__internal_operators_switchAll__ = __webpack_require__(352);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "switchAll", function() { return __WEBPACK_IMPORTED_MODULE_79__internal_operators_switchAll__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_80__internal_operators_switchMap__ = __webpack_require__(63);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "switchMap", function() { return __WEBPACK_IMPORTED_MODULE_80__internal_operators_switchMap__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_81__internal_operators_switchMapTo__ = __webpack_require__(353);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "switchMapTo", function() { return __WEBPACK_IMPORTED_MODULE_81__internal_operators_switchMapTo__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_82__internal_operators_take__ = __webpack_require__(60);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "take", function() { return __WEBPACK_IMPORTED_MODULE_82__internal_operators_take__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_83__internal_operators_takeLast__ = __webpack_require__(61);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "takeLast", function() { return __WEBPACK_IMPORTED_MODULE_83__internal_operators_takeLast__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_84__internal_operators_takeUntil__ = __webpack_require__(354);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "takeUntil", function() { return __WEBPACK_IMPORTED_MODULE_84__internal_operators_takeUntil__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_85__internal_operators_takeWhile__ = __webpack_require__(355);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "takeWhile", function() { return __WEBPACK_IMPORTED_MODULE_85__internal_operators_takeWhile__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_86__internal_operators_tap__ = __webpack_require__(356);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "tap", function() { return __WEBPACK_IMPORTED_MODULE_86__internal_operators_tap__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_87__internal_operators_throttle__ = __webpack_require__(225);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "throttle", function() { return __WEBPACK_IMPORTED_MODULE_87__internal_operators_throttle__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_88__internal_operators_throttleTime__ = __webpack_require__(357);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "throttleTime", function() { return __WEBPACK_IMPORTED_MODULE_88__internal_operators_throttleTime__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_89__internal_operators_throwIfEmpty__ = __webpack_require__(41);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "throwIfEmpty", function() { return __WEBPACK_IMPORTED_MODULE_89__internal_operators_throwIfEmpty__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_90__internal_operators_timeInterval__ = __webpack_require__(358);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return __WEBPACK_IMPORTED_MODULE_90__internal_operators_timeInterval__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_91__internal_operators_timeout__ = __webpack_require__(359);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "timeout", function() { return __WEBPACK_IMPORTED_MODULE_91__internal_operators_timeout__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_92__internal_operators_timeoutWith__ = __webpack_require__(226);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "timeoutWith", function() { return __WEBPACK_IMPORTED_MODULE_92__internal_operators_timeoutWith__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_93__internal_operators_timestamp__ = __webpack_require__(360);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "timestamp", function() { return __WEBPACK_IMPORTED_MODULE_93__internal_operators_timestamp__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_94__internal_operators_toArray__ = __webpack_require__(361);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "toArray", function() { return __WEBPACK_IMPORTED_MODULE_94__internal_operators_toArray__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_95__internal_operators_window__ = __webpack_require__(362);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "window", function() { return __WEBPACK_IMPORTED_MODULE_95__internal_operators_window__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_96__internal_operators_windowCount__ = __webpack_require__(363);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "windowCount", function() { return __WEBPACK_IMPORTED_MODULE_96__internal_operators_windowCount__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_97__internal_operators_windowTime__ = __webpack_require__(364);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "windowTime", function() { return __WEBPACK_IMPORTED_MODULE_97__internal_operators_windowTime__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_98__internal_operators_windowToggle__ = __webpack_require__(365);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "windowToggle", function() { return __WEBPACK_IMPORTED_MODULE_98__internal_operators_windowToggle__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_99__internal_operators_windowWhen__ = __webpack_require__(366);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "windowWhen", function() { return __WEBPACK_IMPORTED_MODULE_99__internal_operators_windowWhen__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_100__internal_operators_withLatestFrom__ = __webpack_require__(367);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "withLatestFrom", function() { return __WEBPACK_IMPORTED_MODULE_100__internal_operators_withLatestFrom__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_101__internal_operators_zip__ = __webpack_require__(368);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return __WEBPACK_IMPORTED_MODULE_101__internal_operators_zip__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_102__internal_operators_zipAll__ = __webpack_require__(369);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "zipAll", function() { return __WEBPACK_IMPORTED_MODULE_102__internal_operators_zipAll__["a"]; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */








































































































//# sourceMappingURL=index.js.map


/***/ }),
/* 41 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = throwIfEmpty;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_EmptyError__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_util_EmptyError,_Subscriber PURE_IMPORTS_END */



function throwIfEmpty(errorFactory) {
    if (errorFactory === void 0) {
        errorFactory = defaultErrorFactory;
    }
    return function (source) {
        return source.lift(new ThrowIfEmptyOperator(errorFactory));
    };
}
var ThrowIfEmptyOperator = /*@__PURE__*/ (function () {
    function ThrowIfEmptyOperator(errorFactory) {
        this.errorFactory = errorFactory;
    }
    ThrowIfEmptyOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ThrowIfEmptySubscriber(subscriber, this.errorFactory));
    };
    return ThrowIfEmptyOperator;
}());
var ThrowIfEmptySubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ThrowIfEmptySubscriber, _super);
    function ThrowIfEmptySubscriber(destination, errorFactory) {
        var _this = _super.call(this, destination) || this;
        _this.errorFactory = errorFactory;
        _this.hasValue = false;
        return _this;
    }
    ThrowIfEmptySubscriber.prototype._next = function (value) {
        this.hasValue = true;
        this.destination.next(value);
    };
    ThrowIfEmptySubscriber.prototype._complete = function () {
        if (!this.hasValue) {
            var err = void 0;
            try {
                err = this.errorFactory();
            }
            catch (e) {
                err = e;
            }
            this.destination.error(err);
        }
        else {
            return this.destination.complete();
        }
    };
    return ThrowIfEmptySubscriber;
}(__WEBPACK_IMPORTED_MODULE_2__Subscriber__["a" /* Subscriber */]));
function defaultErrorFactory() {
    return new __WEBPACK_IMPORTED_MODULE_1__util_EmptyError__["a" /* EmptyError */]();
}
//# sourceMappingURL=throwIfEmpty.js.map


/***/ }),
/* 42 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = reduce;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scan__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__takeLast__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__defaultIfEmpty__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_pipe__ = __webpack_require__(49);
/** PURE_IMPORTS_START _scan,_takeLast,_defaultIfEmpty,_util_pipe PURE_IMPORTS_END */




function reduce(accumulator, seed) {
    if (arguments.length >= 2) {
        return function reduceOperatorFunctionWithSeed(source) {
            return Object(__WEBPACK_IMPORTED_MODULE_3__util_pipe__["a" /* pipe */])(Object(__WEBPACK_IMPORTED_MODULE_0__scan__["a" /* scan */])(accumulator, seed), Object(__WEBPACK_IMPORTED_MODULE_1__takeLast__["a" /* takeLast */])(1), Object(__WEBPACK_IMPORTED_MODULE_2__defaultIfEmpty__["a" /* defaultIfEmpty */])(seed))(source);
        };
    }
    return function reduceOperatorFunction(source) {
        return Object(__WEBPACK_IMPORTED_MODULE_3__util_pipe__["a" /* pipe */])(Object(__WEBPACK_IMPORTED_MODULE_0__scan__["a" /* scan */])(function (acc, value, index) { return accumulator(acc, value, index + 1); }), Object(__WEBPACK_IMPORTED_MODULE_1__takeLast__["a" /* takeLast */])(1))(source);
    };
}
//# sourceMappingURL=reduce.js.map


/***/ }),
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__DO_NOT_USE__ActionTypes", function() { return ActionTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyMiddleware", function() { return applyMiddleware; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bindActionCreators", function() { return bindActionCreators; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combineReducers", function() { return combineReducers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compose", function() { return compose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createStore", function() { return createStore; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_symbol_observable__ = __webpack_require__(235);


/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */
var randomString = function randomString() {
  return Math.random().toString(36).substring(7).split('').join('.');
};

var ActionTypes = {
  INIT: "@@redux/INIT" + randomString(),
  REPLACE: "@@redux/REPLACE" + randomString(),
  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
  }
};

/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */
function isPlainObject(obj) {
  if (typeof obj !== 'object' || obj === null) return false;
  var proto = obj;

  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }

  return Object.getPrototypeOf(obj) === proto;
}

/**
 * Creates a Redux store that holds the state tree.
 * The only way to change the data in the store is to call `dispatch()` on it.
 *
 * There should only be a single store in your app. To specify how different
 * parts of the state tree respond to actions, you may combine several reducers
 * into a single reducer function by using `combineReducers`.
 *
 * @param {Function} reducer A function that returns the next state tree, given
 * the current state tree and the action to handle.
 *
 * @param {any} [preloadedState] The initial state. You may optionally specify it
 * to hydrate the state from the server in universal apps, or to restore a
 * previously serialized user session.
 * If you use `combineReducers` to produce the root reducer function, this must be
 * an object with the same shape as `combineReducers` keys.
 *
 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
 * to enhance the store with third-party capabilities such as middleware,
 * time travel, persistence, etc. The only store enhancer that ships with Redux
 * is `applyMiddleware()`.
 *
 * @returns {Store} A Redux store that lets you read the state, dispatch actions
 * and subscribe to changes.
 */

function createStore(reducer, preloadedState, enhancer) {
  var _ref2;

  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {
    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');
  }

  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
    enhancer = preloadedState;
    preloadedState = undefined;
  }

  if (typeof enhancer !== 'undefined') {
    if (typeof enhancer !== 'function') {
      throw new Error('Expected the enhancer to be a function.');
    }

    return enhancer(createStore)(reducer, preloadedState);
  }

  if (typeof reducer !== 'function') {
    throw new Error('Expected the reducer to be a function.');
  }

  var currentReducer = reducer;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;
  /**
   * This makes a shallow copy of currentListeners so we can use
   * nextListeners as a temporary list while dispatching.
   *
   * This prevents any bugs around consumers calling
   * subscribe/unsubscribe in the middle of a dispatch.
   */

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }
  /**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */


  function getState() {
    if (isDispatching) {
      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');
    }

    return currentState;
  }
  /**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */


  function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error('Expected the listener to be a function.');
    }

    if (isDispatching) {
      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');
    }

    var isSubscribed = true;
    ensureCanMutateNextListeners();
    nextListeners.push(listener);
    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      if (isDispatching) {
        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');
      }

      isSubscribed = false;
      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
      currentListeners = null;
    };
  }
  /**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */


  function dispatch(action) {
    if (!isPlainObject(action)) {
      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
    }

    if (typeof action.type === 'undefined') {
      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
    }

    if (isDispatching) {
      throw new Error('Reducers may not dispatch actions.');
    }

    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }

    var listeners = currentListeners = nextListeners;

    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      listener();
    }

    return action;
  }
  /**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */


  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== 'function') {
      throw new Error('Expected the nextReducer to be a function.');
    }

    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.
    // Any reducers that existed in both the new and old rootReducer
    // will receive the previous state. This effectively populates
    // the new state tree with any relevant data from the old one.

    dispatch({
      type: ActionTypes.REPLACE
    });
  }
  /**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */


  function observable() {
    var _ref;

    var outerSubscribe = subscribe;
    return _ref = {
      /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */
      subscribe: function subscribe(observer) {
        if (typeof observer !== 'object' || observer === null) {
          throw new TypeError('Expected the observer to be an object.');
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return {
          unsubscribe: unsubscribe
        };
      }
    }, _ref[__WEBPACK_IMPORTED_MODULE_0_symbol_observable__["a" /* default */]] = function () {
      return this;
    }, _ref;
  } // When a store is created, an "INIT" action is dispatched so that every
  // reducer returns their initial state. This effectively populates
  // the initial state tree.


  dispatch({
    type: ActionTypes.INIT
  });
  return _ref2 = {
    dispatch: dispatch,
    subscribe: subscribe,
    getState: getState,
    replaceReducer: replaceReducer
  }, _ref2[__WEBPACK_IMPORTED_MODULE_0_symbol_observable__["a" /* default */]] = observable, _ref2;
}

/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */


  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
  } catch (e) {} // eslint-disable-line no-empty

}

function getUndefinedStateErrorMessage(key, action) {
  var actionType = action && action.type;
  var actionDescription = actionType && "action \"" + String(actionType) + "\"" || 'an action';
  return "Given " + actionDescription + ", reducer \"" + key + "\" returned undefined. " + "To ignore an action, you must explicitly return the previous state. " + "If you want this reducer to hold no value, you can return null instead of undefined.";
}

function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
  var reducerKeys = Object.keys(reducers);
  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

  if (reducerKeys.length === 0) {
    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
  }

  if (!isPlainObject(inputState)) {
    return "The " + argumentName + " has unexpected type of \"" + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + "\". Expected argument to be an object with the following " + ("keys: \"" + reducerKeys.join('", "') + "\"");
  }

  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
  });
  unexpectedKeys.forEach(function (key) {
    unexpectedKeyCache[key] = true;
  });
  if (action && action.type === ActionTypes.REPLACE) return;

  if (unexpectedKeys.length > 0) {
    return "Unexpected " + (unexpectedKeys.length > 1 ? 'keys' : 'key') + " " + ("\"" + unexpectedKeys.join('", "') + "\" found in " + argumentName + ". ") + "Expected to find one of the known reducer keys instead: " + ("\"" + reducerKeys.join('", "') + "\". Unexpected keys will be ignored.");
  }
}

function assertReducerShape(reducers) {
  Object.keys(reducers).forEach(function (key) {
    var reducer = reducers[key];
    var initialState = reducer(undefined, {
      type: ActionTypes.INIT
    });

    if (typeof initialState === 'undefined') {
      throw new Error("Reducer \"" + key + "\" returned undefined during initialization. " + "If the state passed to the reducer is undefined, you must " + "explicitly return the initial state. The initial state may " + "not be undefined. If you don't want to set a value for this reducer, " + "you can use null instead of undefined.");
    }

    if (typeof reducer(undefined, {
      type: ActionTypes.PROBE_UNKNOWN_ACTION()
    }) === 'undefined') {
      throw new Error("Reducer \"" + key + "\" returned undefined when probed with a random type. " + ("Don't try to handle " + ActionTypes.INIT + " or other actions in \"redux/*\" ") + "namespace. They are considered private. Instead, you must return the " + "current state for any unknown actions, unless it is undefined, " + "in which case you must return the initial state, regardless of the " + "action type. The initial state may not be undefined, but can be null.");
    }
  });
}
/**
 * Turns an object whose values are different reducer functions, into a single
 * reducer function. It will call every child reducer, and gather their results
 * into a single state object, whose keys correspond to the keys of the passed
 * reducer functions.
 *
 * @param {Object} reducers An object whose values correspond to different
 * reducer functions that need to be combined into one. One handy way to obtain
 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
 * undefined for any action. Instead, they should return their initial state
 * if the state passed to them was undefined, and the current state for any
 * unrecognized action.
 *
 * @returns {Function} A reducer function that invokes every reducer inside the
 * passed object, and builds a state object with the same shape.
 */


function combineReducers(reducers) {
  var reducerKeys = Object.keys(reducers);
  var finalReducers = {};

  for (var i = 0; i < reducerKeys.length; i++) {
    var key = reducerKeys[i];

    if (process.env.NODE_ENV !== 'production') {
      if (typeof reducers[key] === 'undefined') {
        warning("No reducer provided for key \"" + key + "\"");
      }
    }

    if (typeof reducers[key] === 'function') {
      finalReducers[key] = reducers[key];
    }
  }

  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same
  // keys multiple times.

  var unexpectedKeyCache;

  if (process.env.NODE_ENV !== 'production') {
    unexpectedKeyCache = {};
  }

  var shapeAssertionError;

  try {
    assertReducerShape(finalReducers);
  } catch (e) {
    shapeAssertionError = e;
  }

  return function combination(state, action) {
    if (state === void 0) {
      state = {};
    }

    if (shapeAssertionError) {
      throw shapeAssertionError;
    }

    if (process.env.NODE_ENV !== 'production') {
      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);

      if (warningMessage) {
        warning(warningMessage);
      }
    }

    var hasChanged = false;
    var nextState = {};

    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
      var _key = finalReducerKeys[_i];
      var reducer = finalReducers[_key];
      var previousStateForKey = state[_key];
      var nextStateForKey = reducer(previousStateForKey, action);

      if (typeof nextStateForKey === 'undefined') {
        var errorMessage = getUndefinedStateErrorMessage(_key, action);
        throw new Error(errorMessage);
      }

      nextState[_key] = nextStateForKey;
      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
    }

    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;
    return hasChanged ? nextState : state;
  };
}

function bindActionCreator(actionCreator, dispatch) {
  return function () {
    return dispatch(actionCreator.apply(this, arguments));
  };
}
/**
 * Turns an object whose values are action creators, into an object with the
 * same keys, but with every function wrapped into a `dispatch` call so they
 * may be invoked directly. This is just a convenience method, as you can call
 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
 *
 * For convenience, you can also pass an action creator as the first argument,
 * and get a dispatch wrapped function in return.
 *
 * @param {Function|Object} actionCreators An object whose values are action
 * creator functions. One handy way to obtain it is to use ES6 `import * as`
 * syntax. You may also pass a single function.
 *
 * @param {Function} dispatch The `dispatch` function available on your Redux
 * store.
 *
 * @returns {Function|Object} The object mimicking the original object, but with
 * every action creator wrapped into the `dispatch` call. If you passed a
 * function as `actionCreators`, the return value will also be a single
 * function.
 */


function bindActionCreators(actionCreators, dispatch) {
  if (typeof actionCreators === 'function') {
    return bindActionCreator(actionCreators, dispatch);
  }

  if (typeof actionCreators !== 'object' || actionCreators === null) {
    throw new Error("bindActionCreators expected an object or a function, instead received " + (actionCreators === null ? 'null' : typeof actionCreators) + ". " + "Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?");
  }

  var boundActionCreators = {};

  for (var key in actionCreators) {
    var actionCreator = actionCreators[key];

    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }

  return boundActionCreators;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    keys.push.apply(keys, Object.getOwnPropertySymbols(object));
  }

  if (enumerableOnly) keys = keys.filter(function (sym) {
    return Object.getOwnPropertyDescriptor(object, sym).enumerable;
  });
  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */
function compose() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }

  if (funcs.length === 1) {
    return funcs[0];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(void 0, arguments));
    };
  });
}

/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */

function applyMiddleware() {
  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }

  return function (createStore) {
    return function () {
      var store = createStore.apply(void 0, arguments);

      var _dispatch = function dispatch() {
        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');
      };

      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch() {
          return _dispatch.apply(void 0, arguments);
        }
      };
      var chain = middlewares.map(function (middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = compose.apply(void 0, chain)(store.dispatch);
      return _objectSpread2({}, store, {
        dispatch: _dispatch
      });
    };
  };
}

/*
 * This is a dummy function to check if the function name has been altered by minification.
 * If the function has been minified and NODE_ENV !== 'production', warn the user.
 */

function isCrushed() {}

if (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {
  warning('You are currently using minified code outside of NODE_ENV === "production". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');
}



/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(234)))

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.assert = assert;
exports.has = has;
exports.pick = pick;
exports.interleave = interleave;
exports.toJuiTemplate = toJuiTemplate;
exports.padLeft = padLeft;
exports.clamp = clamp;
exports.transpose = transpose;
exports.mod = mod;
exports.to$Array = to$Array;
exports.zip = zip;
exports.zipFlatten = zipFlatten;
exports.uniqueId = uniqueId;
exports.range = range;
function assert(cond, msg) {
    if (!cond) throw new Error(msg);
}

function has(obj, key) {
    return Object.keys(obj).includes(key);
}

function pick(obj, _keys) {
    var keys = Array.isArray(_keys) ? _keys : [_keys];
    var ret = {};
    var map = new Map(Object.entries(obj));
    keys.forEach(function (key) {
        if (map.has(key)) {
            ret[key] = map.get(key);
        }
    });
    return ret;
}

function interleave(a, b) {
    var ret = [];
    var l = 0;
    var r = 0;
    var aLen = a.length;
    var bLen = b.length;
    while (l < aLen && r < bLen) {
        ret.push(a[l++]);
        ret.push(b[r++]);
    }
    while (l < aLen) {
        ret.push(a[l++]);
    }while (r < bLen) {
        ret.push(b[r++]);
    }return ret;
}

function toJuiTemplate(strings) {
    for (var _len = arguments.length, varNames = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        varNames[_key - 1] = arguments[_key];
    }

    if (varNames.some(function (v) {
        return typeof v !== 'string';
    })) {
        throw new Error('parameter "varNames" has to be string[] type.');
    }
    return interleave(strings, varNames.map(function (str) {
        return '<!=' + str + '!>';
    })).join('');
}

function padLeft(string, c, len) {
    var remain = len - string.length;
    if (remain <= 0) return string;
    return c.repeat(remain) + string;
}

function clamp(num, lower, upper) {
    if (num < lower) return lower;
    if (upper < num) return upper;
    return num;
}

function transpose(mat) {
    var ret = [];
    var len = mat[0].length;
    var len2 = mat.length;
    for (var i = 0; i < len; ++i) {
        ret.push([]);
        for (var j = 0; j < len2; ++j) {
            ret[i].push(mat[j][i]);
        }
    }
    return ret;
}

function mod(a, n) {
    return (a % n + n) % n;
}

// jquery 의존성 있음!!
function to$Array($els) {
    return Array.from($els).map(function (e) {
        return $(e);
    });
}

function zip(a) {
    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
    }

    assert(args.every(function (b) {
        return b.length === a.length;
    }), '[zip] array length mismatch');
    var len = a.length;
    var argsLen = args.length;
    var ret = [];
    for (var i = 0; i < len; ++i) {
        var tmp = [a[i]];
        for (var j = 0; j < argsLen; ++j) {
            tmp.push(args[j][i]);
        }
        ret.push(tmp);
    }
    return ret;
}

function zipFlatten(a) {
    for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
        args[_key3 - 1] = arguments[_key3];
    }

    assert(args.every(function (b) {
        return b.length === a.length;
    }), '[zipFlatten] array length mismatch');
    var len = a.length;
    var argsLen = args.length;
    var ret = [];
    for (var i = 0; i < len; ++i) {
        var _ref;

        var tmp = [a[i]];
        for (var j = 0; j < argsLen; ++j) {
            tmp.push(args[j][i]);
        }
        ret.push((_ref = []).concat.apply(_ref, tmp));
    }
    return ret;
}

var cnt = 0;
function uniqueId() {
    var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

    return prefix + '_' + Date.now() + '_' + ++cnt;
}

function _range(s, t) {
    var ret = [];
    var i = s - 1;
    while (++i < t) {
        ret.push(i);
    }
    return ret;
}

function range() {
    if (arguments.length === 1) return _range(0, arguments.length <= 0 ? undefined : arguments[0]);
    return _range.apply(undefined, arguments);
}

/***/ }),
/* 45 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = canReportError;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */

function canReportError(observer) {
    while (observer) {
        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;
        if (closed_1 || isStopped) {
            return false;
        }
        else if (destination && destination instanceof __WEBPACK_IMPORTED_MODULE_0__Subscriber__["a" /* Subscriber */]) {
            observer = destination;
        }
        else {
            observer = null;
        }
    }
    return true;
}
//# sourceMappingURL=canReportError.js.map


/***/ }),
/* 46 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = hostReportError;
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function hostReportError(err) {
    setTimeout(function () { throw err; }, 0);
}
//# sourceMappingURL=hostReportError.js.map


/***/ }),
/* 47 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isObject;
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isObject(x) {
    return x !== null && typeof x === 'object';
}
//# sourceMappingURL=isObject.js.map


/***/ }),
/* 48 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return rxSubscriber; });
/* unused harmony export $$rxSubscriber */
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var rxSubscriber = /*@__PURE__*/ (function () {
    return typeof Symbol === 'function'
        ? /*@__PURE__*/ Symbol('rxSubscriber')
        : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();
})();
var $$rxSubscriber = rxSubscriber;
//# sourceMappingURL=rxSubscriber.js.map


/***/ }),
/* 49 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = pipe;
/* harmony export (immutable) */ __webpack_exports__["b"] = pipeFromArray;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__identity__ = __webpack_require__(18);
/** PURE_IMPORTS_START _identity PURE_IMPORTS_END */

function pipe() {
    var fns = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        fns[_i] = arguments[_i];
    }
    return pipeFromArray(fns);
}
function pipeFromArray(fns) {
    if (fns.length === 0) {
        return __WEBPACK_IMPORTED_MODULE_0__identity__["a" /* identity */];
    }
    if (fns.length === 1) {
        return fns[0];
    }
    return function piped(input) {
        return fns.reduce(function (prev, fn) { return fn(prev); }, input);
    };
}
//# sourceMappingURL=pipe.js.map


/***/ }),
/* 50 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = refCount;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function refCount() {
    return function refCountOperatorFunction(source) {
        return source.lift(new RefCountOperator(source));
    };
}
var RefCountOperator = /*@__PURE__*/ (function () {
    function RefCountOperator(connectable) {
        this.connectable = connectable;
    }
    RefCountOperator.prototype.call = function (subscriber, source) {
        var connectable = this.connectable;
        connectable._refCount++;
        var refCounter = new RefCountSubscriber(subscriber, connectable);
        var subscription = source.subscribe(refCounter);
        if (!refCounter.closed) {
            refCounter.connection = connectable.connect();
        }
        return subscription;
    };
    return RefCountOperator;
}());
var RefCountSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](RefCountSubscriber, _super);
    function RefCountSubscriber(destination, connectable) {
        var _this = _super.call(this, destination) || this;
        _this.connectable = connectable;
        return _this;
    }
    RefCountSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (!connectable) {
            this.connection = null;
            return;
        }
        this.connectable = null;
        var refCount = connectable._refCount;
        if (refCount <= 0) {
            this.connection = null;
            return;
        }
        connectable._refCount = refCount - 1;
        if (refCount > 1) {
            this.connection = null;
            return;
        }
        var connection = this.connection;
        var sharedConnection = connectable._connection;
        this.connection = null;
        if (sharedConnection && (!connection || sharedConnection === connection)) {
            sharedConnection.unsubscribe();
        }
    };
    return RefCountSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=refCount.js.map


/***/ }),
/* 51 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ReplaySubject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subject__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scheduler_queue__ = __webpack_require__(205);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Subscription__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__operators_observeOn__ = __webpack_require__(207);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_ObjectUnsubscribedError__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__SubjectSubscription__ = __webpack_require__(202);
/** PURE_IMPORTS_START tslib,_Subject,_scheduler_queue,_Subscription,_operators_observeOn,_util_ObjectUnsubscribedError,_SubjectSubscription PURE_IMPORTS_END */







var ReplaySubject = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ReplaySubject, _super);
    function ReplaySubject(bufferSize, windowTime, scheduler) {
        if (bufferSize === void 0) {
            bufferSize = Number.POSITIVE_INFINITY;
        }
        if (windowTime === void 0) {
            windowTime = Number.POSITIVE_INFINITY;
        }
        var _this = _super.call(this) || this;
        _this.scheduler = scheduler;
        _this._events = [];
        _this._infiniteTimeWindow = false;
        _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;
        _this._windowTime = windowTime < 1 ? 1 : windowTime;
        if (windowTime === Number.POSITIVE_INFINITY) {
            _this._infiniteTimeWindow = true;
            _this.next = _this.nextInfiniteTimeWindow;
        }
        else {
            _this.next = _this.nextTimeWindow;
        }
        return _this;
    }
    ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {
        var _events = this._events;
        _events.push(value);
        if (_events.length > this._bufferSize) {
            _events.shift();
        }
        _super.prototype.next.call(this, value);
    };
    ReplaySubject.prototype.nextTimeWindow = function (value) {
        this._events.push(new ReplayEvent(this._getNow(), value));
        this._trimBufferThenGetEvents();
        _super.prototype.next.call(this, value);
    };
    ReplaySubject.prototype._subscribe = function (subscriber) {
        var _infiniteTimeWindow = this._infiniteTimeWindow;
        var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();
        var scheduler = this.scheduler;
        var len = _events.length;
        var subscription;
        if (this.closed) {
            throw new __WEBPACK_IMPORTED_MODULE_5__util_ObjectUnsubscribedError__["a" /* ObjectUnsubscribedError */]();
        }
        else if (this.isStopped || this.hasError) {
            subscription = __WEBPACK_IMPORTED_MODULE_3__Subscription__["a" /* Subscription */].EMPTY;
        }
        else {
            this.observers.push(subscriber);
            subscription = new __WEBPACK_IMPORTED_MODULE_6__SubjectSubscription__["a" /* SubjectSubscription */](this, subscriber);
        }
        if (scheduler) {
            subscriber.add(subscriber = new __WEBPACK_IMPORTED_MODULE_4__operators_observeOn__["a" /* ObserveOnSubscriber */](subscriber, scheduler));
        }
        if (_infiniteTimeWindow) {
            for (var i = 0; i < len && !subscriber.closed; i++) {
                subscriber.next(_events[i]);
            }
        }
        else {
            for (var i = 0; i < len && !subscriber.closed; i++) {
                subscriber.next(_events[i].value);
            }
        }
        if (this.hasError) {
            subscriber.error(this.thrownError);
        }
        else if (this.isStopped) {
            subscriber.complete();
        }
        return subscription;
    };
    ReplaySubject.prototype._getNow = function () {
        return (this.scheduler || __WEBPACK_IMPORTED_MODULE_2__scheduler_queue__["a" /* queue */]).now();
    };
    ReplaySubject.prototype._trimBufferThenGetEvents = function () {
        var now = this._getNow();
        var _bufferSize = this._bufferSize;
        var _windowTime = this._windowTime;
        var _events = this._events;
        var eventsCount = _events.length;
        var spliceCount = 0;
        while (spliceCount < eventsCount) {
            if ((now - _events[spliceCount].time) < _windowTime) {
                break;
            }
            spliceCount++;
        }
        if (eventsCount > _bufferSize) {
            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);
        }
        if (spliceCount > 0) {
            _events.splice(0, spliceCount);
        }
        return _events;
    };
    return ReplaySubject;
}(__WEBPACK_IMPORTED_MODULE_1__Subject__["a" /* Subject */]));

var ReplayEvent = /*@__PURE__*/ (function () {
    function ReplayEvent(time, value) {
        this.time = time;
        this.value = value;
    }
    return ReplayEvent;
}());
//# sourceMappingURL=ReplaySubject.js.map


/***/ }),
/* 52 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = scheduleArray;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscription__ = __webpack_require__(7);
/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */


function scheduleArray(input, scheduler) {
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var sub = new __WEBPACK_IMPORTED_MODULE_1__Subscription__["a" /* Subscription */]();
        var i = 0;
        sub.add(scheduler.schedule(function () {
            if (i === input.length) {
                subscriber.complete();
                return;
            }
            subscriber.next(input[i++]);
            if (!subscriber.closed) {
                sub.add(this.schedule());
            }
        }));
        return sub;
    });
}
//# sourceMappingURL=scheduleArray.js.map


/***/ }),
/* 53 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = throwError;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

function throwError(error, scheduler) {
    if (!scheduler) {
        return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) { return subscriber.error(error); });
    }
    else {
        return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });
    }
}
function dispatch(_a) {
    var error = _a.error, subscriber = _a.subscriber;
    subscriber.error(error);
}
//# sourceMappingURL=throwError.js.map


/***/ }),
/* 54 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = noop;
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function noop() { }
//# sourceMappingURL=noop.js.map


/***/ }),
/* 55 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["b"] = combineLatest;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CombineLatestOperator; });
/* unused harmony export CombineLatestSubscriber */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_isScheduler__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isArray__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__fromArray__ = __webpack_require__(25);
/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */






var NONE = {};
function combineLatest() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var resultSelector = null;
    var scheduler = null;
    if (Object(__WEBPACK_IMPORTED_MODULE_1__util_isScheduler__["a" /* isScheduler */])(observables[observables.length - 1])) {
        scheduler = observables.pop();
    }
    if (typeof observables[observables.length - 1] === 'function') {
        resultSelector = observables.pop();
    }
    if (observables.length === 1 && Object(__WEBPACK_IMPORTED_MODULE_2__util_isArray__["a" /* isArray */])(observables[0])) {
        observables = observables[0];
    }
    return Object(__WEBPACK_IMPORTED_MODULE_5__fromArray__["a" /* fromArray */])(observables, scheduler).lift(new CombineLatestOperator(resultSelector));
}
var CombineLatestOperator = /*@__PURE__*/ (function () {
    function CombineLatestOperator(resultSelector) {
        this.resultSelector = resultSelector;
    }
    CombineLatestOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));
    };
    return CombineLatestOperator;
}());

var CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](CombineLatestSubscriber, _super);
    function CombineLatestSubscriber(destination, resultSelector) {
        var _this = _super.call(this, destination) || this;
        _this.resultSelector = resultSelector;
        _this.active = 0;
        _this.values = [];
        _this.observables = [];
        return _this;
    }
    CombineLatestSubscriber.prototype._next = function (observable) {
        this.values.push(NONE);
        this.observables.push(observable);
    };
    CombineLatestSubscriber.prototype._complete = function () {
        var observables = this.observables;
        var len = observables.length;
        if (len === 0) {
            this.destination.complete();
        }
        else {
            this.active = len;
            this.toRespond = len;
            for (var i = 0; i < len; i++) {
                var observable = observables[i];
                this.add(Object(__WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__["a" /* subscribeToResult */])(this, observable, observable, i));
            }
        }
    };
    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {
        if ((this.active -= 1) === 0) {
            this.destination.complete();
        }
    };
    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var values = this.values;
        var oldVal = values[outerIndex];
        var toRespond = !this.toRespond
            ? 0
            : oldVal === NONE ? --this.toRespond : this.toRespond;
        values[outerIndex] = innerValue;
        if (toRespond === 0) {
            if (this.resultSelector) {
                this._tryResultSelector(values);
            }
            else {
                this.destination.next(values.slice());
            }
        }
    };
    CombineLatestSubscriber.prototype._tryResultSelector = function (values) {
        var result;
        try {
            result = this.resultSelector.apply(this, values);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return CombineLatestSubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__["a" /* OuterSubscriber */]));

//# sourceMappingURL=combineLatest.js.map


/***/ }),
/* 56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return subscribeTo; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__subscribeToArray__ = __webpack_require__(208);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__subscribeToPromise__ = __webpack_require__(269);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__subscribeToIterable__ = __webpack_require__(270);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__subscribeToObservable__ = __webpack_require__(271);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__isArrayLike__ = __webpack_require__(211);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__isPromise__ = __webpack_require__(212);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__isObject__ = __webpack_require__(47);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__symbol_iterator__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__symbol_observable__ = __webpack_require__(19);
/** PURE_IMPORTS_START _subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */









var subscribeTo = function (result) {
    if (!!result && typeof result[__WEBPACK_IMPORTED_MODULE_8__symbol_observable__["a" /* observable */]] === 'function') {
        return Object(__WEBPACK_IMPORTED_MODULE_3__subscribeToObservable__["a" /* subscribeToObservable */])(result);
    }
    else if (Object(__WEBPACK_IMPORTED_MODULE_4__isArrayLike__["a" /* isArrayLike */])(result)) {
        return Object(__WEBPACK_IMPORTED_MODULE_0__subscribeToArray__["a" /* subscribeToArray */])(result);
    }
    else if (Object(__WEBPACK_IMPORTED_MODULE_5__isPromise__["a" /* isPromise */])(result)) {
        return Object(__WEBPACK_IMPORTED_MODULE_1__subscribeToPromise__["a" /* subscribeToPromise */])(result);
    }
    else if (!!result && typeof result[__WEBPACK_IMPORTED_MODULE_7__symbol_iterator__["a" /* iterator */]] === 'function') {
        return Object(__WEBPACK_IMPORTED_MODULE_2__subscribeToIterable__["a" /* subscribeToIterable */])(result);
    }
    else {
        var value = Object(__WEBPACK_IMPORTED_MODULE_6__isObject__["a" /* isObject */])(result) ? 'an invalid object' : "'" + result + "'";
        var msg = "You provided " + value + " where a stream was expected."
            + ' You can provide an Observable, Promise, Array, or Iterable.';
        throw new TypeError(msg);
    }
};
//# sourceMappingURL=subscribeTo.js.map


/***/ }),
/* 57 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = mergeAll;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mergeMap__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_identity__ = __webpack_require__(18);
/** PURE_IMPORTS_START _mergeMap,_util_identity PURE_IMPORTS_END */


function mergeAll(concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    return Object(__WEBPACK_IMPORTED_MODULE_0__mergeMap__["a" /* mergeMap */])(__WEBPACK_IMPORTED_MODULE_1__util_identity__["a" /* identity */], concurrent);
}
//# sourceMappingURL=mergeAll.js.map


/***/ }),
/* 58 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = defer;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__from__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__empty__ = __webpack_require__(14);
/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */



function defer(observableFactory) {
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var input;
        try {
            input = observableFactory();
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        var source = input ? Object(__WEBPACK_IMPORTED_MODULE_1__from__["a" /* from */])(input) : Object(__WEBPACK_IMPORTED_MODULE_2__empty__["b" /* empty */])();
        return source.subscribe(subscriber);
    });
}
//# sourceMappingURL=defer.js.map


/***/ }),
/* 59 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["b"] = zip;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ZipOperator; });
/* unused harmony export ZipSubscriber */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__fromArray__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isArray__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_subscribeToResult__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__internal_symbol_iterator__ = __webpack_require__(28);
/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_OuterSubscriber,_util_subscribeToResult,_.._internal_symbol_iterator PURE_IMPORTS_END */







function zip() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var resultSelector = observables[observables.length - 1];
    if (typeof resultSelector === 'function') {
        observables.pop();
    }
    return Object(__WEBPACK_IMPORTED_MODULE_1__fromArray__["a" /* fromArray */])(observables, undefined).lift(new ZipOperator(resultSelector));
}
var ZipOperator = /*@__PURE__*/ (function () {
    function ZipOperator(resultSelector) {
        this.resultSelector = resultSelector;
    }
    ZipOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));
    };
    return ZipOperator;
}());

var ZipSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ZipSubscriber, _super);
    function ZipSubscriber(destination, resultSelector, values) {
        if (values === void 0) {
            values = Object.create(null);
        }
        var _this = _super.call(this, destination) || this;
        _this.iterators = [];
        _this.active = 0;
        _this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;
        _this.values = values;
        return _this;
    }
    ZipSubscriber.prototype._next = function (value) {
        var iterators = this.iterators;
        if (Object(__WEBPACK_IMPORTED_MODULE_2__util_isArray__["a" /* isArray */])(value)) {
            iterators.push(new StaticArrayIterator(value));
        }
        else if (typeof value[__WEBPACK_IMPORTED_MODULE_6__internal_symbol_iterator__["a" /* iterator */]] === 'function') {
            iterators.push(new StaticIterator(value[__WEBPACK_IMPORTED_MODULE_6__internal_symbol_iterator__["a" /* iterator */]]()));
        }
        else {
            iterators.push(new ZipBufferIterator(this.destination, this, value));
        }
    };
    ZipSubscriber.prototype._complete = function () {
        var iterators = this.iterators;
        var len = iterators.length;
        this.unsubscribe();
        if (len === 0) {
            this.destination.complete();
            return;
        }
        this.active = len;
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            if (iterator.stillUnsubscribed) {
                var destination = this.destination;
                destination.add(iterator.subscribe(iterator, i));
            }
            else {
                this.active--;
            }
        }
    };
    ZipSubscriber.prototype.notifyInactive = function () {
        this.active--;
        if (this.active === 0) {
            this.destination.complete();
        }
    };
    ZipSubscriber.prototype.checkIterators = function () {
        var iterators = this.iterators;
        var len = iterators.length;
        var destination = this.destination;
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {
                return;
            }
        }
        var shouldComplete = false;
        var args = [];
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            var result = iterator.next();
            if (iterator.hasCompleted()) {
                shouldComplete = true;
            }
            if (result.done) {
                destination.complete();
                return;
            }
            args.push(result.value);
        }
        if (this.resultSelector) {
            this._tryresultSelector(args);
        }
        else {
            destination.next(args);
        }
        if (shouldComplete) {
            destination.complete();
        }
    };
    ZipSubscriber.prototype._tryresultSelector = function (args) {
        var result;
        try {
            result = this.resultSelector.apply(this, args);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return ZipSubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__Subscriber__["a" /* Subscriber */]));

var StaticIterator = /*@__PURE__*/ (function () {
    function StaticIterator(iterator) {
        this.iterator = iterator;
        this.nextResult = iterator.next();
    }
    StaticIterator.prototype.hasValue = function () {
        return true;
    };
    StaticIterator.prototype.next = function () {
        var result = this.nextResult;
        this.nextResult = this.iterator.next();
        return result;
    };
    StaticIterator.prototype.hasCompleted = function () {
        var nextResult = this.nextResult;
        return nextResult && nextResult.done;
    };
    return StaticIterator;
}());
var StaticArrayIterator = /*@__PURE__*/ (function () {
    function StaticArrayIterator(array) {
        this.array = array;
        this.index = 0;
        this.length = 0;
        this.length = array.length;
    }
    StaticArrayIterator.prototype[__WEBPACK_IMPORTED_MODULE_6__internal_symbol_iterator__["a" /* iterator */]] = function () {
        return this;
    };
    StaticArrayIterator.prototype.next = function (value) {
        var i = this.index++;
        var array = this.array;
        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };
    };
    StaticArrayIterator.prototype.hasValue = function () {
        return this.array.length > this.index;
    };
    StaticArrayIterator.prototype.hasCompleted = function () {
        return this.array.length === this.index;
    };
    return StaticArrayIterator;
}());
var ZipBufferIterator = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ZipBufferIterator, _super);
    function ZipBufferIterator(destination, parent, observable) {
        var _this = _super.call(this, destination) || this;
        _this.parent = parent;
        _this.observable = observable;
        _this.stillUnsubscribed = true;
        _this.buffer = [];
        _this.isComplete = false;
        return _this;
    }
    ZipBufferIterator.prototype[__WEBPACK_IMPORTED_MODULE_6__internal_symbol_iterator__["a" /* iterator */]] = function () {
        return this;
    };
    ZipBufferIterator.prototype.next = function () {
        var buffer = this.buffer;
        if (buffer.length === 0 && this.isComplete) {
            return { value: null, done: true };
        }
        else {
            return { value: buffer.shift(), done: false };
        }
    };
    ZipBufferIterator.prototype.hasValue = function () {
        return this.buffer.length > 0;
    };
    ZipBufferIterator.prototype.hasCompleted = function () {
        return this.buffer.length === 0 && this.isComplete;
    };
    ZipBufferIterator.prototype.notifyComplete = function () {
        if (this.buffer.length > 0) {
            this.isComplete = true;
            this.parent.notifyInactive();
        }
        else {
            this.destination.complete();
        }
    };
    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.buffer.push(innerValue);
        this.parent.checkIterators();
    };
    ZipBufferIterator.prototype.subscribe = function (value, index) {
        return Object(__WEBPACK_IMPORTED_MODULE_5__util_subscribeToResult__["a" /* subscribeToResult */])(this, this.observable, this, index);
    };
    return ZipBufferIterator;
}(__WEBPACK_IMPORTED_MODULE_4__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=zip.js.map


/***/ }),
/* 60 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = take;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_ArgumentOutOfRangeError__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__observable_empty__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */




function take(count) {
    return function (source) {
        if (count === 0) {
            return Object(__WEBPACK_IMPORTED_MODULE_3__observable_empty__["b" /* empty */])();
        }
        else {
            return source.lift(new TakeOperator(count));
        }
    };
}
var TakeOperator = /*@__PURE__*/ (function () {
    function TakeOperator(total) {
        this.total = total;
        if (this.total < 0) {
            throw new __WEBPACK_IMPORTED_MODULE_2__util_ArgumentOutOfRangeError__["a" /* ArgumentOutOfRangeError */];
        }
    }
    TakeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeSubscriber(subscriber, this.total));
    };
    return TakeOperator;
}());
var TakeSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](TakeSubscriber, _super);
    function TakeSubscriber(destination, total) {
        var _this = _super.call(this, destination) || this;
        _this.total = total;
        _this.count = 0;
        return _this;
    }
    TakeSubscriber.prototype._next = function (value) {
        var total = this.total;
        var count = ++this.count;
        if (count <= total) {
            this.destination.next(value);
            if (count === total) {
                this.destination.complete();
                this.unsubscribe();
            }
        }
    };
    return TakeSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=take.js.map


/***/ }),
/* 61 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = takeLast;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_ArgumentOutOfRangeError__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__observable_empty__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */




function takeLast(count) {
    return function takeLastOperatorFunction(source) {
        if (count === 0) {
            return Object(__WEBPACK_IMPORTED_MODULE_3__observable_empty__["b" /* empty */])();
        }
        else {
            return source.lift(new TakeLastOperator(count));
        }
    };
}
var TakeLastOperator = /*@__PURE__*/ (function () {
    function TakeLastOperator(total) {
        this.total = total;
        if (this.total < 0) {
            throw new __WEBPACK_IMPORTED_MODULE_2__util_ArgumentOutOfRangeError__["a" /* ArgumentOutOfRangeError */];
        }
    }
    TakeLastOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));
    };
    return TakeLastOperator;
}());
var TakeLastSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](TakeLastSubscriber, _super);
    function TakeLastSubscriber(destination, total) {
        var _this = _super.call(this, destination) || this;
        _this.total = total;
        _this.ring = new Array();
        _this.count = 0;
        return _this;
    }
    TakeLastSubscriber.prototype._next = function (value) {
        var ring = this.ring;
        var total = this.total;
        var count = this.count++;
        if (ring.length < total) {
            ring.push(value);
        }
        else {
            var index = count % total;
            ring[index] = value;
        }
    };
    TakeLastSubscriber.prototype._complete = function () {
        var destination = this.destination;
        var count = this.count;
        if (count > 0) {
            var total = this.count >= this.total ? this.total : this.count;
            var ring = this.ring;
            for (var i = 0; i < total; i++) {
                var idx = (count++) % total;
                destination.next(ring[idx]);
            }
        }
        destination.complete();
    };
    return TakeLastSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=takeLast.js.map


/***/ }),
/* 62 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = scan;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function scan(accumulator, seed) {
    var hasSeed = false;
    if (arguments.length >= 2) {
        hasSeed = true;
    }
    return function scanOperatorFunction(source) {
        return source.lift(new ScanOperator(accumulator, seed, hasSeed));
    };
}
var ScanOperator = /*@__PURE__*/ (function () {
    function ScanOperator(accumulator, seed, hasSeed) {
        if (hasSeed === void 0) {
            hasSeed = false;
        }
        this.accumulator = accumulator;
        this.seed = seed;
        this.hasSeed = hasSeed;
    }
    ScanOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));
    };
    return ScanOperator;
}());
var ScanSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ScanSubscriber, _super);
    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {
        var _this = _super.call(this, destination) || this;
        _this.accumulator = accumulator;
        _this._seed = _seed;
        _this.hasSeed = hasSeed;
        _this.index = 0;
        return _this;
    }
    Object.defineProperty(ScanSubscriber.prototype, "seed", {
        get: function () {
            return this._seed;
        },
        set: function (value) {
            this.hasSeed = true;
            this._seed = value;
        },
        enumerable: true,
        configurable: true
    });
    ScanSubscriber.prototype._next = function (value) {
        if (!this.hasSeed) {
            this.seed = value;
            this.destination.next(value);
        }
        else {
            return this._tryNext(value);
        }
    };
    ScanSubscriber.prototype._tryNext = function (value) {
        var index = this.index++;
        var result;
        try {
            result = this.accumulator(this.seed, value, index);
        }
        catch (err) {
            this.destination.error(err);
        }
        this.seed = result;
        this.destination.next(result);
    };
    return ScanSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=scan.js.map


/***/ }),
/* 63 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = switchMap;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__InnerSubscriber__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__map__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__observable_from__ = __webpack_require__(16);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */






function switchMap(project, resultSelector) {
    if (typeof resultSelector === 'function') {
        return function (source) { return source.pipe(switchMap(function (a, i) { return Object(__WEBPACK_IMPORTED_MODULE_5__observable_from__["a" /* from */])(project(a, i)).pipe(Object(__WEBPACK_IMPORTED_MODULE_4__map__["a" /* map */])(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };
    }
    return function (source) { return source.lift(new SwitchMapOperator(project)); };
}
var SwitchMapOperator = /*@__PURE__*/ (function () {
    function SwitchMapOperator(project) {
        this.project = project;
    }
    SwitchMapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));
    };
    return SwitchMapOperator;
}());
var SwitchMapSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SwitchMapSubscriber, _super);
    function SwitchMapSubscriber(destination, project) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.index = 0;
        return _this;
    }
    SwitchMapSubscriber.prototype._next = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (error) {
            this.destination.error(error);
            return;
        }
        this._innerSub(result, value, index);
    };
    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {
        var innerSubscription = this.innerSubscription;
        if (innerSubscription) {
            innerSubscription.unsubscribe();
        }
        var innerSubscriber = new __WEBPACK_IMPORTED_MODULE_2__InnerSubscriber__["a" /* InnerSubscriber */](this, value, index);
        var destination = this.destination;
        destination.add(innerSubscriber);
        this.innerSubscription = Object(__WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__["a" /* subscribeToResult */])(this, result, undefined, undefined, innerSubscriber);
        if (this.innerSubscription !== innerSubscriber) {
            destination.add(this.innerSubscription);
        }
    };
    SwitchMapSubscriber.prototype._complete = function () {
        var innerSubscription = this.innerSubscription;
        if (!innerSubscription || innerSubscription.closed) {
            _super.prototype._complete.call(this);
        }
        this.unsubscribe();
    };
    SwitchMapSubscriber.prototype._unsubscribe = function () {
        this.innerSubscription = null;
    };
    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {
        var destination = this.destination;
        destination.remove(innerSub);
        this.innerSubscription = null;
        if (this.isStopped) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    return SwitchMapSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=switchMap.js.map


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _baseWidget = __webpack_require__(6);

var _baseWidget2 = _interopRequireDefault(_baseWidget);

__webpack_require__(233);

var _redux = __webpack_require__(43);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var defaultClass = 'brtc-button-default';
var primaryClass = 'brtc-button-primary';
var disabledClass = 'brtc-button--disabled';

var initState = {
    height: '32px',
    width: '100px',
    value: null,
    level: 'default', // 'default' | 'primary'
    label: '',
    imageClass: null,
    disabled: false
};

var ACTION = {
    setState: function setState(val) {
        return {
            type: 'SET_STATE',
            value: val
        };
    }
};

var buttonReducer = function buttonReducer(state, action) {
    switch (action.type) {
        case 'SET_STATE':
            return Object.assign({}, state, action.value);
        default:
            return state;
    }
};

/**
 *  Button Widget
 *  
 *  --- create ---
 *  <div class="button-add-position"></div>
 *  
 *  var $okButton = $('.button-add-position');
 *  var okBtn = brtcWidget.button($okButton, {
 *      height: '32px', // string | number 
 *      width: '100px', // string | number 
 *      value: null, // string | null
 *      level: 'default', // 'default' | 'primary'
 *      label: 'OK', // string
 *      imageClass: null, // string | null
 *      disabled: false, // boolean
 *  });
 *  
 *  
 *  --- method ---
 *  - none -
 *  
 *  
 *  --- event ---
 *  click
 *  
 */

var Button = function (_Base) {
    _inherits(Button, _Base);

    function Button($el, options) {
        _classCallCheck(this, Button);

        return _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).call(this, $el, options));
    }

    _createClass(Button, [{
        key: 'create',
        value: function create($el, opt) {
            var _this2 = this;

            this.$elem = Button.getTemplate();
            $el.append(this.$elem);

            this.listeners = {
                click: []
            };

            this.store = (0, _redux.createStore)(buttonReducer, Object.assign({}, initState, opt));

            this.$elem.on('click', function () {
                var v = _this2.store.getState().value;
                _this2.listeners.click.forEach(function (fn) {
                    return fn(v);
                });
            });

            this.store.subscribe(function () {
                _this2._applyOption(_this2.store.getState());
            });
            this._applyOption(this.store.getState());
        }
    }, {
        key: 'setOption',
        value: function setOption(opts) {
            this.store.dispatch(ACTION.setState(opts));
        }
    }, {
        key: 'getOption',
        value: function getOption(key) {
            return this.store.getState()[key];
        }
    }, {
        key: '_applyOption',
        value: function _applyOption(state) {
            var _this3 = this;

            this.$elem.attr('title', state.label);
            this.$elem.val(state.label);

            if (state.imageClass) {
                this.$elem.addClass(state.imageClass);
            }

            this.$elem.toggleClass(disabledClass, state.disabled);
            if (state.disabled) {
                this.$elem.attr('disabled', true);
            } else {
                this.$elem.removeAttr('disabled');
            }

            if (state.width) {
                this.$elem.css('width', state.width);
            }

            if (state.height) {
                this.$elem.css('height', state.height);
            }

            var buttonLevelMap = {
                default: defaultClass,
                primary: primaryClass
            };

            var level = buttonLevelMap[state.level] ? state.level : 'default';

            Object.entries(buttonLevelMap).forEach(function (_ref) {
                var _ref2 = _slicedToArray(_ref, 2),
                    k = _ref2[0],
                    v = _ref2[1];

                _this3.$elem.toggleClass(v, k === level);
            });
        }
    }, {
        key: '_getEventList',
        value: function _getEventList(name) {
            return {
                'click': this._onClicked
            }[name];
        }
    }, {
        key: '_onClicked',
        value: function _onClicked(func) {
            this.listeners.click.push(func);
        }
    }], [{
        key: 'getTemplate',
        value: function getTemplate() {
            var themBase = defaultClass + ' brtc-widget brtc-fill-state-normal';
            var $template = $('\n            <input type="button" class="' + themBase + ' bos-flex-1 bos-background-image"></div>\n        ');
            return $template;
        }
    }]);

    return Button;
}(_baseWidget2.default);

exports.default = Button;

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _baseWidget = __webpack_require__(6);

var _baseWidget2 = _interopRequireDefault(_baseWidget);

__webpack_require__(245);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var baseClass = 'brtc-input';
var errorClass = 'brtc-state-error';

/**
 *  Input Widget
 *
 *  --- create ---
 *  <div class="input-add-position"></div>
 *
 *  var $input = $('.input-add-position');
 *  var input = brtcWidget.input($input, {
 *      value: value, // all
 *      width: '100%', // string | number
 *      height: 31, // string | number
 *      placeHolder: null // string | number | null
 *      inputStyle: null, // 'line' | null
 *      error: false, // boolean
 *      disabled' false // boolean
 *  });
 *
 *
 *  --- method ---
 *  - none -
 *
 *
 *  --- event ---
 *  onChange
 *
 *
 */

var Input = function (_Base) {
    _inherits(Input, _Base);

    function Input($el, options) {
        _classCallCheck(this, Input);

        return _possibleConstructorReturn(this, (Input.__proto__ || Object.getPrototypeOf(Input)).call(this, $el, options));
    }

    _createClass(Input, [{
        key: 'create',
        value: function create($el, opt) {
            this.$elem = Input.getTemplate();
            $el.append(this.$elem);
            this.setOption(opt);
        }
    }, {
        key: '_getPropertyList',
        value: function _getPropertyList(attrNm) {
            return {
                'value': this._setValue,
                'width': this._setWidth,
                'height': this._setHeight,
                'placeHolder': this._setPlaceHolder,
                'inputStyle': this._setInputStyle,
                'error': this._setError,
                'disabled': this._setDisabled,
                'maxLength': this._setMaxLength
            }[attrNm];
        }
    }, {
        key: '_getEventList',
        value: function _getEventList(name) {
            return {
                'change': this._setOnChange
            }[name];
        }
    }, {
        key: '_setPreValue',
        value: function _setPreValue(preVal) {
            this._preValue = preVal;
        }
    }, {
        key: '_isChanged',
        value: function _isChanged(currentVal) {
            if (this._preValue !== currentVal) {
                this._setPreValue(currentVal);
                return true;
            } else {
                return false;
            }
        }

        // attribute set

    }, {
        key: '_setInputStyle',
        value: function _setInputStyle(type) {
            if (type === 'line') {
                this.$elem.addClass('bos-widget-line-inputbox');
            }
        }
    }, {
        key: '_setWidth',
        value: function _setWidth(size) {
            this.$elem.css('width', size);
        }
    }, {
        key: '_setHeight',
        value: function _setHeight(size) {
            this.$elem.css('height', size);
        }
    }, {
        key: '_setPlaceHolder',
        value: function _setPlaceHolder(val) {
            if (typeof val !== 'undefined' && val !== '') {
                this.$elem.attr('placeholder', val);
            }
        }
    }, {
        key: '_setValue',
        value: function _setValue(val) {
            this.$elem.val(val);
        }
    }, {
        key: '_getValue',
        value: function _getValue() {
            return this.$elem.val();
        }
    }, {
        key: '_setDisabled',
        value: function _setDisabled(val) {
            _get(Input.prototype.__proto__ || Object.getPrototypeOf(Input.prototype), '_setDisabled', this).call(this, val);
            this.$elem.prop('disabled', val);
        }
    }, {
        key: '_setError',
        value: function _setError(val) {
            if (val === true) {
                this.$elem.addClass(errorClass);
            } else {
                this.$elem.removeClass(errorClass);
            }
        }
    }, {
        key: '_setMaxLength',
        value: function _setMaxLength(val) {
            if (typeof val !== 'undefined' && val !== '') {
                this.$elem.attr('maxLength', val);
            }
        }
    }, {
        key: '_setOnChange',
        value: function _setOnChange(func) {
            var _this = this;

            if (typeof func === 'function') {
                this.$elem.on('blur', function () {
                    var value = _this._getValue();
                    if (!_this._isChanged(value)) return;
                    func.bind(_this)(value);
                });
                this.$elem.keydown(function _OnNumericInputKeyDown(e) {
                    var key = e.which || e.keyCode;
                    if (key === 13) {
                        var value = _this._getValue();
                        if (!_this._isChanged(value)) return;
                        func.bind(_this)(value);
                    }
                });
            }
        }
    }], [{
        key: 'getTemplate',
        value: function getTemplate() {
            var themBase = baseClass + ' brtc-widget brtc-state-normal';
            var $template = $('\n        <input type="text" class="brtc-widget ' + themBase + '">\n        ');
            return $template;
        }
    }]);

    return Input;
}(_baseWidget2.default);

exports.default = Input;

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Afrikaans [af]
//! author : Werner Mollentze : https://github.com/wernerm

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var af = moment.defineLocale('af', {
        months: 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
        weekdays: 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split(
            '_'
        ),
        weekdaysShort: 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
        weekdaysMin: 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
        meridiemParse: /vm|nm/i,
        isPM: function (input) {
            return /^nm$/i.test(input);
        },
        meridiem: function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower ? 'vm' : 'VM';
            } else {
                return isLower ? 'nm' : 'NM';
            }
        },
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Vandag om] LT',
            nextDay: '[Môre om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[Gister om] LT',
            lastWeek: '[Laas] dddd [om] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'oor %s',
            past: '%s gelede',
            s: "'n paar sekondes",
            ss: '%d sekondes',
            m: "'n minuut",
            mm: '%d minute',
            h: "'n uur",
            hh: '%d ure',
            d: "'n dag",
            dd: '%d dae',
            M: "'n maand",
            MM: '%d maande',
            y: "'n jaar",
            yy: '%d jaar',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal: function (number) {
            return (
                number +
                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')
            ); // Thanks to Joris Röling : https://github.com/jjupiter
        },
        week: {
            dow: 1, // Maandag is die eerste dag van die week.
            doy: 4, // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
        },
    });

    return af;

})));


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic [ar]
//! author : Abdel Said: https://github.com/abdelsaid
//! author : Ahmed Elkhatib
//! author : forabi https://github.com/forabi

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            '1': '١',
            '2': '٢',
            '3': '٣',
            '4': '٤',
            '5': '٥',
            '6': '٦',
            '7': '٧',
            '8': '٨',
            '9': '٩',
            '0': '٠',
        },
        numberMap = {
            '١': '1',
            '٢': '2',
            '٣': '3',
            '٤': '4',
            '٥': '5',
            '٦': '6',
            '٧': '7',
            '٨': '8',
            '٩': '9',
            '٠': '0',
        },
        pluralForm = function (n) {
            return n === 0
                ? 0
                : n === 1
                ? 1
                : n === 2
                ? 2
                : n % 100 >= 3 && n % 100 <= 10
                ? 3
                : n % 100 >= 11
                ? 4
                : 5;
        },
        plurals = {
            s: [
                'أقل من ثانية',
                'ثانية واحدة',
                ['ثانيتان', 'ثانيتين'],
                '%d ثوان',
                '%d ثانية',
                '%d ثانية',
            ],
            m: [
                'أقل من دقيقة',
                'دقيقة واحدة',
                ['دقيقتان', 'دقيقتين'],
                '%d دقائق',
                '%d دقيقة',
                '%d دقيقة',
            ],
            h: [
                'أقل من ساعة',
                'ساعة واحدة',
                ['ساعتان', 'ساعتين'],
                '%d ساعات',
                '%d ساعة',
                '%d ساعة',
            ],
            d: [
                'أقل من يوم',
                'يوم واحد',
                ['يومان', 'يومين'],
                '%d أيام',
                '%d يومًا',
                '%d يوم',
            ],
            M: [
                'أقل من شهر',
                'شهر واحد',
                ['شهران', 'شهرين'],
                '%d أشهر',
                '%d شهرا',
                '%d شهر',
            ],
            y: [
                'أقل من عام',
                'عام واحد',
                ['عامان', 'عامين'],
                '%d أعوام',
                '%d عامًا',
                '%d عام',
            ],
        },
        pluralize = function (u) {
            return function (number, withoutSuffix, string, isFuture) {
                var f = pluralForm(number),
                    str = plurals[u][pluralForm(number)];
                if (f === 2) {
                    str = str[withoutSuffix ? 0 : 1];
                }
                return str.replace(/%d/i, number);
            };
        },
        months = [
            'يناير',
            'فبراير',
            'مارس',
            'أبريل',
            'مايو',
            'يونيو',
            'يوليو',
            'أغسطس',
            'سبتمبر',
            'أكتوبر',
            'نوفمبر',
            'ديسمبر',
        ];

    var ar = moment.defineLocale('ar', {
        months: months,
        monthsShort: months,
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'D/\u200FM/\u200FYYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        meridiemParse: /ص|م/,
        isPM: function (input) {
            return 'م' === input;
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar: {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'بعد %s',
            past: 'منذ %s',
            s: pluralize('s'),
            ss: pluralize('s'),
            m: pluralize('m'),
            mm: pluralize('m'),
            h: pluralize('h'),
            hh: pluralize('h'),
            d: pluralize('d'),
            dd: pluralize('d'),
            M: pluralize('M'),
            MM: pluralize('M'),
            y: pluralize('y'),
            yy: pluralize('y'),
        },
        preparse: function (string) {
            return string
                .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                    return numberMap[match];
                })
                .replace(/،/g, ',');
        },
        postformat: function (string) {
            return string
                .replace(/\d/g, function (match) {
                    return symbolMap[match];
                })
                .replace(/,/g, '،');
        },
        week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12, // The week that contains Jan 12th is the first week of the year.
        },
    });

    return ar;

})));


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Algeria) [ar-dz]
//! author : Amine Roukh: https://github.com/Amine27
//! author : Abdel Said: https://github.com/abdelsaid
//! author : Ahmed Elkhatib
//! author : forabi https://github.com/forabi
//! author : Noureddine LOUAHEDJ : https://github.com/noureddinem

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var pluralForm = function (n) {
            return n === 0
                ? 0
                : n === 1
                ? 1
                : n === 2
                ? 2
                : n % 100 >= 3 && n % 100 <= 10
                ? 3
                : n % 100 >= 11
                ? 4
                : 5;
        },
        plurals = {
            s: [
                'أقل من ثانية',
                'ثانية واحدة',
                ['ثانيتان', 'ثانيتين'],
                '%d ثوان',
                '%d ثانية',
                '%d ثانية',
            ],
            m: [
                'أقل من دقيقة',
                'دقيقة واحدة',
                ['دقيقتان', 'دقيقتين'],
                '%d دقائق',
                '%d دقيقة',
                '%d دقيقة',
            ],
            h: [
                'أقل من ساعة',
                'ساعة واحدة',
                ['ساعتان', 'ساعتين'],
                '%d ساعات',
                '%d ساعة',
                '%d ساعة',
            ],
            d: [
                'أقل من يوم',
                'يوم واحد',
                ['يومان', 'يومين'],
                '%d أيام',
                '%d يومًا',
                '%d يوم',
            ],
            M: [
                'أقل من شهر',
                'شهر واحد',
                ['شهران', 'شهرين'],
                '%d أشهر',
                '%d شهرا',
                '%d شهر',
            ],
            y: [
                'أقل من عام',
                'عام واحد',
                ['عامان', 'عامين'],
                '%d أعوام',
                '%d عامًا',
                '%d عام',
            ],
        },
        pluralize = function (u) {
            return function (number, withoutSuffix, string, isFuture) {
                var f = pluralForm(number),
                    str = plurals[u][pluralForm(number)];
                if (f === 2) {
                    str = str[withoutSuffix ? 0 : 1];
                }
                return str.replace(/%d/i, number);
            };
        },
        months = [
            'جانفي',
            'فيفري',
            'مارس',
            'أفريل',
            'ماي',
            'جوان',
            'جويلية',
            'أوت',
            'سبتمبر',
            'أكتوبر',
            'نوفمبر',
            'ديسمبر',
        ];

    var arDz = moment.defineLocale('ar-dz', {
        months: months,
        monthsShort: months,
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'D/\u200FM/\u200FYYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        meridiemParse: /ص|م/,
        isPM: function (input) {
            return 'م' === input;
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar: {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'بعد %s',
            past: 'منذ %s',
            s: pluralize('s'),
            ss: pluralize('s'),
            m: pluralize('m'),
            mm: pluralize('m'),
            h: pluralize('h'),
            hh: pluralize('h'),
            d: pluralize('d'),
            dd: pluralize('d'),
            M: pluralize('M'),
            MM: pluralize('M'),
            y: pluralize('y'),
            yy: pluralize('y'),
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return arDz;

})));


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Kuwait) [ar-kw]
//! author : Nusret Parlak: https://github.com/nusretparlak

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var arKw = moment.defineLocale('ar-kw', {
        months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
            '_'
        ),
        monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
            '_'
        ),
        weekdays: 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss: '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات',
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 12, // The week that contains Jan 12th is the first week of the year.
        },
    });

    return arKw;

})));


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Lybia) [ar-ly]
//! author : Ali Hmer: https://github.com/kikoanis

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            '1': '1',
            '2': '2',
            '3': '3',
            '4': '4',
            '5': '5',
            '6': '6',
            '7': '7',
            '8': '8',
            '9': '9',
            '0': '0',
        },
        pluralForm = function (n) {
            return n === 0
                ? 0
                : n === 1
                ? 1
                : n === 2
                ? 2
                : n % 100 >= 3 && n % 100 <= 10
                ? 3
                : n % 100 >= 11
                ? 4
                : 5;
        },
        plurals = {
            s: [
                'أقل من ثانية',
                'ثانية واحدة',
                ['ثانيتان', 'ثانيتين'],
                '%d ثوان',
                '%d ثانية',
                '%d ثانية',
            ],
            m: [
                'أقل من دقيقة',
                'دقيقة واحدة',
                ['دقيقتان', 'دقيقتين'],
                '%d دقائق',
                '%d دقيقة',
                '%d دقيقة',
            ],
            h: [
                'أقل من ساعة',
                'ساعة واحدة',
                ['ساعتان', 'ساعتين'],
                '%d ساعات',
                '%d ساعة',
                '%d ساعة',
            ],
            d: [
                'أقل من يوم',
                'يوم واحد',
                ['يومان', 'يومين'],
                '%d أيام',
                '%d يومًا',
                '%d يوم',
            ],
            M: [
                'أقل من شهر',
                'شهر واحد',
                ['شهران', 'شهرين'],
                '%d أشهر',
                '%d شهرا',
                '%d شهر',
            ],
            y: [
                'أقل من عام',
                'عام واحد',
                ['عامان', 'عامين'],
                '%d أعوام',
                '%d عامًا',
                '%d عام',
            ],
        },
        pluralize = function (u) {
            return function (number, withoutSuffix, string, isFuture) {
                var f = pluralForm(number),
                    str = plurals[u][pluralForm(number)];
                if (f === 2) {
                    str = str[withoutSuffix ? 0 : 1];
                }
                return str.replace(/%d/i, number);
            };
        },
        months = [
            'يناير',
            'فبراير',
            'مارس',
            'أبريل',
            'مايو',
            'يونيو',
            'يوليو',
            'أغسطس',
            'سبتمبر',
            'أكتوبر',
            'نوفمبر',
            'ديسمبر',
        ];

    var arLy = moment.defineLocale('ar-ly', {
        months: months,
        monthsShort: months,
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'D/\u200FM/\u200FYYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        meridiemParse: /ص|م/,
        isPM: function (input) {
            return 'م' === input;
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar: {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'بعد %s',
            past: 'منذ %s',
            s: pluralize('s'),
            ss: pluralize('s'),
            m: pluralize('m'),
            mm: pluralize('m'),
            h: pluralize('h'),
            hh: pluralize('h'),
            d: pluralize('d'),
            dd: pluralize('d'),
            M: pluralize('M'),
            MM: pluralize('M'),
            y: pluralize('y'),
            yy: pluralize('y'),
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string
                .replace(/\d/g, function (match) {
                    return symbolMap[match];
                })
                .replace(/,/g, '،');
        },
        week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12, // The week that contains Jan 12th is the first week of the year.
        },
    });

    return arLy;

})));


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Morocco) [ar-ma]
//! author : ElFadili Yassine : https://github.com/ElFadiliY
//! author : Abdel Said : https://github.com/abdelsaid

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var arMa = moment.defineLocale('ar-ma', {
        months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
            '_'
        ),
        monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
            '_'
        ),
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss: '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات',
        },
        week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12, // The week that contains Jan 12th is the first week of the year.
        },
    });

    return arMa;

})));


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Saudi Arabia) [ar-sa]
//! author : Suhail Alkowaileet : https://github.com/xsoh

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            '1': '١',
            '2': '٢',
            '3': '٣',
            '4': '٤',
            '5': '٥',
            '6': '٦',
            '7': '٧',
            '8': '٨',
            '9': '٩',
            '0': '٠',
        },
        numberMap = {
            '١': '1',
            '٢': '2',
            '٣': '3',
            '٤': '4',
            '٥': '5',
            '٦': '6',
            '٧': '7',
            '٨': '8',
            '٩': '9',
            '٠': '0',
        };

    var arSa = moment.defineLocale('ar-sa', {
        months: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
            '_'
        ),
        monthsShort: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
            '_'
        ),
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        meridiemParse: /ص|م/,
        isPM: function (input) {
            return 'م' === input;
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss: '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات',
        },
        preparse: function (string) {
            return string
                .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                    return numberMap[match];
                })
                .replace(/،/g, ',');
        },
        postformat: function (string) {
            return string
                .replace(/\d/g, function (match) {
                    return symbolMap[match];
                })
                .replace(/,/g, '،');
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return arSa;

})));


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale  :  Arabic (Tunisia) [ar-tn]
//! author : Nader Toukabri : https://github.com/naderio

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var arTn = moment.defineLocale('ar-tn', {
        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
            '_'
        ),
        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
            '_'
        ),
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss: '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات',
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return arTn;

})));


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Azerbaijani [az]
//! author : topchiyev : https://github.com/topchiyev

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var suffixes = {
        1: '-inci',
        5: '-inci',
        8: '-inci',
        70: '-inci',
        80: '-inci',
        2: '-nci',
        7: '-nci',
        20: '-nci',
        50: '-nci',
        3: '-üncü',
        4: '-üncü',
        100: '-üncü',
        6: '-ncı',
        9: '-uncu',
        10: '-uncu',
        30: '-uncu',
        60: '-ıncı',
        90: '-ıncı',
    };

    var az = moment.defineLocale('az', {
        months: 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split(
            '_'
        ),
        monthsShort: 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
        weekdays: 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split(
            '_'
        ),
        weekdaysShort: 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
        weekdaysMin: 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[bugün saat] LT',
            nextDay: '[sabah saat] LT',
            nextWeek: '[gələn həftə] dddd [saat] LT',
            lastDay: '[dünən] LT',
            lastWeek: '[keçən həftə] dddd [saat] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s sonra',
            past: '%s əvvəl',
            s: 'birneçə saniyə',
            ss: '%d saniyə',
            m: 'bir dəqiqə',
            mm: '%d dəqiqə',
            h: 'bir saat',
            hh: '%d saat',
            d: 'bir gün',
            dd: '%d gün',
            M: 'bir ay',
            MM: '%d ay',
            y: 'bir il',
            yy: '%d il',
        },
        meridiemParse: /gecə|səhər|gündüz|axşam/,
        isPM: function (input) {
            return /^(gündüz|axşam)$/.test(input);
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'gecə';
            } else if (hour < 12) {
                return 'səhər';
            } else if (hour < 17) {
                return 'gündüz';
            } else {
                return 'axşam';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
        ordinal: function (number) {
            if (number === 0) {
                // special case for zero
                return number + '-ıncı';
            }
            var a = number % 10,
                b = (number % 100) - a,
                c = number >= 100 ? 100 : null;
            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return az;

})));


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Belarusian [be]
//! author : Dmitry Demidov : https://github.com/demidov91
//! author: Praleska: http://praleska.pro/
//! Author : Menelion Elensúle : https://github.com/Oire

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11
            ? forms[0]
            : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)
            ? forms[1]
            : forms[2];
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
            mm: withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
            hh: withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
            dd: 'дзень_дні_дзён',
            MM: 'месяц_месяцы_месяцаў',
            yy: 'год_гады_гадоў',
        };
        if (key === 'm') {
            return withoutSuffix ? 'хвіліна' : 'хвіліну';
        } else if (key === 'h') {
            return withoutSuffix ? 'гадзіна' : 'гадзіну';
        } else {
            return number + ' ' + plural(format[key], +number);
        }
    }

    var be = moment.defineLocale('be', {
        months: {
            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split(
                '_'
            ),
            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split(
                '_'
            ),
        },
        monthsShort: 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split(
            '_'
        ),
        weekdays: {
            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split(
                '_'
            ),
            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split(
                '_'
            ),
            isFormat: /\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/,
        },
        weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
        weekdaysMin: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY г.',
            LLL: 'D MMMM YYYY г., HH:mm',
            LLLL: 'dddd, D MMMM YYYY г., HH:mm',
        },
        calendar: {
            sameDay: '[Сёння ў] LT',
            nextDay: '[Заўтра ў] LT',
            lastDay: '[Учора ў] LT',
            nextWeek: function () {
                return '[У] dddd [ў] LT';
            },
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return '[У мінулую] dddd [ў] LT';
                    case 1:
                    case 2:
                    case 4:
                        return '[У мінулы] dddd [ў] LT';
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'праз %s',
            past: '%s таму',
            s: 'некалькі секунд',
            m: relativeTimeWithPlural,
            mm: relativeTimeWithPlural,
            h: relativeTimeWithPlural,
            hh: relativeTimeWithPlural,
            d: 'дзень',
            dd: relativeTimeWithPlural,
            M: 'месяц',
            MM: relativeTimeWithPlural,
            y: 'год',
            yy: relativeTimeWithPlural,
        },
        meridiemParse: /ночы|раніцы|дня|вечара/,
        isPM: function (input) {
            return /^(дня|вечара)$/.test(input);
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночы';
            } else if (hour < 12) {
                return 'раніцы';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечара';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                case 'w':
                case 'W':
                    return (number % 10 === 2 || number % 10 === 3) &&
                        number % 100 !== 12 &&
                        number % 100 !== 13
                        ? number + '-і'
                        : number + '-ы';
                case 'D':
                    return number + '-га';
                default:
                    return number;
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return be;

})));


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bulgarian [bg]
//! author : Krasen Borisov : https://github.com/kraz

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var bg = moment.defineLocale('bg', {
        months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split(
            '_'
        ),
        monthsShort: 'яну_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
        weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split(
            '_'
        ),
        weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'D.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY H:mm',
            LLLL: 'dddd, D MMMM YYYY H:mm',
        },
        calendar: {
            sameDay: '[Днес в] LT',
            nextDay: '[Утре в] LT',
            nextWeek: 'dddd [в] LT',
            lastDay: '[Вчера в] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 6:
                        return '[Миналата] dddd [в] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[Миналия] dddd [в] LT';
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'след %s',
            past: 'преди %s',
            s: 'няколко секунди',
            ss: '%d секунди',
            m: 'минута',
            mm: '%d минути',
            h: 'час',
            hh: '%d часа',
            d: 'ден',
            dd: '%d дена',
            M: 'месец',
            MM: '%d месеца',
            y: 'година',
            yy: '%d години',
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal: function (number) {
            var lastDigit = number % 10,
                last2Digits = number % 100;
            if (number === 0) {
                return number + '-ев';
            } else if (last2Digits === 0) {
                return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
                return number + '-ти';
            } else if (lastDigit === 1) {
                return number + '-ви';
            } else if (lastDigit === 2) {
                return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
                return number + '-ми';
            } else {
                return number + '-ти';
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return bg;

})));


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bambara [bm]
//! author : Estelle Comment : https://github.com/estellecomment

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var bm = moment.defineLocale('bm', {
        months: 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split(
            '_'
        ),
        monthsShort: 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),
        weekdays: 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),
        weekdaysShort: 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),
        weekdaysMin: 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'MMMM [tile] D [san] YYYY',
            LLL: 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
            LLLL: 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
        },
        calendar: {
            sameDay: '[Bi lɛrɛ] LT',
            nextDay: '[Sini lɛrɛ] LT',
            nextWeek: 'dddd [don lɛrɛ] LT',
            lastDay: '[Kunu lɛrɛ] LT',
            lastWeek: 'dddd [tɛmɛnen lɛrɛ] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s kɔnɔ',
            past: 'a bɛ %s bɔ',
            s: 'sanga dama dama',
            ss: 'sekondi %d',
            m: 'miniti kelen',
            mm: 'miniti %d',
            h: 'lɛrɛ kelen',
            hh: 'lɛrɛ %d',
            d: 'tile kelen',
            dd: 'tile %d',
            M: 'kalo kelen',
            MM: 'kalo %d',
            y: 'san kelen',
            yy: 'san %d',
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return bm;

})));


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bengali [bn]
//! author : Kaushik Gandhi : https://github.com/kaushikgandhi

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            '1': '১',
            '2': '২',
            '3': '৩',
            '4': '৪',
            '5': '৫',
            '6': '৬',
            '7': '৭',
            '8': '৮',
            '9': '৯',
            '0': '০',
        },
        numberMap = {
            '১': '1',
            '২': '2',
            '৩': '3',
            '৪': '4',
            '৫': '5',
            '৬': '6',
            '৭': '7',
            '৮': '8',
            '৯': '9',
            '০': '0',
        };

    var bn = moment.defineLocale('bn', {
        months: 'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split(
            '_'
        ),
        monthsShort: 'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split(
            '_'
        ),
        weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split(
            '_'
        ),
        weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
        weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),
        longDateFormat: {
            LT: 'A h:mm সময়',
            LTS: 'A h:mm:ss সময়',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm সময়',
            LLLL: 'dddd, D MMMM YYYY, A h:mm সময়',
        },
        calendar: {
            sameDay: '[আজ] LT',
            nextDay: '[আগামীকাল] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[গতকাল] LT',
            lastWeek: '[গত] dddd, LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s পরে',
            past: '%s আগে',
            s: 'কয়েক সেকেন্ড',
            ss: '%d সেকেন্ড',
            m: 'এক মিনিট',
            mm: '%d মিনিট',
            h: 'এক ঘন্টা',
            hh: '%d ঘন্টা',
            d: 'এক দিন',
            dd: '%d দিন',
            M: 'এক মাস',
            MM: '%d মাস',
            y: 'এক বছর',
            yy: '%d বছর',
        },
        preparse: function (string) {
            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (
                (meridiem === 'রাত' && hour >= 4) ||
                (meridiem === 'দুপুর' && hour < 5) ||
                meridiem === 'বিকাল'
            ) {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'রাত';
            } else if (hour < 10) {
                return 'সকাল';
            } else if (hour < 17) {
                return 'দুপুর';
            } else if (hour < 20) {
                return 'বিকাল';
            } else {
                return 'রাত';
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return bn;

})));


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tibetan [bo]
//! author : Thupten N. Chakrishar : https://github.com/vajradog

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            '1': '༡',
            '2': '༢',
            '3': '༣',
            '4': '༤',
            '5': '༥',
            '6': '༦',
            '7': '༧',
            '8': '༨',
            '9': '༩',
            '0': '༠',
        },
        numberMap = {
            '༡': '1',
            '༢': '2',
            '༣': '3',
            '༤': '4',
            '༥': '5',
            '༦': '6',
            '༧': '7',
            '༨': '8',
            '༩': '9',
            '༠': '0',
        };

    var bo = moment.defineLocale('bo', {
        months: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split(
            '_'
        ),
        monthsShort: 'ཟླ་1_ཟླ་2_ཟླ་3_ཟླ་4_ཟླ་5_ཟླ་6_ཟླ་7_ཟླ་8_ཟླ་9_ཟླ་10_ཟླ་11_ཟླ་12'.split(
            '_'
        ),
        monthsShortRegex: /^(ཟླ་\d{1,2})/,
        monthsParseExact: true,
        weekdays: 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split(
            '_'
        ),
        weekdaysShort: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split(
            '_'
        ),
        weekdaysMin: 'ཉི_ཟླ_མིག_ལྷག_ཕུར_སངས_སྤེན'.split('_'),
        longDateFormat: {
            LT: 'A h:mm',
            LTS: 'A h:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm',
            LLLL: 'dddd, D MMMM YYYY, A h:mm',
        },
        calendar: {
            sameDay: '[དི་རིང] LT',
            nextDay: '[སང་ཉིན] LT',
            nextWeek: '[བདུན་ཕྲག་རྗེས་མ], LT',
            lastDay: '[ཁ་སང] LT',
            lastWeek: '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s ལ་',
            past: '%s སྔན་ལ',
            s: 'ལམ་སང',
            ss: '%d སྐར་ཆ།',
            m: 'སྐར་མ་གཅིག',
            mm: '%d སྐར་མ',
            h: 'ཆུ་ཚོད་གཅིག',
            hh: '%d ཆུ་ཚོད',
            d: 'ཉིན་གཅིག',
            dd: '%d ཉིན་',
            M: 'ཟླ་བ་གཅིག',
            MM: '%d ཟླ་བ',
            y: 'ལོ་གཅིག',
            yy: '%d ལོ',
        },
        preparse: function (string) {
            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (
                (meridiem === 'མཚན་མོ' && hour >= 4) ||
                (meridiem === 'ཉིན་གུང' && hour < 5) ||
                meridiem === 'དགོང་དག'
            ) {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'མཚན་མོ';
            } else if (hour < 10) {
                return 'ཞོགས་ཀས';
            } else if (hour < 17) {
                return 'ཉིན་གུང';
            } else if (hour < 20) {
                return 'དགོང་དག';
            } else {
                return 'མཚན་མོ';
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return bo;

})));


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Breton [br]
//! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function relativeTimeWithMutation(number, withoutSuffix, key) {
        var format = {
            mm: 'munutenn',
            MM: 'miz',
            dd: 'devezh',
        };
        return number + ' ' + mutation(format[key], number);
    }
    function specialMutationForYears(number) {
        switch (lastNumber(number)) {
            case 1:
            case 3:
            case 4:
            case 5:
            case 9:
                return number + ' bloaz';
            default:
                return number + ' vloaz';
        }
    }
    function lastNumber(number) {
        if (number > 9) {
            return lastNumber(number % 10);
        }
        return number;
    }
    function mutation(text, number) {
        if (number === 2) {
            return softMutation(text);
        }
        return text;
    }
    function softMutation(text) {
        var mutationTable = {
            m: 'v',
            b: 'v',
            d: 'z',
        };
        if (mutationTable[text.charAt(0)] === undefined) {
            return text;
        }
        return mutationTable[text.charAt(0)] + text.substring(1);
    }

    var monthsParse = [
            /^gen/i,
            /^c[ʼ\']hwe/i,
            /^meu/i,
            /^ebr/i,
            /^mae/i,
            /^(mez|eve)/i,
            /^gou/i,
            /^eos/i,
            /^gwe/i,
            /^her/i,
            /^du/i,
            /^ker/i,
        ],
        monthsRegex = /^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu|gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,
        monthsStrictRegex = /^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu)/i,
        monthsShortStrictRegex = /^(gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,
        fullWeekdaysParse = [
            /^sul/i,
            /^lun/i,
            /^meurzh/i,
            /^merc[ʼ\']her/i,
            /^yaou/i,
            /^gwener/i,
            /^sadorn/i,
        ],
        shortWeekdaysParse = [
            /^Sul/i,
            /^Lun/i,
            /^Meu/i,
            /^Mer/i,
            /^Yao/i,
            /^Gwe/i,
            /^Sad/i,
        ],
        minWeekdaysParse = [
            /^Su/i,
            /^Lu/i,
            /^Me([^r]|$)/i,
            /^Mer/i,
            /^Ya/i,
            /^Gw/i,
            /^Sa/i,
        ];

    var br = moment.defineLocale('br', {
        months: 'Genver_Cʼhwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split(
            '_'
        ),
        monthsShort: 'Gen_Cʼhwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
        weekdays: 'Sul_Lun_Meurzh_Mercʼher_Yaou_Gwener_Sadorn'.split('_'),
        weekdaysShort: 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
        weekdaysMin: 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
        weekdaysParse: minWeekdaysParse,
        fullWeekdaysParse: fullWeekdaysParse,
        shortWeekdaysParse: shortWeekdaysParse,
        minWeekdaysParse: minWeekdaysParse,

        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: monthsStrictRegex,
        monthsShortStrictRegex: monthsShortStrictRegex,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,

        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [a viz] MMMM YYYY',
            LLL: 'D [a viz] MMMM YYYY HH:mm',
            LLLL: 'dddd, D [a viz] MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Hiziv da] LT',
            nextDay: '[Warcʼhoazh da] LT',
            nextWeek: 'dddd [da] LT',
            lastDay: '[Decʼh da] LT',
            lastWeek: 'dddd [paset da] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'a-benn %s',
            past: '%s ʼzo',
            s: 'un nebeud segondennoù',
            ss: '%d eilenn',
            m: 'ur vunutenn',
            mm: relativeTimeWithMutation,
            h: 'un eur',
            hh: '%d eur',
            d: 'un devezh',
            dd: relativeTimeWithMutation,
            M: 'ur miz',
            MM: relativeTimeWithMutation,
            y: 'ur bloaz',
            yy: specialMutationForYears,
        },
        dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
        ordinal: function (number) {
            var output = number === 1 ? 'añ' : 'vet';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
        meridiemParse: /a.m.|g.m./, // goude merenn | a-raok merenn
        isPM: function (token) {
            return token === 'g.m.';
        },
        meridiem: function (hour, minute, isLower) {
            return hour < 12 ? 'a.m.' : 'g.m.';
        },
    });

    return br;

})));


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bosnian [bs]
//! author : Nedim Cholich : https://github.com/frontyard
//! based on (hr) translation by Bojan Marković

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                if (number === 1) {
                    result += 'sekunda';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sekunde';
                } else {
                    result += 'sekundi';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
            case 'mm':
                if (number === 1) {
                    result += 'minuta';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'minute';
                } else {
                    result += 'minuta';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'jedan sat' : 'jednog sata';
            case 'hh':
                if (number === 1) {
                    result += 'sat';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sata';
                } else {
                    result += 'sati';
                }
                return result;
            case 'dd':
                if (number === 1) {
                    result += 'dan';
                } else {
                    result += 'dana';
                }
                return result;
            case 'MM':
                if (number === 1) {
                    result += 'mjesec';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'mjeseca';
                } else {
                    result += 'mjeseci';
                }
                return result;
            case 'yy':
                if (number === 1) {
                    result += 'godina';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'godine';
                } else {
                    result += 'godina';
                }
                return result;
        }
    }

    var bs = moment.defineLocale('bs', {
        months: 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split(
            '_'
        ),
        monthsShort: 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
            '_'
        ),
        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm',
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay: '[jučer u] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                        return '[prošlu] dddd [u] LT';
                    case 6:
                        return '[prošle] [subote] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prošli] dddd [u] LT';
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'za %s',
            past: 'prije %s',
            s: 'par sekundi',
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: 'dan',
            dd: translate,
            M: 'mjesec',
            MM: translate,
            y: 'godinu',
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return bs;

})));


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Catalan [ca]
//! author : Juan G. Hurtado : https://github.com/juanghurtado

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var ca = moment.defineLocale('ca', {
        months: {
            standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split(
                '_'
            ),
            format: "de gener_de febrer_de març_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre".split(
                '_'
            ),
            isFormat: /D[oD]?(\s)+MMMM/,
        },
        monthsShort: 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split(
            '_'
        ),
        weekdaysShort: 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
        weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM [de] YYYY',
            ll: 'D MMM YYYY',
            LLL: 'D MMMM [de] YYYY [a les] H:mm',
            lll: 'D MMM YYYY, H:mm',
            LLLL: 'dddd D MMMM [de] YYYY [a les] H:mm',
            llll: 'ddd D MMM YYYY, H:mm',
        },
        calendar: {
            sameDay: function () {
                return '[avui a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            nextDay: function () {
                return '[demà a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            nextWeek: function () {
                return 'dddd [a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            lastDay: function () {
                return '[ahir a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            lastWeek: function () {
                return (
                    '[el] dddd [passat a ' +
                    (this.hours() !== 1 ? 'les' : 'la') +
                    '] LT'
                );
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: "d'aquí %s",
            past: 'fa %s',
            s: 'uns segons',
            ss: '%d segons',
            m: 'un minut',
            mm: '%d minuts',
            h: 'una hora',
            hh: '%d hores',
            d: 'un dia',
            dd: '%d dies',
            M: 'un mes',
            MM: '%d mesos',
            y: 'un any',
            yy: '%d anys',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
        ordinal: function (number, period) {
            var output =
                number === 1
                    ? 'r'
                    : number === 2
                    ? 'n'
                    : number === 3
                    ? 'r'
                    : number === 4
                    ? 't'
                    : 'è';
            if (period === 'w' || period === 'W') {
                output = 'a';
            }
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return ca;

})));


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Czech [cs]
//! author : petrbela : https://github.com/petrbela

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split(
            '_'
        ),
        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_'),
        monthsParse = [
            /^led/i,
            /^úno/i,
            /^bře/i,
            /^dub/i,
            /^kvě/i,
            /^(čvn|červen$|června)/i,
            /^(čvc|červenec|července)/i,
            /^srp/i,
            /^zář/i,
            /^říj/i,
            /^lis/i,
            /^pro/i,
        ],
        // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
        // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
        monthsRegex = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;

    function plural(n) {
        return n > 1 && n < 5 && ~~(n / 10) !== 1;
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's': // a few seconds / in a few seconds / a few seconds ago
                return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';
            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'sekundy' : 'sekund');
                } else {
                    return result + 'sekundami';
                }
            case 'm': // a minute / in a minute / a minute ago
                return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';
            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'minuty' : 'minut');
                } else {
                    return result + 'minutami';
                }
            case 'h': // an hour / in an hour / an hour ago
                return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';
            case 'hh': // 9 hours / in 9 hours / 9 hours ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'hodiny' : 'hodin');
                } else {
                    return result + 'hodinami';
                }
            case 'd': // a day / in a day / a day ago
                return withoutSuffix || isFuture ? 'den' : 'dnem';
            case 'dd': // 9 days / in 9 days / 9 days ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'dny' : 'dní');
                } else {
                    return result + 'dny';
                }
            case 'M': // a month / in a month / a month ago
                return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';
            case 'MM': // 9 months / in 9 months / 9 months ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'měsíce' : 'měsíců');
                } else {
                    return result + 'měsíci';
                }
            case 'y': // a year / in a year / a year ago
                return withoutSuffix || isFuture ? 'rok' : 'rokem';
            case 'yy': // 9 years / in 9 years / 9 years ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'roky' : 'let');
                } else {
                    return result + 'lety';
                }
        }
    }

    var cs = moment.defineLocale('cs', {
        months: months,
        monthsShort: monthsShort,
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
        // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
        monthsStrictRegex: /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,
        monthsShortStrictRegex: /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
        weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),
        weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd D. MMMM YYYY H:mm',
            l: 'D. M. YYYY',
        },
        calendar: {
            sameDay: '[dnes v] LT',
            nextDay: '[zítra v] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[v neděli v] LT';
                    case 1:
                    case 2:
                        return '[v] dddd [v] LT';
                    case 3:
                        return '[ve středu v] LT';
                    case 4:
                        return '[ve čtvrtek v] LT';
                    case 5:
                        return '[v pátek v] LT';
                    case 6:
                        return '[v sobotu v] LT';
                }
            },
            lastDay: '[včera v] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[minulou neděli v] LT';
                    case 1:
                    case 2:
                        return '[minulé] dddd [v] LT';
                    case 3:
                        return '[minulou středu v] LT';
                    case 4:
                    case 5:
                        return '[minulý] dddd [v] LT';
                    case 6:
                        return '[minulou sobotu v] LT';
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'za %s',
            past: 'před %s',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return cs;

})));


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chuvash [cv]
//! author : Anatoly Mironov : https://github.com/mirontoli

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var cv = moment.defineLocale('cv', {
        months: 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split(
            '_'
        ),
        monthsShort: 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
        weekdays: 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split(
            '_'
        ),
        weekdaysShort: 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
        weekdaysMin: 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD-MM-YYYY',
            LL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
            LLL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
            LLLL: 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
        },
        calendar: {
            sameDay: '[Паян] LT [сехетре]',
            nextDay: '[Ыран] LT [сехетре]',
            lastDay: '[Ӗнер] LT [сехетре]',
            nextWeek: '[Ҫитес] dddd LT [сехетре]',
            lastWeek: '[Иртнӗ] dddd LT [сехетре]',
            sameElse: 'L',
        },
        relativeTime: {
            future: function (output) {
                var affix = /сехет$/i.exec(output)
                    ? 'рен'
                    : /ҫул$/i.exec(output)
                    ? 'тан'
                    : 'ран';
                return output + affix;
            },
            past: '%s каялла',
            s: 'пӗр-ик ҫеккунт',
            ss: '%d ҫеккунт',
            m: 'пӗр минут',
            mm: '%d минут',
            h: 'пӗр сехет',
            hh: '%d сехет',
            d: 'пӗр кун',
            dd: '%d кун',
            M: 'пӗр уйӑх',
            MM: '%d уйӑх',
            y: 'пӗр ҫул',
            yy: '%d ҫул',
        },
        dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
        ordinal: '%d-мӗш',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return cv;

})));


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Welsh [cy]
//! author : Robert Allen : https://github.com/robgallen
//! author : https://github.com/ryangreaves

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var cy = moment.defineLocale('cy', {
        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split(
            '_'
        ),
        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split(
            '_'
        ),
        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split(
            '_'
        ),
        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
        weekdaysParseExact: true,
        // time formats are the same as en-gb
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Heddiw am] LT',
            nextDay: '[Yfory am] LT',
            nextWeek: 'dddd [am] LT',
            lastDay: '[Ddoe am] LT',
            lastWeek: 'dddd [diwethaf am] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'mewn %s',
            past: '%s yn ôl',
            s: 'ychydig eiliadau',
            ss: '%d eiliad',
            m: 'munud',
            mm: '%d munud',
            h: 'awr',
            hh: '%d awr',
            d: 'diwrnod',
            dd: '%d diwrnod',
            M: 'mis',
            MM: '%d mis',
            y: 'blwyddyn',
            yy: '%d flynedd',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
        ordinal: function (number) {
            var b = number,
                output = '',
                lookup = [
                    '',
                    'af',
                    'il',
                    'ydd',
                    'ydd',
                    'ed',
                    'ed',
                    'ed',
                    'fed',
                    'fed',
                    'fed', // 1af to 10fed
                    'eg',
                    'fed',
                    'eg',
                    'eg',
                    'fed',
                    'eg',
                    'eg',
                    'fed',
                    'eg',
                    'fed', // 11eg to 20fed
                ];
            if (b > 20) {
                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
                    output = 'fed'; // not 30ain, 70ain or 90ain
                } else {
                    output = 'ain';
                }
            } else if (b > 0) {
                output = lookup[b];
            }
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return cy;

})));


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Danish [da]
//! author : Ulrik Nielsen : https://github.com/mrbase

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var da = moment.defineLocale('da', {
        months: 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split(
            '_'
        ),
        monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
        weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
        weekdaysShort: 'søn_man_tir_ons_tor_fre_lør'.split('_'),
        weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY HH:mm',
            LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm',
        },
        calendar: {
            sameDay: '[i dag kl.] LT',
            nextDay: '[i morgen kl.] LT',
            nextWeek: 'på dddd [kl.] LT',
            lastDay: '[i går kl.] LT',
            lastWeek: '[i] dddd[s kl.] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'om %s',
            past: '%s siden',
            s: 'få sekunder',
            ss: '%d sekunder',
            m: 'et minut',
            mm: '%d minutter',
            h: 'en time',
            hh: '%d timer',
            d: 'en dag',
            dd: '%d dage',
            M: 'en måned',
            MM: '%d måneder',
            y: 'et år',
            yy: '%d år',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return da;

})));


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : German [de]
//! author : lluchs : https://github.com/lluchs
//! author: Menelion Elensúle: https://github.com/Oire
//! author : Mikolaj Dadela : https://github.com/mik01aj

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            m: ['eine Minute', 'einer Minute'],
            h: ['eine Stunde', 'einer Stunde'],
            d: ['ein Tag', 'einem Tag'],
            dd: [number + ' Tage', number + ' Tagen'],
            w: ['eine Woche', 'einer Woche'],
            M: ['ein Monat', 'einem Monat'],
            MM: [number + ' Monate', number + ' Monaten'],
            y: ['ein Jahr', 'einem Jahr'],
            yy: [number + ' Jahre', number + ' Jahren'],
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var de = moment.defineLocale('de', {
        months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
            '_'
        ),
        monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
            '_'
        ),
        weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY HH:mm',
            LLLL: 'dddd, D. MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]',
        },
        relativeTime: {
            future: 'in %s',
            past: 'vor %s',
            s: 'ein paar Sekunden',
            ss: '%d Sekunden',
            m: processRelativeTime,
            mm: '%d Minuten',
            h: processRelativeTime,
            hh: '%d Stunden',
            d: processRelativeTime,
            dd: processRelativeTime,
            w: processRelativeTime,
            ww: '%d Wochen',
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return de;

})));


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : German (Austria) [de-at]
//! author : lluchs : https://github.com/lluchs
//! author: Menelion Elensúle: https://github.com/Oire
//! author : Martin Groller : https://github.com/MadMG
//! author : Mikolaj Dadela : https://github.com/mik01aj

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            m: ['eine Minute', 'einer Minute'],
            h: ['eine Stunde', 'einer Stunde'],
            d: ['ein Tag', 'einem Tag'],
            dd: [number + ' Tage', number + ' Tagen'],
            w: ['eine Woche', 'einer Woche'],
            M: ['ein Monat', 'einem Monat'],
            MM: [number + ' Monate', number + ' Monaten'],
            y: ['ein Jahr', 'einem Jahr'],
            yy: [number + ' Jahre', number + ' Jahren'],
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var deAt = moment.defineLocale('de-at', {
        months: 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
            '_'
        ),
        monthsShort: 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
            '_'
        ),
        weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY HH:mm',
            LLLL: 'dddd, D. MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]',
        },
        relativeTime: {
            future: 'in %s',
            past: 'vor %s',
            s: 'ein paar Sekunden',
            ss: '%d Sekunden',
            m: processRelativeTime,
            mm: '%d Minuten',
            h: processRelativeTime,
            hh: '%d Stunden',
            d: processRelativeTime,
            dd: processRelativeTime,
            w: processRelativeTime,
            ww: '%d Wochen',
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return deAt;

})));


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : German (Switzerland) [de-ch]
//! author : sschueller : https://github.com/sschueller

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            m: ['eine Minute', 'einer Minute'],
            h: ['eine Stunde', 'einer Stunde'],
            d: ['ein Tag', 'einem Tag'],
            dd: [number + ' Tage', number + ' Tagen'],
            w: ['eine Woche', 'einer Woche'],
            M: ['ein Monat', 'einem Monat'],
            MM: [number + ' Monate', number + ' Monaten'],
            y: ['ein Jahr', 'einem Jahr'],
            yy: [number + ' Jahre', number + ' Jahren'],
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var deCh = moment.defineLocale('de-ch', {
        months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
            '_'
        ),
        monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
            '_'
        ),
        weekdaysShort: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY HH:mm',
            LLLL: 'dddd, D. MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]',
        },
        relativeTime: {
            future: 'in %s',
            past: 'vor %s',
            s: 'ein paar Sekunden',
            ss: '%d Sekunden',
            m: processRelativeTime,
            mm: '%d Minuten',
            h: processRelativeTime,
            hh: '%d Stunden',
            d: processRelativeTime,
            dd: processRelativeTime,
            w: processRelativeTime,
            ww: '%d Wochen',
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return deCh;

})));


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Maldivian [dv]
//! author : Jawish Hameed : https://github.com/jawish

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var months = [
            'ޖެނުއަރީ',
            'ފެބްރުއަރީ',
            'މާރިޗު',
            'އޭޕްރީލު',
            'މޭ',
            'ޖޫން',
            'ޖުލައި',
            'އޯގަސްޓު',
            'ސެޕްޓެމްބަރު',
            'އޮކްޓޯބަރު',
            'ނޮވެމްބަރު',
            'ޑިސެމްބަރު',
        ],
        weekdays = [
            'އާދިއްތަ',
            'ހޯމަ',
            'އަންގާރަ',
            'ބުދަ',
            'ބުރާސްފަތި',
            'ހުކުރު',
            'ހޮނިހިރު',
        ];

    var dv = moment.defineLocale('dv', {
        months: months,
        monthsShort: months,
        weekdays: weekdays,
        weekdaysShort: weekdays,
        weekdaysMin: 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'D/M/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        meridiemParse: /މކ|މފ/,
        isPM: function (input) {
            return 'މފ' === input;
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'މކ';
            } else {
                return 'މފ';
            }
        },
        calendar: {
            sameDay: '[މިއަދު] LT',
            nextDay: '[މާދަމާ] LT',
            nextWeek: 'dddd LT',
            lastDay: '[އިއްޔެ] LT',
            lastWeek: '[ފާއިތުވި] dddd LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'ތެރޭގައި %s',
            past: 'ކުރިން %s',
            s: 'ސިކުންތުކޮޅެއް',
            ss: 'd% ސިކުންތު',
            m: 'މިނިޓެއް',
            mm: 'މިނިޓު %d',
            h: 'ގަޑިއިރެއް',
            hh: 'ގަޑިއިރު %d',
            d: 'ދުވަހެއް',
            dd: 'ދުވަސް %d',
            M: 'މަހެއް',
            MM: 'މަސް %d',
            y: 'އަހަރެއް',
            yy: 'އަހަރު %d',
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week: {
            dow: 7, // Sunday is the first day of the week.
            doy: 12, // The week that contains Jan 12th is the first week of the year.
        },
    });

    return dv;

})));


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Greek [el]
//! author : Aggelos Karalias : https://github.com/mehiel

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function isFunction(input) {
        return (
            (typeof Function !== 'undefined' && input instanceof Function) ||
            Object.prototype.toString.call(input) === '[object Function]'
        );
    }

    var el = moment.defineLocale('el', {
        monthsNominativeEl: 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split(
            '_'
        ),
        monthsGenitiveEl: 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split(
            '_'
        ),
        months: function (momentToFormat, format) {
            if (!momentToFormat) {
                return this._monthsNominativeEl;
            } else if (
                typeof format === 'string' &&
                /D/.test(format.substring(0, format.indexOf('MMMM')))
            ) {
                // if there is a day number before 'MMMM'
                return this._monthsGenitiveEl[momentToFormat.month()];
            } else {
                return this._monthsNominativeEl[momentToFormat.month()];
            }
        },
        monthsShort: 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
        weekdays: 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split(
            '_'
        ),
        weekdaysShort: 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
        weekdaysMin: 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
        meridiem: function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'μμ' : 'ΜΜ';
            } else {
                return isLower ? 'πμ' : 'ΠΜ';
            }
        },
        isPM: function (input) {
            return (input + '').toLowerCase()[0] === 'μ';
        },
        meridiemParse: /[ΠΜ]\.?Μ?\.?/i,
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A',
        },
        calendarEl: {
            sameDay: '[Σήμερα {}] LT',
            nextDay: '[Αύριο {}] LT',
            nextWeek: 'dddd [{}] LT',
            lastDay: '[Χθες {}] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 6:
                        return '[το προηγούμενο] dddd [{}] LT';
                    default:
                        return '[την προηγούμενη] dddd [{}] LT';
                }
            },
            sameElse: 'L',
        },
        calendar: function (key, mom) {
            var output = this._calendarEl[key],
                hours = mom && mom.hours();
            if (isFunction(output)) {
                output = output.apply(mom);
            }
            return output.replace('{}', hours % 12 === 1 ? 'στη' : 'στις');
        },
        relativeTime: {
            future: 'σε %s',
            past: '%s πριν',
            s: 'λίγα δευτερόλεπτα',
            ss: '%d δευτερόλεπτα',
            m: 'ένα λεπτό',
            mm: '%d λεπτά',
            h: 'μία ώρα',
            hh: '%d ώρες',
            d: 'μία μέρα',
            dd: '%d μέρες',
            M: 'ένας μήνας',
            MM: '%d μήνες',
            y: 'ένας χρόνος',
            yy: '%d χρόνια',
        },
        dayOfMonthOrdinalParse: /\d{1,2}η/,
        ordinal: '%dη',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4st is the first week of the year.
        },
    });

    return el;

})));


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Australia) [en-au]
//! author : Jared Morse : https://github.com/jarcoal

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var enAu = moment.defineLocale('en-au', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A',
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return enAu;

})));


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Canada) [en-ca]
//! author : Jonathan Abourbih : https://github.com/jonbca

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var enCa = moment.defineLocale('en-ca', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'YYYY-MM-DD',
            LL: 'MMMM D, YYYY',
            LLL: 'MMMM D, YYYY h:mm A',
            LLLL: 'dddd, MMMM D, YYYY h:mm A',
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
    });

    return enCa;

})));


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (United Kingdom) [en-gb]
//! author : Chris Gedrim : https://github.com/chrisgedrim

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var enGb = moment.defineLocale('en-gb', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return enGb;

})));


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Ireland) [en-ie]
//! author : Chris Cartlidge : https://github.com/chriscartlidge

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var enIe = moment.defineLocale('en-ie', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return enIe;

})));


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Israel) [en-il]
//! author : Chris Gedrim : https://github.com/chrisgedrim

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var enIl = moment.defineLocale('en-il', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
    });

    return enIl;

})));


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (India) [en-in]
//! author : Jatin Agrawal : https://github.com/jatinag22

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var enIn = moment.defineLocale('en-in', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A',
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 1st is the first week of the year.
        },
    });

    return enIn;

})));


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (New Zealand) [en-nz]
//! author : Luke McGregor : https://github.com/lukemcgregor

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var enNz = moment.defineLocale('en-nz', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A',
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return enNz;

})));


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Singapore) [en-sg]
//! author : Matthew Castrillon-Madrigal : https://github.com/techdimension

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var enSg = moment.defineLocale('en-sg', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return enSg;

})));


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Esperanto [eo]
//! author : Colin Dean : https://github.com/colindean
//! author : Mia Nordentoft Imperatori : https://github.com/miestasmia
//! comment : miestasmia corrected the translation by colindean
//! comment : Vivakvo corrected the translation by colindean and miestasmia

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var eo = moment.defineLocale('eo', {
        months: 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split(
            '_'
        ),
        monthsShort: 'jan_feb_mart_apr_maj_jun_jul_aŭg_sept_okt_nov_dec'.split('_'),
        weekdays: 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),
        weekdaysShort: 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
        weekdaysMin: 'di_lu_ma_me_ĵa_ve_sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: '[la] D[-an de] MMMM, YYYY',
            LLL: '[la] D[-an de] MMMM, YYYY HH:mm',
            LLLL: 'dddd[n], [la] D[-an de] MMMM, YYYY HH:mm',
            llll: 'ddd, [la] D[-an de] MMM, YYYY HH:mm',
        },
        meridiemParse: /[ap]\.t\.m/i,
        isPM: function (input) {
            return input.charAt(0).toLowerCase() === 'p';
        },
        meridiem: function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'p.t.m.' : 'P.T.M.';
            } else {
                return isLower ? 'a.t.m.' : 'A.T.M.';
            }
        },
        calendar: {
            sameDay: '[Hodiaŭ je] LT',
            nextDay: '[Morgaŭ je] LT',
            nextWeek: 'dddd[n je] LT',
            lastDay: '[Hieraŭ je] LT',
            lastWeek: '[pasintan] dddd[n je] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'post %s',
            past: 'antaŭ %s',
            s: 'kelkaj sekundoj',
            ss: '%d sekundoj',
            m: 'unu minuto',
            mm: '%d minutoj',
            h: 'unu horo',
            hh: '%d horoj',
            d: 'unu tago', //ne 'diurno', ĉar estas uzita por proksimumo
            dd: '%d tagoj',
            M: 'unu monato',
            MM: '%d monatoj',
            y: 'unu jaro',
            yy: '%d jaroj',
        },
        dayOfMonthOrdinalParse: /\d{1,2}a/,
        ordinal: '%da',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return eo;

})));


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish [es]
//! author : Julio Napurí : https://github.com/julionc

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
            '_'
        ),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
        monthsParse = [
            /^ene/i,
            /^feb/i,
            /^mar/i,
            /^abr/i,
            /^may/i,
            /^jun/i,
            /^jul/i,
            /^ago/i,
            /^sep/i,
            /^oct/i,
            /^nov/i,
            /^dic/i,
        ],
        monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var es = moment.defineLocale('es', {
        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
            '_'
        ),
        monthsShort: function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY H:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',
        },
        calendar: {
            sameDay: function () {
                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextDay: function () {
                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextWeek: function () {
                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastDay: function () {
                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastWeek: function () {
                return (
                    '[el] dddd [pasado a la' +
                    (this.hours() !== 1 ? 's' : '') +
                    '] LT'
                );
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'en %s',
            past: 'hace %s',
            s: 'unos segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'una hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            M: 'un mes',
            MM: '%d meses',
            y: 'un año',
            yy: '%d años',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
        invalidDate: 'Fecha invalida',
    });

    return es;

})));


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish (Dominican Republic) [es-do]

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
            '_'
        ),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
        monthsParse = [
            /^ene/i,
            /^feb/i,
            /^mar/i,
            /^abr/i,
            /^may/i,
            /^jun/i,
            /^jul/i,
            /^ago/i,
            /^sep/i,
            /^oct/i,
            /^nov/i,
            /^dic/i,
        ],
        monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var esDo = moment.defineLocale('es-do', {
        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
            '_'
        ),
        monthsShort: function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY h:mm A',
            LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A',
        },
        calendar: {
            sameDay: function () {
                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextDay: function () {
                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextWeek: function () {
                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastDay: function () {
                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastWeek: function () {
                return (
                    '[el] dddd [pasado a la' +
                    (this.hours() !== 1 ? 's' : '') +
                    '] LT'
                );
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'en %s',
            past: 'hace %s',
            s: 'unos segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'una hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            M: 'un mes',
            MM: '%d meses',
            y: 'un año',
            yy: '%d años',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return esDo;

})));


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish (United States) [es-us]
//! author : bustta : https://github.com/bustta
//! author : chrisrodz : https://github.com/chrisrodz

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
            '_'
        ),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
        monthsParse = [
            /^ene/i,
            /^feb/i,
            /^mar/i,
            /^abr/i,
            /^may/i,
            /^jun/i,
            /^jul/i,
            /^ago/i,
            /^sep/i,
            /^oct/i,
            /^nov/i,
            /^dic/i,
        ],
        monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var esUs = moment.defineLocale('es-us', {
        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
            '_'
        ),
        monthsShort: function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'MM/DD/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY h:mm A',
            LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A',
        },
        calendar: {
            sameDay: function () {
                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextDay: function () {
                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextWeek: function () {
                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastDay: function () {
                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastWeek: function () {
                return (
                    '[el] dddd [pasado a la' +
                    (this.hours() !== 1 ? 's' : '') +
                    '] LT'
                );
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'en %s',
            past: 'hace %s',
            s: 'unos segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'una hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            M: 'un mes',
            MM: '%d meses',
            y: 'un año',
            yy: '%d años',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return esUs;

})));


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Estonian [et]
//! author : Henry Kehlmann : https://github.com/madhenry
//! improvements : Illimar Tambek : https://github.com/ragulka

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
            ss: [number + 'sekundi', number + 'sekundit'],
            m: ['ühe minuti', 'üks minut'],
            mm: [number + ' minuti', number + ' minutit'],
            h: ['ühe tunni', 'tund aega', 'üks tund'],
            hh: [number + ' tunni', number + ' tundi'],
            d: ['ühe päeva', 'üks päev'],
            M: ['kuu aja', 'kuu aega', 'üks kuu'],
            MM: [number + ' kuu', number + ' kuud'],
            y: ['ühe aasta', 'aasta', 'üks aasta'],
            yy: [number + ' aasta', number + ' aastat'],
        };
        if (withoutSuffix) {
            return format[key][2] ? format[key][2] : format[key][1];
        }
        return isFuture ? format[key][0] : format[key][1];
    }

    var et = moment.defineLocale('et', {
        months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split(
            '_'
        ),
        monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split(
            '_'
        ),
        weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split(
            '_'
        ),
        weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),
        weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm',
        },
        calendar: {
            sameDay: '[Täna,] LT',
            nextDay: '[Homme,] LT',
            nextWeek: '[Järgmine] dddd LT',
            lastDay: '[Eile,] LT',
            lastWeek: '[Eelmine] dddd LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s pärast',
            past: '%s tagasi',
            s: processRelativeTime,
            ss: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: '%d päeva',
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return et;

})));


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Basque [eu]
//! author : Eneko Illarramendi : https://github.com/eillarra

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var eu = moment.defineLocale('eu', {
        months: 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split(
            '_'
        ),
        monthsShort: 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split(
            '_'
        ),
        weekdaysShort: 'ig._al._ar._az._og._ol._lr.'.split('_'),
        weekdaysMin: 'ig_al_ar_az_og_ol_lr'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY[ko] MMMM[ren] D[a]',
            LLL: 'YYYY[ko] MMMM[ren] D[a] HH:mm',
            LLLL: 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
            l: 'YYYY-M-D',
            ll: 'YYYY[ko] MMM D[a]',
            lll: 'YYYY[ko] MMM D[a] HH:mm',
            llll: 'ddd, YYYY[ko] MMM D[a] HH:mm',
        },
        calendar: {
            sameDay: '[gaur] LT[etan]',
            nextDay: '[bihar] LT[etan]',
            nextWeek: 'dddd LT[etan]',
            lastDay: '[atzo] LT[etan]',
            lastWeek: '[aurreko] dddd LT[etan]',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s barru',
            past: 'duela %s',
            s: 'segundo batzuk',
            ss: '%d segundo',
            m: 'minutu bat',
            mm: '%d minutu',
            h: 'ordu bat',
            hh: '%d ordu',
            d: 'egun bat',
            dd: '%d egun',
            M: 'hilabete bat',
            MM: '%d hilabete',
            y: 'urte bat',
            yy: '%d urte',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return eu;

})));


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Persian [fa]
//! author : Ebrahim Byagowi : https://github.com/ebraminio

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            '1': '۱',
            '2': '۲',
            '3': '۳',
            '4': '۴',
            '5': '۵',
            '6': '۶',
            '7': '۷',
            '8': '۸',
            '9': '۹',
            '0': '۰',
        },
        numberMap = {
            '۱': '1',
            '۲': '2',
            '۳': '3',
            '۴': '4',
            '۵': '5',
            '۶': '6',
            '۷': '7',
            '۸': '8',
            '۹': '9',
            '۰': '0',
        };

    var fa = moment.defineLocale('fa', {
        months: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(
            '_'
        ),
        monthsShort: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(
            '_'
        ),
        weekdays: 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split(
            '_'
        ),
        weekdaysShort: 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split(
            '_'
        ),
        weekdaysMin: 'ی_د_س_چ_پ_ج_ش'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        meridiemParse: /قبل از ظهر|بعد از ظهر/,
        isPM: function (input) {
            return /بعد از ظهر/.test(input);
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'قبل از ظهر';
            } else {
                return 'بعد از ظهر';
            }
        },
        calendar: {
            sameDay: '[امروز ساعت] LT',
            nextDay: '[فردا ساعت] LT',
            nextWeek: 'dddd [ساعت] LT',
            lastDay: '[دیروز ساعت] LT',
            lastWeek: 'dddd [پیش] [ساعت] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'در %s',
            past: '%s پیش',
            s: 'چند ثانیه',
            ss: '%d ثانیه',
            m: 'یک دقیقه',
            mm: '%d دقیقه',
            h: 'یک ساعت',
            hh: '%d ساعت',
            d: 'یک روز',
            dd: '%d روز',
            M: 'یک ماه',
            MM: '%d ماه',
            y: 'یک سال',
            yy: '%d سال',
        },
        preparse: function (string) {
            return string
                .replace(/[۰-۹]/g, function (match) {
                    return numberMap[match];
                })
                .replace(/،/g, ',');
        },
        postformat: function (string) {
            return string
                .replace(/\d/g, function (match) {
                    return symbolMap[match];
                })
                .replace(/,/g, '،');
        },
        dayOfMonthOrdinalParse: /\d{1,2}م/,
        ordinal: '%dم',
        week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12, // The week that contains Jan 12th is the first week of the year.
        },
    });

    return fa;

})));


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Finnish [fi]
//! author : Tarmo Aidantausta : https://github.com/bleadof

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(
            ' '
        ),
        numbersFuture = [
            'nolla',
            'yhden',
            'kahden',
            'kolmen',
            'neljän',
            'viiden',
            'kuuden',
            numbersPast[7],
            numbersPast[8],
            numbersPast[9],
        ];
    function translate(number, withoutSuffix, key, isFuture) {
        var result = '';
        switch (key) {
            case 's':
                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
            case 'ss':
                result = isFuture ? 'sekunnin' : 'sekuntia';
                break;
            case 'm':
                return isFuture ? 'minuutin' : 'minuutti';
            case 'mm':
                result = isFuture ? 'minuutin' : 'minuuttia';
                break;
            case 'h':
                return isFuture ? 'tunnin' : 'tunti';
            case 'hh':
                result = isFuture ? 'tunnin' : 'tuntia';
                break;
            case 'd':
                return isFuture ? 'päivän' : 'päivä';
            case 'dd':
                result = isFuture ? 'päivän' : 'päivää';
                break;
            case 'M':
                return isFuture ? 'kuukauden' : 'kuukausi';
            case 'MM':
                result = isFuture ? 'kuukauden' : 'kuukautta';
                break;
            case 'y':
                return isFuture ? 'vuoden' : 'vuosi';
            case 'yy':
                result = isFuture ? 'vuoden' : 'vuotta';
                break;
        }
        result = verbalNumber(number, isFuture) + ' ' + result;
        return result;
    }
    function verbalNumber(number, isFuture) {
        return number < 10
            ? isFuture
                ? numbersFuture[number]
                : numbersPast[number]
            : number;
    }

    var fi = moment.defineLocale('fi', {
        months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split(
            '_'
        ),
        monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split(
            '_'
        ),
        weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split(
            '_'
        ),
        weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),
        weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),
        longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD.MM.YYYY',
            LL: 'Do MMMM[ta] YYYY',
            LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',
            LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
            l: 'D.M.YYYY',
            ll: 'Do MMM YYYY',
            lll: 'Do MMM YYYY, [klo] HH.mm',
            llll: 'ddd, Do MMM YYYY, [klo] HH.mm',
        },
        calendar: {
            sameDay: '[tänään] [klo] LT',
            nextDay: '[huomenna] [klo] LT',
            nextWeek: 'dddd [klo] LT',
            lastDay: '[eilen] [klo] LT',
            lastWeek: '[viime] dddd[na] [klo] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s päästä',
            past: '%s sitten',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return fi;

})));


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Filipino [fil]
//! author : Dan Hagman : https://github.com/hagmandan
//! author : Matthew Co : https://github.com/matthewdeeco

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var fil = moment.defineLocale('fil', {
        months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split(
            '_'
        ),
        monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
        weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split(
            '_'
        ),
        weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
        weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'MM/D/YYYY',
            LL: 'MMMM D, YYYY',
            LLL: 'MMMM D, YYYY HH:mm',
            LLLL: 'dddd, MMMM DD, YYYY HH:mm',
        },
        calendar: {
            sameDay: 'LT [ngayong araw]',
            nextDay: '[Bukas ng] LT',
            nextWeek: 'LT [sa susunod na] dddd',
            lastDay: 'LT [kahapon]',
            lastWeek: 'LT [noong nakaraang] dddd',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'sa loob ng %s',
            past: '%s ang nakalipas',
            s: 'ilang segundo',
            ss: '%d segundo',
            m: 'isang minuto',
            mm: '%d minuto',
            h: 'isang oras',
            hh: '%d oras',
            d: 'isang araw',
            dd: '%d araw',
            M: 'isang buwan',
            MM: '%d buwan',
            y: 'isang taon',
            yy: '%d taon',
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal: function (number) {
            return number;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return fil;

})));


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Faroese [fo]
//! author : Ragnar Johannesen : https://github.com/ragnar123
//! author : Kristian Sakarisson : https://github.com/sakarisson

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var fo = moment.defineLocale('fo', {
        months: 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split(
            '_'
        ),
        monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
        weekdays: 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split(
            '_'
        ),
        weekdaysShort: 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
        weekdaysMin: 'su_má_tý_mi_hó_fr_le'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D. MMMM, YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Í dag kl.] LT',
            nextDay: '[Í morgin kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[Í gjár kl.] LT',
            lastWeek: '[síðstu] dddd [kl] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'um %s',
            past: '%s síðani',
            s: 'fá sekund',
            ss: '%d sekundir',
            m: 'ein minuttur',
            mm: '%d minuttir',
            h: 'ein tími',
            hh: '%d tímar',
            d: 'ein dagur',
            dd: '%d dagar',
            M: 'ein mánaður',
            MM: '%d mánaðir',
            y: 'eitt ár',
            yy: '%d ár',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return fo;

})));


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : French [fr]
//! author : John Fischer : https://github.com/jfroffice

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var monthsStrictRegex = /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,
        monthsShortStrictRegex = /(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?)/i,
        monthsRegex = /(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?|janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,
        monthsParse = [
            /^janv/i,
            /^févr/i,
            /^mars/i,
            /^avr/i,
            /^mai/i,
            /^juin/i,
            /^juil/i,
            /^août/i,
            /^sept/i,
            /^oct/i,
            /^nov/i,
            /^déc/i,
        ];

    var fr = moment.defineLocale('fr', {
        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
            '_'
        ),
        monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
            '_'
        ),
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: monthsStrictRegex,
        monthsShortStrictRegex: monthsShortStrictRegex,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Aujourd’hui à] LT',
            nextDay: '[Demain à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[Hier à] LT',
            lastWeek: 'dddd [dernier à] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'dans %s',
            past: 'il y a %s',
            s: 'quelques secondes',
            ss: '%d secondes',
            m: 'une minute',
            mm: '%d minutes',
            h: 'une heure',
            hh: '%d heures',
            d: 'un jour',
            dd: '%d jours',
            M: 'un mois',
            MM: '%d mois',
            y: 'un an',
            yy: '%d ans',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
        ordinal: function (number, period) {
            switch (period) {
                // TODO: Return 'e' when day of month > 1. Move this case inside
                // block for masculine words below.
                // See https://github.com/moment/moment/issues/3375
                case 'D':
                    return number + (number === 1 ? 'er' : '');

                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return fr;

})));


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : French (Canada) [fr-ca]
//! author : Jonathan Abourbih : https://github.com/jonbca

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var frCa = moment.defineLocale('fr-ca', {
        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
            '_'
        ),
        monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Aujourd’hui à] LT',
            nextDay: '[Demain à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[Hier à] LT',
            lastWeek: 'dddd [dernier à] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'dans %s',
            past: 'il y a %s',
            s: 'quelques secondes',
            ss: '%d secondes',
            m: 'une minute',
            mm: '%d minutes',
            h: 'une heure',
            hh: '%d heures',
            d: 'un jour',
            dd: '%d jours',
            M: 'un mois',
            MM: '%d mois',
            y: 'un an',
            yy: '%d ans',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
        ordinal: function (number, period) {
            switch (period) {
                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'D':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        },
    });

    return frCa;

})));


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : French (Switzerland) [fr-ch]
//! author : Gaspard Bucher : https://github.com/gaspard

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var frCh = moment.defineLocale('fr-ch', {
        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
            '_'
        ),
        monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Aujourd’hui à] LT',
            nextDay: '[Demain à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[Hier à] LT',
            lastWeek: 'dddd [dernier à] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'dans %s',
            past: 'il y a %s',
            s: 'quelques secondes',
            ss: '%d secondes',
            m: 'une minute',
            mm: '%d minutes',
            h: 'une heure',
            hh: '%d heures',
            d: 'un jour',
            dd: '%d jours',
            M: 'un mois',
            MM: '%d mois',
            y: 'un an',
            yy: '%d ans',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
        ordinal: function (number, period) {
            switch (period) {
                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'D':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return frCh;

})));


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Frisian [fy]
//! author : Robin van der Vliet : https://github.com/robin0van0der0v

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split(
            '_'
        ),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split(
            '_'
        );

    var fy = moment.defineLocale('fy', {
        months: 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split(
            '_'
        ),
        monthsShort: function (m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },
        monthsParseExact: true,
        weekdays: 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split(
            '_'
        ),
        weekdaysShort: 'si._mo._ti._wo._to._fr._so.'.split('_'),
        weekdaysMin: 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD-MM-YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[hjoed om] LT',
            nextDay: '[moarn om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[juster om] LT',
            lastWeek: '[ôfrûne] dddd [om] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'oer %s',
            past: '%s lyn',
            s: 'in pear sekonden',
            ss: '%d sekonden',
            m: 'ien minút',
            mm: '%d minuten',
            h: 'ien oere',
            hh: '%d oeren',
            d: 'ien dei',
            dd: '%d dagen',
            M: 'ien moanne',
            MM: '%d moannen',
            y: 'ien jier',
            yy: '%d jierren',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal: function (number) {
            return (
                number +
                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')
            );
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return fy;

})));


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Irish or Irish Gaelic [ga]
//! author : André Silva : https://github.com/askpt

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var months = [
            'Eanáir',
            'Feabhra',
            'Márta',
            'Aibreán',
            'Bealtaine',
            'Meitheamh',
            'Iúil',
            'Lúnasa',
            'Meán Fómhair',
            'Deireadh Fómhair',
            'Samhain',
            'Nollaig',
        ],
        monthsShort = [
            'Ean',
            'Feabh',
            'Márt',
            'Aib',
            'Beal',
            'Meith',
            'Iúil',
            'Lún',
            'M.F.',
            'D.F.',
            'Samh',
            'Noll',
        ],
        weekdays = [
            'Dé Domhnaigh',
            'Dé Luain',
            'Dé Máirt',
            'Dé Céadaoin',
            'Déardaoin',
            'Dé hAoine',
            'Dé Sathairn',
        ],
        weekdaysShort = ['Domh', 'Luan', 'Máirt', 'Céad', 'Déar', 'Aoine', 'Sath'],
        weekdaysMin = ['Do', 'Lu', 'Má', 'Cé', 'Dé', 'A', 'Sa'];

    var ga = moment.defineLocale('ga', {
        months: months,
        monthsShort: monthsShort,
        monthsParseExact: true,
        weekdays: weekdays,
        weekdaysShort: weekdaysShort,
        weekdaysMin: weekdaysMin,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Inniu ag] LT',
            nextDay: '[Amárach ag] LT',
            nextWeek: 'dddd [ag] LT',
            lastDay: '[Inné ag] LT',
            lastWeek: 'dddd [seo caite] [ag] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'i %s',
            past: '%s ó shin',
            s: 'cúpla soicind',
            ss: '%d soicind',
            m: 'nóiméad',
            mm: '%d nóiméad',
            h: 'uair an chloig',
            hh: '%d uair an chloig',
            d: 'lá',
            dd: '%d lá',
            M: 'mí',
            MM: '%d míonna',
            y: 'bliain',
            yy: '%d bliain',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
        ordinal: function (number) {
            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return ga;

})));


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Scottish Gaelic [gd]
//! author : Jon Ashdown : https://github.com/jonashdown

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var months = [
            'Am Faoilleach',
            'An Gearran',
            'Am Màrt',
            'An Giblean',
            'An Cèitean',
            'An t-Ògmhios',
            'An t-Iuchar',
            'An Lùnastal',
            'An t-Sultain',
            'An Dàmhair',
            'An t-Samhain',
            'An Dùbhlachd',
        ],
        monthsShort = [
            'Faoi',
            'Gear',
            'Màrt',
            'Gibl',
            'Cèit',
            'Ògmh',
            'Iuch',
            'Lùn',
            'Sult',
            'Dàmh',
            'Samh',
            'Dùbh',
        ],
        weekdays = [
            'Didòmhnaich',
            'Diluain',
            'Dimàirt',
            'Diciadain',
            'Diardaoin',
            'Dihaoine',
            'Disathairne',
        ],
        weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'],
        weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];

    var gd = moment.defineLocale('gd', {
        months: months,
        monthsShort: monthsShort,
        monthsParseExact: true,
        weekdays: weekdays,
        weekdaysShort: weekdaysShort,
        weekdaysMin: weekdaysMin,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[An-diugh aig] LT',
            nextDay: '[A-màireach aig] LT',
            nextWeek: 'dddd [aig] LT',
            lastDay: '[An-dè aig] LT',
            lastWeek: 'dddd [seo chaidh] [aig] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'ann an %s',
            past: 'bho chionn %s',
            s: 'beagan diogan',
            ss: '%d diogan',
            m: 'mionaid',
            mm: '%d mionaidean',
            h: 'uair',
            hh: '%d uairean',
            d: 'latha',
            dd: '%d latha',
            M: 'mìos',
            MM: '%d mìosan',
            y: 'bliadhna',
            yy: '%d bliadhna',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
        ordinal: function (number) {
            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return gd;

})));


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Galician [gl]
//! author : Juan G. Hurtado : https://github.com/juanghurtado

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var gl = moment.defineLocale('gl', {
        months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split(
            '_'
        ),
        monthsShort: 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
        weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
        weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY H:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',
        },
        calendar: {
            sameDay: function () {
                return '[hoxe ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';
            },
            nextDay: function () {
                return '[mañá ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';
            },
            nextWeek: function () {
                return 'dddd [' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT';
            },
            lastDay: function () {
                return '[onte ' + (this.hours() !== 1 ? 'á' : 'a') + '] LT';
            },
            lastWeek: function () {
                return (
                    '[o] dddd [pasado ' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT'
                );
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: function (str) {
                if (str.indexOf('un') === 0) {
                    return 'n' + str;
                }
                return 'en ' + str;
            },
            past: 'hai %s',
            s: 'uns segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'unha hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            M: 'un mes',
            MM: '%d meses',
            y: 'un ano',
            yy: '%d anos',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return gl;

})));


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Konkani Devanagari script [gom-deva]
//! author : The Discoverer : https://github.com/WikiDiscoverer

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            s: ['थोडया सॅकंडांनी', 'थोडे सॅकंड'],
            ss: [number + ' सॅकंडांनी', number + ' सॅकंड'],
            m: ['एका मिणटान', 'एक मिनूट'],
            mm: [number + ' मिणटांनी', number + ' मिणटां'],
            h: ['एका वरान', 'एक वर'],
            hh: [number + ' वरांनी', number + ' वरां'],
            d: ['एका दिसान', 'एक दीस'],
            dd: [number + ' दिसांनी', number + ' दीस'],
            M: ['एका म्हयन्यान', 'एक म्हयनो'],
            MM: [number + ' म्हयन्यानी', number + ' म्हयने'],
            y: ['एका वर्सान', 'एक वर्स'],
            yy: [number + ' वर्सांनी', number + ' वर्सां'],
        };
        return isFuture ? format[key][0] : format[key][1];
    }

    var gomDeva = moment.defineLocale('gom-deva', {
        months: {
            standalone: 'जानेवारी_फेब्रुवारी_मार्च_एप्रील_मे_जून_जुलय_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(
                '_'
            ),
            format: 'जानेवारीच्या_फेब्रुवारीच्या_मार्चाच्या_एप्रीलाच्या_मेयाच्या_जूनाच्या_जुलयाच्या_ऑगस्टाच्या_सप्टेंबराच्या_ऑक्टोबराच्या_नोव्हेंबराच्या_डिसेंबराच्या'.split(
                '_'
            ),
            isFormat: /MMMM(\s)+D[oD]?/,
        },
        monthsShort: 'जाने._फेब्रु._मार्च_एप्री._मे_जून_जुल._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'आयतार_सोमार_मंगळार_बुधवार_बिरेस्तार_सुक्रार_शेनवार'.split('_'),
        weekdaysShort: 'आयत._सोम._मंगळ._बुध._ब्रेस्त._सुक्र._शेन.'.split('_'),
        weekdaysMin: 'आ_सो_मं_बु_ब्रे_सु_शे'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'A h:mm [वाजतां]',
            LTS: 'A h:mm:ss [वाजतां]',
            L: 'DD-MM-YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY A h:mm [वाजतां]',
            LLLL: 'dddd, MMMM Do, YYYY, A h:mm [वाजतां]',
            llll: 'ddd, D MMM YYYY, A h:mm [वाजतां]',
        },
        calendar: {
            sameDay: '[आयज] LT',
            nextDay: '[फाल्यां] LT',
            nextWeek: '[फुडलो] dddd[,] LT',
            lastDay: '[काल] LT',
            lastWeek: '[फाटलो] dddd[,] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s',
            past: '%s आदीं',
            s: processRelativeTime,
            ss: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime,
        },
        dayOfMonthOrdinalParse: /\d{1,2}(वेर)/,
        ordinal: function (number, period) {
            switch (period) {
                // the ordinal 'वेर' only applies to day of the month
                case 'D':
                    return number + 'वेर';
                default:
                case 'M':
                case 'Q':
                case 'DDD':
                case 'd':
                case 'w':
                case 'W':
                    return number;
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
        meridiemParse: /राती|सकाळीं|दनपारां|सांजे/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'राती') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सकाळीं') {
                return hour;
            } else if (meridiem === 'दनपारां') {
                return hour > 12 ? hour : hour + 12;
            } else if (meridiem === 'सांजे') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'राती';
            } else if (hour < 12) {
                return 'सकाळीं';
            } else if (hour < 16) {
                return 'दनपारां';
            } else if (hour < 20) {
                return 'सांजे';
            } else {
                return 'राती';
            }
        },
    });

    return gomDeva;

})));


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Konkani Latin script [gom-latn]
//! author : The Discoverer : https://github.com/WikiDiscoverer

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            s: ['thoddea sekondamni', 'thodde sekond'],
            ss: [number + ' sekondamni', number + ' sekond'],
            m: ['eka mintan', 'ek minut'],
            mm: [number + ' mintamni', number + ' mintam'],
            h: ['eka voran', 'ek vor'],
            hh: [number + ' voramni', number + ' voram'],
            d: ['eka disan', 'ek dis'],
            dd: [number + ' disamni', number + ' dis'],
            M: ['eka mhoinean', 'ek mhoino'],
            MM: [number + ' mhoineamni', number + ' mhoine'],
            y: ['eka vorsan', 'ek voros'],
            yy: [number + ' vorsamni', number + ' vorsam'],
        };
        return isFuture ? format[key][0] : format[key][1];
    }

    var gomLatn = moment.defineLocale('gom-latn', {
        months: {
            standalone: 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split(
                '_'
            ),
            format: 'Janerachea_Febrerachea_Marsachea_Abrilachea_Maiachea_Junachea_Julaiachea_Agostachea_Setembrachea_Otubrachea_Novembrachea_Dezembrachea'.split(
                '_'
            ),
            isFormat: /MMMM(\s)+D[oD]?/,
        },
        monthsShort: 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: "Aitar_Somar_Mongllar_Budhvar_Birestar_Sukrar_Son'var".split('_'),
        weekdaysShort: 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
        weekdaysMin: 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'A h:mm [vazta]',
            LTS: 'A h:mm:ss [vazta]',
            L: 'DD-MM-YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY A h:mm [vazta]',
            LLLL: 'dddd, MMMM Do, YYYY, A h:mm [vazta]',
            llll: 'ddd, D MMM YYYY, A h:mm [vazta]',
        },
        calendar: {
            sameDay: '[Aiz] LT',
            nextDay: '[Faleam] LT',
            nextWeek: '[Fuddlo] dddd[,] LT',
            lastDay: '[Kal] LT',
            lastWeek: '[Fattlo] dddd[,] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s',
            past: '%s adim',
            s: processRelativeTime,
            ss: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime,
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er)/,
        ordinal: function (number, period) {
            switch (period) {
                // the ordinal 'er' only applies to day of the month
                case 'D':
                    return number + 'er';
                default:
                case 'M':
                case 'Q':
                case 'DDD':
                case 'd':
                case 'w':
                case 'W':
                    return number;
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
        meridiemParse: /rati|sokallim|donparam|sanje/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'rati') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'sokallim') {
                return hour;
            } else if (meridiem === 'donparam') {
                return hour > 12 ? hour : hour + 12;
            } else if (meridiem === 'sanje') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'rati';
            } else if (hour < 12) {
                return 'sokallim';
            } else if (hour < 16) {
                return 'donparam';
            } else if (hour < 20) {
                return 'sanje';
            } else {
                return 'rati';
            }
        },
    });

    return gomLatn;

})));


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Gujarati [gu]
//! author : Kaushik Thanki : https://github.com/Kaushik1987

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            '1': '૧',
            '2': '૨',
            '3': '૩',
            '4': '૪',
            '5': '૫',
            '6': '૬',
            '7': '૭',
            '8': '૮',
            '9': '૯',
            '0': '૦',
        },
        numberMap = {
            '૧': '1',
            '૨': '2',
            '૩': '3',
            '૪': '4',
            '૫': '5',
            '૬': '6',
            '૭': '7',
            '૮': '8',
            '૯': '9',
            '૦': '0',
        };

    var gu = moment.defineLocale('gu', {
        months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split(
            '_'
        ),
        monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split(
            '_'
        ),
        weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),
        weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),
        longDateFormat: {
            LT: 'A h:mm વાગ્યે',
            LTS: 'A h:mm:ss વાગ્યે',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm વાગ્યે',
            LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે',
        },
        calendar: {
            sameDay: '[આજ] LT',
            nextDay: '[કાલે] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[ગઇકાલે] LT',
            lastWeek: '[પાછલા] dddd, LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s મા',
            past: '%s પહેલા',
            s: 'અમુક પળો',
            ss: '%d સેકંડ',
            m: 'એક મિનિટ',
            mm: '%d મિનિટ',
            h: 'એક કલાક',
            hh: '%d કલાક',
            d: 'એક દિવસ',
            dd: '%d દિવસ',
            M: 'એક મહિનો',
            MM: '%d મહિનો',
            y: 'એક વર્ષ',
            yy: '%d વર્ષ',
        },
        preparse: function (string) {
            return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // Gujarati notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.
        meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'રાત') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'સવાર') {
                return hour;
            } else if (meridiem === 'બપોર') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'સાંજ') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'રાત';
            } else if (hour < 10) {
                return 'સવાર';
            } else if (hour < 17) {
                return 'બપોર';
            } else if (hour < 20) {
                return 'સાંજ';
            } else {
                return 'રાત';
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return gu;

})));


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Hebrew [he]
//! author : Tomer Cohen : https://github.com/tomer
//! author : Moshe Simantov : https://github.com/DevelopmentIL
//! author : Tal Ater : https://github.com/TalAter

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var he = moment.defineLocale('he', {
        months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split(
            '_'
        ),
        monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split(
            '_'
        ),
        weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
        weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
        weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [ב]MMMM YYYY',
            LLL: 'D [ב]MMMM YYYY HH:mm',
            LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',
            l: 'D/M/YYYY',
            ll: 'D MMM YYYY',
            lll: 'D MMM YYYY HH:mm',
            llll: 'ddd, D MMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[היום ב־]LT',
            nextDay: '[מחר ב־]LT',
            nextWeek: 'dddd [בשעה] LT',
            lastDay: '[אתמול ב־]LT',
            lastWeek: '[ביום] dddd [האחרון בשעה] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'בעוד %s',
            past: 'לפני %s',
            s: 'מספר שניות',
            ss: '%d שניות',
            m: 'דקה',
            mm: '%d דקות',
            h: 'שעה',
            hh: function (number) {
                if (number === 2) {
                    return 'שעתיים';
                }
                return number + ' שעות';
            },
            d: 'יום',
            dd: function (number) {
                if (number === 2) {
                    return 'יומיים';
                }
                return number + ' ימים';
            },
            M: 'חודש',
            MM: function (number) {
                if (number === 2) {
                    return 'חודשיים';
                }
                return number + ' חודשים';
            },
            y: 'שנה',
            yy: function (number) {
                if (number === 2) {
                    return 'שנתיים';
                } else if (number % 10 === 0 && number !== 10) {
                    return number + ' שנה';
                }
                return number + ' שנים';
            },
        },
        meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
        isPM: function (input) {
            return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 5) {
                return 'לפנות בוקר';
            } else if (hour < 10) {
                return 'בבוקר';
            } else if (hour < 12) {
                return isLower ? 'לפנה"צ' : 'לפני הצהריים';
            } else if (hour < 18) {
                return isLower ? 'אחה"צ' : 'אחרי הצהריים';
            } else {
                return 'בערב';
            }
        },
    });

    return he;

})));


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Hindi [hi]
//! author : Mayank Singhal : https://github.com/mayanksinghal

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            '1': '१',
            '2': '२',
            '3': '३',
            '4': '४',
            '5': '५',
            '6': '६',
            '7': '७',
            '8': '८',
            '9': '९',
            '0': '०',
        },
        numberMap = {
            '१': '1',
            '२': '2',
            '३': '3',
            '४': '4',
            '५': '5',
            '६': '6',
            '७': '7',
            '८': '8',
            '९': '9',
            '०': '0',
        };

    var hi = moment.defineLocale('hi', {
        months: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split(
            '_'
        ),
        monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
        weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
        weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
        longDateFormat: {
            LT: 'A h:mm बजे',
            LTS: 'A h:mm:ss बजे',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm बजे',
            LLLL: 'dddd, D MMMM YYYY, A h:mm बजे',
        },
        calendar: {
            sameDay: '[आज] LT',
            nextDay: '[कल] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[कल] LT',
            lastWeek: '[पिछले] dddd, LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s में',
            past: '%s पहले',
            s: 'कुछ ही क्षण',
            ss: '%d सेकंड',
            m: 'एक मिनट',
            mm: '%d मिनट',
            h: 'एक घंटा',
            hh: '%d घंटे',
            d: 'एक दिन',
            dd: '%d दिन',
            M: 'एक महीने',
            MM: '%d महीने',
            y: 'एक वर्ष',
            yy: '%d वर्ष',
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // Hindi notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
        meridiemParse: /रात|सुबह|दोपहर|शाम/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'रात') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सुबह') {
                return hour;
            } else if (meridiem === 'दोपहर') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'शाम') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'रात';
            } else if (hour < 10) {
                return 'सुबह';
            } else if (hour < 17) {
                return 'दोपहर';
            } else if (hour < 20) {
                return 'शाम';
            } else {
                return 'रात';
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return hi;

})));


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Croatian [hr]
//! author : Bojan Marković : https://github.com/bmarkovic

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                if (number === 1) {
                    result += 'sekunda';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sekunde';
                } else {
                    result += 'sekundi';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
            case 'mm':
                if (number === 1) {
                    result += 'minuta';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'minute';
                } else {
                    result += 'minuta';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'jedan sat' : 'jednog sata';
            case 'hh':
                if (number === 1) {
                    result += 'sat';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sata';
                } else {
                    result += 'sati';
                }
                return result;
            case 'dd':
                if (number === 1) {
                    result += 'dan';
                } else {
                    result += 'dana';
                }
                return result;
            case 'MM':
                if (number === 1) {
                    result += 'mjesec';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'mjeseca';
                } else {
                    result += 'mjeseci';
                }
                return result;
            case 'yy':
                if (number === 1) {
                    result += 'godina';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'godine';
                } else {
                    result += 'godina';
                }
                return result;
        }
    }

    var hr = moment.defineLocale('hr', {
        months: {
            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split(
                '_'
            ),
            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split(
                '_'
            ),
        },
        monthsShort: 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
            '_'
        ),
        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'Do MMMM YYYY',
            LLL: 'Do MMMM YYYY H:mm',
            LLLL: 'dddd, Do MMMM YYYY H:mm',
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay: '[jučer u] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[prošlu] [nedjelju] [u] LT';
                    case 3:
                        return '[prošlu] [srijedu] [u] LT';
                    case 6:
                        return '[prošle] [subote] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prošli] dddd [u] LT';
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'za %s',
            past: 'prije %s',
            s: 'par sekundi',
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: 'dan',
            dd: translate,
            M: 'mjesec',
            MM: translate,
            y: 'godinu',
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return hr;

})));


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Hungarian [hu]
//! author : Adam Brunner : https://github.com/adambrunner

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(
        ' '
    );
    function translate(number, withoutSuffix, key, isFuture) {
        var num = number;
        switch (key) {
            case 's':
                return isFuture || withoutSuffix
                    ? 'néhány másodperc'
                    : 'néhány másodperce';
            case 'ss':
                return num + (isFuture || withoutSuffix)
                    ? ' másodperc'
                    : ' másodperce';
            case 'm':
                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
            case 'mm':
                return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
            case 'h':
                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
            case 'hh':
                return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
            case 'd':
                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
            case 'dd':
                return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
            case 'M':
                return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
            case 'MM':
                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
            case 'y':
                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
            case 'yy':
                return num + (isFuture || withoutSuffix ? ' év' : ' éve');
        }
        return '';
    }
    function week(isFuture) {
        return (
            (isFuture ? '' : '[múlt] ') +
            '[' +
            weekEndings[this.day()] +
            '] LT[-kor]'
        );
    }

    var hu = moment.defineLocale('hu', {
        months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split(
            '_'
        ),
        monthsShort: 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split(
            '_'
        ),
        weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
        weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
        weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'YYYY.MM.DD.',
            LL: 'YYYY. MMMM D.',
            LLL: 'YYYY. MMMM D. H:mm',
            LLLL: 'YYYY. MMMM D., dddd H:mm',
        },
        meridiemParse: /de|du/i,
        isPM: function (input) {
            return input.charAt(1).toLowerCase() === 'u';
        },
        meridiem: function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower === true ? 'de' : 'DE';
            } else {
                return isLower === true ? 'du' : 'DU';
            }
        },
        calendar: {
            sameDay: '[ma] LT[-kor]',
            nextDay: '[holnap] LT[-kor]',
            nextWeek: function () {
                return week.call(this, true);
            },
            lastDay: '[tegnap] LT[-kor]',
            lastWeek: function () {
                return week.call(this, false);
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s múlva',
            past: '%s',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return hu;

})));


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Armenian [hy-am]
//! author : Armendarabyan : https://github.com/armendarabyan

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var hyAm = moment.defineLocale('hy-am', {
        months: {
            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split(
                '_'
            ),
            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split(
                '_'
            ),
        },
        monthsShort: 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
        weekdays: 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split(
            '_'
        ),
        weekdaysShort: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
        weekdaysMin: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY թ.',
            LLL: 'D MMMM YYYY թ., HH:mm',
            LLLL: 'dddd, D MMMM YYYY թ., HH:mm',
        },
        calendar: {
            sameDay: '[այսօր] LT',
            nextDay: '[վաղը] LT',
            lastDay: '[երեկ] LT',
            nextWeek: function () {
                return 'dddd [օրը ժամը] LT';
            },
            lastWeek: function () {
                return '[անցած] dddd [օրը ժամը] LT';
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s հետո',
            past: '%s առաջ',
            s: 'մի քանի վայրկյան',
            ss: '%d վայրկյան',
            m: 'րոպե',
            mm: '%d րոպե',
            h: 'ժամ',
            hh: '%d ժամ',
            d: 'օր',
            dd: '%d օր',
            M: 'ամիս',
            MM: '%d ամիս',
            y: 'տարի',
            yy: '%d տարի',
        },
        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
        isPM: function (input) {
            return /^(ցերեկվա|երեկոյան)$/.test(input);
        },
        meridiem: function (hour) {
            if (hour < 4) {
                return 'գիշերվա';
            } else if (hour < 12) {
                return 'առավոտվա';
            } else if (hour < 17) {
                return 'ցերեկվա';
            } else {
                return 'երեկոյան';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'DDD':
                case 'w':
                case 'W':
                case 'DDDo':
                    if (number === 1) {
                        return number + '-ին';
                    }
                    return number + '-րդ';
                default:
                    return number;
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return hyAm;

})));


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Indonesian [id]
//! author : Mohammad Satrio Utomo : https://github.com/tyok
//! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var id = moment.defineLocale('id', {
        months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),
        weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
        weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
        weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [pukul] HH.mm',
            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
        },
        meridiemParse: /pagi|siang|sore|malam/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'siang') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sore' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem: function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'siang';
            } else if (hours < 19) {
                return 'sore';
            } else {
                return 'malam';
            }
        },
        calendar: {
            sameDay: '[Hari ini pukul] LT',
            nextDay: '[Besok pukul] LT',
            nextWeek: 'dddd [pukul] LT',
            lastDay: '[Kemarin pukul] LT',
            lastWeek: 'dddd [lalu pukul] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'dalam %s',
            past: '%s yang lalu',
            s: 'beberapa detik',
            ss: '%d detik',
            m: 'semenit',
            mm: '%d menit',
            h: 'sejam',
            hh: '%d jam',
            d: 'sehari',
            dd: '%d hari',
            M: 'sebulan',
            MM: '%d bulan',
            y: 'setahun',
            yy: '%d tahun',
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return id;

})));


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Icelandic [is]
//! author : Hinrik Örn Sigurðsson : https://github.com/hinrik

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function plural(n) {
        if (n % 100 === 11) {
            return true;
        } else if (n % 10 === 1) {
            return false;
        }
        return true;
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':
                return withoutSuffix || isFuture
                    ? 'nokkrar sekúndur'
                    : 'nokkrum sekúndum';
            case 'ss':
                if (plural(number)) {
                    return (
                        result +
                        (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum')
                    );
                }
                return result + 'sekúnda';
            case 'm':
                return withoutSuffix ? 'mínúta' : 'mínútu';
            case 'mm':
                if (plural(number)) {
                    return (
                        result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum')
                    );
                } else if (withoutSuffix) {
                    return result + 'mínúta';
                }
                return result + 'mínútu';
            case 'hh':
                if (plural(number)) {
                    return (
                        result +
                        (withoutSuffix || isFuture
                            ? 'klukkustundir'
                            : 'klukkustundum')
                    );
                }
                return result + 'klukkustund';
            case 'd':
                if (withoutSuffix) {
                    return 'dagur';
                }
                return isFuture ? 'dag' : 'degi';
            case 'dd':
                if (plural(number)) {
                    if (withoutSuffix) {
                        return result + 'dagar';
                    }
                    return result + (isFuture ? 'daga' : 'dögum');
                } else if (withoutSuffix) {
                    return result + 'dagur';
                }
                return result + (isFuture ? 'dag' : 'degi');
            case 'M':
                if (withoutSuffix) {
                    return 'mánuður';
                }
                return isFuture ? 'mánuð' : 'mánuði';
            case 'MM':
                if (plural(number)) {
                    if (withoutSuffix) {
                        return result + 'mánuðir';
                    }
                    return result + (isFuture ? 'mánuði' : 'mánuðum');
                } else if (withoutSuffix) {
                    return result + 'mánuður';
                }
                return result + (isFuture ? 'mánuð' : 'mánuði');
            case 'y':
                return withoutSuffix || isFuture ? 'ár' : 'ári';
            case 'yy':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
                }
                return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
        }
    }

    var is = moment.defineLocale('is', {
        months: 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split(
            '_'
        ),
        monthsShort: 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
        weekdays: 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split(
            '_'
        ),
        weekdaysShort: 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
        weekdaysMin: 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY [kl.] H:mm',
            LLLL: 'dddd, D. MMMM YYYY [kl.] H:mm',
        },
        calendar: {
            sameDay: '[í dag kl.] LT',
            nextDay: '[á morgun kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[í gær kl.] LT',
            lastWeek: '[síðasta] dddd [kl.] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'eftir %s',
            past: 'fyrir %s síðan',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: 'klukkustund',
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return is;

})));


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Italian [it]
//! author : Lorenzo : https://github.com/aliem
//! author: Mattia Larentis: https://github.com/nostalgiaz
//! author: Marco : https://github.com/Manfre98

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var it = moment.defineLocale('it', {
        months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(
            '_'
        ),
        monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
        weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split(
            '_'
        ),
        weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
        weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: function () {
                return (
                    '[Oggi a' +
                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") +
                    ']LT'
                );
            },
            nextDay: function () {
                return (
                    '[Domani a' +
                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") +
                    ']LT'
                );
            },
            nextWeek: function () {
                return (
                    'dddd [a' +
                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") +
                    ']LT'
                );
            },
            lastDay: function () {
                return (
                    '[Ieri a' +
                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") +
                    ']LT'
                );
            },
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return (
                            '[La scorsa] dddd [a' +
                            (this.hours() > 1
                                ? 'lle '
                                : this.hours() === 0
                                ? ' '
                                : "ll'") +
                            ']LT'
                        );
                    default:
                        return (
                            '[Lo scorso] dddd [a' +
                            (this.hours() > 1
                                ? 'lle '
                                : this.hours() === 0
                                ? ' '
                                : "ll'") +
                            ']LT'
                        );
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'tra %s',
            past: '%s fa',
            s: 'alcuni secondi',
            ss: '%d secondi',
            m: 'un minuto',
            mm: '%d minuti',
            h: "un'ora",
            hh: '%d ore',
            d: 'un giorno',
            dd: '%d giorni',
            M: 'un mese',
            MM: '%d mesi',
            y: 'un anno',
            yy: '%d anni',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return it;

})));


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Italian (Switzerland) [it-ch]
//! author : xfh : https://github.com/xfh

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var itCh = moment.defineLocale('it-ch', {
        months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(
            '_'
        ),
        monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
        weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split(
            '_'
        ),
        weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
        weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Oggi alle] LT',
            nextDay: '[Domani alle] LT',
            nextWeek: 'dddd [alle] LT',
            lastDay: '[Ieri alle] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[la scorsa] dddd [alle] LT';
                    default:
                        return '[lo scorso] dddd [alle] LT';
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: function (s) {
                return (/^[0-9].+$/.test(s) ? 'tra' : 'in') + ' ' + s;
            },
            past: '%s fa',
            s: 'alcuni secondi',
            ss: '%d secondi',
            m: 'un minuto',
            mm: '%d minuti',
            h: "un'ora",
            hh: '%d ore',
            d: 'un giorno',
            dd: '%d giorni',
            M: 'un mese',
            MM: '%d mesi',
            y: 'un anno',
            yy: '%d anni',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return itCh;

})));


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Japanese [ja]
//! author : LI Long : https://github.com/baryon

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var ja = moment.defineLocale('ja', {
        eras: [
            {
                since: '2019-05-01',
                offset: 1,
                name: '令和',
                narrow: '㋿',
                abbr: 'R',
            },
            {
                since: '1989-01-08',
                until: '2019-04-30',
                offset: 1,
                name: '平成',
                narrow: '㍻',
                abbr: 'H',
            },
            {
                since: '1926-12-25',
                until: '1989-01-07',
                offset: 1,
                name: '昭和',
                narrow: '㍼',
                abbr: 'S',
            },
            {
                since: '1912-07-30',
                until: '1926-12-24',
                offset: 1,
                name: '大正',
                narrow: '㍽',
                abbr: 'T',
            },
            {
                since: '1873-01-01',
                until: '1912-07-29',
                offset: 6,
                name: '明治',
                narrow: '㍾',
                abbr: 'M',
            },
            {
                since: '0001-01-01',
                until: '1873-12-31',
                offset: 1,
                name: '西暦',
                narrow: 'AD',
                abbr: 'AD',
            },
            {
                since: '0000-12-31',
                until: -Infinity,
                offset: 1,
                name: '紀元前',
                narrow: 'BC',
                abbr: 'BC',
            },
        ],
        eraYearOrdinalRegex: /(元|\d+)年/,
        eraYearOrdinalParse: function (input, match) {
            return match[1] === '元' ? 1 : parseInt(match[1] || input, 10);
        },
        months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
            '_'
        ),
        weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
        weekdaysShort: '日_月_火_水_木_金_土'.split('_'),
        weekdaysMin: '日_月_火_水_木_金_土'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'YYYY年M月D日',
            LLL: 'YYYY年M月D日 HH:mm',
            LLLL: 'YYYY年M月D日 dddd HH:mm',
            l: 'YYYY/MM/DD',
            ll: 'YYYY年M月D日',
            lll: 'YYYY年M月D日 HH:mm',
            llll: 'YYYY年M月D日(ddd) HH:mm',
        },
        meridiemParse: /午前|午後/i,
        isPM: function (input) {
            return input === '午後';
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return '午前';
            } else {
                return '午後';
            }
        },
        calendar: {
            sameDay: '[今日] LT',
            nextDay: '[明日] LT',
            nextWeek: function (now) {
                if (now.week() !== this.week()) {
                    return '[来週]dddd LT';
                } else {
                    return 'dddd LT';
                }
            },
            lastDay: '[昨日] LT',
            lastWeek: function (now) {
                if (this.week() !== now.week()) {
                    return '[先週]dddd LT';
                } else {
                    return 'dddd LT';
                }
            },
            sameElse: 'L',
        },
        dayOfMonthOrdinalParse: /\d{1,2}日/,
        ordinal: function (number, period) {
            switch (period) {
                case 'y':
                    return number === 1 ? '元年' : number + '年';
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                default:
                    return number;
            }
        },
        relativeTime: {
            future: '%s後',
            past: '%s前',
            s: '数秒',
            ss: '%d秒',
            m: '1分',
            mm: '%d分',
            h: '1時間',
            hh: '%d時間',
            d: '1日',
            dd: '%d日',
            M: '1ヶ月',
            MM: '%dヶ月',
            y: '1年',
            yy: '%d年',
        },
    });

    return ja;

})));


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Javanese [jv]
//! author : Rony Lantip : https://github.com/lantip
//! reference: http://jv.wikipedia.org/wiki/Basa_Jawa

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var jv = moment.defineLocale('jv', {
        months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
        weekdays: 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
        weekdaysShort: 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
        weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
        longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [pukul] HH.mm',
            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
        },
        meridiemParse: /enjing|siyang|sonten|ndalu/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'enjing') {
                return hour;
            } else if (meridiem === 'siyang') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
                return hour + 12;
            }
        },
        meridiem: function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'enjing';
            } else if (hours < 15) {
                return 'siyang';
            } else if (hours < 19) {
                return 'sonten';
            } else {
                return 'ndalu';
            }
        },
        calendar: {
            sameDay: '[Dinten puniko pukul] LT',
            nextDay: '[Mbenjang pukul] LT',
            nextWeek: 'dddd [pukul] LT',
            lastDay: '[Kala wingi pukul] LT',
            lastWeek: 'dddd [kepengker pukul] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'wonten ing %s',
            past: '%s ingkang kepengker',
            s: 'sawetawis detik',
            ss: '%d detik',
            m: 'setunggal menit',
            mm: '%d menit',
            h: 'setunggal jam',
            hh: '%d jam',
            d: 'sedinten',
            dd: '%d dinten',
            M: 'sewulan',
            MM: '%d wulan',
            y: 'setaun',
            yy: '%d taun',
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return jv;

})));


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Georgian [ka]
//! author : Irakli Janiashvili : https://github.com/IrakliJani

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var ka = moment.defineLocale('ka', {
        months: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split(
            '_'
        ),
        monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
        weekdays: {
            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split(
                '_'
            ),
            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split(
                '_'
            ),
            isFormat: /(წინა|შემდეგ)/,
        },
        weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
        weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[დღეს] LT[-ზე]',
            nextDay: '[ხვალ] LT[-ზე]',
            lastDay: '[გუშინ] LT[-ზე]',
            nextWeek: '[შემდეგ] dddd LT[-ზე]',
            lastWeek: '[წინა] dddd LT-ზე',
            sameElse: 'L',
        },
        relativeTime: {
            future: function (s) {
                return s.replace(/(წამ|წუთ|საათ|წელ|დღ|თვ)(ი|ე)/, function (
                    $0,
                    $1,
                    $2
                ) {
                    return $2 === 'ი' ? $1 + 'ში' : $1 + $2 + 'ში';
                });
            },
            past: function (s) {
                if (/(წამი|წუთი|საათი|დღე|თვე)/.test(s)) {
                    return s.replace(/(ი|ე)$/, 'ის წინ');
                }
                if (/წელი/.test(s)) {
                    return s.replace(/წელი$/, 'წლის წინ');
                }
                return s;
            },
            s: 'რამდენიმე წამი',
            ss: '%d წამი',
            m: 'წუთი',
            mm: '%d წუთი',
            h: 'საათი',
            hh: '%d საათი',
            d: 'დღე',
            dd: '%d დღე',
            M: 'თვე',
            MM: '%d თვე',
            y: 'წელი',
            yy: '%d წელი',
        },
        dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
        ordinal: function (number) {
            if (number === 0) {
                return number;
            }
            if (number === 1) {
                return number + '-ლი';
            }
            if (
                number < 20 ||
                (number <= 100 && number % 20 === 0) ||
                number % 100 === 0
            ) {
                return 'მე-' + number;
            }
            return number + '-ე';
        },
        week: {
            dow: 1,
            doy: 7,
        },
    });

    return ka;

})));


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kazakh [kk]
//! authors : Nurlan Rakhimzhanov : https://github.com/nurlan

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var suffixes = {
        0: '-ші',
        1: '-ші',
        2: '-ші',
        3: '-ші',
        4: '-ші',
        5: '-ші',
        6: '-шы',
        7: '-ші',
        8: '-ші',
        9: '-шы',
        10: '-шы',
        20: '-шы',
        30: '-шы',
        40: '-шы',
        50: '-ші',
        60: '-шы',
        70: '-ші',
        80: '-ші',
        90: '-шы',
        100: '-ші',
    };

    var kk = moment.defineLocale('kk', {
        months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split(
            '_'
        ),
        monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
        weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split(
            '_'
        ),
        weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
        weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Бүгін сағат] LT',
            nextDay: '[Ертең сағат] LT',
            nextWeek: 'dddd [сағат] LT',
            lastDay: '[Кеше сағат] LT',
            lastWeek: '[Өткен аптаның] dddd [сағат] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s ішінде',
            past: '%s бұрын',
            s: 'бірнеше секунд',
            ss: '%d секунд',
            m: 'бір минут',
            mm: '%d минут',
            h: 'бір сағат',
            hh: '%d сағат',
            d: 'бір күн',
            dd: '%d күн',
            M: 'бір ай',
            MM: '%d ай',
            y: 'бір жыл',
            yy: '%d жыл',
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
        ordinal: function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return kk;

})));


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Cambodian [km]
//! author : Kruy Vanna : https://github.com/kruyvanna

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            '1': '១',
            '2': '២',
            '3': '៣',
            '4': '៤',
            '5': '៥',
            '6': '៦',
            '7': '៧',
            '8': '៨',
            '9': '៩',
            '0': '០',
        },
        numberMap = {
            '១': '1',
            '២': '2',
            '៣': '3',
            '៤': '4',
            '៥': '5',
            '៦': '6',
            '៧': '7',
            '៨': '8',
            '៩': '9',
            '០': '0',
        };

    var km = moment.defineLocale('km', {
        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
            '_'
        ),
        monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
            '_'
        ),
        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
        weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
        weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        meridiemParse: /ព្រឹក|ល្ងាច/,
        isPM: function (input) {
            return input === 'ល្ងាច';
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ព្រឹក';
            } else {
                return 'ល្ងាច';
            }
        },
        calendar: {
            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
            nextDay: '[ស្អែក ម៉ោង] LT',
            nextWeek: 'dddd [ម៉ោង] LT',
            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%sទៀត',
            past: '%sមុន',
            s: 'ប៉ុន្មានវិនាទី',
            ss: '%d វិនាទី',
            m: 'មួយនាទី',
            mm: '%d នាទី',
            h: 'មួយម៉ោង',
            hh: '%d ម៉ោង',
            d: 'មួយថ្ងៃ',
            dd: '%d ថ្ងៃ',
            M: 'មួយខែ',
            MM: '%d ខែ',
            y: 'មួយឆ្នាំ',
            yy: '%d ឆ្នាំ',
        },
        dayOfMonthOrdinalParse: /ទី\d{1,2}/,
        ordinal: 'ទី%d',
        preparse: function (string) {
            return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return km;

})));


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kannada [kn]
//! author : Rajeev Naik : https://github.com/rajeevnaikte

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            '1': '೧',
            '2': '೨',
            '3': '೩',
            '4': '೪',
            '5': '೫',
            '6': '೬',
            '7': '೭',
            '8': '೮',
            '9': '೯',
            '0': '೦',
        },
        numberMap = {
            '೧': '1',
            '೨': '2',
            '೩': '3',
            '೪': '4',
            '೫': '5',
            '೬': '6',
            '೭': '7',
            '೮': '8',
            '೯': '9',
            '೦': '0',
        };

    var kn = moment.defineLocale('kn', {
        months: 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split(
            '_'
        ),
        monthsShort: 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split(
            '_'
        ),
        weekdaysShort: 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
        weekdaysMin: 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
        longDateFormat: {
            LT: 'A h:mm',
            LTS: 'A h:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm',
            LLLL: 'dddd, D MMMM YYYY, A h:mm',
        },
        calendar: {
            sameDay: '[ಇಂದು] LT',
            nextDay: '[ನಾಳೆ] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[ನಿನ್ನೆ] LT',
            lastWeek: '[ಕೊನೆಯ] dddd, LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s ನಂತರ',
            past: '%s ಹಿಂದೆ',
            s: 'ಕೆಲವು ಕ್ಷಣಗಳು',
            ss: '%d ಸೆಕೆಂಡುಗಳು',
            m: 'ಒಂದು ನಿಮಿಷ',
            mm: '%d ನಿಮಿಷ',
            h: 'ಒಂದು ಗಂಟೆ',
            hh: '%d ಗಂಟೆ',
            d: 'ಒಂದು ದಿನ',
            dd: '%d ದಿನ',
            M: 'ಒಂದು ತಿಂಗಳು',
            MM: '%d ತಿಂಗಳು',
            y: 'ಒಂದು ವರ್ಷ',
            yy: '%d ವರ್ಷ',
        },
        preparse: function (string) {
            return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ರಾತ್ರಿ') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {
                return hour;
            } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'ಸಂಜೆ') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ರಾತ್ರಿ';
            } else if (hour < 10) {
                return 'ಬೆಳಿಗ್ಗೆ';
            } else if (hour < 17) {
                return 'ಮಧ್ಯಾಹ್ನ';
            } else if (hour < 20) {
                return 'ಸಂಜೆ';
            } else {
                return 'ರಾತ್ರಿ';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
        ordinal: function (number) {
            return number + 'ನೇ';
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return kn;

})));


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Korean [ko]
//! author : Kyungwook, Park : https://github.com/kyungw00k
//! author : Jeeeyul Lee <jeeeyul@gmail.com>

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var ko = moment.defineLocale('ko', {
        months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
        monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split(
            '_'
        ),
        weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
        weekdaysShort: '일_월_화_수_목_금_토'.split('_'),
        weekdaysMin: '일_월_화_수_목_금_토'.split('_'),
        longDateFormat: {
            LT: 'A h:mm',
            LTS: 'A h:mm:ss',
            L: 'YYYY.MM.DD.',
            LL: 'YYYY년 MMMM D일',
            LLL: 'YYYY년 MMMM D일 A h:mm',
            LLLL: 'YYYY년 MMMM D일 dddd A h:mm',
            l: 'YYYY.MM.DD.',
            ll: 'YYYY년 MMMM D일',
            lll: 'YYYY년 MMMM D일 A h:mm',
            llll: 'YYYY년 MMMM D일 dddd A h:mm',
        },
        calendar: {
            sameDay: '오늘 LT',
            nextDay: '내일 LT',
            nextWeek: 'dddd LT',
            lastDay: '어제 LT',
            lastWeek: '지난주 dddd LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s 후',
            past: '%s 전',
            s: '몇 초',
            ss: '%d초',
            m: '1분',
            mm: '%d분',
            h: '한 시간',
            hh: '%d시간',
            d: '하루',
            dd: '%d일',
            M: '한 달',
            MM: '%d달',
            y: '일 년',
            yy: '%d년',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(일|월|주)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '일';
                case 'M':
                    return number + '월';
                case 'w':
                case 'W':
                    return number + '주';
                default:
                    return number;
            }
        },
        meridiemParse: /오전|오후/,
        isPM: function (token) {
            return token === '오후';
        },
        meridiem: function (hour, minute, isUpper) {
            return hour < 12 ? '오전' : '오후';
        },
    });

    return ko;

})));


/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kurdish [ku]
//! author : Shahram Mebashar : https://github.com/ShahramMebashar

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            '1': '١',
            '2': '٢',
            '3': '٣',
            '4': '٤',
            '5': '٥',
            '6': '٦',
            '7': '٧',
            '8': '٨',
            '9': '٩',
            '0': '٠',
        },
        numberMap = {
            '١': '1',
            '٢': '2',
            '٣': '3',
            '٤': '4',
            '٥': '5',
            '٦': '6',
            '٧': '7',
            '٨': '8',
            '٩': '9',
            '٠': '0',
        },
        months = [
            'کانونی دووەم',
            'شوبات',
            'ئازار',
            'نیسان',
            'ئایار',
            'حوزەیران',
            'تەمموز',
            'ئاب',
            'ئەیلوول',
            'تشرینی یەكەم',
            'تشرینی دووەم',
            'كانونی یەکەم',
        ];

    var ku = moment.defineLocale('ku', {
        months: months,
        monthsShort: months,
        weekdays: 'یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌'.split(
            '_'
        ),
        weekdaysShort: 'یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌'.split(
            '_'
        ),
        weekdaysMin: 'ی_د_س_چ_پ_ه_ش'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        meridiemParse: /ئێواره‌|به‌یانی/,
        isPM: function (input) {
            return /ئێواره‌/.test(input);
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'به‌یانی';
            } else {
                return 'ئێواره‌';
            }
        },
        calendar: {
            sameDay: '[ئه‌مرۆ كاتژمێر] LT',
            nextDay: '[به‌یانی كاتژمێر] LT',
            nextWeek: 'dddd [كاتژمێر] LT',
            lastDay: '[دوێنێ كاتژمێر] LT',
            lastWeek: 'dddd [كاتژمێر] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'له‌ %s',
            past: '%s',
            s: 'چه‌ند چركه‌یه‌ك',
            ss: 'چركه‌ %d',
            m: 'یه‌ك خوله‌ك',
            mm: '%d خوله‌ك',
            h: 'یه‌ك كاتژمێر',
            hh: '%d كاتژمێر',
            d: 'یه‌ك ڕۆژ',
            dd: '%d ڕۆژ',
            M: 'یه‌ك مانگ',
            MM: '%d مانگ',
            y: 'یه‌ك ساڵ',
            yy: '%d ساڵ',
        },
        preparse: function (string) {
            return string
                .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                    return numberMap[match];
                })
                .replace(/،/g, ',');
        },
        postformat: function (string) {
            return string
                .replace(/\d/g, function (match) {
                    return symbolMap[match];
                })
                .replace(/,/g, '،');
        },
        week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12, // The week that contains Jan 12th is the first week of the year.
        },
    });

    return ku;

})));


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kyrgyz [ky]
//! author : Chyngyz Arystan uulu : https://github.com/chyngyz

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var suffixes = {
        0: '-чү',
        1: '-чи',
        2: '-чи',
        3: '-чү',
        4: '-чү',
        5: '-чи',
        6: '-чы',
        7: '-чи',
        8: '-чи',
        9: '-чу',
        10: '-чу',
        20: '-чы',
        30: '-чу',
        40: '-чы',
        50: '-чү',
        60: '-чы',
        70: '-чи',
        80: '-чи',
        90: '-чу',
        100: '-чү',
    };

    var ky = moment.defineLocale('ky', {
        months: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(
            '_'
        ),
        monthsShort: 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split(
            '_'
        ),
        weekdays: 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split(
            '_'
        ),
        weekdaysShort: 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
        weekdaysMin: 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Бүгүн саат] LT',
            nextDay: '[Эртең саат] LT',
            nextWeek: 'dddd [саат] LT',
            lastDay: '[Кечээ саат] LT',
            lastWeek: '[Өткөн аптанын] dddd [күнү] [саат] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s ичинде',
            past: '%s мурун',
            s: 'бирнече секунд',
            ss: '%d секунд',
            m: 'бир мүнөт',
            mm: '%d мүнөт',
            h: 'бир саат',
            hh: '%d саат',
            d: 'бир күн',
            dd: '%d күн',
            M: 'бир ай',
            MM: '%d ай',
            y: 'бир жыл',
            yy: '%d жыл',
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
        ordinal: function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return ky;

})));


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Luxembourgish [lb]
//! author : mweimerskirch : https://github.com/mweimerskirch
//! author : David Raison : https://github.com/kwisatz

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            m: ['eng Minutt', 'enger Minutt'],
            h: ['eng Stonn', 'enger Stonn'],
            d: ['een Dag', 'engem Dag'],
            M: ['ee Mount', 'engem Mount'],
            y: ['ee Joer', 'engem Joer'],
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }
    function processFutureTime(string) {
        var number = string.substr(0, string.indexOf(' '));
        if (eifelerRegelAppliesToNumber(number)) {
            return 'a ' + string;
        }
        return 'an ' + string;
    }
    function processPastTime(string) {
        var number = string.substr(0, string.indexOf(' '));
        if (eifelerRegelAppliesToNumber(number)) {
            return 'viru ' + string;
        }
        return 'virun ' + string;
    }
    /**
     * Returns true if the word before the given number loses the '-n' ending.
     * e.g. 'an 10 Deeg' but 'a 5 Deeg'
     *
     * @param number {integer}
     * @returns {boolean}
     */
    function eifelerRegelAppliesToNumber(number) {
        number = parseInt(number, 10);
        if (isNaN(number)) {
            return false;
        }
        if (number < 0) {
            // Negative Number --> always true
            return true;
        } else if (number < 10) {
            // Only 1 digit
            if (4 <= number && number <= 7) {
                return true;
            }
            return false;
        } else if (number < 100) {
            // 2 digits
            var lastDigit = number % 10,
                firstDigit = number / 10;
            if (lastDigit === 0) {
                return eifelerRegelAppliesToNumber(firstDigit);
            }
            return eifelerRegelAppliesToNumber(lastDigit);
        } else if (number < 10000) {
            // 3 or 4 digits --> recursively check first digit
            while (number >= 10) {
                number = number / 10;
            }
            return eifelerRegelAppliesToNumber(number);
        } else {
            // Anything larger than 4 digits: recursively check first n-3 digits
            number = number / 1000;
            return eifelerRegelAppliesToNumber(number);
        }
    }

    var lb = moment.defineLocale('lb', {
        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split(
            '_'
        ),
        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split(
            '_'
        ),
        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm [Auer]',
            LTS: 'H:mm:ss [Auer]',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm [Auer]',
            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]',
        },
        calendar: {
            sameDay: '[Haut um] LT',
            sameElse: 'L',
            nextDay: '[Muer um] LT',
            nextWeek: 'dddd [um] LT',
            lastDay: '[Gëschter um] LT',
            lastWeek: function () {
                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
                switch (this.day()) {
                    case 2:
                    case 4:
                        return '[Leschten] dddd [um] LT';
                    default:
                        return '[Leschte] dddd [um] LT';
                }
            },
        },
        relativeTime: {
            future: processFutureTime,
            past: processPastTime,
            s: 'e puer Sekonnen',
            ss: '%d Sekonnen',
            m: processRelativeTime,
            mm: '%d Minutten',
            h: processRelativeTime,
            hh: '%d Stonnen',
            d: processRelativeTime,
            dd: '%d Deeg',
            M: processRelativeTime,
            MM: '%d Méint',
            y: processRelativeTime,
            yy: '%d Joer',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return lb;

})));


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Lao [lo]
//! author : Ryan Hart : https://github.com/ryanhart2

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var lo = moment.defineLocale('lo', {
        months: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(
            '_'
        ),
        monthsShort: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(
            '_'
        ),
        weekdays: 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
        weekdaysShort: 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
        weekdaysMin: 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'ວັນdddd D MMMM YYYY HH:mm',
        },
        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
        isPM: function (input) {
            return input === 'ຕອນແລງ';
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ຕອນເຊົ້າ';
            } else {
                return 'ຕອນແລງ';
            }
        },
        calendar: {
            sameDay: '[ມື້ນີ້ເວລາ] LT',
            nextDay: '[ມື້ອື່ນເວລາ] LT',
            nextWeek: '[ວັນ]dddd[ໜ້າເວລາ] LT',
            lastDay: '[ມື້ວານນີ້ເວລາ] LT',
            lastWeek: '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'ອີກ %s',
            past: '%sຜ່ານມາ',
            s: 'ບໍ່ເທົ່າໃດວິນາທີ',
            ss: '%d ວິນາທີ',
            m: '1 ນາທີ',
            mm: '%d ນາທີ',
            h: '1 ຊົ່ວໂມງ',
            hh: '%d ຊົ່ວໂມງ',
            d: '1 ມື້',
            dd: '%d ມື້',
            M: '1 ເດືອນ',
            MM: '%d ເດືອນ',
            y: '1 ປີ',
            yy: '%d ປີ',
        },
        dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
        ordinal: function (number) {
            return 'ທີ່' + number;
        },
    });

    return lo;

})));


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Lithuanian [lt]
//! author : Mindaugas Mozūras : https://github.com/mmozuras

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var units = {
        ss: 'sekundė_sekundžių_sekundes',
        m: 'minutė_minutės_minutę',
        mm: 'minutės_minučių_minutes',
        h: 'valanda_valandos_valandą',
        hh: 'valandos_valandų_valandas',
        d: 'diena_dienos_dieną',
        dd: 'dienos_dienų_dienas',
        M: 'mėnuo_mėnesio_mėnesį',
        MM: 'mėnesiai_mėnesių_mėnesius',
        y: 'metai_metų_metus',
        yy: 'metai_metų_metus',
    };
    function translateSeconds(number, withoutSuffix, key, isFuture) {
        if (withoutSuffix) {
            return 'kelios sekundės';
        } else {
            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
        }
    }
    function translateSingular(number, withoutSuffix, key, isFuture) {
        return withoutSuffix
            ? forms(key)[0]
            : isFuture
            ? forms(key)[1]
            : forms(key)[2];
    }
    function special(number) {
        return number % 10 === 0 || (number > 10 && number < 20);
    }
    function forms(key) {
        return units[key].split('_');
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        if (number === 1) {
            return (
                result + translateSingular(number, withoutSuffix, key[0], isFuture)
            );
        } else if (withoutSuffix) {
            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
        } else {
            if (isFuture) {
                return result + forms(key)[1];
            } else {
                return result + (special(number) ? forms(key)[1] : forms(key)[2]);
            }
        }
    }
    var lt = moment.defineLocale('lt', {
        months: {
            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split(
                '_'
            ),
            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split(
                '_'
            ),
            isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/,
        },
        monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
        weekdays: {
            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split(
                '_'
            ),
            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split(
                '_'
            ),
            isFormat: /dddd HH:mm/,
        },
        weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
        weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY [m.] MMMM D [d.]',
            LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
            l: 'YYYY-MM-DD',
            ll: 'YYYY [m.] MMMM D [d.]',
            lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]',
        },
        calendar: {
            sameDay: '[Šiandien] LT',
            nextDay: '[Rytoj] LT',
            nextWeek: 'dddd LT',
            lastDay: '[Vakar] LT',
            lastWeek: '[Praėjusį] dddd LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'po %s',
            past: 'prieš %s',
            s: translateSeconds,
            ss: translate,
            m: translateSingular,
            mm: translate,
            h: translateSingular,
            hh: translate,
            d: translateSingular,
            dd: translate,
            M: translateSingular,
            MM: translate,
            y: translateSingular,
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}-oji/,
        ordinal: function (number) {
            return number + '-oji';
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return lt;

})));


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Latvian [lv]
//! author : Kristaps Karlsons : https://github.com/skakri
//! author : Jānis Elmeris : https://github.com/JanisE

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var units = {
        ss: 'sekundes_sekundēm_sekunde_sekundes'.split('_'),
        m: 'minūtes_minūtēm_minūte_minūtes'.split('_'),
        mm: 'minūtes_minūtēm_minūte_minūtes'.split('_'),
        h: 'stundas_stundām_stunda_stundas'.split('_'),
        hh: 'stundas_stundām_stunda_stundas'.split('_'),
        d: 'dienas_dienām_diena_dienas'.split('_'),
        dd: 'dienas_dienām_diena_dienas'.split('_'),
        M: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
        MM: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
        y: 'gada_gadiem_gads_gadi'.split('_'),
        yy: 'gada_gadiem_gads_gadi'.split('_'),
    };
    /**
     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
     */
    function format(forms, number, withoutSuffix) {
        if (withoutSuffix) {
            // E.g. "21 minūte", "3 minūtes".
            return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
        } else {
            // E.g. "21 minūtes" as in "pēc 21 minūtes".
            // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
            return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
        }
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        return number + ' ' + format(units[key], number, withoutSuffix);
    }
    function relativeTimeWithSingular(number, withoutSuffix, key) {
        return format(units[key], number, withoutSuffix);
    }
    function relativeSeconds(number, withoutSuffix) {
        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
    }

    var lv = moment.defineLocale('lv', {
        months: 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split(
            '_'
        ),
        monthsShort: 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
        weekdays: 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split(
            '_'
        ),
        weekdaysShort: 'Sv_P_O_T_C_Pk_S'.split('_'),
        weekdaysMin: 'Sv_P_O_T_C_Pk_S'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY.',
            LL: 'YYYY. [gada] D. MMMM',
            LLL: 'YYYY. [gada] D. MMMM, HH:mm',
            LLLL: 'YYYY. [gada] D. MMMM, dddd, HH:mm',
        },
        calendar: {
            sameDay: '[Šodien pulksten] LT',
            nextDay: '[Rīt pulksten] LT',
            nextWeek: 'dddd [pulksten] LT',
            lastDay: '[Vakar pulksten] LT',
            lastWeek: '[Pagājušā] dddd [pulksten] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'pēc %s',
            past: 'pirms %s',
            s: relativeSeconds,
            ss: relativeTimeWithPlural,
            m: relativeTimeWithSingular,
            mm: relativeTimeWithPlural,
            h: relativeTimeWithSingular,
            hh: relativeTimeWithPlural,
            d: relativeTimeWithSingular,
            dd: relativeTimeWithPlural,
            M: relativeTimeWithSingular,
            MM: relativeTimeWithPlural,
            y: relativeTimeWithSingular,
            yy: relativeTimeWithPlural,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return lv;

})));


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Montenegrin [me]
//! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var translator = {
        words: {
            //Different grammatical cases
            ss: ['sekund', 'sekunda', 'sekundi'],
            m: ['jedan minut', 'jednog minuta'],
            mm: ['minut', 'minuta', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mjesec', 'mjeseca', 'mjeseci'],
            yy: ['godina', 'godine', 'godina'],
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1
                ? wordKey[0]
                : number >= 2 && number <= 4
                ? wordKey[1]
                : wordKey[2];
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return (
                    number +
                    ' ' +
                    translator.correctGrammaticalCase(number, wordKey)
                );
            }
        },
    };

    var me = moment.defineLocale('me', {
        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(
            '_'
        ),
        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
            '_'
        ),
        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm',
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sjutra u] LT',

            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay: '[juče u] LT',
            lastWeek: function () {
                var lastWeekDays = [
                    '[prošle] [nedjelje] [u] LT',
                    '[prošlog] [ponedjeljka] [u] LT',
                    '[prošlog] [utorka] [u] LT',
                    '[prošle] [srijede] [u] LT',
                    '[prošlog] [četvrtka] [u] LT',
                    '[prošlog] [petka] [u] LT',
                    '[prošle] [subote] [u] LT',
                ];
                return lastWeekDays[this.day()];
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'za %s',
            past: 'prije %s',
            s: 'nekoliko sekundi',
            ss: translator.translate,
            m: translator.translate,
            mm: translator.translate,
            h: translator.translate,
            hh: translator.translate,
            d: 'dan',
            dd: translator.translate,
            M: 'mjesec',
            MM: translator.translate,
            y: 'godinu',
            yy: translator.translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return me;

})));


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Maori [mi]
//! author : John Corrigan <robbiecloset@gmail.com> : https://github.com/johnideal

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var mi = moment.defineLocale('mi', {
        months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split(
            '_'
        ),
        monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split(
            '_'
        ),
        monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
        weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
        weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
        weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [i] HH:mm',
            LLLL: 'dddd, D MMMM YYYY [i] HH:mm',
        },
        calendar: {
            sameDay: '[i teie mahana, i] LT',
            nextDay: '[apopo i] LT',
            nextWeek: 'dddd [i] LT',
            lastDay: '[inanahi i] LT',
            lastWeek: 'dddd [whakamutunga i] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'i roto i %s',
            past: '%s i mua',
            s: 'te hēkona ruarua',
            ss: '%d hēkona',
            m: 'he meneti',
            mm: '%d meneti',
            h: 'te haora',
            hh: '%d haora',
            d: 'he ra',
            dd: '%d ra',
            M: 'he marama',
            MM: '%d marama',
            y: 'he tau',
            yy: '%d tau',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return mi;

})));


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Macedonian [mk]
//! author : Borislav Mickov : https://github.com/B0k0
//! author : Sashko Todorov : https://github.com/bkyceh

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var mk = moment.defineLocale('mk', {
        months: 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split(
            '_'
        ),
        monthsShort: 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
        weekdays: 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split(
            '_'
        ),
        weekdaysShort: 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
        weekdaysMin: 'нe_пo_вт_ср_че_пе_сa'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'D.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY H:mm',
            LLLL: 'dddd, D MMMM YYYY H:mm',
        },
        calendar: {
            sameDay: '[Денес во] LT',
            nextDay: '[Утре во] LT',
            nextWeek: '[Во] dddd [во] LT',
            lastDay: '[Вчера во] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 6:
                        return '[Изминатата] dddd [во] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[Изминатиот] dddd [во] LT';
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'за %s',
            past: 'пред %s',
            s: 'неколку секунди',
            ss: '%d секунди',
            m: 'една минута',
            mm: '%d минути',
            h: 'еден час',
            hh: '%d часа',
            d: 'еден ден',
            dd: '%d дена',
            M: 'еден месец',
            MM: '%d месеци',
            y: 'една година',
            yy: '%d години',
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal: function (number) {
            var lastDigit = number % 10,
                last2Digits = number % 100;
            if (number === 0) {
                return number + '-ев';
            } else if (last2Digits === 0) {
                return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
                return number + '-ти';
            } else if (lastDigit === 1) {
                return number + '-ви';
            } else if (lastDigit === 2) {
                return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
                return number + '-ми';
            } else {
                return number + '-ти';
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return mk;

})));


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Malayalam [ml]
//! author : Floyd Pink : https://github.com/floydpink

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var ml = moment.defineLocale('ml', {
        months: 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split(
            '_'
        ),
        monthsShort: 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split(
            '_'
        ),
        weekdaysShort: 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
        weekdaysMin: 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
        longDateFormat: {
            LT: 'A h:mm -നു',
            LTS: 'A h:mm:ss -നു',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm -നു',
            LLLL: 'dddd, D MMMM YYYY, A h:mm -നു',
        },
        calendar: {
            sameDay: '[ഇന്ന്] LT',
            nextDay: '[നാളെ] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[ഇന്നലെ] LT',
            lastWeek: '[കഴിഞ്ഞ] dddd, LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s കഴിഞ്ഞ്',
            past: '%s മുൻപ്',
            s: 'അൽപ നിമിഷങ്ങൾ',
            ss: '%d സെക്കൻഡ്',
            m: 'ഒരു മിനിറ്റ്',
            mm: '%d മിനിറ്റ്',
            h: 'ഒരു മണിക്കൂർ',
            hh: '%d മണിക്കൂർ',
            d: 'ഒരു ദിവസം',
            dd: '%d ദിവസം',
            M: 'ഒരു മാസം',
            MM: '%d മാസം',
            y: 'ഒരു വർഷം',
            yy: '%d വർഷം',
        },
        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (
                (meridiem === 'രാത്രി' && hour >= 4) ||
                meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
                meridiem === 'വൈകുന്നേരം'
            ) {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'രാത്രി';
            } else if (hour < 12) {
                return 'രാവിലെ';
            } else if (hour < 17) {
                return 'ഉച്ച കഴിഞ്ഞ്';
            } else if (hour < 20) {
                return 'വൈകുന്നേരം';
            } else {
                return 'രാത്രി';
            }
        },
    });

    return ml;

})));


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Mongolian [mn]
//! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function translate(number, withoutSuffix, key, isFuture) {
        switch (key) {
            case 's':
                return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';
            case 'ss':
                return number + (withoutSuffix ? ' секунд' : ' секундын');
            case 'm':
            case 'mm':
                return number + (withoutSuffix ? ' минут' : ' минутын');
            case 'h':
            case 'hh':
                return number + (withoutSuffix ? ' цаг' : ' цагийн');
            case 'd':
            case 'dd':
                return number + (withoutSuffix ? ' өдөр' : ' өдрийн');
            case 'M':
            case 'MM':
                return number + (withoutSuffix ? ' сар' : ' сарын');
            case 'y':
            case 'yy':
                return number + (withoutSuffix ? ' жил' : ' жилийн');
            default:
                return number;
        }
    }

    var mn = moment.defineLocale('mn', {
        months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split(
            '_'
        ),
        monthsShort: '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),
        weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),
        weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY оны MMMMын D',
            LLL: 'YYYY оны MMMMын D HH:mm',
            LLLL: 'dddd, YYYY оны MMMMын D HH:mm',
        },
        meridiemParse: /ҮӨ|ҮХ/i,
        isPM: function (input) {
            return input === 'ҮХ';
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ҮӨ';
            } else {
                return 'ҮХ';
            }
        },
        calendar: {
            sameDay: '[Өнөөдөр] LT',
            nextDay: '[Маргааш] LT',
            nextWeek: '[Ирэх] dddd LT',
            lastDay: '[Өчигдөр] LT',
            lastWeek: '[Өнгөрсөн] dddd LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s дараа',
            past: '%s өмнө',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2} өдөр/,
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + ' өдөр';
                default:
                    return number;
            }
        },
    });

    return mn;

})));


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Marathi [mr]
//! author : Harshad Kale : https://github.com/kalehv
//! author : Vivek Athalye : https://github.com/vnathalye

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            '1': '१',
            '2': '२',
            '3': '३',
            '4': '४',
            '5': '५',
            '6': '६',
            '7': '७',
            '8': '८',
            '9': '९',
            '0': '०',
        },
        numberMap = {
            '१': '1',
            '२': '2',
            '३': '3',
            '४': '4',
            '५': '5',
            '६': '6',
            '७': '7',
            '८': '8',
            '९': '9',
            '०': '0',
        };

    function relativeTimeMr(number, withoutSuffix, string, isFuture) {
        var output = '';
        if (withoutSuffix) {
            switch (string) {
                case 's':
                    output = 'काही सेकंद';
                    break;
                case 'ss':
                    output = '%d सेकंद';
                    break;
                case 'm':
                    output = 'एक मिनिट';
                    break;
                case 'mm':
                    output = '%d मिनिटे';
                    break;
                case 'h':
                    output = 'एक तास';
                    break;
                case 'hh':
                    output = '%d तास';
                    break;
                case 'd':
                    output = 'एक दिवस';
                    break;
                case 'dd':
                    output = '%d दिवस';
                    break;
                case 'M':
                    output = 'एक महिना';
                    break;
                case 'MM':
                    output = '%d महिने';
                    break;
                case 'y':
                    output = 'एक वर्ष';
                    break;
                case 'yy':
                    output = '%d वर्षे';
                    break;
            }
        } else {
            switch (string) {
                case 's':
                    output = 'काही सेकंदां';
                    break;
                case 'ss':
                    output = '%d सेकंदां';
                    break;
                case 'm':
                    output = 'एका मिनिटा';
                    break;
                case 'mm':
                    output = '%d मिनिटां';
                    break;
                case 'h':
                    output = 'एका तासा';
                    break;
                case 'hh':
                    output = '%d तासां';
                    break;
                case 'd':
                    output = 'एका दिवसा';
                    break;
                case 'dd':
                    output = '%d दिवसां';
                    break;
                case 'M':
                    output = 'एका महिन्या';
                    break;
                case 'MM':
                    output = '%d महिन्यां';
                    break;
                case 'y':
                    output = 'एका वर्षा';
                    break;
                case 'yy':
                    output = '%d वर्षां';
                    break;
            }
        }
        return output.replace(/%d/i, number);
    }

    var mr = moment.defineLocale('mr', {
        months: 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(
            '_'
        ),
        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
        weekdaysShort: 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
        weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
        longDateFormat: {
            LT: 'A h:mm वाजता',
            LTS: 'A h:mm:ss वाजता',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm वाजता',
            LLLL: 'dddd, D MMMM YYYY, A h:mm वाजता',
        },
        calendar: {
            sameDay: '[आज] LT',
            nextDay: '[उद्या] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[काल] LT',
            lastWeek: '[मागील] dddd, LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%sमध्ये',
            past: '%sपूर्वी',
            s: relativeTimeMr,
            ss: relativeTimeMr,
            m: relativeTimeMr,
            mm: relativeTimeMr,
            h: relativeTimeMr,
            hh: relativeTimeMr,
            d: relativeTimeMr,
            dd: relativeTimeMr,
            M: relativeTimeMr,
            MM: relativeTimeMr,
            y: relativeTimeMr,
            yy: relativeTimeMr,
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /पहाटे|सकाळी|दुपारी|सायंकाळी|रात्री/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'पहाटे' || meridiem === 'सकाळी') {
                return hour;
            } else if (
                meridiem === 'दुपारी' ||
                meridiem === 'सायंकाळी' ||
                meridiem === 'रात्री'
            ) {
                return hour >= 12 ? hour : hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour >= 0 && hour < 6) {
                return 'पहाटे';
            } else if (hour < 12) {
                return 'सकाळी';
            } else if (hour < 17) {
                return 'दुपारी';
            } else if (hour < 20) {
                return 'सायंकाळी';
            } else {
                return 'रात्री';
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return mr;

})));


/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Malay [ms]
//! author : Weldan Jamili : https://github.com/weldan

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var ms = moment.defineLocale('ms', {
        months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
        weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
        weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
        weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [pukul] HH.mm',
            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'tengahari') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem: function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'tengahari';
            } else if (hours < 19) {
                return 'petang';
            } else {
                return 'malam';
            }
        },
        calendar: {
            sameDay: '[Hari ini pukul] LT',
            nextDay: '[Esok pukul] LT',
            nextWeek: 'dddd [pukul] LT',
            lastDay: '[Kelmarin pukul] LT',
            lastWeek: 'dddd [lepas pukul] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'dalam %s',
            past: '%s yang lepas',
            s: 'beberapa saat',
            ss: '%d saat',
            m: 'seminit',
            mm: '%d minit',
            h: 'sejam',
            hh: '%d jam',
            d: 'sehari',
            dd: '%d hari',
            M: 'sebulan',
            MM: '%d bulan',
            y: 'setahun',
            yy: '%d tahun',
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return ms;

})));


/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Malay [ms-my]
//! note : DEPRECATED, the correct one is [ms]
//! author : Weldan Jamili : https://github.com/weldan

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var msMy = moment.defineLocale('ms-my', {
        months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
        weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
        weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
        weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [pukul] HH.mm',
            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'tengahari') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem: function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'tengahari';
            } else if (hours < 19) {
                return 'petang';
            } else {
                return 'malam';
            }
        },
        calendar: {
            sameDay: '[Hari ini pukul] LT',
            nextDay: '[Esok pukul] LT',
            nextWeek: 'dddd [pukul] LT',
            lastDay: '[Kelmarin pukul] LT',
            lastWeek: 'dddd [lepas pukul] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'dalam %s',
            past: '%s yang lepas',
            s: 'beberapa saat',
            ss: '%d saat',
            m: 'seminit',
            mm: '%d minit',
            h: 'sejam',
            hh: '%d jam',
            d: 'sehari',
            dd: '%d hari',
            M: 'sebulan',
            MM: '%d bulan',
            y: 'setahun',
            yy: '%d tahun',
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return msMy;

})));


/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Maltese (Malta) [mt]
//! author : Alessandro Maruccia : https://github.com/alesma

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var mt = moment.defineLocale('mt', {
        months: 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split(
            '_'
        ),
        monthsShort: 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),
        weekdays: 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split(
            '_'
        ),
        weekdaysShort: 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),
        weekdaysMin: 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Illum fil-]LT',
            nextDay: '[Għada fil-]LT',
            nextWeek: 'dddd [fil-]LT',
            lastDay: '[Il-bieraħ fil-]LT',
            lastWeek: 'dddd [li għadda] [fil-]LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'f’ %s',
            past: '%s ilu',
            s: 'ftit sekondi',
            ss: '%d sekondi',
            m: 'minuta',
            mm: '%d minuti',
            h: 'siegħa',
            hh: '%d siegħat',
            d: 'ġurnata',
            dd: '%d ġranet',
            M: 'xahar',
            MM: '%d xhur',
            y: 'sena',
            yy: '%d sni',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return mt;

})));


/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Burmese [my]
//! author : Squar team, mysquar.com
//! author : David Rossellat : https://github.com/gholadr
//! author : Tin Aung Lin : https://github.com/thanyawzinmin

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            '1': '၁',
            '2': '၂',
            '3': '၃',
            '4': '၄',
            '5': '၅',
            '6': '၆',
            '7': '၇',
            '8': '၈',
            '9': '၉',
            '0': '၀',
        },
        numberMap = {
            '၁': '1',
            '၂': '2',
            '၃': '3',
            '၄': '4',
            '၅': '5',
            '၆': '6',
            '၇': '7',
            '၈': '8',
            '၉': '9',
            '၀': '0',
        };

    var my = moment.defineLocale('my', {
        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split(
            '_'
        ),
        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split(
            '_'
        ),
        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[ယနေ.] LT [မှာ]',
            nextDay: '[မနက်ဖြန်] LT [မှာ]',
            nextWeek: 'dddd LT [မှာ]',
            lastDay: '[မနေ.က] LT [မှာ]',
            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'လာမည့် %s မှာ',
            past: 'လွန်ခဲ့သော %s က',
            s: 'စက္ကန်.အနည်းငယ်',
            ss: '%d စက္ကန့်',
            m: 'တစ်မိနစ်',
            mm: '%d မိနစ်',
            h: 'တစ်နာရီ',
            hh: '%d နာရီ',
            d: 'တစ်ရက်',
            dd: '%d ရက်',
            M: 'တစ်လ',
            MM: '%d လ',
            y: 'တစ်နှစ်',
            yy: '%d နှစ်',
        },
        preparse: function (string) {
            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return my;

})));


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Norwegian Bokmål [nb]
//! authors : Espen Hovlandsdal : https://github.com/rexxars
//!           Sigurd Gartmann : https://github.com/sigurdga
//!           Stephen Ramthun : https://github.com/stephenramthun

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var nb = moment.defineLocale('nb', {
        months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(
            '_'
        ),
        monthsShort: 'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
        weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),
        weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY [kl.] HH:mm',
            LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm',
        },
        calendar: {
            sameDay: '[i dag kl.] LT',
            nextDay: '[i morgen kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[i går kl.] LT',
            lastWeek: '[forrige] dddd [kl.] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'om %s',
            past: '%s siden',
            s: 'noen sekunder',
            ss: '%d sekunder',
            m: 'ett minutt',
            mm: '%d minutter',
            h: 'en time',
            hh: '%d timer',
            d: 'en dag',
            dd: '%d dager',
            M: 'en måned',
            MM: '%d måneder',
            y: 'ett år',
            yy: '%d år',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return nb;

})));


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Nepalese [ne]
//! author : suvash : https://github.com/suvash

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            '1': '१',
            '2': '२',
            '3': '३',
            '4': '४',
            '5': '५',
            '6': '६',
            '7': '७',
            '8': '८',
            '9': '९',
            '0': '०',
        },
        numberMap = {
            '१': '1',
            '२': '2',
            '३': '3',
            '४': '4',
            '५': '5',
            '६': '6',
            '७': '7',
            '८': '8',
            '९': '9',
            '०': '0',
        };

    var ne = moment.defineLocale('ne', {
        months: 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split(
            '_'
        ),
        monthsShort: 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split(
            '_'
        ),
        weekdaysShort: 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
        weekdaysMin: 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'Aको h:mm बजे',
            LTS: 'Aको h:mm:ss बजे',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, Aको h:mm बजे',
            LLLL: 'dddd, D MMMM YYYY, Aको h:mm बजे',
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'राति') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'बिहान') {
                return hour;
            } else if (meridiem === 'दिउँसो') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'साँझ') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 3) {
                return 'राति';
            } else if (hour < 12) {
                return 'बिहान';
            } else if (hour < 16) {
                return 'दिउँसो';
            } else if (hour < 20) {
                return 'साँझ';
            } else {
                return 'राति';
            }
        },
        calendar: {
            sameDay: '[आज] LT',
            nextDay: '[भोलि] LT',
            nextWeek: '[आउँदो] dddd[,] LT',
            lastDay: '[हिजो] LT',
            lastWeek: '[गएको] dddd[,] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%sमा',
            past: '%s अगाडि',
            s: 'केही क्षण',
            ss: '%d सेकेण्ड',
            m: 'एक मिनेट',
            mm: '%d मिनेट',
            h: 'एक घण्टा',
            hh: '%d घण्टा',
            d: 'एक दिन',
            dd: '%d दिन',
            M: 'एक महिना',
            MM: '%d महिना',
            y: 'एक बर्ष',
            yy: '%d बर्ष',
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return ne;

})));


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Dutch [nl]
//! author : Joris Röling : https://github.com/jorisroling
//! author : Jacob Middag : https://github.com/middagj

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split(
            '_'
        ),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split(
            '_'
        ),
        monthsParse = [
            /^jan/i,
            /^feb/i,
            /^maart|mrt.?$/i,
            /^apr/i,
            /^mei$/i,
            /^jun[i.]?$/i,
            /^jul[i.]?$/i,
            /^aug/i,
            /^sep/i,
            /^okt/i,
            /^nov/i,
            /^dec/i,
        ],
        monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

    var nl = moment.defineLocale('nl', {
        months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(
            '_'
        ),
        monthsShort: function (m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },

        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,

        weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split(
            '_'
        ),
        weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),
        weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD-MM-YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'over %s',
            past: '%s geleden',
            s: 'een paar seconden',
            ss: '%d seconden',
            m: 'één minuut',
            mm: '%d minuten',
            h: 'één uur',
            hh: '%d uur',
            d: 'één dag',
            dd: '%d dagen',
            M: 'één maand',
            MM: '%d maanden',
            y: 'één jaar',
            yy: '%d jaar',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal: function (number) {
            return (
                number +
                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')
            );
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return nl;

})));


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Dutch (Belgium) [nl-be]
//! author : Joris Röling : https://github.com/jorisroling
//! author : Jacob Middag : https://github.com/middagj

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split(
            '_'
        ),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split(
            '_'
        ),
        monthsParse = [
            /^jan/i,
            /^feb/i,
            /^maart|mrt.?$/i,
            /^apr/i,
            /^mei$/i,
            /^jun[i.]?$/i,
            /^jul[i.]?$/i,
            /^aug/i,
            /^sep/i,
            /^okt/i,
            /^nov/i,
            /^dec/i,
        ],
        monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

    var nlBe = moment.defineLocale('nl-be', {
        months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(
            '_'
        ),
        monthsShort: function (m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },

        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,

        weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split(
            '_'
        ),
        weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),
        weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'over %s',
            past: '%s geleden',
            s: 'een paar seconden',
            ss: '%d seconden',
            m: 'één minuut',
            mm: '%d minuten',
            h: 'één uur',
            hh: '%d uur',
            d: 'één dag',
            dd: '%d dagen',
            M: 'één maand',
            MM: '%d maanden',
            y: 'één jaar',
            yy: '%d jaar',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal: function (number) {
            return (
                number +
                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')
            );
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return nlBe;

})));


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Nynorsk [nn]
//! authors : https://github.com/mechuwind
//!           Stephen Ramthun : https://github.com/stephenramthun

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var nn = moment.defineLocale('nn', {
        months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(
            '_'
        ),
        monthsShort: 'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
        weekdaysShort: 'su._må._ty._on._to._fr._lau.'.split('_'),
        weekdaysMin: 'su_må_ty_on_to_fr_la'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY [kl.] H:mm',
            LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm',
        },
        calendar: {
            sameDay: '[I dag klokka] LT',
            nextDay: '[I morgon klokka] LT',
            nextWeek: 'dddd [klokka] LT',
            lastDay: '[I går klokka] LT',
            lastWeek: '[Føregåande] dddd [klokka] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'om %s',
            past: '%s sidan',
            s: 'nokre sekund',
            ss: '%d sekund',
            m: 'eit minutt',
            mm: '%d minutt',
            h: 'ein time',
            hh: '%d timar',
            d: 'ein dag',
            dd: '%d dagar',
            M: 'ein månad',
            MM: '%d månader',
            y: 'eit år',
            yy: '%d år',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return nn;

})));


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Occitan, lengadocian dialecte [oc-lnc]
//! author : Quentin PAGÈS : https://github.com/Quenty31

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var ocLnc = moment.defineLocale('oc-lnc', {
        months: {
            standalone: 'genièr_febrièr_març_abril_mai_junh_julhet_agost_setembre_octòbre_novembre_decembre'.split(
                '_'
            ),
            format: "de genièr_de febrièr_de març_d'abril_de mai_de junh_de julhet_d'agost_de setembre_d'octòbre_de novembre_de decembre".split(
                '_'
            ),
            isFormat: /D[oD]?(\s)+MMMM/,
        },
        monthsShort: 'gen._febr._març_abr._mai_junh_julh._ago._set._oct._nov._dec.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'dimenge_diluns_dimars_dimècres_dijòus_divendres_dissabte'.split(
            '_'
        ),
        weekdaysShort: 'dg._dl._dm._dc._dj._dv._ds.'.split('_'),
        weekdaysMin: 'dg_dl_dm_dc_dj_dv_ds'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM [de] YYYY',
            ll: 'D MMM YYYY',
            LLL: 'D MMMM [de] YYYY [a] H:mm',
            lll: 'D MMM YYYY, H:mm',
            LLLL: 'dddd D MMMM [de] YYYY [a] H:mm',
            llll: 'ddd D MMM YYYY, H:mm',
        },
        calendar: {
            sameDay: '[uèi a] LT',
            nextDay: '[deman a] LT',
            nextWeek: 'dddd [a] LT',
            lastDay: '[ièr a] LT',
            lastWeek: 'dddd [passat a] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: "d'aquí %s",
            past: 'fa %s',
            s: 'unas segondas',
            ss: '%d segondas',
            m: 'una minuta',
            mm: '%d minutas',
            h: 'una ora',
            hh: '%d oras',
            d: 'un jorn',
            dd: '%d jorns',
            M: 'un mes',
            MM: '%d meses',
            y: 'un an',
            yy: '%d ans',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
        ordinal: function (number, period) {
            var output =
                number === 1
                    ? 'r'
                    : number === 2
                    ? 'n'
                    : number === 3
                    ? 'r'
                    : number === 4
                    ? 't'
                    : 'è';
            if (period === 'w' || period === 'W') {
                output = 'a';
            }
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4,
        },
    });

    return ocLnc;

})));


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Punjabi (India) [pa-in]
//! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            '1': '੧',
            '2': '੨',
            '3': '੩',
            '4': '੪',
            '5': '੫',
            '6': '੬',
            '7': '੭',
            '8': '੮',
            '9': '੯',
            '0': '੦',
        },
        numberMap = {
            '੧': '1',
            '੨': '2',
            '੩': '3',
            '੪': '4',
            '੫': '5',
            '੬': '6',
            '੭': '7',
            '੮': '8',
            '੯': '9',
            '੦': '0',
        };

    var paIn = moment.defineLocale('pa-in', {
        // There are months name as per Nanakshahi Calendar but they are not used as rigidly in modern Punjabi.
        months: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(
            '_'
        ),
        monthsShort: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(
            '_'
        ),
        weekdays: 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split(
            '_'
        ),
        weekdaysShort: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
        weekdaysMin: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
        longDateFormat: {
            LT: 'A h:mm ਵਜੇ',
            LTS: 'A h:mm:ss ਵਜੇ',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm ਵਜੇ',
            LLLL: 'dddd, D MMMM YYYY, A h:mm ਵਜੇ',
        },
        calendar: {
            sameDay: '[ਅਜ] LT',
            nextDay: '[ਕਲ] LT',
            nextWeek: '[ਅਗਲਾ] dddd, LT',
            lastDay: '[ਕਲ] LT',
            lastWeek: '[ਪਿਛਲੇ] dddd, LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s ਵਿੱਚ',
            past: '%s ਪਿਛਲੇ',
            s: 'ਕੁਝ ਸਕਿੰਟ',
            ss: '%d ਸਕਿੰਟ',
            m: 'ਇਕ ਮਿੰਟ',
            mm: '%d ਮਿੰਟ',
            h: 'ਇੱਕ ਘੰਟਾ',
            hh: '%d ਘੰਟੇ',
            d: 'ਇੱਕ ਦਿਨ',
            dd: '%d ਦਿਨ',
            M: 'ਇੱਕ ਮਹੀਨਾ',
            MM: '%d ਮਹੀਨੇ',
            y: 'ਇੱਕ ਸਾਲ',
            yy: '%d ਸਾਲ',
        },
        preparse: function (string) {
            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ਰਾਤ') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ਸਵੇਰ') {
                return hour;
            } else if (meridiem === 'ਦੁਪਹਿਰ') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'ਸ਼ਾਮ') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ਰਾਤ';
            } else if (hour < 10) {
                return 'ਸਵੇਰ';
            } else if (hour < 17) {
                return 'ਦੁਪਹਿਰ';
            } else if (hour < 20) {
                return 'ਸ਼ਾਮ';
            } else {
                return 'ਰਾਤ';
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return paIn;

})));


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Polish [pl]
//! author : Rafal Hirsz : https://github.com/evoL

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split(
            '_'
        ),
        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split(
            '_'
        );
    function plural(n) {
        return n % 10 < 5 && n % 10 > 1 && ~~(n / 10) % 10 !== 1;
    }
    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                return result + (plural(number) ? 'sekundy' : 'sekund');
            case 'm':
                return withoutSuffix ? 'minuta' : 'minutę';
            case 'mm':
                return result + (plural(number) ? 'minuty' : 'minut');
            case 'h':
                return withoutSuffix ? 'godzina' : 'godzinę';
            case 'hh':
                return result + (plural(number) ? 'godziny' : 'godzin');
            case 'MM':
                return result + (plural(number) ? 'miesiące' : 'miesięcy');
            case 'yy':
                return result + (plural(number) ? 'lata' : 'lat');
        }
    }

    var pl = moment.defineLocale('pl', {
        months: function (momentToFormat, format) {
            if (!momentToFormat) {
                return monthsNominative;
            } else if (format === '') {
                // Hack: if format empty we know this is used to generate
                // RegExp by moment. Give then back both valid forms of months
                // in RegExp ready format.
                return (
                    '(' +
                    monthsSubjective[momentToFormat.month()] +
                    '|' +
                    monthsNominative[momentToFormat.month()] +
                    ')'
                );
            } else if (/D MMMM/.test(format)) {
                return monthsSubjective[momentToFormat.month()];
            } else {
                return monthsNominative[momentToFormat.month()];
            }
        },
        monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
        weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split(
            '_'
        ),
        weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
        weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Dziś o] LT',
            nextDay: '[Jutro o] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[W niedzielę o] LT';

                    case 2:
                        return '[We wtorek o] LT';

                    case 3:
                        return '[W środę o] LT';

                    case 6:
                        return '[W sobotę o] LT';

                    default:
                        return '[W] dddd [o] LT';
                }
            },
            lastDay: '[Wczoraj o] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[W zeszłą niedzielę o] LT';
                    case 3:
                        return '[W zeszłą środę o] LT';
                    case 6:
                        return '[W zeszłą sobotę o] LT';
                    default:
                        return '[W zeszły] dddd [o] LT';
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'za %s',
            past: '%s temu',
            s: 'kilka sekund',
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: '1 dzień',
            dd: '%d dni',
            M: 'miesiąc',
            MM: translate,
            y: 'rok',
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return pl;

})));


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Portuguese [pt]
//! author : Jefferson : https://github.com/jalex79

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var pt = moment.defineLocale('pt', {
        months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split(
            '_'
        ),
        monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
        weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split(
            '_'
        ),
        weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
        weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY HH:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function () {
                return this.day() === 0 || this.day() === 6
                    ? '[Último] dddd [às] LT' // Saturday + Sunday
                    : '[Última] dddd [às] LT'; // Monday - Friday
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'em %s',
            past: 'há %s',
            s: 'segundos',
            ss: '%d segundos',
            m: 'um minuto',
            mm: '%d minutos',
            h: 'uma hora',
            hh: '%d horas',
            d: 'um dia',
            dd: '%d dias',
            M: 'um mês',
            MM: '%d meses',
            y: 'um ano',
            yy: '%d anos',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return pt;

})));


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Portuguese (Brazil) [pt-br]
//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var ptBr = moment.defineLocale('pt-br', {
        months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split(
            '_'
        ),
        monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
        weekdays: 'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split(
            '_'
        ),
        weekdaysShort: 'dom_seg_ter_qua_qui_sex_sáb'.split('_'),
        weekdaysMin: 'do_2ª_3ª_4ª_5ª_6ª_sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm',
        },
        calendar: {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function () {
                return this.day() === 0 || this.day() === 6
                    ? '[Último] dddd [às] LT' // Saturday + Sunday
                    : '[Última] dddd [às] LT'; // Monday - Friday
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'em %s',
            past: 'há %s',
            s: 'poucos segundos',
            ss: '%d segundos',
            m: 'um minuto',
            mm: '%d minutos',
            h: 'uma hora',
            hh: '%d horas',
            d: 'um dia',
            dd: '%d dias',
            M: 'um mês',
            MM: '%d meses',
            y: 'um ano',
            yy: '%d anos',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
    });

    return ptBr;

})));


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Romanian [ro]
//! author : Vlad Gurdiga : https://github.com/gurdiga
//! author : Valentin Agachi : https://github.com/avaly
//! author : Emanuel Cepoi : https://github.com/cepem

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
                ss: 'secunde',
                mm: 'minute',
                hh: 'ore',
                dd: 'zile',
                MM: 'luni',
                yy: 'ani',
            },
            separator = ' ';
        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
            separator = ' de ';
        }
        return number + separator + format[key];
    }

    var ro = moment.defineLocale('ro', {
        months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split(
            '_'
        ),
        monthsShort: 'ian._feb._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
        weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
        weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY H:mm',
            LLLL: 'dddd, D MMMM YYYY H:mm',
        },
        calendar: {
            sameDay: '[azi la] LT',
            nextDay: '[mâine la] LT',
            nextWeek: 'dddd [la] LT',
            lastDay: '[ieri la] LT',
            lastWeek: '[fosta] dddd [la] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'peste %s',
            past: '%s în urmă',
            s: 'câteva secunde',
            ss: relativeTimeWithPlural,
            m: 'un minut',
            mm: relativeTimeWithPlural,
            h: 'o oră',
            hh: relativeTimeWithPlural,
            d: 'o zi',
            dd: relativeTimeWithPlural,
            M: 'o lună',
            MM: relativeTimeWithPlural,
            y: 'un an',
            yy: relativeTimeWithPlural,
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return ro;

})));


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Russian [ru]
//! author : Viktorminator : https://github.com/Viktorminator
//! author : Menelion Elensúle : https://github.com/Oire
//! author : Коренберг Марк : https://github.com/socketpair

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11
            ? forms[0]
            : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)
            ? forms[1]
            : forms[2];
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
            mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
            hh: 'час_часа_часов',
            dd: 'день_дня_дней',
            MM: 'месяц_месяца_месяцев',
            yy: 'год_года_лет',
        };
        if (key === 'm') {
            return withoutSuffix ? 'минута' : 'минуту';
        } else {
            return number + ' ' + plural(format[key], +number);
        }
    }
    var monthsParse = [
        /^янв/i,
        /^фев/i,
        /^мар/i,
        /^апр/i,
        /^ма[йя]/i,
        /^июн/i,
        /^июл/i,
        /^авг/i,
        /^сен/i,
        /^окт/i,
        /^ноя/i,
        /^дек/i,
    ];

    // http://new.gramota.ru/spravka/rules/139-prop : § 103
    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
    var ru = moment.defineLocale('ru', {
        months: {
            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split(
                '_'
            ),
            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(
                '_'
            ),
        },
        monthsShort: {
            // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку?
            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split(
                '_'
            ),
            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split(
                '_'
            ),
        },
        weekdays: {
            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split(
                '_'
            ),
            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split(
                '_'
            ),
            isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?] ?dddd/,
        },
        weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
        weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,

        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
        monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

        // копия предыдущего
        monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

        // полные названия с падежами
        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,

        // Выражение, которое соответствует только сокращённым формам
        monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY г.',
            LLL: 'D MMMM YYYY г., H:mm',
            LLLL: 'dddd, D MMMM YYYY г., H:mm',
        },
        calendar: {
            sameDay: '[Сегодня, в] LT',
            nextDay: '[Завтра, в] LT',
            lastDay: '[Вчера, в] LT',
            nextWeek: function (now) {
                if (now.week() !== this.week()) {
                    switch (this.day()) {
                        case 0:
                            return '[В следующее] dddd, [в] LT';
                        case 1:
                        case 2:
                        case 4:
                            return '[В следующий] dddd, [в] LT';
                        case 3:
                        case 5:
                        case 6:
                            return '[В следующую] dddd, [в] LT';
                    }
                } else {
                    if (this.day() === 2) {
                        return '[Во] dddd, [в] LT';
                    } else {
                        return '[В] dddd, [в] LT';
                    }
                }
            },
            lastWeek: function (now) {
                if (now.week() !== this.week()) {
                    switch (this.day()) {
                        case 0:
                            return '[В прошлое] dddd, [в] LT';
                        case 1:
                        case 2:
                        case 4:
                            return '[В прошлый] dddd, [в] LT';
                        case 3:
                        case 5:
                        case 6:
                            return '[В прошлую] dddd, [в] LT';
                    }
                } else {
                    if (this.day() === 2) {
                        return '[Во] dddd, [в] LT';
                    } else {
                        return '[В] dddd, [в] LT';
                    }
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'через %s',
            past: '%s назад',
            s: 'несколько секунд',
            ss: relativeTimeWithPlural,
            m: relativeTimeWithPlural,
            mm: relativeTimeWithPlural,
            h: 'час',
            hh: relativeTimeWithPlural,
            d: 'день',
            dd: relativeTimeWithPlural,
            M: 'месяц',
            MM: relativeTimeWithPlural,
            y: 'год',
            yy: relativeTimeWithPlural,
        },
        meridiemParse: /ночи|утра|дня|вечера/i,
        isPM: function (input) {
            return /^(дня|вечера)$/.test(input);
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночи';
            } else if (hour < 12) {
                return 'утра';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечера';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                    return number + '-й';
                case 'D':
                    return number + '-го';
                case 'w':
                case 'W':
                    return number + '-я';
                default:
                    return number;
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return ru;

})));


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Sindhi [sd]
//! author : Narain Sagar : https://github.com/narainsagar

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var months = [
            'جنوري',
            'فيبروري',
            'مارچ',
            'اپريل',
            'مئي',
            'جون',
            'جولاءِ',
            'آگسٽ',
            'سيپٽمبر',
            'آڪٽوبر',
            'نومبر',
            'ڊسمبر',
        ],
        days = ['آچر', 'سومر', 'اڱارو', 'اربع', 'خميس', 'جمع', 'ڇنڇر'];

    var sd = moment.defineLocale('sd', {
        months: months,
        monthsShort: months,
        weekdays: days,
        weekdaysShort: days,
        weekdaysMin: days,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd، D MMMM YYYY HH:mm',
        },
        meridiemParse: /صبح|شام/,
        isPM: function (input) {
            return 'شام' === input;
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'صبح';
            }
            return 'شام';
        },
        calendar: {
            sameDay: '[اڄ] LT',
            nextDay: '[سڀاڻي] LT',
            nextWeek: 'dddd [اڳين هفتي تي] LT',
            lastDay: '[ڪالهه] LT',
            lastWeek: '[گزريل هفتي] dddd [تي] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s پوء',
            past: '%s اڳ',
            s: 'چند سيڪنڊ',
            ss: '%d سيڪنڊ',
            m: 'هڪ منٽ',
            mm: '%d منٽ',
            h: 'هڪ ڪلاڪ',
            hh: '%d ڪلاڪ',
            d: 'هڪ ڏينهن',
            dd: '%d ڏينهن',
            M: 'هڪ مهينو',
            MM: '%d مهينا',
            y: 'هڪ سال',
            yy: '%d سال',
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return sd;

})));


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Northern Sami [se]
//! authors : Bård Rolstad Henriksen : https://github.com/karamell

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var se = moment.defineLocale('se', {
        months: 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split(
            '_'
        ),
        monthsShort: 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split(
            '_'
        ),
        weekdays: 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split(
            '_'
        ),
        weekdaysShort: 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
        weekdaysMin: 's_v_m_g_d_b_L'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'MMMM D. [b.] YYYY',
            LLL: 'MMMM D. [b.] YYYY [ti.] HH:mm',
            LLLL: 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm',
        },
        calendar: {
            sameDay: '[otne ti] LT',
            nextDay: '[ihttin ti] LT',
            nextWeek: 'dddd [ti] LT',
            lastDay: '[ikte ti] LT',
            lastWeek: '[ovddit] dddd [ti] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s geažes',
            past: 'maŋit %s',
            s: 'moadde sekunddat',
            ss: '%d sekunddat',
            m: 'okta minuhta',
            mm: '%d minuhtat',
            h: 'okta diimmu',
            hh: '%d diimmut',
            d: 'okta beaivi',
            dd: '%d beaivvit',
            M: 'okta mánnu',
            MM: '%d mánut',
            y: 'okta jahki',
            yy: '%d jagit',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return se;

})));


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Sinhalese [si]
//! author : Sampath Sitinamaluwa : https://github.com/sampathsris

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    /*jshint -W100*/
    var si = moment.defineLocale('si', {
        months: 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split(
            '_'
        ),
        monthsShort: 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split(
            '_'
        ),
        weekdays: 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split(
            '_'
        ),
        weekdaysShort: 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
        weekdaysMin: 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'a h:mm',
            LTS: 'a h:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'YYYY MMMM D',
            LLL: 'YYYY MMMM D, a h:mm',
            LLLL: 'YYYY MMMM D [වැනි] dddd, a h:mm:ss',
        },
        calendar: {
            sameDay: '[අද] LT[ට]',
            nextDay: '[හෙට] LT[ට]',
            nextWeek: 'dddd LT[ට]',
            lastDay: '[ඊයේ] LT[ට]',
            lastWeek: '[පසුගිය] dddd LT[ට]',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%sකින්',
            past: '%sකට පෙර',
            s: 'තත්පර කිහිපය',
            ss: 'තත්පර %d',
            m: 'මිනිත්තුව',
            mm: 'මිනිත්තු %d',
            h: 'පැය',
            hh: 'පැය %d',
            d: 'දිනය',
            dd: 'දින %d',
            M: 'මාසය',
            MM: 'මාස %d',
            y: 'වසර',
            yy: 'වසර %d',
        },
        dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
        ordinal: function (number) {
            return number + ' වැනි';
        },
        meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
        isPM: function (input) {
            return input === 'ප.ව.' || input === 'පස් වරු';
        },
        meridiem: function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'ප.ව.' : 'පස් වරු';
            } else {
                return isLower ? 'පෙ.ව.' : 'පෙර වරු';
            }
        },
    });

    return si;

})));


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Slovak [sk]
//! author : Martin Minka : https://github.com/k2s
//! based on work of petrbela : https://github.com/petrbela

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split(
            '_'
        ),
        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
    function plural(n) {
        return n > 1 && n < 5;
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's': // a few seconds / in a few seconds / a few seconds ago
                return withoutSuffix || isFuture ? 'pár sekúnd' : 'pár sekundami';
            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'sekundy' : 'sekúnd');
                } else {
                    return result + 'sekundami';
                }
            case 'm': // a minute / in a minute / a minute ago
                return withoutSuffix ? 'minúta' : isFuture ? 'minútu' : 'minútou';
            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'minúty' : 'minút');
                } else {
                    return result + 'minútami';
                }
            case 'h': // an hour / in an hour / an hour ago
                return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';
            case 'hh': // 9 hours / in 9 hours / 9 hours ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'hodiny' : 'hodín');
                } else {
                    return result + 'hodinami';
                }
            case 'd': // a day / in a day / a day ago
                return withoutSuffix || isFuture ? 'deň' : 'dňom';
            case 'dd': // 9 days / in 9 days / 9 days ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'dni' : 'dní');
                } else {
                    return result + 'dňami';
                }
            case 'M': // a month / in a month / a month ago
                return withoutSuffix || isFuture ? 'mesiac' : 'mesiacom';
            case 'MM': // 9 months / in 9 months / 9 months ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'mesiace' : 'mesiacov');
                } else {
                    return result + 'mesiacmi';
                }
            case 'y': // a year / in a year / a year ago
                return withoutSuffix || isFuture ? 'rok' : 'rokom';
            case 'yy': // 9 years / in 9 years / 9 years ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'roky' : 'rokov');
                } else {
                    return result + 'rokmi';
                }
        }
    }

    var sk = moment.defineLocale('sk', {
        months: months,
        monthsShort: monthsShort,
        weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
        weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),
        weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd D. MMMM YYYY H:mm',
        },
        calendar: {
            sameDay: '[dnes o] LT',
            nextDay: '[zajtra o] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[v nedeľu o] LT';
                    case 1:
                    case 2:
                        return '[v] dddd [o] LT';
                    case 3:
                        return '[v stredu o] LT';
                    case 4:
                        return '[vo štvrtok o] LT';
                    case 5:
                        return '[v piatok o] LT';
                    case 6:
                        return '[v sobotu o] LT';
                }
            },
            lastDay: '[včera o] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[minulú nedeľu o] LT';
                    case 1:
                    case 2:
                        return '[minulý] dddd [o] LT';
                    case 3:
                        return '[minulú stredu o] LT';
                    case 4:
                    case 5:
                        return '[minulý] dddd [o] LT';
                    case 6:
                        return '[minulú sobotu o] LT';
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'za %s',
            past: 'pred %s',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return sk;

})));


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Slovenian [sl]
//! author : Robert Sedovšek : https://github.com/sedovsek

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':
                return withoutSuffix || isFuture
                    ? 'nekaj sekund'
                    : 'nekaj sekundami';
            case 'ss':
                if (number === 1) {
                    result += withoutSuffix ? 'sekundo' : 'sekundi';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';
                } else {
                    result += 'sekund';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'ena minuta' : 'eno minuto';
            case 'mm':
                if (number === 1) {
                    result += withoutSuffix ? 'minuta' : 'minuto';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'minute' : 'minutami';
                } else {
                    result += withoutSuffix || isFuture ? 'minut' : 'minutami';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'ena ura' : 'eno uro';
            case 'hh':
                if (number === 1) {
                    result += withoutSuffix ? 'ura' : 'uro';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'uri' : 'urama';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'ure' : 'urami';
                } else {
                    result += withoutSuffix || isFuture ? 'ur' : 'urami';
                }
                return result;
            case 'd':
                return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
            case 'dd':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'dan' : 'dnem';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
                } else {
                    result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
                }
                return result;
            case 'M':
                return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
            case 'MM':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
                } else {
                    result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
                }
                return result;
            case 'y':
                return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
            case 'yy':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'leto' : 'letom';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'leti' : 'letoma';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'leta' : 'leti';
                } else {
                    result += withoutSuffix || isFuture ? 'let' : 'leti';
                }
                return result;
        }
    }

    var sl = moment.defineLocale('sl', {
        months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split(
            '_'
        ),
        monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
        weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
        weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD. MM. YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm',
        },
        calendar: {
            sameDay: '[danes ob] LT',
            nextDay: '[jutri ob] LT',

            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[v] [nedeljo] [ob] LT';
                    case 3:
                        return '[v] [sredo] [ob] LT';
                    case 6:
                        return '[v] [soboto] [ob] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[v] dddd [ob] LT';
                }
            },
            lastDay: '[včeraj ob] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[prejšnjo] [nedeljo] [ob] LT';
                    case 3:
                        return '[prejšnjo] [sredo] [ob] LT';
                    case 6:
                        return '[prejšnjo] [soboto] [ob] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prejšnji] dddd [ob] LT';
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'čez %s',
            past: 'pred %s',
            s: processRelativeTime,
            ss: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return sl;

})));


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Albanian [sq]
//! author : Flakërim Ismani : https://github.com/flakerimi
//! author : Menelion Elensúle : https://github.com/Oire
//! author : Oerd Cukalla : https://github.com/oerd

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var sq = moment.defineLocale('sq', {
        months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split(
            '_'
        ),
        monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
        weekdays: 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split(
            '_'
        ),
        weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
        weekdaysMin: 'D_H_Ma_Më_E_P_Sh'.split('_'),
        weekdaysParseExact: true,
        meridiemParse: /PD|MD/,
        isPM: function (input) {
            return input.charAt(0) === 'M';
        },
        meridiem: function (hours, minutes, isLower) {
            return hours < 12 ? 'PD' : 'MD';
        },
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Sot në] LT',
            nextDay: '[Nesër në] LT',
            nextWeek: 'dddd [në] LT',
            lastDay: '[Dje në] LT',
            lastWeek: 'dddd [e kaluar në] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'në %s',
            past: '%s më parë',
            s: 'disa sekonda',
            ss: '%d sekonda',
            m: 'një minutë',
            mm: '%d minuta',
            h: 'një orë',
            hh: '%d orë',
            d: 'një ditë',
            dd: '%d ditë',
            M: 'një muaj',
            MM: '%d muaj',
            y: 'një vit',
            yy: '%d vite',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return sq;

})));


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Serbian [sr]
//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var translator = {
        words: {
            //Different grammatical cases
            ss: ['sekunda', 'sekunde', 'sekundi'],
            m: ['jedan minut', 'jedne minute'],
            mm: ['minut', 'minute', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mesec', 'meseca', 'meseci'],
            yy: ['godina', 'godine', 'godina'],
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1
                ? wordKey[0]
                : number >= 2 && number <= 4
                ? wordKey[1]
                : wordKey[2];
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return (
                    number +
                    ' ' +
                    translator.correctGrammaticalCase(number, wordKey)
                );
            }
        },
    };

    var sr = moment.defineLocale('sr', {
        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(
            '_'
        ),
        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split(
            '_'
        ),
        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm',
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedelju] [u] LT';
                    case 3:
                        return '[u] [sredu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay: '[juče u] LT',
            lastWeek: function () {
                var lastWeekDays = [
                    '[prošle] [nedelje] [u] LT',
                    '[prošlog] [ponedeljka] [u] LT',
                    '[prošlog] [utorka] [u] LT',
                    '[prošle] [srede] [u] LT',
                    '[prošlog] [četvrtka] [u] LT',
                    '[prošlog] [petka] [u] LT',
                    '[prošle] [subote] [u] LT',
                ];
                return lastWeekDays[this.day()];
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'za %s',
            past: 'pre %s',
            s: 'nekoliko sekundi',
            ss: translator.translate,
            m: translator.translate,
            mm: translator.translate,
            h: translator.translate,
            hh: translator.translate,
            d: 'dan',
            dd: translator.translate,
            M: 'mesec',
            MM: translator.translate,
            y: 'godinu',
            yy: translator.translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return sr;

})));


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Serbian Cyrillic [sr-cyrl]
//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var translator = {
        words: {
            //Different grammatical cases
            ss: ['секунда', 'секунде', 'секунди'],
            m: ['један минут', 'једне минуте'],
            mm: ['минут', 'минуте', 'минута'],
            h: ['један сат', 'једног сата'],
            hh: ['сат', 'сата', 'сати'],
            dd: ['дан', 'дана', 'дана'],
            MM: ['месец', 'месеца', 'месеци'],
            yy: ['година', 'године', 'година'],
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1
                ? wordKey[0]
                : number >= 2 && number <= 4
                ? wordKey[1]
                : wordKey[2];
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return (
                    number +
                    ' ' +
                    translator.correctGrammaticalCase(number, wordKey)
                );
            }
        },
    };

    var srCyrl = moment.defineLocale('sr-cyrl', {
        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split(
            '_'
        ),
        monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm',
        },
        calendar: {
            sameDay: '[данас у] LT',
            nextDay: '[сутра у] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[у] [недељу] [у] LT';
                    case 3:
                        return '[у] [среду] [у] LT';
                    case 6:
                        return '[у] [суботу] [у] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[у] dddd [у] LT';
                }
            },
            lastDay: '[јуче у] LT',
            lastWeek: function () {
                var lastWeekDays = [
                    '[прошле] [недеље] [у] LT',
                    '[прошлог] [понедељка] [у] LT',
                    '[прошлог] [уторка] [у] LT',
                    '[прошле] [среде] [у] LT',
                    '[прошлог] [четвртка] [у] LT',
                    '[прошлог] [петка] [у] LT',
                    '[прошле] [суботе] [у] LT',
                ];
                return lastWeekDays[this.day()];
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'за %s',
            past: 'пре %s',
            s: 'неколико секунди',
            ss: translator.translate,
            m: translator.translate,
            mm: translator.translate,
            h: translator.translate,
            hh: translator.translate,
            d: 'дан',
            dd: translator.translate,
            M: 'месец',
            MM: translator.translate,
            y: 'годину',
            yy: translator.translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return srCyrl;

})));


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : siSwati [ss]
//! author : Nicolai Davies<mail@nicolai.io> : https://github.com/nicolaidavies

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var ss = moment.defineLocale('ss', {
        months: "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split(
            '_'
        ),
        monthsShort: 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
        weekdays: 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split(
            '_'
        ),
        weekdaysShort: 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
        weekdaysMin: 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A',
        },
        calendar: {
            sameDay: '[Namuhla nga] LT',
            nextDay: '[Kusasa nga] LT',
            nextWeek: 'dddd [nga] LT',
            lastDay: '[Itolo nga] LT',
            lastWeek: 'dddd [leliphelile] [nga] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'nga %s',
            past: 'wenteka nga %s',
            s: 'emizuzwana lomcane',
            ss: '%d mzuzwana',
            m: 'umzuzu',
            mm: '%d emizuzu',
            h: 'lihora',
            hh: '%d emahora',
            d: 'lilanga',
            dd: '%d emalanga',
            M: 'inyanga',
            MM: '%d tinyanga',
            y: 'umnyaka',
            yy: '%d iminyaka',
        },
        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
        meridiem: function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'ekuseni';
            } else if (hours < 15) {
                return 'emini';
            } else if (hours < 19) {
                return 'entsambama';
            } else {
                return 'ebusuku';
            }
        },
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ekuseni') {
                return hour;
            } else if (meridiem === 'emini') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
                if (hour === 0) {
                    return 0;
                }
                return hour + 12;
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal: '%d',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return ss;

})));


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Swedish [sv]
//! author : Jens Alm : https://github.com/ulmus

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var sv = moment.defineLocale('sv', {
        months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split(
            '_'
        ),
        monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
        weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
        weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
        weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [kl.] HH:mm',
            LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',
            lll: 'D MMM YYYY HH:mm',
            llll: 'ddd D MMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Idag] LT',
            nextDay: '[Imorgon] LT',
            lastDay: '[Igår] LT',
            nextWeek: '[På] dddd LT',
            lastWeek: '[I] dddd[s] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'om %s',
            past: 'för %s sedan',
            s: 'några sekunder',
            ss: '%d sekunder',
            m: 'en minut',
            mm: '%d minuter',
            h: 'en timme',
            hh: '%d timmar',
            d: 'en dag',
            dd: '%d dagar',
            M: 'en månad',
            MM: '%d månader',
            y: 'ett år',
            yy: '%d år',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(\:e|\:a)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? ':e'
                        : b === 1
                        ? ':a'
                        : b === 2
                        ? ':a'
                        : b === 3
                        ? ':e'
                        : ':e';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return sv;

})));


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Swahili [sw]
//! author : Fahad Kassim : https://github.com/fadsel

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var sw = moment.defineLocale('sw', {
        months: 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
        weekdays: 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split(
            '_'
        ),
        weekdaysShort: 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
        weekdaysMin: 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'hh:mm A',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[leo saa] LT',
            nextDay: '[kesho saa] LT',
            nextWeek: '[wiki ijayo] dddd [saat] LT',
            lastDay: '[jana] LT',
            lastWeek: '[wiki iliyopita] dddd [saat] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s baadaye',
            past: 'tokea %s',
            s: 'hivi punde',
            ss: 'sekunde %d',
            m: 'dakika moja',
            mm: 'dakika %d',
            h: 'saa limoja',
            hh: 'masaa %d',
            d: 'siku moja',
            dd: 'siku %d',
            M: 'mwezi mmoja',
            MM: 'miezi %d',
            y: 'mwaka mmoja',
            yy: 'miaka %d',
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return sw;

})));


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tamil [ta]
//! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            '1': '௧',
            '2': '௨',
            '3': '௩',
            '4': '௪',
            '5': '௫',
            '6': '௬',
            '7': '௭',
            '8': '௮',
            '9': '௯',
            '0': '௦',
        },
        numberMap = {
            '௧': '1',
            '௨': '2',
            '௩': '3',
            '௪': '4',
            '௫': '5',
            '௬': '6',
            '௭': '7',
            '௮': '8',
            '௯': '9',
            '௦': '0',
        };

    var ta = moment.defineLocale('ta', {
        months: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(
            '_'
        ),
        monthsShort: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(
            '_'
        ),
        weekdays: 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split(
            '_'
        ),
        weekdaysShort: 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split(
            '_'
        ),
        weekdaysMin: 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, HH:mm',
            LLLL: 'dddd, D MMMM YYYY, HH:mm',
        },
        calendar: {
            sameDay: '[இன்று] LT',
            nextDay: '[நாளை] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[நேற்று] LT',
            lastWeek: '[கடந்த வாரம்] dddd, LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s இல்',
            past: '%s முன்',
            s: 'ஒரு சில விநாடிகள்',
            ss: '%d விநாடிகள்',
            m: 'ஒரு நிமிடம்',
            mm: '%d நிமிடங்கள்',
            h: 'ஒரு மணி நேரம்',
            hh: '%d மணி நேரம்',
            d: 'ஒரு நாள்',
            dd: '%d நாட்கள்',
            M: 'ஒரு மாதம்',
            MM: '%d மாதங்கள்',
            y: 'ஒரு வருடம்',
            yy: '%d ஆண்டுகள்',
        },
        dayOfMonthOrdinalParse: /\d{1,2}வது/,
        ordinal: function (number) {
            return number + 'வது';
        },
        preparse: function (string) {
            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // refer http://ta.wikipedia.org/s/1er1
        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
        meridiem: function (hour, minute, isLower) {
            if (hour < 2) {
                return ' யாமம்';
            } else if (hour < 6) {
                return ' வைகறை'; // வைகறை
            } else if (hour < 10) {
                return ' காலை'; // காலை
            } else if (hour < 14) {
                return ' நண்பகல்'; // நண்பகல்
            } else if (hour < 18) {
                return ' எற்பாடு'; // எற்பாடு
            } else if (hour < 22) {
                return ' மாலை'; // மாலை
            } else {
                return ' யாமம்';
            }
        },
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'யாமம்') {
                return hour < 2 ? hour : hour + 12;
            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
                return hour;
            } else if (meridiem === 'நண்பகல்') {
                return hour >= 10 ? hour : hour + 12;
            } else {
                return hour + 12;
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return ta;

})));


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Telugu [te]
//! author : Krishna Chaitanya Thota : https://github.com/kcthota

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var te = moment.defineLocale('te', {
        months: 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split(
            '_'
        ),
        monthsShort: 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split(
            '_'
        ),
        weekdaysShort: 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
        weekdaysMin: 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
        longDateFormat: {
            LT: 'A h:mm',
            LTS: 'A h:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm',
            LLLL: 'dddd, D MMMM YYYY, A h:mm',
        },
        calendar: {
            sameDay: '[నేడు] LT',
            nextDay: '[రేపు] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[నిన్న] LT',
            lastWeek: '[గత] dddd, LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s లో',
            past: '%s క్రితం',
            s: 'కొన్ని క్షణాలు',
            ss: '%d సెకన్లు',
            m: 'ఒక నిమిషం',
            mm: '%d నిమిషాలు',
            h: 'ఒక గంట',
            hh: '%d గంటలు',
            d: 'ఒక రోజు',
            dd: '%d రోజులు',
            M: 'ఒక నెల',
            MM: '%d నెలలు',
            y: 'ఒక సంవత్సరం',
            yy: '%d సంవత్సరాలు',
        },
        dayOfMonthOrdinalParse: /\d{1,2}వ/,
        ordinal: '%dవ',
        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'రాత్రి') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ఉదయం') {
                return hour;
            } else if (meridiem === 'మధ్యాహ్నం') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'సాయంత్రం') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'రాత్రి';
            } else if (hour < 10) {
                return 'ఉదయం';
            } else if (hour < 17) {
                return 'మధ్యాహ్నం';
            } else if (hour < 20) {
                return 'సాయంత్రం';
            } else {
                return 'రాత్రి';
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return te;

})));


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tetun Dili (East Timor) [tet]
//! author : Joshua Brooks : https://github.com/joshbrooks
//! author : Onorio De J. Afonso : https://github.com/marobo
//! author : Sonia Simoes : https://github.com/soniasimoes

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var tet = moment.defineLocale('tet', {
        months: 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split(
            '_'
        ),
        monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
        weekdays: 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),
        weekdaysShort: 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),
        weekdaysMin: 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Ohin iha] LT',
            nextDay: '[Aban iha] LT',
            nextWeek: 'dddd [iha] LT',
            lastDay: '[Horiseik iha] LT',
            lastWeek: 'dddd [semana kotuk] [iha] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'iha %s',
            past: '%s liuba',
            s: 'segundu balun',
            ss: 'segundu %d',
            m: 'minutu ida',
            mm: 'minutu %d',
            h: 'oras ida',
            hh: 'oras %d',
            d: 'loron ida',
            dd: 'loron %d',
            M: 'fulan ida',
            MM: 'fulan %d',
            y: 'tinan ida',
            yy: 'tinan %d',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return tet;

})));


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tajik [tg]
//! author : Orif N. Jr. : https://github.com/orif-jr

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var suffixes = {
        0: '-ум',
        1: '-ум',
        2: '-юм',
        3: '-юм',
        4: '-ум',
        5: '-ум',
        6: '-ум',
        7: '-ум',
        8: '-ум',
        9: '-ум',
        10: '-ум',
        12: '-ум',
        13: '-ум',
        20: '-ум',
        30: '-юм',
        40: '-ум',
        50: '-ум',
        60: '-ум',
        70: '-ум',
        80: '-ум',
        90: '-ум',
        100: '-ум',
    };

    var tg = moment.defineLocale('tg', {
        months: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split(
            '_'
        ),
        monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
        weekdays: 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split(
            '_'
        ),
        weekdaysShort: 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),
        weekdaysMin: 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Имрӯз соати] LT',
            nextDay: '[Пагоҳ соати] LT',
            lastDay: '[Дирӯз соати] LT',
            nextWeek: 'dddd[и] [ҳафтаи оянда соати] LT',
            lastWeek: 'dddd[и] [ҳафтаи гузашта соати] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'баъди %s',
            past: '%s пеш',
            s: 'якчанд сония',
            m: 'як дақиқа',
            mm: '%d дақиқа',
            h: 'як соат',
            hh: '%d соат',
            d: 'як рӯз',
            dd: '%d рӯз',
            M: 'як моҳ',
            MM: '%d моҳ',
            y: 'як сол',
            yy: '%d сол',
        },
        meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'шаб') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'субҳ') {
                return hour;
            } else if (meridiem === 'рӯз') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'бегоҳ') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'шаб';
            } else if (hour < 11) {
                return 'субҳ';
            } else if (hour < 16) {
                return 'рӯз';
            } else if (hour < 19) {
                return 'бегоҳ';
            } else {
                return 'шаб';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ум|юм)/,
        ordinal: function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1th is the first week of the year.
        },
    });

    return tg;

})));


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Thai [th]
//! author : Kridsada Thanabulpong : https://github.com/sirn

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var th = moment.defineLocale('th', {
        months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split(
            '_'
        ),
        monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
        weekdaysShort: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
        weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY เวลา H:mm',
            LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm',
        },
        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
        isPM: function (input) {
            return input === 'หลังเที่ยง';
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ก่อนเที่ยง';
            } else {
                return 'หลังเที่ยง';
            }
        },
        calendar: {
            sameDay: '[วันนี้ เวลา] LT',
            nextDay: '[พรุ่งนี้ เวลา] LT',
            nextWeek: 'dddd[หน้า เวลา] LT',
            lastDay: '[เมื่อวานนี้ เวลา] LT',
            lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'อีก %s',
            past: '%sที่แล้ว',
            s: 'ไม่กี่วินาที',
            ss: '%d วินาที',
            m: '1 นาที',
            mm: '%d นาที',
            h: '1 ชั่วโมง',
            hh: '%d ชั่วโมง',
            d: '1 วัน',
            dd: '%d วัน',
            M: '1 เดือน',
            MM: '%d เดือน',
            y: '1 ปี',
            yy: '%d ปี',
        },
    });

    return th;

})));


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Turkmen [trk]
//! author : Atamyrat Abdyrahmanov : https://github.com/atamyratabdy

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var suffixes = {
        1: "'inji",
        5: "'inji",
        8: "'inji",
        70: "'inji",
        80: "'inji",
        2: "'nji",
        7: "'nji",
        20: "'nji",
        50: "'nji",
        3: "'ünji",
        4: "'ünji",
        100: "'ünji",
        6: "'njy",
        9: "'unjy",
        10: "'unjy",
        30: "'unjy",
        60: "'ynjy",
        90: "'ynjy",
    };

    var tk = moment.defineLocale('tk', {
        months: 'Ýanwar_Fewral_Mart_Aprel_Maý_Iýun_Iýul_Awgust_Sentýabr_Oktýabr_Noýabr_Dekabr'.split(
            '_'
        ),
        monthsShort: 'Ýan_Few_Mar_Apr_Maý_Iýn_Iýl_Awg_Sen_Okt_Noý_Dek'.split('_'),
        weekdays: 'Ýekşenbe_Duşenbe_Sişenbe_Çarşenbe_Penşenbe_Anna_Şenbe'.split(
            '_'
        ),
        weekdaysShort: 'Ýek_Duş_Siş_Çar_Pen_Ann_Şen'.split('_'),
        weekdaysMin: 'Ýk_Dş_Sş_Çr_Pn_An_Şn'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[bugün sagat] LT',
            nextDay: '[ertir sagat] LT',
            nextWeek: '[indiki] dddd [sagat] LT',
            lastDay: '[düýn] LT',
            lastWeek: '[geçen] dddd [sagat] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s soň',
            past: '%s öň',
            s: 'birnäçe sekunt',
            m: 'bir minut',
            mm: '%d minut',
            h: 'bir sagat',
            hh: '%d sagat',
            d: 'bir gün',
            dd: '%d gün',
            M: 'bir aý',
            MM: '%d aý',
            y: 'bir ýyl',
            yy: '%d ýyl',
        },
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'Do':
                case 'DD':
                    return number;
                default:
                    if (number === 0) {
                        // special case for zero
                        return number + "'unjy";
                    }
                    var a = number % 10,
                        b = (number % 100) - a,
                        c = number >= 100 ? 100 : null;
                    return number + (suffixes[a] || suffixes[b] || suffixes[c]);
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return tk;

})));


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tagalog (Philippines) [tl-ph]
//! author : Dan Hagman : https://github.com/hagmandan

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var tlPh = moment.defineLocale('tl-ph', {
        months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split(
            '_'
        ),
        monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
        weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split(
            '_'
        ),
        weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
        weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'MM/D/YYYY',
            LL: 'MMMM D, YYYY',
            LLL: 'MMMM D, YYYY HH:mm',
            LLLL: 'dddd, MMMM DD, YYYY HH:mm',
        },
        calendar: {
            sameDay: 'LT [ngayong araw]',
            nextDay: '[Bukas ng] LT',
            nextWeek: 'LT [sa susunod na] dddd',
            lastDay: 'LT [kahapon]',
            lastWeek: 'LT [noong nakaraang] dddd',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'sa loob ng %s',
            past: '%s ang nakalipas',
            s: 'ilang segundo',
            ss: '%d segundo',
            m: 'isang minuto',
            mm: '%d minuto',
            h: 'isang oras',
            hh: '%d oras',
            d: 'isang araw',
            dd: '%d araw',
            M: 'isang buwan',
            MM: '%d buwan',
            y: 'isang taon',
            yy: '%d taon',
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal: function (number) {
            return number;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return tlPh;

})));


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Klingon [tlh]
//! author : Dominika Kruk : https://github.com/amaranthrose

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');

    function translateFuture(output) {
        var time = output;
        time =
            output.indexOf('jaj') !== -1
                ? time.slice(0, -3) + 'leS'
                : output.indexOf('jar') !== -1
                ? time.slice(0, -3) + 'waQ'
                : output.indexOf('DIS') !== -1
                ? time.slice(0, -3) + 'nem'
                : time + ' pIq';
        return time;
    }

    function translatePast(output) {
        var time = output;
        time =
            output.indexOf('jaj') !== -1
                ? time.slice(0, -3) + 'Hu’'
                : output.indexOf('jar') !== -1
                ? time.slice(0, -3) + 'wen'
                : output.indexOf('DIS') !== -1
                ? time.slice(0, -3) + 'ben'
                : time + ' ret';
        return time;
    }

    function translate(number, withoutSuffix, string, isFuture) {
        var numberNoun = numberAsNoun(number);
        switch (string) {
            case 'ss':
                return numberNoun + ' lup';
            case 'mm':
                return numberNoun + ' tup';
            case 'hh':
                return numberNoun + ' rep';
            case 'dd':
                return numberNoun + ' jaj';
            case 'MM':
                return numberNoun + ' jar';
            case 'yy':
                return numberNoun + ' DIS';
        }
    }

    function numberAsNoun(number) {
        var hundred = Math.floor((number % 1000) / 100),
            ten = Math.floor((number % 100) / 10),
            one = number % 10,
            word = '';
        if (hundred > 0) {
            word += numbersNouns[hundred] + 'vatlh';
        }
        if (ten > 0) {
            word += (word !== '' ? ' ' : '') + numbersNouns[ten] + 'maH';
        }
        if (one > 0) {
            word += (word !== '' ? ' ' : '') + numbersNouns[one];
        }
        return word === '' ? 'pagh' : word;
    }

    var tlh = moment.defineLocale('tlh', {
        months: 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split(
            '_'
        ),
        monthsShort: 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
            '_'
        ),
        weekdaysShort: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
            '_'
        ),
        weekdaysMin: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
            '_'
        ),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[DaHjaj] LT',
            nextDay: '[wa’leS] LT',
            nextWeek: 'LLL',
            lastDay: '[wa’Hu’] LT',
            lastWeek: 'LLL',
            sameElse: 'L',
        },
        relativeTime: {
            future: translateFuture,
            past: translatePast,
            s: 'puS lup',
            ss: translate,
            m: 'wa’ tup',
            mm: translate,
            h: 'wa’ rep',
            hh: translate,
            d: 'wa’ jaj',
            dd: translate,
            M: 'wa’ jar',
            MM: translate,
            y: 'wa’ DIS',
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return tlh;

})));


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Turkish [tr]
//! authors : Erhan Gundogan : https://github.com/erhangundogan,
//!           Burak Yiğit Kaya: https://github.com/BYK

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var suffixes = {
        1: "'inci",
        5: "'inci",
        8: "'inci",
        70: "'inci",
        80: "'inci",
        2: "'nci",
        7: "'nci",
        20: "'nci",
        50: "'nci",
        3: "'üncü",
        4: "'üncü",
        100: "'üncü",
        6: "'ncı",
        9: "'uncu",
        10: "'uncu",
        30: "'uncu",
        60: "'ıncı",
        90: "'ıncı",
    };

    var tr = moment.defineLocale('tr', {
        months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split(
            '_'
        ),
        monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
        weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split(
            '_'
        ),
        weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
        weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
        meridiem: function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower ? 'öö' : 'ÖÖ';
            } else {
                return isLower ? 'ös' : 'ÖS';
            }
        },
        meridiemParse: /öö|ÖÖ|ös|ÖS/,
        isPM: function (input) {
            return input === 'ös' || input === 'ÖS';
        },
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[bugün saat] LT',
            nextDay: '[yarın saat] LT',
            nextWeek: '[gelecek] dddd [saat] LT',
            lastDay: '[dün] LT',
            lastWeek: '[geçen] dddd [saat] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s sonra',
            past: '%s önce',
            s: 'birkaç saniye',
            ss: '%d saniye',
            m: 'bir dakika',
            mm: '%d dakika',
            h: 'bir saat',
            hh: '%d saat',
            d: 'bir gün',
            dd: '%d gün',
            M: 'bir ay',
            MM: '%d ay',
            y: 'bir yıl',
            yy: '%d yıl',
        },
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'Do':
                case 'DD':
                    return number;
                default:
                    if (number === 0) {
                        // special case for zero
                        return number + "'ıncı";
                    }
                    var a = number % 10,
                        b = (number % 100) - a,
                        c = number >= 100 ? 100 : null;
                    return number + (suffixes[a] || suffixes[b] || suffixes[c]);
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return tr;

})));


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Talossan [tzl]
//! author : Robin van der Vliet : https://github.com/robin0van0der0v
//! author : Iustì Canun

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
    // This is currently too difficult (maybe even impossible) to add.
    var tzl = moment.defineLocale('tzl', {
        months: 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split(
            '_'
        ),
        monthsShort: 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
        weekdays: 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
        weekdaysShort: 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
        weekdaysMin: 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
        longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM [dallas] YYYY',
            LLL: 'D. MMMM [dallas] YYYY HH.mm',
            LLLL: 'dddd, [li] D. MMMM [dallas] YYYY HH.mm',
        },
        meridiemParse: /d\'o|d\'a/i,
        isPM: function (input) {
            return "d'o" === input.toLowerCase();
        },
        meridiem: function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? "d'o" : "D'O";
            } else {
                return isLower ? "d'a" : "D'A";
            }
        },
        calendar: {
            sameDay: '[oxhi à] LT',
            nextDay: '[demà à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[ieiri à] LT',
            lastWeek: '[sür el] dddd [lasteu à] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'osprei %s',
            past: 'ja%s',
            s: processRelativeTime,
            ss: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            s: ['viensas secunds', "'iensas secunds"],
            ss: [number + ' secunds', '' + number + ' secunds'],
            m: ["'n míut", "'iens míut"],
            mm: [number + ' míuts', '' + number + ' míuts'],
            h: ["'n þora", "'iensa þora"],
            hh: [number + ' þoras', '' + number + ' þoras'],
            d: ["'n ziua", "'iensa ziua"],
            dd: [number + ' ziuas', '' + number + ' ziuas'],
            M: ["'n mes", "'iens mes"],
            MM: [number + ' mesen', '' + number + ' mesen'],
            y: ["'n ar", "'iens ar"],
            yy: [number + ' ars', '' + number + ' ars'],
        };
        return isFuture
            ? format[key][0]
            : withoutSuffix
            ? format[key][0]
            : format[key][1];
    }

    return tzl;

})));


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Central Atlas Tamazight [tzm]
//! author : Abdel Said : https://github.com/abdelsaid

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var tzm = moment.defineLocale('tzm', {
        months: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(
            '_'
        ),
        monthsShort: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(
            '_'
        ),
        weekdays: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        weekdaysShort: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        weekdaysMin: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
            nextWeek: 'dddd [ⴴ] LT',
            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
            lastWeek: 'dddd [ⴴ] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
            past: 'ⵢⴰⵏ %s',
            s: 'ⵉⵎⵉⴽ',
            ss: '%d ⵉⵎⵉⴽ',
            m: 'ⵎⵉⵏⵓⴺ',
            mm: '%d ⵎⵉⵏⵓⴺ',
            h: 'ⵙⴰⵄⴰ',
            hh: '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
            d: 'ⴰⵙⵙ',
            dd: '%d oⵙⵙⴰⵏ',
            M: 'ⴰⵢoⵓⵔ',
            MM: '%d ⵉⵢⵢⵉⵔⵏ',
            y: 'ⴰⵙⴳⴰⵙ',
            yy: '%d ⵉⵙⴳⴰⵙⵏ',
        },
        week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12, // The week that contains Jan 12th is the first week of the year.
        },
    });

    return tzm;

})));


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Central Atlas Tamazight Latin [tzm-latn]
//! author : Abdel Said : https://github.com/abdelsaid

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var tzmLatn = moment.defineLocale('tzm-latn', {
        months: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(
            '_'
        ),
        monthsShort: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(
            '_'
        ),
        weekdays: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        weekdaysShort: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        weekdaysMin: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[asdkh g] LT',
            nextDay: '[aska g] LT',
            nextWeek: 'dddd [g] LT',
            lastDay: '[assant g] LT',
            lastWeek: 'dddd [g] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'dadkh s yan %s',
            past: 'yan %s',
            s: 'imik',
            ss: '%d imik',
            m: 'minuḍ',
            mm: '%d minuḍ',
            h: 'saɛa',
            hh: '%d tassaɛin',
            d: 'ass',
            dd: '%d ossan',
            M: 'ayowr',
            MM: '%d iyyirn',
            y: 'asgas',
            yy: '%d isgasn',
        },
        week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12, // The week that contains Jan 12th is the first week of the year.
        },
    });

    return tzmLatn;

})));


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js language configuration
//! locale : Uyghur (China) [ug-cn]
//! author: boyaq : https://github.com/boyaq

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js language configuration

    var ugCn = moment.defineLocale('ug-cn', {
        months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
            '_'
        ),
        monthsShort: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
            '_'
        ),
        weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(
            '_'
        ),
        weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
        weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',
            LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',
            LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',
        },
        meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (
                meridiem === 'يېرىم كېچە' ||
                meridiem === 'سەھەر' ||
                meridiem === 'چۈشتىن بۇرۇن'
            ) {
                return hour;
            } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {
                return hour + 12;
            } else {
                return hour >= 11 ? hour : hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return 'يېرىم كېچە';
            } else if (hm < 900) {
                return 'سەھەر';
            } else if (hm < 1130) {
                return 'چۈشتىن بۇرۇن';
            } else if (hm < 1230) {
                return 'چۈش';
            } else if (hm < 1800) {
                return 'چۈشتىن كېيىن';
            } else {
                return 'كەچ';
            }
        },
        calendar: {
            sameDay: '[بۈگۈن سائەت] LT',
            nextDay: '[ئەتە سائەت] LT',
            nextWeek: '[كېلەركى] dddd [سائەت] LT',
            lastDay: '[تۆنۈگۈن] LT',
            lastWeek: '[ئالدىنقى] dddd [سائەت] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s كېيىن',
            past: '%s بۇرۇن',
            s: 'نەچچە سېكونت',
            ss: '%d سېكونت',
            m: 'بىر مىنۇت',
            mm: '%d مىنۇت',
            h: 'بىر سائەت',
            hh: '%d سائەت',
            d: 'بىر كۈن',
            dd: '%d كۈن',
            M: 'بىر ئاي',
            MM: '%d ئاي',
            y: 'بىر يىل',
            yy: '%d يىل',
        },

        dayOfMonthOrdinalParse: /\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '-كۈنى';
                case 'w':
                case 'W':
                    return number + '-ھەپتە';
                default:
                    return number;
            }
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week: {
            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
        },
    });

    return ugCn;

})));


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Ukrainian [uk]
//! author : zemlanin : https://github.com/zemlanin
//! Author : Menelion Elensúle : https://github.com/Oire

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11
            ? forms[0]
            : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)
            ? forms[1]
            : forms[2];
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',
            mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
            hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
            dd: 'день_дні_днів',
            MM: 'місяць_місяці_місяців',
            yy: 'рік_роки_років',
        };
        if (key === 'm') {
            return withoutSuffix ? 'хвилина' : 'хвилину';
        } else if (key === 'h') {
            return withoutSuffix ? 'година' : 'годину';
        } else {
            return number + ' ' + plural(format[key], +number);
        }
    }
    function weekdaysCaseReplace(m, format) {
        var weekdays = {
                nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split(
                    '_'
                ),
                accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split(
                    '_'
                ),
                genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split(
                    '_'
                ),
            },
            nounCase;

        if (m === true) {
            return weekdays['nominative']
                .slice(1, 7)
                .concat(weekdays['nominative'].slice(0, 1));
        }
        if (!m) {
            return weekdays['nominative'];
        }

        nounCase = /(\[[ВвУу]\]) ?dddd/.test(format)
            ? 'accusative'
            : /\[?(?:минулої|наступної)? ?\] ?dddd/.test(format)
            ? 'genitive'
            : 'nominative';
        return weekdays[nounCase][m.day()];
    }
    function processHoursFunction(str) {
        return function () {
            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
        };
    }

    var uk = moment.defineLocale('uk', {
        months: {
            format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split(
                '_'
            ),
            standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split(
                '_'
            ),
        },
        monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split(
            '_'
        ),
        weekdays: weekdaysCaseReplace,
        weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY р.',
            LLL: 'D MMMM YYYY р., HH:mm',
            LLLL: 'dddd, D MMMM YYYY р., HH:mm',
        },
        calendar: {
            sameDay: processHoursFunction('[Сьогодні '),
            nextDay: processHoursFunction('[Завтра '),
            lastDay: processHoursFunction('[Вчора '),
            nextWeek: processHoursFunction('[У] dddd ['),
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return processHoursFunction('[Минулої] dddd [').call(this);
                    case 1:
                    case 2:
                    case 4:
                        return processHoursFunction('[Минулого] dddd [').call(this);
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'за %s',
            past: '%s тому',
            s: 'декілька секунд',
            ss: relativeTimeWithPlural,
            m: relativeTimeWithPlural,
            mm: relativeTimeWithPlural,
            h: 'годину',
            hh: relativeTimeWithPlural,
            d: 'день',
            dd: relativeTimeWithPlural,
            M: 'місяць',
            MM: relativeTimeWithPlural,
            y: 'рік',
            yy: relativeTimeWithPlural,
        },
        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
        meridiemParse: /ночі|ранку|дня|вечора/,
        isPM: function (input) {
            return /^(дня|вечора)$/.test(input);
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночі';
            } else if (hour < 12) {
                return 'ранку';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечора';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                case 'w':
                case 'W':
                    return number + '-й';
                case 'D':
                    return number + '-го';
                default:
                    return number;
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return uk;

})));


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Urdu [ur]
//! author : Sawood Alam : https://github.com/ibnesayeed
//! author : Zack : https://github.com/ZackVision

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var months = [
            'جنوری',
            'فروری',
            'مارچ',
            'اپریل',
            'مئی',
            'جون',
            'جولائی',
            'اگست',
            'ستمبر',
            'اکتوبر',
            'نومبر',
            'دسمبر',
        ],
        days = ['اتوار', 'پیر', 'منگل', 'بدھ', 'جمعرات', 'جمعہ', 'ہفتہ'];

    var ur = moment.defineLocale('ur', {
        months: months,
        monthsShort: months,
        weekdays: days,
        weekdaysShort: days,
        weekdaysMin: days,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd، D MMMM YYYY HH:mm',
        },
        meridiemParse: /صبح|شام/,
        isPM: function (input) {
            return 'شام' === input;
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'صبح';
            }
            return 'شام';
        },
        calendar: {
            sameDay: '[آج بوقت] LT',
            nextDay: '[کل بوقت] LT',
            nextWeek: 'dddd [بوقت] LT',
            lastDay: '[گذشتہ روز بوقت] LT',
            lastWeek: '[گذشتہ] dddd [بوقت] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s بعد',
            past: '%s قبل',
            s: 'چند سیکنڈ',
            ss: '%d سیکنڈ',
            m: 'ایک منٹ',
            mm: '%d منٹ',
            h: 'ایک گھنٹہ',
            hh: '%d گھنٹے',
            d: 'ایک دن',
            dd: '%d دن',
            M: 'ایک ماہ',
            MM: '%d ماہ',
            y: 'ایک سال',
            yy: '%d سال',
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return ur;

})));


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Uzbek [uz]
//! author : Sardor Muminov : https://github.com/muminoff

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var uz = moment.defineLocale('uz', {
        months: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split(
            '_'
        ),
        monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
        weekdays: 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
        weekdaysShort: 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
        weekdaysMin: 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'D MMMM YYYY, dddd HH:mm',
        },
        calendar: {
            sameDay: '[Бугун соат] LT [да]',
            nextDay: '[Эртага] LT [да]',
            nextWeek: 'dddd [куни соат] LT [да]',
            lastDay: '[Кеча соат] LT [да]',
            lastWeek: '[Утган] dddd [куни соат] LT [да]',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'Якин %s ичида',
            past: 'Бир неча %s олдин',
            s: 'фурсат',
            ss: '%d фурсат',
            m: 'бир дакика',
            mm: '%d дакика',
            h: 'бир соат',
            hh: '%d соат',
            d: 'бир кун',
            dd: '%d кун',
            M: 'бир ой',
            MM: '%d ой',
            y: 'бир йил',
            yy: '%d йил',
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return uz;

})));


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Uzbek Latin [uz-latn]
//! author : Rasulbek Mirzayev : github.com/Rasulbeeek

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var uzLatn = moment.defineLocale('uz-latn', {
        months: 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split(
            '_'
        ),
        monthsShort: 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),
        weekdays: 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split(
            '_'
        ),
        weekdaysShort: 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
        weekdaysMin: 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'D MMMM YYYY, dddd HH:mm',
        },
        calendar: {
            sameDay: '[Bugun soat] LT [da]',
            nextDay: '[Ertaga] LT [da]',
            nextWeek: 'dddd [kuni soat] LT [da]',
            lastDay: '[Kecha soat] LT [da]',
            lastWeek: "[O'tgan] dddd [kuni soat] LT [da]",
            sameElse: 'L',
        },
        relativeTime: {
            future: 'Yaqin %s ichida',
            past: 'Bir necha %s oldin',
            s: 'soniya',
            ss: '%d soniya',
            m: 'bir daqiqa',
            mm: '%d daqiqa',
            h: 'bir soat',
            hh: '%d soat',
            d: 'bir kun',
            dd: '%d kun',
            M: 'bir oy',
            MM: '%d oy',
            y: 'bir yil',
            yy: '%d yil',
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return uzLatn;

})));


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Vietnamese [vi]
//! author : Bang Nguyen : https://github.com/bangnk
//! author : Chien Kira : https://github.com/chienkira

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var vi = moment.defineLocale('vi', {
        months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split(
            '_'
        ),
        monthsShort: 'Thg 01_Thg 02_Thg 03_Thg 04_Thg 05_Thg 06_Thg 07_Thg 08_Thg 09_Thg 10_Thg 11_Thg 12'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split(
            '_'
        ),
        weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysParseExact: true,
        meridiemParse: /sa|ch/i,
        isPM: function (input) {
            return /^ch$/i.test(input);
        },
        meridiem: function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower ? 'sa' : 'SA';
            } else {
                return isLower ? 'ch' : 'CH';
            }
        },
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM [năm] YYYY',
            LLL: 'D MMMM [năm] YYYY HH:mm',
            LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',
            l: 'DD/M/YYYY',
            ll: 'D MMM YYYY',
            lll: 'D MMM YYYY HH:mm',
            llll: 'ddd, D MMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Hôm nay lúc] LT',
            nextDay: '[Ngày mai lúc] LT',
            nextWeek: 'dddd [tuần tới lúc] LT',
            lastDay: '[Hôm qua lúc] LT',
            lastWeek: 'dddd [tuần trước lúc] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s tới',
            past: '%s trước',
            s: 'vài giây',
            ss: '%d giây',
            m: 'một phút',
            mm: '%d phút',
            h: 'một giờ',
            hh: '%d giờ',
            d: 'một ngày',
            dd: '%d ngày',
            M: 'một tháng',
            MM: '%d tháng',
            y: 'một năm',
            yy: '%d năm',
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal: function (number) {
            return number;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return vi;

})));


/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Pseudo [x-pseudo]
//! author : Andrew Hood : https://github.com/andrewhood125

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var xPseudo = moment.defineLocale('x-pseudo', {
        months: 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split(
            '_'
        ),
        monthsShort: 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split(
            '_'
        ),
        weekdaysShort: 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
        weekdaysMin: 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[T~ódá~ý át] LT',
            nextDay: '[T~ómó~rró~w át] LT',
            nextWeek: 'dddd [át] LT',
            lastDay: '[Ý~ést~érdá~ý át] LT',
            lastWeek: '[L~ást] dddd [át] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'í~ñ %s',
            past: '%s á~gó',
            s: 'á ~féw ~sécó~ñds',
            ss: '%d s~écóñ~ds',
            m: 'á ~míñ~úté',
            mm: '%d m~íñú~tés',
            h: 'á~ñ hó~úr',
            hh: '%d h~óúrs',
            d: 'á ~dáý',
            dd: '%d d~áýs',
            M: 'á ~móñ~th',
            MM: '%d m~óñt~hs',
            y: 'á ~ýéár',
            yy: '%d ý~éárs',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return xPseudo;

})));


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Yoruba Nigeria [yo]
//! author : Atolagbe Abisoye : https://github.com/andela-batolagbe

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var yo = moment.defineLocale('yo', {
        months: 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split(
            '_'
        ),
        monthsShort: 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
        weekdays: 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
        weekdaysShort: 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
        weekdaysMin: 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A',
        },
        calendar: {
            sameDay: '[Ònì ni] LT',
            nextDay: '[Ọ̀la ni] LT',
            nextWeek: "dddd [Ọsẹ̀ tón'bọ] [ni] LT",
            lastDay: '[Àna ni] LT',
            lastWeek: 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'ní %s',
            past: '%s kọjá',
            s: 'ìsẹjú aayá die',
            ss: 'aayá %d',
            m: 'ìsẹjú kan',
            mm: 'ìsẹjú %d',
            h: 'wákati kan',
            hh: 'wákati %d',
            d: 'ọjọ́ kan',
            dd: 'ọjọ́ %d',
            M: 'osù kan',
            MM: 'osù %d',
            y: 'ọdún kan',
            yy: 'ọdún %d',
        },
        dayOfMonthOrdinalParse: /ọjọ́\s\d{1,2}/,
        ordinal: 'ọjọ́ %d',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return yo;

})));


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (China) [zh-cn]
//! author : suupic : https://github.com/suupic
//! author : Zeno Zeng : https://github.com/zenozeng
//! author : uu109 : https://github.com/uu109

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var zhCn = moment.defineLocale('zh-cn', {
        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
            '_'
        ),
        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
            '_'
        ),
        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),
        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'YYYY年M月D日',
            LLL: 'YYYY年M月D日Ah点mm分',
            LLLL: 'YYYY年M月D日ddddAh点mm分',
            l: 'YYYY/M/D',
            ll: 'YYYY年M月D日',
            lll: 'YYYY年M月D日 HH:mm',
            llll: 'YYYY年M月D日dddd HH:mm',
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            } else {
                // '中午'
                return hour >= 11 ? hour : hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar: {
            sameDay: '[今天]LT',
            nextDay: '[明天]LT',
            nextWeek: function (now) {
                if (now.week() !== this.week()) {
                    return '[下]dddLT';
                } else {
                    return '[本]dddLT';
                }
            },
            lastDay: '[昨天]LT',
            lastWeek: function (now) {
                if (this.week() !== now.week()) {
                    return '[上]dddLT';
                } else {
                    return '[本]dddLT';
                }
            },
            sameElse: 'L',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                case 'M':
                    return number + '月';
                case 'w':
                case 'W':
                    return number + '周';
                default:
                    return number;
            }
        },
        relativeTime: {
            future: '%s后',
            past: '%s前',
            s: '几秒',
            ss: '%d 秒',
            m: '1 分钟',
            mm: '%d 分钟',
            h: '1 小时',
            hh: '%d 小时',
            d: '1 天',
            dd: '%d 天',
            M: '1 个月',
            MM: '%d 个月',
            y: '1 年',
            yy: '%d 年',
        },
        week: {
            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return zhCn;

})));


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (Hong Kong) [zh-hk]
//! author : Ben : https://github.com/ben-lin
//! author : Chris Lam : https://github.com/hehachris
//! author : Konstantin : https://github.com/skfd
//! author : Anthony : https://github.com/anthonylau

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var zhHk = moment.defineLocale('zh-hk', {
        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
            '_'
        ),
        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
            '_'
        ),
        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'YYYY年M月D日',
            LLL: 'YYYY年M月D日 HH:mm',
            LLLL: 'YYYY年M月D日dddd HH:mm',
            l: 'YYYY/M/D',
            ll: 'YYYY年M月D日',
            lll: 'YYYY年M月D日 HH:mm',
            llll: 'YYYY年M月D日dddd HH:mm',
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1200) {
                return '上午';
            } else if (hm === 1200) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar: {
            sameDay: '[今天]LT',
            nextDay: '[明天]LT',
            nextWeek: '[下]ddddLT',
            lastDay: '[昨天]LT',
            lastWeek: '[上]ddddLT',
            sameElse: 'L',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                case 'M':
                    return number + '月';
                case 'w':
                case 'W':
                    return number + '週';
                default:
                    return number;
            }
        },
        relativeTime: {
            future: '%s後',
            past: '%s前',
            s: '幾秒',
            ss: '%d 秒',
            m: '1 分鐘',
            mm: '%d 分鐘',
            h: '1 小時',
            hh: '%d 小時',
            d: '1 天',
            dd: '%d 天',
            M: '1 個月',
            MM: '%d 個月',
            y: '1 年',
            yy: '%d 年',
        },
    });

    return zhHk;

})));


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (Macau) [zh-mo]
//! author : Ben : https://github.com/ben-lin
//! author : Chris Lam : https://github.com/hehachris
//! author : Tan Yuanhong : https://github.com/le0tan

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var zhMo = moment.defineLocale('zh-mo', {
        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
            '_'
        ),
        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
            '_'
        ),
        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'YYYY年M月D日',
            LLL: 'YYYY年M月D日 HH:mm',
            LLLL: 'YYYY年M月D日dddd HH:mm',
            l: 'D/M/YYYY',
            ll: 'YYYY年M月D日',
            lll: 'YYYY年M月D日 HH:mm',
            llll: 'YYYY年M月D日dddd HH:mm',
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar: {
            sameDay: '[今天] LT',
            nextDay: '[明天] LT',
            nextWeek: '[下]dddd LT',
            lastDay: '[昨天] LT',
            lastWeek: '[上]dddd LT',
            sameElse: 'L',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                case 'M':
                    return number + '月';
                case 'w':
                case 'W':
                    return number + '週';
                default:
                    return number;
            }
        },
        relativeTime: {
            future: '%s內',
            past: '%s前',
            s: '幾秒',
            ss: '%d 秒',
            m: '1 分鐘',
            mm: '%d 分鐘',
            h: '1 小時',
            hh: '%d 小時',
            d: '1 天',
            dd: '%d 天',
            M: '1 個月',
            MM: '%d 個月',
            y: '1 年',
            yy: '%d 年',
        },
    });

    return zhMo;

})));


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (Taiwan) [zh-tw]
//! author : Ben : https://github.com/ben-lin
//! author : Chris Lam : https://github.com/hehachris

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var zhTw = moment.defineLocale('zh-tw', {
        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
            '_'
        ),
        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
            '_'
        ),
        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'YYYY年M月D日',
            LLL: 'YYYY年M月D日 HH:mm',
            LLLL: 'YYYY年M月D日dddd HH:mm',
            l: 'YYYY/M/D',
            ll: 'YYYY年M月D日',
            lll: 'YYYY年M月D日 HH:mm',
            llll: 'YYYY年M月D日dddd HH:mm',
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar: {
            sameDay: '[今天] LT',
            nextDay: '[明天] LT',
            nextWeek: '[下]dddd LT',
            lastDay: '[昨天] LT',
            lastWeek: '[上]dddd LT',
            sameElse: 'L',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                case 'M':
                    return number + '月';
                case 'w':
                case 'W':
                    return number + '週';
                default:
                    return number;
            }
        },
        relativeTime: {
            future: '%s後',
            past: '%s前',
            s: '幾秒',
            ss: '%d 秒',
            m: '1 分鐘',
            mm: '%d 分鐘',
            h: '1 小時',
            hh: '%d 小時',
            d: '1 天',
            dd: '%d 天',
            M: '1 個月',
            MM: '%d 個月',
            y: '1 年',
            yy: '%d 年',
        },
    });

    return zhTw;

})));


/***/ }),
/* 199 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return empty; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__config__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_hostReportError__ = __webpack_require__(46);
/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */


var empty = {
    closed: true,
    next: function (value) { },
    error: function (err) {
        if (__WEBPACK_IMPORTED_MODULE_0__config__["a" /* config */].useDeprecatedSynchronousErrorHandling) {
            throw err;
        }
        else {
            Object(__WEBPACK_IMPORTED_MODULE_1__util_hostReportError__["a" /* hostReportError */])(err);
        }
    },
    complete: function () { }
};
//# sourceMappingURL=Observer.js.map


/***/ }),
/* 200 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UnsubscriptionError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var UnsubscriptionErrorImpl = /*@__PURE__*/ (function () {
    function UnsubscriptionErrorImpl(errors) {
        Error.call(this);
        this.message = errors ?
            errors.length + " errors occurred during unsubscription:\n" + errors.map(function (err, i) { return i + 1 + ") " + err.toString(); }).join('\n  ') : '';
        this.name = 'UnsubscriptionError';
        this.errors = errors;
        return this;
    }
    UnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return UnsubscriptionErrorImpl;
})();
var UnsubscriptionError = UnsubscriptionErrorImpl;
//# sourceMappingURL=UnsubscriptionError.js.map


/***/ }),
/* 201 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ConnectableObservable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return connectableObservableDescriptor; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subject__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Subscription__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__operators_refCount__ = __webpack_require__(50);
/** PURE_IMPORTS_START tslib,_Subject,_Observable,_Subscriber,_Subscription,_operators_refCount PURE_IMPORTS_END */






var ConnectableObservable = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ConnectableObservable, _super);
    function ConnectableObservable(source, subjectFactory) {
        var _this = _super.call(this) || this;
        _this.source = source;
        _this.subjectFactory = subjectFactory;
        _this._refCount = 0;
        _this._isComplete = false;
        return _this;
    }
    ConnectableObservable.prototype._subscribe = function (subscriber) {
        return this.getSubject().subscribe(subscriber);
    };
    ConnectableObservable.prototype.getSubject = function () {
        var subject = this._subject;
        if (!subject || subject.isStopped) {
            this._subject = this.subjectFactory();
        }
        return this._subject;
    };
    ConnectableObservable.prototype.connect = function () {
        var connection = this._connection;
        if (!connection) {
            this._isComplete = false;
            connection = this._connection = new __WEBPACK_IMPORTED_MODULE_4__Subscription__["a" /* Subscription */]();
            connection.add(this.source
                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));
            if (connection.closed) {
                this._connection = null;
                connection = __WEBPACK_IMPORTED_MODULE_4__Subscription__["a" /* Subscription */].EMPTY;
            }
        }
        return connection;
    };
    ConnectableObservable.prototype.refCount = function () {
        return Object(__WEBPACK_IMPORTED_MODULE_5__operators_refCount__["a" /* refCount */])()(this);
    };
    return ConnectableObservable;
}(__WEBPACK_IMPORTED_MODULE_2__Observable__["a" /* Observable */]));

var connectableObservableDescriptor = /*@__PURE__*/ (function () {
    var connectableProto = ConnectableObservable.prototype;
    return {
        operator: { value: null },
        _refCount: { value: 0, writable: true },
        _subject: { value: null, writable: true },
        _connection: { value: null, writable: true },
        _subscribe: { value: connectableProto._subscribe },
        _isComplete: { value: connectableProto._isComplete, writable: true },
        getSubject: { value: connectableProto.getSubject },
        connect: { value: connectableProto.connect },
        refCount: { value: connectableProto.refCount }
    };
})();
var ConnectableSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ConnectableSubscriber, _super);
    function ConnectableSubscriber(destination, connectable) {
        var _this = _super.call(this, destination) || this;
        _this.connectable = connectable;
        return _this;
    }
    ConnectableSubscriber.prototype._error = function (err) {
        this._unsubscribe();
        _super.prototype._error.call(this, err);
    };
    ConnectableSubscriber.prototype._complete = function () {
        this.connectable._isComplete = true;
        this._unsubscribe();
        _super.prototype._complete.call(this);
    };
    ConnectableSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (connectable) {
            this.connectable = null;
            var connection = connectable._connection;
            connectable._refCount = 0;
            connectable._subject = null;
            connectable._connection = null;
            if (connection) {
                connection.unsubscribe();
            }
        }
    };
    return ConnectableSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subject__["b" /* SubjectSubscriber */]));
var RefCountOperator = /*@__PURE__*/ (function () {
    function RefCountOperator(connectable) {
        this.connectable = connectable;
    }
    RefCountOperator.prototype.call = function (subscriber, source) {
        var connectable = this.connectable;
        connectable._refCount++;
        var refCounter = new RefCountSubscriber(subscriber, connectable);
        var subscription = source.subscribe(refCounter);
        if (!refCounter.closed) {
            refCounter.connection = connectable.connect();
        }
        return subscription;
    };
    return RefCountOperator;
}());
var RefCountSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](RefCountSubscriber, _super);
    function RefCountSubscriber(destination, connectable) {
        var _this = _super.call(this, destination) || this;
        _this.connectable = connectable;
        return _this;
    }
    RefCountSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (!connectable) {
            this.connection = null;
            return;
        }
        this.connectable = null;
        var refCount = connectable._refCount;
        if (refCount <= 0) {
            this.connection = null;
            return;
        }
        connectable._refCount = refCount - 1;
        if (refCount > 1) {
            this.connection = null;
            return;
        }
        var connection = this.connection;
        var sharedConnection = connectable._connection;
        this.connection = null;
        if (sharedConnection && (!connection || sharedConnection === connection)) {
            sharedConnection.unsubscribe();
        }
    };
    return RefCountSubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=ConnectableObservable.js.map


/***/ }),
/* 202 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SubjectSubscription; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscription__ = __webpack_require__(7);
/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */


var SubjectSubscription = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SubjectSubscription, _super);
    function SubjectSubscription(subject, subscriber) {
        var _this = _super.call(this) || this;
        _this.subject = subject;
        _this.subscriber = subscriber;
        _this.closed = false;
        return _this;
    }
    SubjectSubscription.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.closed = true;
        var subject = this.subject;
        var observers = subject.observers;
        this.subject = null;
        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {
            return;
        }
        var subscriberIndex = observers.indexOf(this.subscriber);
        if (subscriberIndex !== -1) {
            observers.splice(subscriberIndex, 1);
        }
    };
    return SubjectSubscription;
}(__WEBPACK_IMPORTED_MODULE_1__Subscription__["a" /* Subscription */]));

//# sourceMappingURL=SubjectSubscription.js.map


/***/ }),
/* 203 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["b"] = groupBy;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GroupedObservable; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subscription__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Subject__ = __webpack_require__(10);
/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription,_Observable,_Subject PURE_IMPORTS_END */





function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {
    return function (source) {
        return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));
    };
}
var GroupByOperator = /*@__PURE__*/ (function () {
    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {
        this.keySelector = keySelector;
        this.elementSelector = elementSelector;
        this.durationSelector = durationSelector;
        this.subjectSelector = subjectSelector;
    }
    GroupByOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));
    };
    return GroupByOperator;
}());
var GroupBySubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](GroupBySubscriber, _super);
    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {
        var _this = _super.call(this, destination) || this;
        _this.keySelector = keySelector;
        _this.elementSelector = elementSelector;
        _this.durationSelector = durationSelector;
        _this.subjectSelector = subjectSelector;
        _this.groups = null;
        _this.attemptedToUnsubscribe = false;
        _this.count = 0;
        return _this;
    }
    GroupBySubscriber.prototype._next = function (value) {
        var key;
        try {
            key = this.keySelector(value);
        }
        catch (err) {
            this.error(err);
            return;
        }
        this._group(value, key);
    };
    GroupBySubscriber.prototype._group = function (value, key) {
        var groups = this.groups;
        if (!groups) {
            groups = this.groups = new Map();
        }
        var group = groups.get(key);
        var element;
        if (this.elementSelector) {
            try {
                element = this.elementSelector(value);
            }
            catch (err) {
                this.error(err);
            }
        }
        else {
            element = value;
        }
        if (!group) {
            group = (this.subjectSelector ? this.subjectSelector() : new __WEBPACK_IMPORTED_MODULE_4__Subject__["a" /* Subject */]());
            groups.set(key, group);
            var groupedObservable = new GroupedObservable(key, group, this);
            this.destination.next(groupedObservable);
            if (this.durationSelector) {
                var duration = void 0;
                try {
                    duration = this.durationSelector(new GroupedObservable(key, group));
                }
                catch (err) {
                    this.error(err);
                    return;
                }
                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));
            }
        }
        if (!group.closed) {
            group.next(element);
        }
    };
    GroupBySubscriber.prototype._error = function (err) {
        var groups = this.groups;
        if (groups) {
            groups.forEach(function (group, key) {
                group.error(err);
            });
            groups.clear();
        }
        this.destination.error(err);
    };
    GroupBySubscriber.prototype._complete = function () {
        var groups = this.groups;
        if (groups) {
            groups.forEach(function (group, key) {
                group.complete();
            });
            groups.clear();
        }
        this.destination.complete();
    };
    GroupBySubscriber.prototype.removeGroup = function (key) {
        this.groups.delete(key);
    };
    GroupBySubscriber.prototype.unsubscribe = function () {
        if (!this.closed) {
            this.attemptedToUnsubscribe = true;
            if (this.count === 0) {
                _super.prototype.unsubscribe.call(this);
            }
        }
    };
    return GroupBySubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
var GroupDurationSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](GroupDurationSubscriber, _super);
    function GroupDurationSubscriber(key, group, parent) {
        var _this = _super.call(this, group) || this;
        _this.key = key;
        _this.group = group;
        _this.parent = parent;
        return _this;
    }
    GroupDurationSubscriber.prototype._next = function (value) {
        this.complete();
    };
    GroupDurationSubscriber.prototype._unsubscribe = function () {
        var _a = this, parent = _a.parent, key = _a.key;
        this.key = this.parent = null;
        if (parent) {
            parent.removeGroup(key);
        }
    };
    return GroupDurationSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
var GroupedObservable = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](GroupedObservable, _super);
    function GroupedObservable(key, groupSubject, refCountSubscription) {
        var _this = _super.call(this) || this;
        _this.key = key;
        _this.groupSubject = groupSubject;
        _this.refCountSubscription = refCountSubscription;
        return _this;
    }
    GroupedObservable.prototype._subscribe = function (subscriber) {
        var subscription = new __WEBPACK_IMPORTED_MODULE_2__Subscription__["a" /* Subscription */]();
        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;
        if (refCountSubscription && !refCountSubscription.closed) {
            subscription.add(new InnerRefCountSubscription(refCountSubscription));
        }
        subscription.add(groupSubject.subscribe(subscriber));
        return subscription;
    };
    return GroupedObservable;
}(__WEBPACK_IMPORTED_MODULE_3__Observable__["a" /* Observable */]));

var InnerRefCountSubscription = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](InnerRefCountSubscription, _super);
    function InnerRefCountSubscription(parent) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        parent.count++;
        return _this;
    }
    InnerRefCountSubscription.prototype.unsubscribe = function () {
        var parent = this.parent;
        if (!parent.closed && !this.closed) {
            _super.prototype.unsubscribe.call(this);
            parent.count -= 1;
            if (parent.count === 0 && parent.attemptedToUnsubscribe) {
                parent.unsubscribe();
            }
        }
    };
    return InnerRefCountSubscription;
}(__WEBPACK_IMPORTED_MODULE_2__Subscription__["a" /* Subscription */]));
//# sourceMappingURL=groupBy.js.map


/***/ }),
/* 204 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BehaviorSubject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subject__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_ObjectUnsubscribedError__ = __webpack_require__(34);
/** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */



var BehaviorSubject = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](BehaviorSubject, _super);
    function BehaviorSubject(_value) {
        var _this = _super.call(this) || this;
        _this._value = _value;
        return _this;
    }
    Object.defineProperty(BehaviorSubject.prototype, "value", {
        get: function () {
            return this.getValue();
        },
        enumerable: true,
        configurable: true
    });
    BehaviorSubject.prototype._subscribe = function (subscriber) {
        var subscription = _super.prototype._subscribe.call(this, subscriber);
        if (subscription && !subscription.closed) {
            subscriber.next(this._value);
        }
        return subscription;
    };
    BehaviorSubject.prototype.getValue = function () {
        if (this.hasError) {
            throw this.thrownError;
        }
        else if (this.closed) {
            throw new __WEBPACK_IMPORTED_MODULE_2__util_ObjectUnsubscribedError__["a" /* ObjectUnsubscribedError */]();
        }
        else {
            return this._value;
        }
    };
    BehaviorSubject.prototype.next = function (value) {
        _super.prototype.next.call(this, this._value = value);
    };
    return BehaviorSubject;
}(__WEBPACK_IMPORTED_MODULE_1__Subject__["a" /* Subject */]));

//# sourceMappingURL=BehaviorSubject.js.map


/***/ }),
/* 205 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return queue; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__QueueAction__ = __webpack_require__(256);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__QueueScheduler__ = __webpack_require__(258);
/** PURE_IMPORTS_START _QueueAction,_QueueScheduler PURE_IMPORTS_END */


var queue = /*@__PURE__*/ new __WEBPACK_IMPORTED_MODULE_1__QueueScheduler__["a" /* QueueScheduler */](__WEBPACK_IMPORTED_MODULE_0__QueueAction__["a" /* QueueAction */]);
//# sourceMappingURL=queue.js.map


/***/ }),
/* 206 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Scheduler; });
var Scheduler = /*@__PURE__*/ (function () {
    function Scheduler(SchedulerAction, now) {
        if (now === void 0) {
            now = Scheduler.now;
        }
        this.SchedulerAction = SchedulerAction;
        this.now = now;
    }
    Scheduler.prototype.schedule = function (work, delay, state) {
        if (delay === void 0) {
            delay = 0;
        }
        return new this.SchedulerAction(this, work).schedule(state, delay);
    };
    Scheduler.now = function () { return Date.now(); };
    return Scheduler;
}());

//# sourceMappingURL=Scheduler.js.map


/***/ }),
/* 207 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["b"] = observeOn;
/* unused harmony export ObserveOnOperator */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ObserveOnSubscriber; });
/* unused harmony export ObserveOnMessage */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Notification__ = __webpack_require__(35);
/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */



function observeOn(scheduler, delay) {
    if (delay === void 0) {
        delay = 0;
    }
    return function observeOnOperatorFunction(source) {
        return source.lift(new ObserveOnOperator(scheduler, delay));
    };
}
var ObserveOnOperator = /*@__PURE__*/ (function () {
    function ObserveOnOperator(scheduler, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        this.scheduler = scheduler;
        this.delay = delay;
    }
    ObserveOnOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));
    };
    return ObserveOnOperator;
}());

var ObserveOnSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ObserveOnSubscriber, _super);
    function ObserveOnSubscriber(destination, scheduler, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        var _this = _super.call(this, destination) || this;
        _this.scheduler = scheduler;
        _this.delay = delay;
        return _this;
    }
    ObserveOnSubscriber.dispatch = function (arg) {
        var notification = arg.notification, destination = arg.destination;
        notification.observe(destination);
        this.unsubscribe();
    };
    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {
        var destination = this.destination;
        destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));
    };
    ObserveOnSubscriber.prototype._next = function (value) {
        this.scheduleMessage(__WEBPACK_IMPORTED_MODULE_2__Notification__["a" /* Notification */].createNext(value));
    };
    ObserveOnSubscriber.prototype._error = function (err) {
        this.scheduleMessage(__WEBPACK_IMPORTED_MODULE_2__Notification__["a" /* Notification */].createError(err));
        this.unsubscribe();
    };
    ObserveOnSubscriber.prototype._complete = function () {
        this.scheduleMessage(__WEBPACK_IMPORTED_MODULE_2__Notification__["a" /* Notification */].createComplete());
        this.unsubscribe();
    };
    return ObserveOnSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));

var ObserveOnMessage = /*@__PURE__*/ (function () {
    function ObserveOnMessage(notification, destination) {
        this.notification = notification;
        this.destination = destination;
    }
    return ObserveOnMessage;
}());

//# sourceMappingURL=observeOn.js.map


/***/ }),
/* 208 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return subscribeToArray; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var subscribeToArray = function (array) {
    return function (subscriber) {
        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {
            subscriber.next(array[i]);
        }
        subscriber.complete();
    };
};
//# sourceMappingURL=subscribeToArray.js.map


/***/ }),
/* 209 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return asap; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__AsapAction__ = __webpack_require__(259);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AsapScheduler__ = __webpack_require__(261);
/** PURE_IMPORTS_START _AsapAction,_AsapScheduler PURE_IMPORTS_END */


var asap = /*@__PURE__*/ new __WEBPACK_IMPORTED_MODULE_1__AsapScheduler__["a" /* AsapScheduler */](__WEBPACK_IMPORTED_MODULE_0__AsapAction__["a" /* AsapAction */]);
//# sourceMappingURL=asap.js.map


/***/ }),
/* 210 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TimeoutError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var TimeoutErrorImpl = /*@__PURE__*/ (function () {
    function TimeoutErrorImpl() {
        Error.call(this);
        this.message = 'Timeout has occurred';
        this.name = 'TimeoutError';
        return this;
    }
    TimeoutErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return TimeoutErrorImpl;
})();
var TimeoutError = TimeoutErrorImpl;
//# sourceMappingURL=TimeoutError.js.map


/***/ }),
/* 211 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return isArrayLike; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });
//# sourceMappingURL=isArrayLike.js.map


/***/ }),
/* 212 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isPromise;
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isPromise(value) {
    return !!value && typeof value.subscribe !== 'function' && typeof value.then === 'function';
}
//# sourceMappingURL=isPromise.js.map


/***/ }),
/* 213 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = concatAll;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mergeAll__ = __webpack_require__(57);
/** PURE_IMPORTS_START _mergeAll PURE_IMPORTS_END */

function concatAll() {
    return Object(__WEBPACK_IMPORTED_MODULE_0__mergeAll__["a" /* mergeAll */])(1);
}
//# sourceMappingURL=concatAll.js.map


/***/ }),
/* 214 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = scheduled;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scheduleObservable__ = __webpack_require__(272);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__schedulePromise__ = __webpack_require__(273);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scheduleArray__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__scheduleIterable__ = __webpack_require__(274);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_isInteropObservable__ = __webpack_require__(275);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_isPromise__ = __webpack_require__(212);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__util_isArrayLike__ = __webpack_require__(211);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__util_isIterable__ = __webpack_require__(276);
/** PURE_IMPORTS_START _scheduleObservable,_schedulePromise,_scheduleArray,_scheduleIterable,_util_isInteropObservable,_util_isPromise,_util_isArrayLike,_util_isIterable PURE_IMPORTS_END */








function scheduled(input, scheduler) {
    if (input != null) {
        if (Object(__WEBPACK_IMPORTED_MODULE_4__util_isInteropObservable__["a" /* isInteropObservable */])(input)) {
            return Object(__WEBPACK_IMPORTED_MODULE_0__scheduleObservable__["a" /* scheduleObservable */])(input, scheduler);
        }
        else if (Object(__WEBPACK_IMPORTED_MODULE_5__util_isPromise__["a" /* isPromise */])(input)) {
            return Object(__WEBPACK_IMPORTED_MODULE_1__schedulePromise__["a" /* schedulePromise */])(input, scheduler);
        }
        else if (Object(__WEBPACK_IMPORTED_MODULE_6__util_isArrayLike__["a" /* isArrayLike */])(input)) {
            return Object(__WEBPACK_IMPORTED_MODULE_2__scheduleArray__["a" /* scheduleArray */])(input, scheduler);
        }
        else if (Object(__WEBPACK_IMPORTED_MODULE_7__util_isIterable__["a" /* isIterable */])(input) || typeof input === 'string') {
            return Object(__WEBPACK_IMPORTED_MODULE_3__scheduleIterable__["a" /* scheduleIterable */])(input, scheduler);
        }
    }
    throw new TypeError((input !== null && typeof input || input) + ' is not observable');
}
//# sourceMappingURL=scheduled.js.map


/***/ }),
/* 215 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = merge;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_isScheduler__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__operators_mergeAll__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fromArray__ = __webpack_require__(25);
/** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */




function merge() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var concurrent = Number.POSITIVE_INFINITY;
    var scheduler = null;
    var last = observables[observables.length - 1];
    if (Object(__WEBPACK_IMPORTED_MODULE_1__util_isScheduler__["a" /* isScheduler */])(last)) {
        scheduler = observables.pop();
        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {
            concurrent = observables.pop();
        }
    }
    else if (typeof last === 'number') {
        concurrent = observables.pop();
    }
    if (scheduler === null && observables.length === 1 && observables[0] instanceof __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */]) {
        return observables[0];
    }
    return Object(__WEBPACK_IMPORTED_MODULE_2__operators_mergeAll__["a" /* mergeAll */])(concurrent)(Object(__WEBPACK_IMPORTED_MODULE_3__fromArray__["a" /* fromArray */])(observables, scheduler));
}
//# sourceMappingURL=merge.js.map


/***/ }),
/* 216 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NEVER; });
/* harmony export (immutable) */ __webpack_exports__["b"] = never;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_noop__ = __webpack_require__(54);
/** PURE_IMPORTS_START _Observable,_util_noop PURE_IMPORTS_END */


var NEVER = /*@__PURE__*/ new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](__WEBPACK_IMPORTED_MODULE_1__util_noop__["a" /* noop */]);
function never() {
    return NEVER;
}
//# sourceMappingURL=never.js.map


/***/ }),
/* 217 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = not;
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function not(pred, thisArg) {
    function notPred() {
        return !(notPred.pred.apply(notPred.thisArg, arguments));
    }
    notPred.pred = pred;
    notPred.thisArg = thisArg;
    return notPred;
}
//# sourceMappingURL=not.js.map


/***/ }),
/* 218 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = race;
/* unused harmony export RaceOperator */
/* unused harmony export RaceSubscriber */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_isArray__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__fromArray__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_util_isArray,_fromArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





function race() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    if (observables.length === 1) {
        if (Object(__WEBPACK_IMPORTED_MODULE_1__util_isArray__["a" /* isArray */])(observables[0])) {
            observables = observables[0];
        }
        else {
            return observables[0];
        }
    }
    return Object(__WEBPACK_IMPORTED_MODULE_2__fromArray__["a" /* fromArray */])(observables, undefined).lift(new RaceOperator());
}
var RaceOperator = /*@__PURE__*/ (function () {
    function RaceOperator() {
    }
    RaceOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RaceSubscriber(subscriber));
    };
    return RaceOperator;
}());

var RaceSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](RaceSubscriber, _super);
    function RaceSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.hasFirst = false;
        _this.observables = [];
        _this.subscriptions = [];
        return _this;
    }
    RaceSubscriber.prototype._next = function (observable) {
        this.observables.push(observable);
    };
    RaceSubscriber.prototype._complete = function () {
        var observables = this.observables;
        var len = observables.length;
        if (len === 0) {
            this.destination.complete();
        }
        else {
            for (var i = 0; i < len && !this.hasFirst; i++) {
                var observable = observables[i];
                var subscription = Object(__WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__["a" /* subscribeToResult */])(this, observable, observable, i);
                if (this.subscriptions) {
                    this.subscriptions.push(subscription);
                }
                this.add(subscription);
            }
            this.observables = null;
        }
    };
    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (!this.hasFirst) {
            this.hasFirst = true;
            for (var i = 0; i < this.subscriptions.length; i++) {
                if (i !== outerIndex) {
                    var subscription = this.subscriptions[i];
                    subscription.unsubscribe();
                    this.remove(subscription);
                }
            }
            this.subscriptions = null;
        }
        this.destination.next(innerValue);
    };
    return RaceSubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__["a" /* OuterSubscriber */]));

//# sourceMappingURL=race.js.map


/***/ }),
/* 219 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = timer;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__scheduler_async__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isNumeric__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_isScheduler__ = __webpack_require__(15);
/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */




function timer(dueTime, periodOrScheduler, scheduler) {
    if (dueTime === void 0) {
        dueTime = 0;
    }
    var period = -1;
    if (Object(__WEBPACK_IMPORTED_MODULE_2__util_isNumeric__["a" /* isNumeric */])(periodOrScheduler)) {
        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);
    }
    else if (Object(__WEBPACK_IMPORTED_MODULE_3__util_isScheduler__["a" /* isScheduler */])(periodOrScheduler)) {
        scheduler = periodOrScheduler;
    }
    if (!Object(__WEBPACK_IMPORTED_MODULE_3__util_isScheduler__["a" /* isScheduler */])(scheduler)) {
        scheduler = __WEBPACK_IMPORTED_MODULE_1__scheduler_async__["a" /* async */];
    }
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var due = Object(__WEBPACK_IMPORTED_MODULE_2__util_isNumeric__["a" /* isNumeric */])(dueTime)
            ? dueTime
            : (+dueTime - scheduler.now());
        return scheduler.schedule(dispatch, due, {
            index: 0, period: period, subscriber: subscriber
        });
    });
}
function dispatch(state) {
    var index = state.index, period = state.period, subscriber = state.subscriber;
    subscriber.next(index);
    if (subscriber.closed) {
        return;
    }
    else if (period === -1) {
        return subscriber.complete();
    }
    state.index = index + 1;
    this.schedule(state, period);
}
//# sourceMappingURL=timer.js.map


/***/ }),
/* 220 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = audit;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function audit(durationSelector) {
    return function auditOperatorFunction(source) {
        return source.lift(new AuditOperator(durationSelector));
    };
}
var AuditOperator = /*@__PURE__*/ (function () {
    function AuditOperator(durationSelector) {
        this.durationSelector = durationSelector;
    }
    AuditOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));
    };
    return AuditOperator;
}());
var AuditSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](AuditSubscriber, _super);
    function AuditSubscriber(destination, durationSelector) {
        var _this = _super.call(this, destination) || this;
        _this.durationSelector = durationSelector;
        _this.hasValue = false;
        return _this;
    }
    AuditSubscriber.prototype._next = function (value) {
        this.value = value;
        this.hasValue = true;
        if (!this.throttled) {
            var duration = void 0;
            try {
                var durationSelector = this.durationSelector;
                duration = durationSelector(value);
            }
            catch (err) {
                return this.destination.error(err);
            }
            var innerSubscription = Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(this, duration);
            if (!innerSubscription || innerSubscription.closed) {
                this.clearThrottle();
            }
            else {
                this.add(this.throttled = innerSubscription);
            }
        }
    };
    AuditSubscriber.prototype.clearThrottle = function () {
        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;
        if (throttled) {
            this.remove(throttled);
            this.throttled = null;
            throttled.unsubscribe();
        }
        if (hasValue) {
            this.value = null;
            this.hasValue = false;
            this.destination.next(value);
        }
    };
    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {
        this.clearThrottle();
    };
    AuditSubscriber.prototype.notifyComplete = function () {
        this.clearThrottle();
    };
    return AuditSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=audit.js.map


/***/ }),
/* 221 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = concatMap;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mergeMap__ = __webpack_require__(29);
/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */

function concatMap(project, resultSelector) {
    return Object(__WEBPACK_IMPORTED_MODULE_0__mergeMap__["a" /* mergeMap */])(project, resultSelector, 1);
}
//# sourceMappingURL=concatMap.js.map


/***/ }),
/* 222 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isDate;
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isDate(value) {
    return value instanceof Date && !isNaN(+value);
}
//# sourceMappingURL=isDate.js.map


/***/ }),
/* 223 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = distinctUntilChanged;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function distinctUntilChanged(compare, keySelector) {
    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };
}
var DistinctUntilChangedOperator = /*@__PURE__*/ (function () {
    function DistinctUntilChangedOperator(compare, keySelector) {
        this.compare = compare;
        this.keySelector = keySelector;
    }
    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));
    };
    return DistinctUntilChangedOperator;
}());
var DistinctUntilChangedSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](DistinctUntilChangedSubscriber, _super);
    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {
        var _this = _super.call(this, destination) || this;
        _this.keySelector = keySelector;
        _this.hasKey = false;
        if (typeof compare === 'function') {
            _this.compare = compare;
        }
        return _this;
    }
    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {
        return x === y;
    };
    DistinctUntilChangedSubscriber.prototype._next = function (value) {
        var key;
        try {
            var keySelector = this.keySelector;
            key = keySelector ? keySelector(value) : value;
        }
        catch (err) {
            return this.destination.error(err);
        }
        var result = false;
        if (this.hasKey) {
            try {
                var compare = this.compare;
                result = compare(this.key, key);
            }
            catch (err) {
                return this.destination.error(err);
            }
        }
        else {
            this.hasKey = true;
        }
        if (!result) {
            this.key = key;
            this.destination.next(value);
        }
    };
    return DistinctUntilChangedSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=distinctUntilChanged.js.map


/***/ }),
/* 224 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["b"] = find;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FindValueOperator; });
/* unused harmony export FindValueSubscriber */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function find(predicate, thisArg) {
    if (typeof predicate !== 'function') {
        throw new TypeError('predicate is not a function');
    }
    return function (source) { return source.lift(new FindValueOperator(predicate, source, false, thisArg)); };
}
var FindValueOperator = /*@__PURE__*/ (function () {
    function FindValueOperator(predicate, source, yieldIndex, thisArg) {
        this.predicate = predicate;
        this.source = source;
        this.yieldIndex = yieldIndex;
        this.thisArg = thisArg;
    }
    FindValueOperator.prototype.call = function (observer, source) {
        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));
    };
    return FindValueOperator;
}());

var FindValueSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](FindValueSubscriber, _super);
    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.source = source;
        _this.yieldIndex = yieldIndex;
        _this.thisArg = thisArg;
        _this.index = 0;
        return _this;
    }
    FindValueSubscriber.prototype.notifyComplete = function (value) {
        var destination = this.destination;
        destination.next(value);
        destination.complete();
        this.unsubscribe();
    };
    FindValueSubscriber.prototype._next = function (value) {
        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;
        var index = this.index++;
        try {
            var result = predicate.call(thisArg || this, value, index, this.source);
            if (result) {
                this.notifyComplete(this.yieldIndex ? index : value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    FindValueSubscriber.prototype._complete = function () {
        this.notifyComplete(this.yieldIndex ? -1 : undefined);
    };
    return FindValueSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));

//# sourceMappingURL=find.js.map


/***/ }),
/* 225 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return defaultThrottleConfig; });
/* harmony export (immutable) */ __webpack_exports__["b"] = throttle;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



var defaultThrottleConfig = {
    leading: true,
    trailing: false
};
function throttle(durationSelector, config) {
    if (config === void 0) {
        config = defaultThrottleConfig;
    }
    return function (source) { return source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing)); };
}
var ThrottleOperator = /*@__PURE__*/ (function () {
    function ThrottleOperator(durationSelector, leading, trailing) {
        this.durationSelector = durationSelector;
        this.leading = leading;
        this.trailing = trailing;
    }
    ThrottleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));
    };
    return ThrottleOperator;
}());
var ThrottleSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ThrottleSubscriber, _super);
    function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.durationSelector = durationSelector;
        _this._leading = _leading;
        _this._trailing = _trailing;
        _this._hasValue = false;
        return _this;
    }
    ThrottleSubscriber.prototype._next = function (value) {
        this._hasValue = true;
        this._sendValue = value;
        if (!this._throttled) {
            if (this._leading) {
                this.send();
            }
            else {
                this.throttle(value);
            }
        }
    };
    ThrottleSubscriber.prototype.send = function () {
        var _a = this, _hasValue = _a._hasValue, _sendValue = _a._sendValue;
        if (_hasValue) {
            this.destination.next(_sendValue);
            this.throttle(_sendValue);
        }
        this._hasValue = false;
        this._sendValue = null;
    };
    ThrottleSubscriber.prototype.throttle = function (value) {
        var duration = this.tryDurationSelector(value);
        if (!!duration) {
            this.add(this._throttled = Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(this, duration));
        }
    };
    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {
        try {
            return this.durationSelector(value);
        }
        catch (err) {
            this.destination.error(err);
            return null;
        }
    };
    ThrottleSubscriber.prototype.throttlingDone = function () {
        var _a = this, _throttled = _a._throttled, _trailing = _a._trailing;
        if (_throttled) {
            _throttled.unsubscribe();
        }
        this._throttled = null;
        if (_trailing) {
            this.send();
        }
    };
    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.throttlingDone();
    };
    ThrottleSubscriber.prototype.notifyComplete = function () {
        this.throttlingDone();
    };
    return ThrottleSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=throttle.js.map


/***/ }),
/* 226 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = timeoutWith;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__scheduler_async__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isDate__ = __webpack_require__(222);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





function timeoutWith(due, withObservable, scheduler) {
    if (scheduler === void 0) {
        scheduler = __WEBPACK_IMPORTED_MODULE_1__scheduler_async__["a" /* async */];
    }
    return function (source) {
        var absoluteTimeout = Object(__WEBPACK_IMPORTED_MODULE_2__util_isDate__["a" /* isDate */])(due);
        var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);
        return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));
    };
}
var TimeoutWithOperator = /*@__PURE__*/ (function () {
    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {
        this.waitFor = waitFor;
        this.absoluteTimeout = absoluteTimeout;
        this.withObservable = withObservable;
        this.scheduler = scheduler;
    }
    TimeoutWithOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));
    };
    return TimeoutWithOperator;
}());
var TimeoutWithSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](TimeoutWithSubscriber, _super);
    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.absoluteTimeout = absoluteTimeout;
        _this.waitFor = waitFor;
        _this.withObservable = withObservable;
        _this.scheduler = scheduler;
        _this.action = null;
        _this.scheduleTimeout();
        return _this;
    }
    TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {
        var withObservable = subscriber.withObservable;
        subscriber._unsubscribeAndRecycle();
        subscriber.add(Object(__WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__["a" /* subscribeToResult */])(subscriber, withObservable));
    };
    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {
        var action = this.action;
        if (action) {
            this.action = action.schedule(this, this.waitFor);
        }
        else {
            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));
        }
    };
    TimeoutWithSubscriber.prototype._next = function (value) {
        if (!this.absoluteTimeout) {
            this.scheduleTimeout();
        }
        _super.prototype._next.call(this, value);
    };
    TimeoutWithSubscriber.prototype._unsubscribe = function () {
        this.action = null;
        this.scheduler = null;
        this.withObservable = null;
    };
    return TimeoutWithSubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=timeoutWith.js.map


/***/ }),
/* 227 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__main_js__ = __webpack_require__(8);



/* harmony default export */ __webpack_exports__["default"] = ({
    name: "ui.dropdown",
    extend: "event",
    component: function () {
        var _ = __WEBPACK_IMPORTED_MODULE_1__main_js__["default"].include("util.base");

        var hideAll = function() {
            var dd = getDropdown();

            if(dd != null) {
                dd.hide();
            }
        }

        var getDropdown = function() {
            var call_list = __WEBPACK_IMPORTED_MODULE_1__main_js__["default"].get("ui.dropdown");

            for(var i = 0; i < call_list.length; i++) {
                var ui_list = call_list[i];

                for(var j = 0; j < ui_list.length; j++) {
                    if(ui_list[j].type == "show") return ui_list[j];
                }
            }

            return null;
        }

        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(function() {
            document.addEventListener("click", function(e) {
                var tn = e.target.tagName;

                if(tn != "LI" && tn != "INPUT" && tn != "A" && tn != "BUTTON" && tn != "I") {
                    hideAll();
                }
            });

            window.addEventListener("keydown", function(e) {
                var dd = getDropdown();

                if(dd != null) {
                    dd.wheel(e.which, function() {
                        e.preventDefault();
                    });
                }
            });
        });

        var UI = function() {
            var ui_list = null, index = -1;

            function setEventNodes(self) {
                var $list = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(ui_list.menu).find("li");

                // 이벤트 걸린거 초기화
                $list.off("click").off("hover");

                // 클릭 이벤트 설정
                self.addEvent($list, "click", function(e) {
                    if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).hasClass("divider") || __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).hasClass("title") || __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).hasClass("disabled")) return;

                    var index = getTargetIndex(this),
                        text = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).text(),
                        value = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).attr("value");

                    self.emit("change", [ { index: index, value: value, text: text }, e ]);

                    // close가 true일 경우, 전체 드롭다운 숨기기
                    if(self.options.close) hideAll();

                    // A 태그일 경우에는 이벤트 막기
                    if(e.target.tagName == "A") {
                        e.preventDefault();
                    }
                });

                // 마우스 오버시 hover 클래스 제거
                self.addEvent($list, "hover", function(e) {
                    $list.removeClass("active");
                });

                function getTargetIndex(elem) {
                    var result = 0;

                    $list.each(function(i) {
                        if(elem == this) {
                            result = i;
                        }
                    });

                    return result;
                }
            }

            function selectItem(self, callback) {
                var $list = ui_list.menu.find("li"),
                    $target = $list.eq(index);

                $list.removeClass("active");

                if($target.val() != "" || $target.html() != "") {
                    $target.addClass("active");

                    if(self.options.height > 0) {
                        ui_list.menu.scrollTop(index * $target.outerHeight());
                    }
                } else {
                    if(typeof(callback) == "function") {
                        callback();
                    }
                }
            }

            this.init = function() {
                var opts = this.options;

                var $dd_root = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root),
                    $dd_menu = $dd_root.find("ul"),
                    $dd_anchor = $dd_root.find(".anchor");

                // 메인 설정, 없을 경우에는 root가 메인이 됨
                $dd_menu = ($dd_menu.length == 0) ? $dd_root : $dd_menu;

                // UI 객체 추가
                ui_list = { root: $dd_root, menu: $dd_menu, anchor: $dd_anchor };

                // Size
                ui_list.root.outerWidth(ui_list.menu.outerWidth());

                // Width
                if(opts.width > 0) {
                    $dd_menu.outerWidth(opts.width);
                }

                // Height
                if(opts.height > 0) {
                    $dd_menu.css({ "maxHeight": opts.height, "overflow": "auto" });
                }

                // Left
                if(opts.left > 0) {
                    $dd_root.css("left", opts.left);
                }

                // Top
                if(opts.top > 0) {
                    $dd_root.css("top", opts.top);
                }

                // Default Styles
                $dd_menu.css({ "display": "block" });
                $dd_root.css({ "position": "absolute", "display": "none" });

                // 드롭다운 목록 갱신
                if(opts.nodes.length > 0) {
                    this.update(opts.nodes);
                } else {
                    setEventNodes(this);
                }

                this.type = "hide"; // 기본 타입 설정
            }

            /**
             * @method update
             * Changes the dropdown list
             *
             * @param {Array} nodes Dropdown list
             */
            this.update = function(nodes) {
                if(!this.tpl.node) return;

                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(ui_list.menu).empty();

                for(var i = 0; i < nodes.length; i++) {
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(ui_list.menu).append(this.tpl.node(nodes[i]));
                }

                setEventNodes(this);
            }

            /**
             * @method hide
             * Hides the dropdown
             */
            this.hide = function() {
                ui_list.root.hide();

                this.emit("hide");
                this.type = "hide";
            }

            /**
             * @method show
             * Shows a dropdown at the specified coordinates
             *
             * @param {Integer} x
             * @param {Integer} y
             */
            this.show = function(x, y) {
                hideAll();

                ui_list.root.show();

                // Anchor 옵션 처리
                if(ui_list.anchor.length > 0)
                    ui_list.root.css("margin-top", "10px");

                // x, y 값이 있을 경우
                if(arguments.length == 2) {
                    this.move(x, y);
                }

                this.emit("show");
                this.type = "show";
            }

            /**
             * @method move
             * Moves a dropdown to the specified coordinates
             *
             * @param {Integer} x
             * @param {Integer} y
             */
            this.move = function(x, y) {
                ui_list.root.css("left", x);
                ui_list.root.css("top", y);
            }

            /**
             * @method wheel
             * Changes a selected node upwards when the key is set to -1, or downwards when the key is set to 1. If the key is set to 0, the speciified node is selected
             *
             * @param {Integer} key
             * @param {Function} callback
             */
            this.wheel = function(key, callback) {
                if(!this.options.keydown) return;

                var self = this,
                    $list = ui_list.menu.find("li");

                // 탭을 눌렀을 경우, 드롭다운 숨기기
                if(key == 9) {
                    this.hide();
                    return;
                }

                if(key == 38 || key == -1) { // up
                    if(index < 1) index = $list.length - 1;
                    else index--;

                    selectItem(this, function() {
                        index--;
                        selectItem(self);
                    });

                    if(callback) callback();
                }

                if(key == 40 || key == 1) { // down
                    if(index < $list.length - 1) index++;
                    else index = 0;

                    selectItem(self, function() {
                        index++;
                        selectItem(self);
                    });

                    if(callback) callback();
                }

                if(key == 13 || key == 0 || !key) { // enter
                    self.addTrigger($list.eq(index), "click");
                    index = -1;

                    if(callback) callback();
                }
            }

            /**
             * @method reload
             * Reloads the dropdown list
             */
            this.reload = function() {
                this.init();
                this.emit("reload");
            }
        }

        UI.setup = function() {
            return {
                /**
                 * @cfg {Boolean} [close=true]
                 * Closes the Auto when clicking on the dropdown list
                 */
                close: true,

                /**
                 * @cfg {Boolean} [keydown=false]
                 * It is possible to choose anything on the dropdown list with the arrow keys on the keyboard
                 */
                keydown: false,

                /**
                 * @cfg {Integer} [left=0]
                 * Sets the X coordinate of the dropdown list
                 */
                left: 0,

                /**
                 * @cfg {Integer} [top=0]
                 * Sets the Y coordinate of the dropdown list
                 */
                top: 0,

                /**
                 * @cfg {Integer} [width=0]
                 * Determines the horizontal size of a dropdown list
                 */
                width: 0,

                /**
                 * @cfg {Integer} [height=0]
                 * Determines the vertical size of a dropdown list
                 */
                height: 0,

                /**
                 * @cfg {Array} nodes
                 * Sets a dropdown list to data rather than markup
                 */
                nodes: []
            }
        }

        /**
         * @event change
         * Event that occurs when anything on the dropdown list is selected
         *
         * @param {Object} data
         * @param {EventObject} e The event object
         */

        /**
         * @event show
         * Event that occurs when a dropdown is shown
         */

        /**
         * @event hide
         * Event that occurs when a dropdown is hidden
         */

        /**
         * @event reload
         * Event that occurs when a dropdown is reloaded
         */

        return UI;
    }
});

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(229);

__webpack_require__(230);

__webpack_require__(231);

var _button = __webpack_require__(64);

var _button2 = _interopRequireDefault(_button);

var _radioButton = __webpack_require__(239);

var _radioButton2 = _interopRequireDefault(_radioButton);

var _toggleButton = __webpack_require__(241);

var _toggleButton2 = _interopRequireDefault(_toggleButton);

var _checkBox = __webpack_require__(243);

var _checkBox2 = _interopRequireDefault(_checkBox);

var _input = __webpack_require__(65);

var _input2 = _interopRequireDefault(_input);

var _numberInput = __webpack_require__(246);

var _numberInput2 = _interopRequireDefault(_numberInput);

var _textArea = __webpack_require__(247);

var _textArea2 = _interopRequireDefault(_textArea);

var _dateTimeInput = __webpack_require__(249);

var _dateTimeInput2 = _interopRequireDefault(_dateTimeInput);

var _dropDownList = __webpack_require__(370);

var _dropDownList2 = _interopRequireDefault(_dropDownList);

var _expander = __webpack_require__(372);

var _expander2 = _interopRequireDefault(_expander);

var _tabs = __webpack_require__(375);

var _tabs2 = _interopRequireDefault(_tabs);

var _menu = __webpack_require__(378);

var _menu2 = _interopRequireDefault(_menu);

var _listbox = __webpack_require__(380);

var _listbox2 = _interopRequireDefault(_listbox);

var _slider = __webpack_require__(388);

var _slider2 = _interopRequireDefault(_slider);

var _window = __webpack_require__(391);

var _window2 = _interopRequireDefault(_window);

var _notification = __webpack_require__(395);

var _notification2 = _interopRequireDefault(_notification);

var _colorPicker = __webpack_require__(397);

var _colorPicker2 = _interopRequireDefault(_colorPicker);

var _splitter = __webpack_require__(400);

var _splitter2 = _interopRequireDefault(_splitter);

var _tree = __webpack_require__(404);

var _tree2 = _interopRequireDefault(_tree);

var _table = __webpack_require__(407);

var _table2 = _interopRequireDefault(_table);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var BrtcWidget = {
    button: function button($el, options) {
        return new _button2.default($el, options);
    },
    toggleButton: function toggleButton($el, options) {
        return new _toggleButton2.default($el, options);
    },
    radioButton: function radioButton($el, options) {
        return new _radioButton2.default($el, options);
    },
    checkBox: function checkBox($el, options) {
        return new _checkBox2.default($el, options);
    },
    input: function input($el, options) {
        return new _input2.default($el, options);
    },
    numberInput: function numberInput($el, options) {
        return new _numberInput2.default($el, options);
    },
    textArea: function textArea($el, options) {
        return new _textArea2.default($el, options);
    },
    dateTimeInput: function dateTimeInput($el, options) {
        return new _dateTimeInput2.default($el, options);
    },
    dropDownList: function dropDownList($el, options) {
        return new _dropDownList2.default($el, options);
    },
    expander: function expander($el, options) {
        return new _expander2.default($el, options);
    },
    tabs: function tabs($el, options) {
        return new _tabs2.default($el, options);
    },
    menu: function menu($el, options) {
        return new _menu2.default($el, options);
    },
    listBox: function listBox($el, options) {
        return new _listbox2.default($el, options);
    },
    slider: function slider($el, options) {
        return new _slider2.default($el, options);
    },
    window: function window($el, options) {
        return new _window2.default($el, options);
    },
    notification: function notification($el, options) {
        return new _notification2.default($el, options);
    },
    colorPicker: function colorPicker($el, options) {
        return new _colorPicker2.default($el, options);
    },
    splitter: function splitter($el, options) {
        return new _splitter2.default($el, options);
    },
    table: function table($el, options) {
        return new _table2.default($el, options);
    },
    tree: function tree($el, options) {
        return new _tree2.default($el, options);
    }
};

window.brtcWidget = BrtcWidget;

/***/ }),
/* 229 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 230 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 231 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 232 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 233 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 234 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 235 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, module) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ponyfill_js__ = __webpack_require__(238);
/* global window */


var root;

if (typeof self !== 'undefined') {
  root = self;
} else if (typeof window !== 'undefined') {
  root = window;
} else if (typeof global !== 'undefined') {
  root = global;
} else if (true) {
  root = module;
} else {
  root = Function('return this')();
}

var result = Object(__WEBPACK_IMPORTED_MODULE_0__ponyfill_js__["a" /* default */])(root);
/* harmony default export */ __webpack_exports__["a"] = (result);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(236), __webpack_require__(237)(module)))

/***/ }),
/* 236 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 237 */
/***/ (function(module, exports) {

module.exports = function(originalModule) {
	if(!originalModule.webpackPolyfill) {
		var module = Object.create(originalModule);
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		Object.defineProperty(module, "exports", {
			enumerable: true,
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 238 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = symbolObservablePonyfill;
function symbolObservablePonyfill(root) {
	var result;
	var Symbol = root.Symbol;

	if (typeof Symbol === 'function') {
		if (Symbol.observable) {
			result = Symbol.observable;
		} else {
			result = Symbol('observable');
			Symbol.observable = result;
		}
	} else {
		result = '@@observable';
	}

	return result;
};


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _baseWidget = __webpack_require__(6);

var _baseWidget2 = _interopRequireDefault(_baseWidget);

__webpack_require__(240);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var baseClass = 'brtc-radio-button';
var labelClass = baseClass + '-label';

/**
 *  RadioButton Widget
 *
 *  --- create ---
 *  <div class="radio-button-add-position"></div>
 *
 *  var $radio = $('.radio-button-add-position');
 *  var radio = brtcWidget.radioButton($radio, {
 *      'value': 'value', // string
 *      'label': 'label', // string
 *      'groupName': 'group', // string, group별로 동일하게 설정
 *      'check': false, // boolean
 *      'disabled': false // boolean
 *  });
 *
 *
 *  --- method ---
 *  check : radiobutton check
 *  unCheck : radiobutton uncheck
 *
 *
 *  --- event ---
 *  change
 *
 *
 */

var RadioButton = function (_Base) {
    _inherits(RadioButton, _Base);

    function RadioButton($el, options) {
        _classCallCheck(this, RadioButton);

        return _possibleConstructorReturn(this, (RadioButton.__proto__ || Object.getPrototypeOf(RadioButton)).call(this, $el, options));
    }

    _createClass(RadioButton, [{
        key: 'create',
        value: function create($el, opt) {
            this.$elem = RadioButton.getTemplate(1);
            $el.append(this.$elem);
            this.setOption(opt);
        }
    }, {
        key: '_getPropertyList',
        value: function _getPropertyList(attrNm) {
            return {
                'value': this._setValue,
                'label': this._setLabel,
                'groupName': this._setGroupName,
                'check': this._setCheck,
                'disabled': this._setDisabled
            }[attrNm];
        }
    }, {
        key: '_getMethodList',
        value: function _getMethodList(attrNm) {
            return {
                'check': this._check,
                'unCheck': this._unCheck
            }[attrNm];
        }
    }, {
        key: '_getEventList',
        value: function _getEventList(name) {
            return {
                'change': this._setOnChange
            }[name];
        }
    }, {
        key: 'getOption',
        value: function getOption(optNm) {
            return {
                'disabled': this._getDisabled,
                'check': this._getCheck,
                'value': this._getValue
            }[optNm].call(this);
        }
    }, {
        key: '_setValue',
        value: function _setValue(val) {
            this.$elem.find('input').prop('value', val);
        }
    }, {
        key: '_getValue',
        value: function _getValue() {
            return this.$elem.prop('value');
        }
    }, {
        key: '_setLabel',
        value: function _setLabel(val) {
            if (val) {
                this.$elem.find('label').text(val);
            }
        }
    }, {
        key: '_setCheck',
        value: function _setCheck(val) {
            this.$elem.find('input').prop('checked', val);
        }
    }, {
        key: '_setGroupName',
        value: function _setGroupName(val) {
            this.$elem.find('input').prop('name', val);
        }
    }, {
        key: '_getCheck',
        value: function _getCheck() {
            return this.$elem.find('input').prop('checked');
        }
    }, {
        key: '_setDisabled',
        value: function _setDisabled(val) {
            this.$elem.find('input').prop('disabled', val);
        }
    }, {
        key: '_getDisabled',
        value: function _getDisabled(val) {
            return this.$elem.find('input').prop('disabled');
        }
    }, {
        key: '_check',
        value: function _check() {
            this._setCheck(true);
        }
    }, {
        key: '_unCheck',
        value: function _unCheck() {
            this._setCheck(false);
        }
    }, {
        key: '_setOnChange',
        value: function _setOnChange(func) {
            if (typeof func === 'function') {
                /* eslint-disable no-invalid-this */
                this._addEvent('click', function () {
                    var $target = $(this).find('input');
                    if (!$target.prop('disabled')) {
                        $target.prop('checked', true);
                        func.call(this, $target.prop('value'));
                    }
                });
                /* eslint-enable no-invalid-this */
            }
        }
    }], [{
        key: 'getTemplate',
        value: function getTemplate(count) {
            var themBase = baseClass + '-wrapper brtc-widget';
            var $item = $('\n            <div class="brtc-radio-button-item">\n                <input type="radio" class="' + baseClass + '" />\n                <label class="' + labelClass + '"></label>\n            </div>\n        ');

            var $template = $('\n            <div class="' + themBase + ' brtc-display-flex brtc-flex-direction-row"></div>\n        ');

            for (var i = 0; i < count; i++) {
                $template.append($item);
            }
            return $template;
        }
    }]);

    return RadioButton;
}(_baseWidget2.default);

exports.default = RadioButton;

/***/ }),
/* 240 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _button = __webpack_require__(64);

var _button2 = _interopRequireDefault(_button);

__webpack_require__(242);

var _redux = __webpack_require__(43);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var baseClass = 'brtc-toggle-button';
var checkedClass = 'brtc-toggle-button__check--checked';
var disabledClass = 'brtc-toggle-button__check--disabled';

var initState = {
    width: null,
    height: null,
    value: null,
    label: null,
    imageClass: null,
    check: false,
    disabled: false
};

var ACTION = {
    onButton: function onButton() {
        return {
            type: 'ON'
        };
    },
    offButton: function offButton() {
        return {
            type: 'OFF'
        };
    },
    toggle: function toggle() {
        return {
            type: 'TOGGLE'
        };
    },
    disable: function disable() {
        return {
            type: 'DISABLE'
        };
    },
    enable: function enable() {
        return {
            type: 'ENABLE'
        };
    },
    toggleDisabled: function toggleDisabled() {
        return {
            type: 'TOGGLE_DISABLED'
        };
    },
    changeLabel: function changeLabel(val) {
        return {
            type: 'CHANGE_LABEL',
            value: val
        };
    },
    setState: function setState(val) {
        return {
            type: 'SET_VALUE',
            value: val
        };
    }
};

var toggleButtonReducer = function toggleButtonReducer(state, action) {
    switch (action.type) {
        case 'ON':
            return Object.assign({}, state, {
                check: true
            });
        case 'OFF':
            return Object.assign({}, state, {
                check: false
            });
        case 'TOGGLE':
            return Object.assign({}, state, {
                check: !state.check
            });
        case 'DISABLE':
            return Object.assign({}, state, {
                disabled: true
            });
        case 'ENABLE':
            return Object.assign({}, state, {
                disabled: false
            });
        case 'TOGGLE_DISABLED':
            return Object.assign({}, state, {
                disabled: !state.disabled
            });
        case 'CHANGE_LABEL':
            return Object.assign({}, state, {
                label: action.value
            });
        case 'SET_VALUE':
            return Object.assign({}, state, action.value);
        default:
            return state;
    }
};

/**
 *  ToggleButton Widget
 *
 *  --- create ---
 *  <div class="toggle-button-add-position"></div>
 *
 *  var $toggle = $('.toggle-button-add-position');
 *  var toggle = brtcWidget.toggleButton($toggle, {
 *      width: null, // string(00px) | number | null
 *      height: null, // string(00px) | number | null
 *      value: false, // boolean
 *      label: null, // string | null
 *      imageClass: null, // string | null
 *      check: false, // boolean
 *      disabled: false, // boolean
 *  });
 *
 *
 *  --- method ---
 *  check : togglebutton check
 *  uncheck : togglebutton uncheck
 *
 *
 *  --- event ---
 *  click
 *
 *
 */

var ToggleButton = function (_Button) {
    _inherits(ToggleButton, _Button);

    function ToggleButton($el, options) {
        _classCallCheck(this, ToggleButton);

        return _possibleConstructorReturn(this, (ToggleButton.__proto__ || Object.getPrototypeOf(ToggleButton)).call(this, $el, options));
    }

    _createClass(ToggleButton, [{
        key: '_getMethodList',
        value: function _getMethodList(name) {
            return {
                'check': this._setCheck,
                'uncheck': this._setUnCheck
            }[name];
        }
    }, {
        key: '_getEventList',
        value: function _getEventList(name) {
            return {
                'click': this._onClicked
            }[name];
        }
    }, {
        key: 'getOption',
        value: function getOption(optNm) {
            return this.store.getState()[optNm];
        }
    }, {
        key: 'create',
        value: function create($el, opt) {
            var _this2 = this;

            this.lazyExecuteList = [];
            this.$elem = ToggleButton.getTemplate();
            $el.append(this.$elem);

            this.listeners = {
                click: []
            };
            this.store = (0, _redux.createStore)(toggleButtonReducer, Object.assign({}, initState, opt));
            this.store.subscribe(function () {
                _this2._applyOption(_this2.store.getState());
            });

            this.$elem.click(function () {
                _this2.store.dispatch(ACTION.toggle());
                _this2.listeners.click.forEach(function (fn) {
                    return fn(_this2.store.getState().value);
                });
            });
            this._applyOption(this.store.getState());
        }
    }, {
        key: 'setOption',
        value: function setOption(opts) {
            this.store.dispatch(ACTION.setState(opts));
        }
    }, {
        key: '_applyOption',
        value: function _applyOption(state) {
            this.$elem.attr('title', state.label);
            this.$elem.val(state.label);
            this.$elem.toggleClass(checkedClass, state.check);
            if (state.imageClass) {
                this.$elem.addClass(state.imageClass, true);
            }
            this.$elem.toggleClass(disabledClass, state.disabled);
            if (state.disabled) {
                this.$elem.attr('disabled', true);
            } else {
                this.$elem.removeAttr('disabled');
            }
            if (state.width) {
                this.$elem.css('width', state.width);
            }
            if (state.height) {
                this.$elem.css('height', state.height);
            }
        }
    }, {
        key: '_setCheck',
        value: function _setCheck() {
            this.store.dispatch(ACTION.onButton());
        }
    }, {
        key: '_setUnCheck',
        value: function _setUnCheck() {
            this.store.dispatch(ACTION.offButton());
        }
    }, {
        key: '_getCheck',
        value: function _getCheck() {
            return this.store.getState().check;
        }
    }, {
        key: '_setDisabled',
        value: function _setDisabled(val) {
            _get(ToggleButton.prototype.__proto__ || Object.getPrototypeOf(ToggleButton.prototype), '_setDisabled', this).call(this, val);
            this.store.dispatch(val ? ACTION.disable() : ACTION.enable());
        }
    }, {
        key: '_getValue',
        value: function _getValue() {
            return this.store.getState().value;
        }
    }, {
        key: '_onClicked',
        value: function _onClicked(fn) {
            this.listeners.click.push(fn);
        }
    }], [{
        key: 'getTemplate',
        value: function getTemplate() {
            var themBase = baseClass + ' brtc-widget brtc-fill-state-normal';
            var $template = $('\n             <input type="button" class="' + themBase + ' bos-flex-1 bos-background-image"></input>\n            ');
            return $template;
        }
    }]);

    return ToggleButton;
}(_button2.default);

exports.default = ToggleButton;

/***/ }),
/* 242 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _baseWidget = __webpack_require__(6);

var _baseWidget2 = _interopRequireDefault(_baseWidget);

__webpack_require__(244);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var baseClass = 'brtc-checkbox';
var labelClass = baseClass + '-label';

var getVal = function getVal($el) {
    return $el.prop('checked');
};

/**
 *  CheckBox Widget
 *
 *  --- create ---
 *  <div class="checkbox-add-position"></div>
 *
 *  var $checkbox = $('.checkbox-add-position');
 *  var checkbox = brtcWidget.checkBox($checkbox, {
 *      label: 'test', // string
 *      disabled : false, // boolean
 *      value: false // boolean
 *  });
 *
 *
 *  --- method ---
 *  check : checkbox check
 *  unCheck : checkbox uncheck
 *
 *
 *  --- event ---
 *  click
 *  
 *
 */

var CheckBox = function (_Base) {
    _inherits(CheckBox, _Base);

    function CheckBox($el, options) {
        _classCallCheck(this, CheckBox);

        return _possibleConstructorReturn(this, (CheckBox.__proto__ || Object.getPrototypeOf(CheckBox)).call(this, $el, options));
    }

    _createClass(CheckBox, [{
        key: 'create',
        value: function create($el, opt) {
            this.$elem = CheckBox.getTemplate();
            $el.append(this.$elem);
            this.setOption(opt);
        }
    }, {
        key: '_getPropertyList',
        value: function _getPropertyList(attrNm) {
            return {
                'label': this._setLabel,
                'disabled': this._setDisabled,
                'value': this._setValue
            }[attrNm];
        }
    }, {
        key: '_getMethodList',
        value: function _getMethodList(attrNm) {
            return {
                'check': this._check,
                'unCheck': this._unCheck
            }[attrNm];
        }
    }, {
        key: '_getEventList',
        value: function _getEventList(name) {
            return {
                'click': this._onClicked
            }[name];
        }
    }, {
        key: '_setValue',
        value: function _setValue(val) {
            this.$elem.find('input').prop('checked', val);
        }
    }, {
        key: '_setLabel',
        value: function _setLabel(val) {
            if (val) {
                this.$elem.find('label').text(val);
            }
        }
    }, {
        key: '_setDisabled',
        value: function _setDisabled(val) {
            _get(CheckBox.prototype.__proto__ || Object.getPrototypeOf(CheckBox.prototype), '_setDisabled', this).call(this, val);
            this.$elem.find('input').prop('disabled', val);
        }
    }, {
        key: '_getDisabled',
        value: function _getDisabled(val) {
            return this.$elem.find('input').prop('disabled');
        }
    }, {
        key: '_getValue',
        value: function _getValue() {
            return getVal(this.$elem.find('input'));
        }
    }, {
        key: '_check',
        value: function _check() {
            this._setValue(true);
        }
    }, {
        key: '_unCheck',
        value: function _unCheck() {
            this._setValue(false);
        }
    }, {
        key: '_onClicked',
        value: function _onClicked(func) {
            if (typeof func === 'function') {
                /* eslint-disable no-invalid-this */
                this._addEvent('click', function () {
                    var $target = $(this).find('input');
                    if (!$target.prop('disabled')) {
                        var changed = !getVal($target);
                        $target.prop('checked', changed);
                        func.call(this, changed);
                    }
                });
                /* eslint-enable no-invalid-this */
            }
        }
    }], [{
        key: 'getTemplate',
        value: function getTemplate() {
            var themBase = baseClass + ' brtc-widget brtc-state-normal';
            var $template = $('\n        <div class="brtc-chekckbox-wrapper brtc-display-flex brtc-flex-direction-row ' + themBase + '">\n            <input type="checkbox" class="' + baseClass + '" />\n            <label class="' + labelClass + '"></label>\n        </div>\n        ');
            return $template;
        }
    }]);

    return CheckBox;
}(_baseWidget2.default);

exports.default = CheckBox;

/***/ }),
/* 244 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 245 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _input = __webpack_require__(65);

var _input2 = _interopRequireDefault(_input);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var baseClass = 'brtc-input';
var INTEGER = 'int';
var DOUBLE = 'double';

var _getNumberTypeValue = function _getNumberTypeValue(value) {
    if (value === '') {
        return '';
    } else {
        return Number(value);
    }
};

/**
 *  NumberInput Widget
 *
 *  --- create ---
 *  <div class="number-input-add-position"></div>
 *
 *  var $input = $('.number-input-add-position');
 *  var input = brtcWidget.numberInput($input, {
 *      'max': null, // number | null
 *      'min':  null, // number | null
 *      'minus': false, // boolean
 *      'type': null, // INTEGER | DOUBLE | null
 *      'value': null,  // number | null
 *      'width': null, // string | number | null
 *      'height': null, // string | number | null
 *      'placeHolder': null, // string | number | null
 *      'error': false, // boolean
 *      'disabled': false, // boolean
 *  });
 *
 *
 *  --- method ---
 *  - none -
 *
 *
 *  --- event ---
 *  onChange
 *
 *
 */

var NumberInput = function (_Input) {
    _inherits(NumberInput, _Input);

    function NumberInput($el, options) {
        _classCallCheck(this, NumberInput);

        return _possibleConstructorReturn(this, (NumberInput.__proto__ || Object.getPrototypeOf(NumberInput)).call(this, $el, options));
    }

    _createClass(NumberInput, [{
        key: '_getPropertyList',
        value: function _getPropertyList(attrNm) {
            return {
                'max': this._setMax,
                'min': this._setMin,
                'minus': this._setMinus,
                'type': this._setType, // INTEGER || DOUBLE
                'value': this._setValue,
                'width': this._setWidth,
                'height': this._setHeight,
                'placeHolder': this._setPlaceHolder,
                'error': this._setError,
                'disabled': this._setDisabled
            }[attrNm];
        }
    }, {
        key: '_setMax',
        value: function _setMax(val) {
            this.maxVal = val;
        }
    }, {
        key: '_setMin',
        value: function _setMin(val) {
            this.minVal = val;
        }
    }, {
        key: '_setMinus',
        value: function _setMinus(val) {
            this.minus = val;
        }
    }, {
        key: '_setType',
        value: function _setType(val) {
            if ([INTEGER, DOUBLE].includes(val)) {
                this.type = val;
            } else {
                console.error('Invalid numberinput type. ' + val);
            }
        }
    }, {
        key: '_setValue',
        value: function _setValue(val) {
            var err = false;
            if (typeof this.minVal !== 'undefined') {
                err = !(this.minVal <= val);
                this._setError(err);
            }
            if (!err && typeof this.maxVal !== 'undefined') {
                this._setError(!(val <= this.maxVal));
            }
            this.$elem.val(val);
        }
    }, {
        key: '_getValue',
        value: function _getValue() {
            return this.$elem.val();
        }
    }, {
        key: '_getMinus',
        value: function _getMinus() {
            return this.minus;
        }
    }, {
        key: '_getType',
        value: function _getType() {
            return this.type;
        }
    }, {
        key: '_setOnChange',
        value: function _setOnChange(func) {
            var _this2 = this;

            var getValue = this._getValue.bind(this);
            var setValue = this._setValue.bind(this);
            var isChanged = this._isChanged.bind(this);
            var _minus = this._getMinus.bind(this);
            var _type = this._getType.bind(this);

            if (typeof func === 'function') {
                this.$elem.on('blur', function () {
                    var changedValue = getValue();
                    var value = changedValue;
                    if ($.isNumeric(changedValue)) {
                        value = _getNumberTypeValue(changedValue); // "auto"
                        if (_type() === INTEGER && parseInt(value) !== value) {
                            value = parseInt(value);
                            setValue(value);
                        }
                    }
                    if (!isChanged(value)) return;
                    setValue(value);
                    func.call(_this2, value);
                });
                /*
                this.$elem.keydown((e) => {
                    const key = e.which || e.keyCode;
                    if (key === 13) {
                        let value = _getNumberTypeValue(getValue());
                        if (_type() === INTEGER && parseInt(value) !== value) {
                            value = parseInt(value);
                            setValue(value);
                        }
                        if (!isChanged(value)) return;
                        setValue(value);
                        func.bind(this)(value);
                    }
                }
                );
                 */
            }

            this.$elem.keydown(function (e) {
                // !important : 20150613 - max 값 처리에서 callback 실행이 되지 않는 버그가 있어서 주석 처리하였음. ex) max가 설정되어 있을 때 0을 계속입력하면 callback 실행이 되지 않음.
                // _this.preValue = _this.$mainControl.val();

                var key = e.which || e.keyCode; // http://keycode.info/

                if (key === 13) {
                    e.preventDefault();
                    return false;
                }

                if (!e.shiftKey && !e.altKey && !e.ctrlKey && (
                // alphabet
                key >= 65 && key <= 90 ||
                // spacebar
                key === 32 ||
                // enter
                key === 13)) {
                    e.preventDefault();
                    return false;
                }

                if (!e.shiftKey && !e.altKey && !e.ctrlKey &&
                // numbers
                key >= 48 && key <= 57 ||
                // Numeric keypad
                key >= 96 && key <= 105 ||

                // Allow: Ctrl+A
                e.keyCode === 65 && e.ctrlKey === true ||
                // Allow: Ctrl+C
                key === 67 && e.ctrlKey === true ||
                // Allow: Ctrl+X
                key === 88 && e.ctrlKey === true ||

                // Allow: home, end, left, right
                key >= 35 && key <= 39 ||
                // Backspace and Tab and Enter
                key === 8 || key === 9 || key === 13 ||
                // Del and Ins
                key === 46 || key === 45) {
                    return true;
                }

                var v = getValue(); // v can be null, in case textbox is number and does not valid
                if (
                //  minus, dash
                key === 109 || key === 189) {
                    // if already has -, ignore the new one
                    if (v[0] === '-' || !_minus()) {
                        // console.log('return, already has - in the beginning');
                        return false;
                    }
                }

                if (!e.shiftKey && !e.altKey && !e.ctrlKey && (
                // comma, period and dot on keypad
                key === 190 || key === 188 || key === 110)) {
                    // already having comma, period, dot
                    if (/[.,]/.test(v) || _type() === INTEGER) {
                        // console.log('return, already has , . somewhere');
                        return false;
                    }
                }
            });

            this.$elem.keyup(function (e) {
                var v = getValue();

                if (+v) {// convert to number success, let it be
                    //                      "1000"  "10.9"  "1,000.9"   "011"   "10c"   "$10"
                    // +str, str*1, str-0    1000    10.9    NaN         11      NaN     NaN

                } else if (v) {
                    // refine the value
                    v = (v[0] === '-' ? '-' : '') + v.replace(/[^0-9.]/g, ''); // this replace also remove the -, we add it again if needed
                    v = v.replace(/\.(?=(.*)\.)+/g, ''); // remove all dot that have other dot following. After this processing, only the last dot is kept.

                    setValue(v); // update value only if we changed it
                }
            });
        }
    }], [{
        key: 'getTemplate',
        value: function getTemplate() {
            var themBase = baseClass + ' brtc-widget number brtc-state-normal';
            var $template = $('\n        <input type="text" class=" ' + themBase + '">\n        ');
            return $template;
        }
    }]);

    return NumberInput;
}(_input2.default);

exports.default = NumberInput;

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _baseWidget = __webpack_require__(6);

var _baseWidget2 = _interopRequireDefault(_baseWidget);

__webpack_require__(248);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var baseClass = 'brtc-text-area';

/**
 *  TextArea Widget
 *
 *  --- create ---
 *  <div class="text-area-add-position"></div>
 *
 *  var $textArea = $('.text-area-add-position');
 *  var textArea = brtcWidget.input($textArea, {
 *      value: value, // all
 *      width: '100%', // string | number
 *      height: 31, // string | number
 *      placeHolder: null // string | number | null
 *      disabled' false // boolean
 *  });
 *
 *
 *  --- method ---
 *  - none -
 *
 *
 *  --- event ---
 *  onChange
 *  click
 *
 *
 */

var TextArea = function (_Base) {
    _inherits(TextArea, _Base);

    function TextArea($el, options) {
        _classCallCheck(this, TextArea);

        return _possibleConstructorReturn(this, (TextArea.__proto__ || Object.getPrototypeOf(TextArea)).call(this, $el, options));
    }

    _createClass(TextArea, [{
        key: 'create',
        value: function create($el, opt) {
            this.$elem = TextArea.getTemplate();
            $el.append(this.$elem);
            this.setOption(opt);
        }
    }, {
        key: '_getPropertyList',
        value: function _getPropertyList(attrNm) {
            return {
                'value': this._setValue,
                'width': this._setWidth,
                'height': this._setHeight,
                'placeHolder': this._setPlaceHolder,
                'disabled': this._setDisabled
            }[attrNm];
        }
    }, {
        key: '_getEventList',
        value: function _getEventList(name) {
            return {
                'change': this._setOnChange,
                'click': this._setClick
            }[name];
        }
    }, {
        key: '_setValue',
        value: function _setValue(val) {
            this.$elem.val(val);
        }
    }, {
        key: '_setWidth',
        value: function _setWidth(val) {
            this.$elem.css('width', val);
        }
    }, {
        key: '_setHeight',
        value: function _setHeight(val) {
            this.$elem.css('height', val);
        }
    }, {
        key: '_setPlaceHolder',
        value: function _setPlaceHolder(val) {
            this.$elem.attr('placeHolder', val);
        }
    }, {
        key: '_setDisabled',
        value: function _setDisabled(val) {
            _get(TextArea.prototype.__proto__ || Object.getPrototypeOf(TextArea.prototype), '_setDisabled', this).call(this, val);
            this.$elem.prop('readonly', val);
        }
    }, {
        key: '_getValue',
        value: function _getValue() {
            return this.$elem.val();
        }
    }, {
        key: '_setOnChange',
        value: function _setOnChange(func) {
            var _this = this;
            if (typeof func === 'function') {
                this._addEvent('change', function (event) {
                    // eslint-disable-next-line no-invalid-this
                    func.bind(this)(_this._getValue());
                });
            }
        }
    }, {
        key: '_setClick',
        value: function _setClick(func) {
            if (typeof func === 'function') {
                this._addEvent('click', function (event) {
                    // eslint-disable-next-line no-invalid-this
                    func.call(this);
                });
            }
        }
    }], [{
        key: 'getTemplate',
        value: function getTemplate() {
            var themBase = baseClass + ' brtc-widget brtc-state-normal';
            var $template = $('\n        <textarea class="' + themBase + '"/>\n    ');
            return $template;
        }
    }]);

    return TextArea;
}(_baseWidget2.default);

exports.default = TextArea;

/***/ }),
/* 248 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _typeToTitleFormat;

var _templateObject = _taggedTemplateLiteral(['<td class="bos-datepicker-calendar__date">', '</td>'], ['<td class="bos-datepicker-calendar__date">', '</td>']);

var _baseWidget = __webpack_require__(6);

var _baseWidget2 = _interopRequireDefault(_baseWidget);

var _juijsUi = __webpack_require__(8);

var _juijsUi2 = _interopRequireDefault(_juijsUi);

var _datepicker = __webpack_require__(251);

var _datepicker2 = _interopRequireDefault(_datepicker);

var _utils = __webpack_require__(44);

var _moment = __webpack_require__(0);

var _moment2 = _interopRequireDefault(_moment);

__webpack_require__(254);

var _redux = __webpack_require__(43);

var _rxjs = __webpack_require__(32);

var _operators = __webpack_require__(40);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

_juijsUi2.default.use(_datepicker2.default);

var CALENDAR = {
    D: 'daily',
    M: 'monthly',
    Y: 'yearly'
};
var calendarTypes = [CALENDAR.D, CALENDAR.M, CALENDAR.Y];
var typeToTitleFormat = (_typeToTitleFormat = {}, _defineProperty(_typeToTitleFormat, CALENDAR.D, 'MMM yyyy'), _defineProperty(_typeToTitleFormat, CALENDAR.M, 'yyyy'), _defineProperty(_typeToTitleFormat, CALENDAR.Y, 'yyyy'), _typeToTitleFormat);

var genTickFn = function genTickFn(x) {
    return function (delta) {
        return function (y) {
            return (0, _utils.mod)((parseInt(y, 10) || 0) + delta, x);
        };
    };
};

var initialState = function initialState() {
    return {
        type: CALENDAR.D, // 'daily' | 'month' | 'year',
        formatString: 'dd/MM/yyyy',
        value: Date.now(),
        tempValue: null,
        showTimeButton: false,
        calendarVisible: false,
        clockVisible: false,
        height: '100%',
        width: '100%',
        h: null,
        m: null,
        s: null,
        dialogPosition: {
            x: null,
            y: null
        }
    };
};

var dateTimeInputReducer = function dateTimeInputReducer(state, action) {
    var calendarTypeHelper = function calendarTypeHelper(delta) {
        var idx = calendarTypes.indexOf(state.type);
        return calendarTypes[(0, _utils.clamp)(idx + delta, 0, calendarTypes.length - 1)];
    };

    var hms = function hms(_ref) {
        var value = _ref.value;

        var date = new Date(value);
        return {
            h: date.getHours(),
            m: date.getMinutes(),
            s: date.getSeconds()
        };
    };

    var mergeDate = function mergeDate(v, _ref2) {
        var h = _ref2.h,
            m = _ref2.m,
            s = _ref2.s;

        var prevDate = new Date(v);
        var toTime = [24, 60, 60].map(function (t) {
            return genTickFn(t)(0);
        });

        var _zip$map = (0, _utils.zip)(toTime, [h, m, s]).map(function (_ref3) {
            var _ref4 = _slicedToArray(_ref3, 2),
                fn = _ref4[0],
                v = _ref4[1];

            return fn(v);
        }),
            _zip$map2 = _slicedToArray(_zip$map, 3),
            nh = _zip$map2[0],
            nm = _zip$map2[1],
            ns = _zip$map2[2];

        var date = new Date('0000-01-01 ' + nh + ':' + nm + ':' + ns);
        prevDate.setHours(date.getHours());
        prevDate.setMinutes(date.getMinutes());
        prevDate.setSeconds(date.getSeconds());
        return prevDate.valueOf();
    };

    switch (action.type) {
        case 'CHANGE_INPUT':
            return Object.assign({}, state, {
                value: action.value
            });
        case 'TOGGLE_CALENDAR':
            return Object.assign({}, state, {
                calendarVisible: !state.calendarVisible,
                clockVisible: false,
                tempValue: !state.calendarVisible ? state.value : null,
                type: CALENDAR.D
            });
        case 'TOGGLE_CLOCK':
            if (state.clockVisible) {
                return Object.assign({}, state, {
                    value: mergeDate(state.value, state),
                    clockVisible: false
                });
            }
            return Object.assign({}, state, {
                calendarVisible: false,
                clockVisible: true
            }, hms(state));
        case 'NEXT_CALENDAR_TYPE':
            return Object.assign({}, state, {
                type: calendarTypeHelper(1)
            });
        case 'CALENDAR_SELECTED':
            return Object.assign({}, state, {
                value: action.value,
                calendarVisible: false
            });
        case 'CALENDAR_SELECTING':
            return Object.assign({}, state, {
                tempValue: action.value,
                type: calendarTypeHelper(-1)
            });
        case 'CHANGE_TIME':
            return Object.assign({}, state, action.value);
        case 'SET_STATE':
            return Object.assign({}, state, action.value);
        default:
            return state;
    }
};

var ACTION = {
    changeInputValue: function changeInputValue(value) {
        return {
            type: 'CHANGE_INPUT',
            value: value
        };
    },
    toggleCalendar: function toggleCalendar() {
        return {
            type: 'TOGGLE_CALENDAR'
        };
    },
    toggleClock: function toggleClock() {
        return {
            type: 'TOGGLE_CLOCK'
        };
    },
    nextCalendarType: function nextCalendarType() {
        return {
            type: 'NEXT_CALENDAR_TYPE'
        };
    },
    calendarSelected: function calendarSelected(value) {
        return {
            type: 'CALENDAR_SELECTED',
            value: value
        };
    },
    calendarSelecting: function calendarSelecting(value) {
        return {
            type: 'CALENDAR_SELECTING',
            value: value
        };
    },
    changeTime: function changeTime(value) {
        return {
            type: 'CHANGE_TIME',
            value: value
        };
    },
    setState: function setState(value) {
        return {
            type: 'SET_STATE',
            value: value
        };
    }
};

var toJuiOption = function toJuiOption(store) {
    var state = store.getState();
    return {
        format: state.formatString,
        type: state.type,
        date: new Date(state.tempValue),
        tpl: {
            date: (0, _utils.toJuiTemplate)(_templateObject, 'date')
        },
        titleFormat: typeToTitleFormat[state.type],
        event: {
            select: function select(value, e) {
                // select 됐을 당시의 state
                var _state = store.getState();
                if (e.originalEvent instanceof MouseEvent) {
                    var prevDate = new Date(_state.tempValue);
                    // 이 this는 jui-datetimeinput이더라구요
                    var newDate = new Date(this.getTime());
                    prevDate.setDate(newDate.getDate());
                    prevDate.setMonth(newDate.getMonth());
                    prevDate.setFullYear(newDate.getFullYear());

                    var action = _state.type === CALENDAR.D ? ACTION.calendarSelected : ACTION.calendarSelecting;

                    store.dispatch(action(prevDate.valueOf()));
                    return;
                }
            }
        }
    };
};

/**
 *  Datetime Input Widget
 *
 *  --- create ---
 *  <div class="checkbox-add-position"></div>
 *
 *  var $datetimeInput = $('.datetime-input-add-position');
 *  var datetimeInput = brtcWidget.dateTimeInput($datetimeInput, {
        type: CALENDAR.D, // 'daily' | 'month' | 'year',
        formatString: 'dd/MM/yyyy', // string
        value: Date.now(), // string | number | null
        tempValue: null, // string | number | null
        showTimeButton: false, // boolean
        calendarVisible: false, // boolean
        clockVisible: false, //boolean
        height: '100%', // string |number
        width: '100%', // string |number
        h: null, // string |number
        m: null, // string |number
        s: null, // string |number
        dialogPosition: {
            x: null, // string | number
            y: null, // string | number
        },
 *  });
 *
 *
 *  --- method ---
 *  setDate : date setting
 *  destroy : widget destory
 *
 *
 *  --- event ---
 *  onChange
 *
 *
 */

var DateTimeInput = function (_Base) {
    _inherits(DateTimeInput, _Base);

    function DateTimeInput($el, options) {
        _classCallCheck(this, DateTimeInput);

        return _possibleConstructorReturn(this, (DateTimeInput.__proto__ || Object.getPrototypeOf(DateTimeInput)).call(this, $el, options));
    }

    _createClass(DateTimeInput, [{
        key: 'create',
        value: function create($el, opt) {
            var _this2 = this;

            this.$elem = DateTimeInput.getTemplate();
            this._id = (0, _utils.uniqueId)('datepicker');
            this.listeners = {
                change: []
            };
            $el.append(this.$elem);

            this.$calendar = this.$elem.find('.bos-datepicker-calendar');
            this.$calendar.attr('widget-id', this._id + '_cal');
            this.$clock = this.$elem.find('.bos-datepicker-clock');
            this.$clock.attr('widget-id', this._id + '_clk');
            var $body = $(document.body);
            this.$clock.appendTo($body);
            this.$calendar.appendTo($body);
            this.$mainView = this.$elem.find('.bos-datepicker-main-view');

            this.subscriptions = [];

            var state = $.extend(true, initialState(), opt);

            var state$ = new _rxjs.BehaviorSubject(opt);

            this.store = (0, _redux.createStore)(dateTimeInputReducer, state);
            this.prevState = state;
            this.store.subscribe(function () {
                var newState = _this2.store.getState();
                if (_this2.prevState.value !== newState.value) {
                    _this2.listeners.change.forEach(function (fn) {
                        fn(new Date(newState.value));
                    });
                }
                _this2.prevState = newState;
                _this2._applyOption(_this2.store.getState());
                state$.next(_this2.store.getState());
            });

            var clickCalendarButton$ = (0, _rxjs.fromEvent)(this.$mainView.find('.bos-datepicker-main-view__calendar-button'), 'click');
            var clickClockButton$ = (0, _rxjs.fromEvent)(this.$mainView.find('.bos-datepicker-main-view__clock-button'), 'click');

            var windowFocusOutCalendar$ = (0, _rxjs.fromEvent)(this.$calendar, 'blur').pipe((0, _operators.filter)(function (e) {
                return !_this2.$calendar[0].contains(e.relatedTarget);
            }));
            var windowFocusOutClock$ = (0, _rxjs.fromEvent)(this.$clock, 'blur').pipe((0, _operators.filter)(function (e) {
                return !_this2.$clock[0].contains(e.relatedTarget);
            }));

            this.subscriptions.push(clickCalendarButton$.pipe((0, _operators.merge)(clickClockButton$)).subscribe(function () {
                var h = $(window).height();
                var w = $(window).width();
                var calendarHeight = _this2.$calendar.height();
                var calendarWidth = _this2.$calendar.width();
                var rect = _this2.$mainView[0].getBoundingClientRect();
                var nx = Math.min(rect.left + window.scrollX, w - calendarWidth);
                var ny = Math.min(rect.top + window.scrollY + _this2.$mainView.height(), h - calendarHeight);
                _this2.store.dispatch(ACTION.setState({
                    dialogPosition: {
                        x: nx,
                        y: ny
                    }
                }));
            }));

            this.subscriptions.push(windowFocusOutCalendar$.subscribe(function (e) {
                var _store$getState = _this2.store.getState(),
                    calendarVisible = _store$getState.calendarVisible;

                if (calendarVisible) _this2.store.dispatch(ACTION.toggleCalendar());
            }));

            this.subscriptions.push(windowFocusOutClock$.subscribe(function (e) {
                var _store$getState2 = _this2.store.getState(),
                    clockVisible = _store$getState2.clockVisible;

                if (clockVisible) _this2.store.dispatch(ACTION.toggleClock());
            }));

            this.subscriptions.push(clickCalendarButton$.subscribe(function (e) {
                var _store$getState3 = _this2.store.getState(),
                    clockVisible = _store$getState3.clockVisible;

                var action = !clockVisible ? ACTION.toggleCalendar : ACTION.toggleClock;
                _this2.store.dispatch(action());
            }));

            this.subscriptions.push(clickClockButton$.subscribe(function () {
                var _store$getState4 = _this2.store.getState(),
                    calendarVisible = _store$getState4.calendarVisible;

                var action = !calendarVisible ? ACTION.toggleClock : ACTION.toggleCalendar;
                _this2.store.dispatch(action());
            }));

            this.subscriptions.push((0, _rxjs.fromEvent)(this.$calendar.find('.bos-datepicker-calendar__title'), 'click').subscribe(function (e) {
                return _this2.store.dispatch(ACTION.nextCalendarType());
            }));

            var $els = (0, _utils.transpose)([['.bos-datepicker-clock__arrow-bar-upper', 'button'], ['.bos-datepicker-clock__input-bar', 'input'], ['.bos-datepicker-clock__arrow-bar-lower', 'button']].map(function (selector) {
                return (0, _utils.to$Array)(_this2.$clock.find(selector.join(' ')));
            }));

            var fns = [24, 60, 60].map(function (t) {
                return genTickFn(t);
            }).map(function (f) {
                return [f(1), f(-1)];
            });

            var changeTime = function changeTime(key, value) {
                var _state = _this2.store.getState();
                _this2.store.dispatch(ACTION.changeTime(Object.assign({}, (0, _utils.pick)(_state, ['h', 'm', 's']), _defineProperty({}, key, value))));
            };

            (0, _utils.zipFlatten)(fns, $els, ['h', 'm', 's']).forEach(function (_ref5) {
                var _ref6 = _slicedToArray(_ref5, 6),
                    handleUp = _ref6[0],
                    handleDown = _ref6[1],
                    $upBtn = _ref6[2],
                    $inp = _ref6[3],
                    $downBtn = _ref6[4],
                    key = _ref6[5];

                _this2.subscriptions.push((0, _rxjs.fromEvent)($upBtn, 'click').subscribe(function () {
                    var v = $inp.val();
                    var nv = handleUp(parseInt(v, 10));
                    $inp.val(nv);
                    changeTime(key, nv);
                }));

                _this2.subscriptions.push((0, _rxjs.fromEvent)($downBtn, 'click').subscribe(function () {
                    var v = $inp.val();
                    var nv = handleDown(parseInt(v, 10));
                    $inp.val(nv);
                    changeTime(key, nv);
                }));

                _this2.subscriptions.push((0, _rxjs.fromEvent)($inp, 'input').subscribe(function (e) {
                    changeTime(key, $inp.val());
                }));
            });

            var juiOption = toJuiOption(this.store);

            this.dateTimeInput = _juijsUi2.default.create('ui.datepicker', this.$calendar, juiOption);

            this.setOption(state);
        }
    }, {
        key: 'setOption',
        value: function setOption(opts) {
            this.store.dispatch(ACTION.setState(opts));
        }
    }, {
        key: 'getOption',
        value: function getOption(key) {
            return this.store.getState()[key];
        }

        // render

    }, {
        key: '_applyOption',
        value: function _applyOption(state) {
            var _this3 = this;

            this.$mainView.width(state.width);

            var stringByFormat = function stringByFormat(date, format) {
                var toMomentFormat = function toMomentFormat(f) {
                    return f.replace(/d/g, 'D').replace(/tt/g, 'A').replace(/t/g, 'P');
                };

                var convertedFormat = toMomentFormat(format);

                // moment의 format이랑 기존 스펙이랑 y Y 하는일이 달라서...
                var yearCornerCase = function yearCornerCase(f, date) {
                    var y = date.getFullYear();
                    return f.replace(/yyyy/g, (0, _utils.padLeft)(y, '0', 4)).replace(/yyy/g, (0, _utils.padLeft)(y % 1000, '0', 3)).replace(/yy/g, (0, _utils.padLeft)(y % 100, '0', 2)).replace(/y/g, y % 100);
                };

                return yearCornerCase((0, _moment2.default)(date).format(convertedFormat), date);
            };

            var mainView = function ($el) {
                var $input = $el.find('.bos-datepicker-main-view__input');
                return {
                    getValue: function getValue() {
                        return new Date(state.value);
                    },
                    setValue: function setValue(val) {
                        $input.val(stringByFormat(val, state.formatString));
                    }
                };
            }(this.$mainView);

            var px = function px(x) {
                return x + 'px';
            };
            var clock = function ($el) {
                var $inputs = (0, _utils.to$Array)($el.find('.bos-datepicker-clock__input-bar input'));

                var _$inputs = _slicedToArray($inputs, 3),
                    $h = _$inputs[0],
                    $m = _$inputs[1],
                    $s = _$inputs[2];

                return {
                    render: function render(_ref7) {
                        var _ref8 = _slicedToArray(_ref7, 3),
                            h = _ref8[0],
                            m = _ref8[1],
                            s = _ref8[2];

                        $h.val(h);
                        $m.val(m);
                        $s.val(s);

                        $el.css({
                            top: px(state.dialogPosition.y),
                            left: px(state.dialogPosition.x)
                        });
                    },
                    toggle: function toggle(val) {
                        $el.toggleClass('bos-datepicker-clock--visible', val);
                        if (val) $el.focus();
                    }
                };
            }(this.$clock);

            if (state.calendarVisible) {
                var juiOption = toJuiOption(this.store);
                Object.entries(juiOption).forEach(function (_ref9) {
                    var _ref10 = _slicedToArray(_ref9, 2),
                        key = _ref10[0],
                        value = _ref10[1];

                    return _this3.dateTimeInput.setOption(key, value);
                });

                this.dateTimeInput.select(state.tempValue);
                this.$calendar.css({
                    top: px(state.dialogPosition.y),
                    left: px(state.dialogPosition.x)
                });
            }

            clock.render([state.h, state.m, state.s]);
            mainView.setValue(new Date(state.value));

            clock.toggle(state.clockVisible);
            this.$calendar.toggleClass('bos-datepicker-calendar--visible', state.calendarVisible);
            if (state.calendarVisible) this.$calendar.focus();
            this.$mainView.find('.bos-datepicker-main-view__clock-button').toggleClass('bos-datepicker-main-view__clock-button--visible', state.showTimeButton);
        }
    }, {
        key: '_getMethodList',
        value: function _getMethodList(attrNm) {
            return {
                'setDate': this._setDate,
                'getDate': this._getDate,
                'destroy': this._destroy
            }[attrNm];
        }
    }, {
        key: '_getEventList',
        value: function _getEventList(name) {
            return {
                'change': this._setOnChange
            }[name];
        }
    }, {
        key: '_destroy',
        value: function _destroy() {
            this.subscriptions.forEach(function (s) {
                return s.unsubscribe();
            });
            if (this.$clock) this.$clock.remove();
            if (this.$calendar) this.$calendar.remove();
            if (this.$mainView) this.$mainView.remove();
            if (this.$elem) this.$elem.remove();
        }
    }, {
        key: '_setOnChange',
        value: function _setOnChange(fn) {
            this.listeners.change.push(fn);
        }
    }, {
        key: '_setDate',
        value: function _setDate(date) {
            this.store.dispatch(ACTION.changeInputValue(date.valueOf()));
        }
    }, {
        key: '_getDate',
        value: function _getDate(data) {
            var _store$getState5 = this.store.getState(),
                value = _store$getState5.value;

            return new Date(value);
        }
    }, {
        key: '_getValue',
        value: function _getValue() {
            var _store$getState6 = this.store.getState(),
                value = _store$getState6.value;

            return value;
        }
    }], [{
        key: 'getTemplate',
        value: function getTemplate() {
            var arrow = function arrow(mark) {
                return '<button class="bos-datepicker-clock__up-arrow">' + mark + '</button>';
            };

            var input = function input() {
                return '<input class="bos-datepicker-clock__time-input" maxLength="2" />';
            };

            var tripple = function tripple(s, sep) {
                return Array.from(new Array(3)).map(function () {
                    return s;
                }).join(sep);
            };

            /* eslint-disable */
            var tClock = '\n            <div tabindex="-1" class="bos-datepicker-clock">\n                <div class="bos-datepicker-clock__arrow-bar-upper">\n                ' + tripple(arrow('<i class="fa fa-angle-up"/>'), '&nbsp;') + '\n                </div>\n                <div class="bos-datepicker-clock__input-bar">\n                ' + tripple(input(), ':') + '\n                </div>\n                <div class="bos-datepicker-clock__arrow-bar-lower">\n                ' + tripple(arrow('<i class="fa fa-angle-down"/>'), '&nbsp;') + '\n                </div>\n            </div>\n        ';

            var tCalendar = '\n            <div tabindex="-1" class="bos-datepicker-calendar datepicker jui">\n                <div class="bos-datepicker-calendar__head head">\n                    <div class="bos-datepicker-calendar__prev prev"><i class="fa fa-chevron-left"></i></div>\n                    <div class="bos-datepicker-calendar__title title"></div>\n                    <div class="bos-datepicker-calendar__next next"><i class="fa fa-chevron-right"></i></div>\n                </div>\n                <table class="bos-datepicker-calendar__body body">\n                    <tr>\n                    ' + ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'].map(function (d) {
                return '<td class="bos-datepicker-calendar__cell">' + d + '</td>';
            }).join('\n') + '\n                    </tr>\n                </table>\n            </div> \n        ';

            var tMainView = '\n            <div class="bos-datepicker-main-view">\n                    <input class="bos-datepicker-main-view__input" readonly />\n                    <button class="bos-datepicker-main-view__calendar-button">\n                    <i class="fa fa-calendar"/>\n                    </button>\n                    <button class="bos-datepicker-main-view__clock-button">\n                    <i class="fa fa-clock-o"/>\n                    </button>\n            </div>\n        ';

            var $template = $('\n            <div class="bos-datepicker">\n                ' + tCalendar + '\n                ' + tClock + '\n                ' + tMainView + '\n            </div>\n        ');
            /* eslint-enable */
            return $template;
        }
    }]);

    return DateTimeInput;
}(_baseWidget2.default);

exports.default = DateTimeInput;

/***/ }),
/* 250 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};

var global$1 = {},
    globalFunc = {},
    globalClass = {};

// JUI의 기본 설정 값 (향후 더 추가될 수 있음)
var globalOpts = {
    template: {
        evaluate: /<\!([\s\S]+?)\!>/g,
        interpolate: /<\!=([\s\S]+?)\!>/g,
        escape: /<\!-([\s\S]+?)\!>/g
    },
    logUrl: "tool/debug.html"
};

/**
 * @class util.base
 *
 * jui 에서 공통적으로 사용하는 유틸리티 함수 모음
 *
 * ```
 * var _ = jui.include("util.base");
 *
 * console.warn(_.browser.webkit);
 * ```
 *
 * @singleton
 */
var utility = global$1["util.base"] = {

    /**
     * @property browser check browser agent
     * @property {Boolean} browser.webkit  Webkit 브라우저 체크
     * @property {Boolean} browser.mozilla  Mozilla 브라우저 체크
     * @property {Boolean} browser.msie  IE 브라우저 체크 */
    browser: {
        webkit: 'WebkitAppearance' in document.documentElement.style ? true : false,
        mozilla: typeof window.mozInnerScreenX != "undefined" ? true : false,
        msie: window.navigator.userAgent.indexOf("Trident") != -1 ? true : false
    },

    /**
     * @property {Boolean} isTouch
     * check touch device
     */
    isTouch: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(window.navigator.userAgent),

    /**
     * @method inherit
     *
     * 프로토타입 기반의 상속 제공
     *
     * @param {Function} ctor base Class
     * @param {Function} superCtor super Class
     */
    inherit: function inherit(ctor, superCtor) {
        if (!this.typeCheck("function", ctor) || !this.typeCheck("function", superCtor)) return;

        ctor.parent = superCtor;
        ctor.prototype = new superCtor();
        ctor.prototype.constructor = ctor;
        ctor.prototype.parent = ctor.prototype;

        /**
         * @method super
         * call parent method
         * @param {String} method  parent method name
         * @param {Array} args
         * @returns {Mixed}
         */
        ctor.prototype.super = function (method, args) {
            return this.constructor.prototype[method].apply(this, args);
        };
    },

    /**
     * @method extend
     *
     * implements object extend
     *
     * @param {Object|Function} origin
     * @param {Object|Function} add
     * @param {Boolean} skip
     * @return {Object}
     */
    extend: function extend(origin, add, skip) {
        if (!this.typeCheck(["object", "function"], origin)) origin = {};
        if (!this.typeCheck(["object", "function"], add)) return origin;

        for (var key in add) {
            if (skip === true) {
                if (isRecursive(origin[key])) {
                    this.extend(origin[key], add[key], skip);
                } else if (this.typeCheck("undefined", origin[key])) {
                    origin[key] = add[key];
                }
            } else {
                if (isRecursive(origin[key])) {
                    this.extend(origin[key], add[key], skip);
                } else {
                    origin[key] = add[key];
                }
            }
        }

        function isRecursive(value) {
            return utility.typeCheck("object", value);
        }

        return origin;
    },

    /**
     * convert px to integer
     * @param {String or Number} px
     * @return {Number}
     */
    pxToInt: function pxToInt(px) {
        if (this.typeCheck("string", px) && px.indexOf("px") != -1) {
            return parseInt(px.split("px").join(""));
        }

        return px;
    },

    /**
     * @method clone
     * implements object clone
     * @param {Array/Object} obj 복사할 객체
     * @return {Array}
     */
    clone: function clone(obj) {
        var clone = this.typeCheck("array", obj) ? [] : {};

        for (var i in obj) {
            if (this.typeCheck("object", obj[i])) clone[i] = this.clone(obj[i]);else clone[i] = obj[i];
        }

        return clone;
    },

    /**
     * @method deepClone
     * implements object deep clone
     * @param obj
     * @param emit
     * @return {*}
     */
    deepClone: function deepClone(obj, emit) {
        var value = null;
        emit = emit || {};

        if (this.typeCheck("array", obj)) {
            value = new Array(obj.length);

            for (var i = 0, len = obj.length; i < len; i++) {
                value[i] = this.deepClone(obj[i], emit);
            }
        } else if (this.typeCheck("date", obj)) {
            value = obj;
        } else if (this.typeCheck("object", obj)) {
            value = {};

            for (var key in obj) {
                if (emit[key]) {
                    value[key] = obj[key];
                } else {
                    value[key] = this.deepClone(obj[key], emit);
                }
            }
        } else {
            value = obj;
        }

        return value;
    },

    /**
     * @method sort
     * use QuickSort
     * @param {Array} array
     * @return {QuickSort}
     */
    sort: function sort(array) {
        var QuickSort = jui.include("util.sort");
        return new QuickSort(array);
    },

    /**
     * @method runtime
     *
     * caculate callback runtime
     *
     * @param {String} name
     * @param {Function} callback
     */
    runtime: function runtime(name, callback) {
        var nStart = new Date().getTime();
        callback();
        var nEnd = new Date().getTime();

        console.warn(name + " : " + (nEnd - nStart) + "ms");
    },

    /**
     * @method template
     * parsing template string
     * @param html
     * @param obj
     */
    template: function template(html, obj) {
        var tpl = jui.include("util.template");

        if (!obj) return tpl(html, null, globalOpts.template);else return tpl(html, obj, globalOpts.template);
    },

    /**
     * @method resize
     * add event in window resize event
     * @param {Function} callback
     * @param {Number} ms delay time
     */
    resize: function resize(callback, ms) {
        var after_resize = function () {
            var timer = 0;

            return function () {
                clearTimeout(timer);
                timer = setTimeout(callback, ms);
            };
        }();

        if (window.addEventListener) {
            window.addEventListener("resize", after_resize);
        } else if (object.attachEvent) {
            window.attachEvent("onresize", after_resize);
        } else {
            window["onresize"] = after_resize;
        }
    },

    /**
     * @method index
     *
     * IndexParser 객체 생성
     *
     * @return {IndexParser}
     */
    index: function index() {
        var KeyParser = jui.include("util.keyparser");
        return new KeyParser();
    },

    /**
     * @method chunk
     * split array by length
     * @param {Array} arr
     * @param {Number} len
     * @return {Array}
     */
    chunk: function chunk(arr, len) {
        var chunks = [],
            i = 0,
            n = arr.length;

        while (i < n) {
            chunks.push(arr.slice(i, i += len));
        }

        return chunks;
    },

    /**
     * @method typeCheck
     * check data  type
     * @param {String} t  type string
     * @param {Object} v value object
     * @return {Boolean}
     */
    typeCheck: function typeCheck(t, v) {
        function check(type, value) {
            if (typeof type != "string") return false;

            if (type == "string") {
                return typeof value == "string";
            } else if (type == "integer") {
                return typeof value == "number" && value % 1 == 0;
            } else if (type == "float") {
                return typeof value == "number" && value % 1 != 0;
            } else if (type == "number") {
                return typeof value == "number";
            } else if (type == "boolean") {
                return typeof value == "boolean";
            } else if (type == "undefined") {
                return typeof value == "undefined";
            } else if (type == "null") {
                return value === null;
            } else if (type == "array") {
                return value instanceof Array;
            } else if (type == "date") {
                return value instanceof Date;
            } else if (type == "function") {
                return typeof value == "function";
            } else if (type == "object") {
                // typeCheck에 정의된 타입일 경우에는 object 체크시 false를 반환 (date, array, null)
                return (typeof value === "undefined" ? "undefined" : _typeof(value)) == "object" && value !== null && !(value instanceof Array) && !(value instanceof Date) && !(value instanceof RegExp);
            }

            return false;
        }

        if ((typeof t === "undefined" ? "undefined" : _typeof(t)) == "object" && t.length) {
            var typeList = t;

            for (var i = 0; i < typeList.length; i++) {
                if (check(typeList[i], v)) return true;
            }

            return false;
        } else {
            return check(t, v);
        }
    },
    typeCheckObj: function typeCheckObj(uiObj, list) {
        if ((typeof uiObj === "undefined" ? "undefined" : _typeof(uiObj)) != "object") return;
        var self = this;

        for (var key in uiObj) {
            var func = uiObj[key];

            if (typeof func == "function") {
                (function (funcName, funcObj) {
                    uiObj[funcName] = function () {
                        var args = arguments,
                            params = list[funcName];

                        for (var i = 0; i < args.length; i++) {
                            if (!self.typeCheck(params[i], args[i])) {
                                throw new Error("JUI_CRITICAL_ERR: the " + i + "th parameter is not a " + params[i] + " (" + name + ")");
                            }
                        }

                        return funcObj.apply(this, args);
                    };
                })(key, func);
            }
        }
    },

    /**
     * @method dataToCsv
     *
     * data 를 csv 로 변환한다.
     *
     * @param {Array} keys
     * @param {Array} dataList
     * @param {Number} dataSize
     * @return {String}  변환된 csv 문자열
     */
    dataToCsv: function dataToCsv(keys, dataList, dataSize) {
        var csv = "",
            len = !dataSize ? dataList.length : dataSize;

        for (var i = -1; i < len; i++) {
            var tmpArr = [];

            for (var j = 0; j < keys.length; j++) {
                if (keys[j]) {
                    if (i == -1) {
                        tmpArr.push('"' + keys[j] + '"');
                    } else {
                        var value = dataList[i][keys[j]];
                        tmpArr.push(isNaN(value) ? '"' + value + '"' : value);
                    }
                }
            }

            csv += tmpArr.join(",") + "\n";
        }

        return csv;
    },

    /**
     * @method dataToCsv2
     *
     * @param {Object} options
     * @return {String}
     */
    dataToCsv2: function dataToCsv2(options) {
        var csv = "";
        var opts = this.extend({
            fields: null, // required
            rows: null, // required
            names: null,
            types: null,
            count: this.typeCheck("integer", options.count) ? options.count : options.rows.length
        }, options);

        for (var i = -1; i < opts.count; i++) {
            var tmpArr = [];

            for (var j = 0; j < opts.fields.length; j++) {
                if (opts.fields[j]) {
                    if (i == -1) {
                        if (opts.names && opts.names[j]) {
                            tmpArr.push('"' + opts.names[j] + '"');
                        } else {
                            tmpArr.push('"' + opts.fields[j] + '"');
                        }
                    } else {
                        var value = opts.rows[i][opts.fields[j]];

                        if (this.typeCheck("array", opts.types)) {
                            if (opts.types[j] == "string") {
                                tmpArr.push('"' + value + '"');
                            } else if (opts.types[j] == "integer") {
                                tmpArr.push(parseInt(value));
                            } else if (opts.types[j] == "float") {
                                tmpArr.push(parseFloat(value));
                            } else {
                                tmpArr.push(value);
                            }
                        } else {
                            tmpArr.push(isNaN(value) ? '"' + value + '"' : value);
                        }
                    }
                }
            }

            csv += tmpArr.join(",") + "\n";
        }

        return csv;
    },

    /**
     * @method fileToCsv
     *
     * file 에서 csv 컨텐츠 로드
     *
     * @param {File} file
     * @param {Function} callback
     */
    fileToCsv: function fileToCsv(file, callback) {
        var reader = new FileReader();

        reader.onload = function (readerEvt) {
            if (utility.typeCheck("function", callback)) {
                callback(readerEvt.target.result);
            }
        };

        reader.readAsText(file);
    },
    /**
     * @method csvToBase64
     *
     * csv 다운로드 링크로 변환
     *
     * @param {String} csv
     * @return {String}
     */
    csvToBase64: function csvToBase64(csv) {
        var Base64 = jui.include("util.base64");
        return "data:application/octet-stream;base64," + Base64.encode(csv);
    },
    /**
     * @method csvToData
     *
     * @param {Array} keys
     * @param {String} csv
     * @param {Number} csvNumber
     * @return {Array}
     */
    csvToData: function csvToData(keys, csv, csvNumber) {
        var dataList = [],
            tmpRowArr = csv.split("\n");

        for (var i = 1; i < tmpRowArr.length; i++) {
            if (tmpRowArr[i] != "") {
                var tmpArr = tmpRowArr[i].split(","),
                    // TODO: 값 안에 콤마(,)가 있을 경우에 별도로 처리해야 함
                data = {};

                for (var j = 0; j < keys.length; j++) {
                    data[keys[j]] = tmpArr[j];

                    // '"' 로 감싸져있는 문자열은 '"' 제거
                    if (this.startsWith(tmpArr[j], '"') && this.endsWith(tmpArr[j], '"')) {
                        data[keys[j]] = tmpArr[j].split('"').join('');
                    } else {
                        data[keys[j]] = tmpArr[j];
                    }

                    if (this.inArray(keys[j], csvNumber) != -1) {
                        data[keys[j]] = parseFloat(tmpArr[j]);
                    }
                }

                dataList.push(data);
            }
        }

        return dataList;
    },
    /**
     * @method getCsvFields
     *
     * csv 에서 필드 얻어오기
     *
     * @param {Array} fields
     * @param {Array} csvFields
     * @return {Array}
     */
    getCsvFields: function getCsvFields(fields, csvFields) {
        var tmpFields = this.typeCheck("array", csvFields) ? csvFields : fields;

        for (var i = 0; i < tmpFields.length; i++) {
            if (!isNaN(tmpFields[i])) {
                tmpFields[i] = fields[tmpFields[i]];
            }
        }

        return tmpFields;
    },

    /**
     * @method svgToBase64
     *
     * xml 문자열로 svg datauri 생성
     *
     * @param {String} xml
     * @return {String} 변환된 data uri 링크
     */
    svgToBase64: function svgToBase64(xml) {
        var Base64 = jui.include("util.base64");
        return "data:image/svg+xml;base64," + Base64.encode(xml);
    },

    /**
     * @method dateFormat
     *
     * implements date format function
     *
     * yyyy : 4 digits year
     * yy : 2 digits year
     * y : 1 digit year
     *
     * @param {Date} date
     * @param {String} format   date format string
     * @param utc
     * @return {string}
     */
    dateFormat: function dateFormat(date, format, utc) {
        var MMMM = ["\x00", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
        var MMM = ["\x01", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        var dddd = ["\x02", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
        var ddd = ["\x03", "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];

        function ii(i, len) {
            var s = i + "";
            len = len || 2;
            while (s.length < len) {
                s = "0" + s;
            }return s;
        }

        var y = utc ? date.getUTCFullYear() : date.getFullYear();
        format = format.replace(/(^|[^\\])yyyy+/g, "$1" + y);
        format = format.replace(/(^|[^\\])yy/g, "$1" + y.toString().substr(2, 2));
        format = format.replace(/(^|[^\\])y/g, "$1" + y);

        var M = (utc ? date.getUTCMonth() : date.getMonth()) + 1;
        format = format.replace(/(^|[^\\])MMMM+/g, "$1" + MMMM[0]);
        format = format.replace(/(^|[^\\])MMM/g, "$1" + MMM[0]);
        format = format.replace(/(^|[^\\])MM/g, "$1" + ii(M));
        format = format.replace(/(^|[^\\])M/g, "$1" + M);

        var d = utc ? date.getUTCDate() : date.getDate();
        format = format.replace(/(^|[^\\])dddd+/g, "$1" + dddd[0]);
        format = format.replace(/(^|[^\\])ddd/g, "$1" + ddd[0]);
        format = format.replace(/(^|[^\\])dd/g, "$1" + ii(d));
        format = format.replace(/(^|[^\\])d/g, "$1" + d);

        var H = utc ? date.getUTCHours() : date.getHours();
        format = format.replace(/(^|[^\\])HH+/g, "$1" + ii(H));
        format = format.replace(/(^|[^\\])H/g, "$1" + H);

        var h = H > 12 ? H - 12 : H == 0 ? 12 : H;
        format = format.replace(/(^|[^\\])hh+/g, "$1" + ii(h));
        format = format.replace(/(^|[^\\])h/g, "$1" + h);

        var m = utc ? date.getUTCMinutes() : date.getMinutes();
        format = format.replace(/(^|[^\\])mm+/g, "$1" + ii(m));
        format = format.replace(/(^|[^\\])m/g, "$1" + m);

        var s = utc ? date.getUTCSeconds() : date.getSeconds();
        format = format.replace(/(^|[^\\])ss+/g, "$1" + ii(s));
        format = format.replace(/(^|[^\\])s/g, "$1" + s);

        var f = utc ? date.getUTCMilliseconds() : date.getMilliseconds();
        format = format.replace(/(^|[^\\])fff+/g, "$1" + ii(f, 3));
        f = Math.round(f / 10);
        format = format.replace(/(^|[^\\])ff/g, "$1" + ii(f));
        f = Math.round(f / 10);
        format = format.replace(/(^|[^\\])f/g, "$1" + f);

        var T = H < 12 ? "AM" : "PM";
        format = format.replace(/(^|[^\\])TT+/g, "$1" + T);
        format = format.replace(/(^|[^\\])T/g, "$1" + T.charAt(0));

        var t = T.toLowerCase();
        format = format.replace(/(^|[^\\])tt+/g, "$1" + t);
        format = format.replace(/(^|[^\\])t/g, "$1" + t.charAt(0));

        var tz = -date.getTimezoneOffset();
        var K = utc || !tz ? "Z" : tz > 0 ? "+" : "-";
        if (!utc) {
            tz = Math.abs(tz);
            var tzHrs = Math.floor(tz / 60);
            var tzMin = tz % 60;
            K += ii(tzHrs) + ":" + ii(tzMin);
        }
        format = format.replace(/(^|[^\\])K/g, "$1" + K);

        var day = (utc ? date.getUTCDay() : date.getDay()) + 1;
        format = format.replace(new RegExp(dddd[0], "g"), dddd[day]);
        format = format.replace(new RegExp(ddd[0], "g"), ddd[day]);

        format = format.replace(new RegExp(MMMM[0], "g"), MMMM[M]);
        format = format.replace(new RegExp(MMM[0], "g"), MMM[M]);

        format = format.replace(/\\(.)/g, "$1");

        return format;
    },
    /**
     * @method createId
     *
     * 유니크 아이디 생성
     *
     * @param {String} key  prefix string
     * @return {String} 생성된 아이디 문자열
     */
    createId: function createId(key) {
        return [key || "id", +new Date(), Math.round(Math.random() * 100) % 100].join("-");
    },
    /**
     * @method btoa
     *
     * Base64 인코딩
     *
     * @return {String}
     */
    btoa: function btoa(input) {
        var Base64 = jui.include("util.base64");
        return Base64.encode(input);
    },
    /**
     * @method atob
     *
     * Base64 디코딩
     *
     * @return {String}
     */
    atob: function atob(input) {
        var Base64 = jui.include("util.base64");
        return Base64.decode(input);
    },

    /**
     * implement async loop without blocking ui
     *
     * @param total
     * @param context
     * @returns {Function}
     */
    timeLoop: function timeLoop(total, context) {

        return function (callback, lastCallback) {
            function TimeLoopCallback(i) {

                if (i < 1) return;

                if (i == 1) {
                    callback.call(context, i);
                    lastCallback.call(context);
                } else {
                    setTimeout(function () {
                        if (i > -1) callback.call(context, i--);
                        if (i > -1) TimeLoopCallback(i);
                    }, 1);
                }
            }

            TimeLoopCallback(total);
        };
    },
    /**
     * @method loop
     *
     * 최적화된 루프 생성 (5단계로 나눔)
     *
     * @param {Number} total
     * @param {Object} [context=null]
     * @return {Function} 최적화된 루프 콜백 (index, groupIndex 2가지 파라미터를 받는다.)
     */
    loop: function loop(total, context) {
        var start = 0,
            end = total,
            unit = Math.ceil(total / 5);

        return function (callback) {
            var first = start,
                second = unit * 1,
                third = unit * 2,
                fourth = unit * 3,
                fifth = unit * 4,
                firstMax = second,
                secondMax = third,
                thirdMax = fourth,
                fourthMax = fifth,
                fifthMax = end;

            while (first < firstMax && first < end) {
                callback.call(context, first, 1);
                first++;

                if (second < secondMax && second < end) {
                    callback.call(context, second, 2);
                    second++;
                }
                if (third < thirdMax && third < end) {
                    callback.call(context, third, 3);
                    third++;
                }
                if (fourth < fourthMax && fourth < end) {
                    callback.call(context, fourth, 4);
                    fourth++;
                }
                if (fifth < fifthMax && fifth < end) {
                    callback.call(context, fifth, 5);
                    fifth++;
                }
            }
        };
    },

    /**
     * @method loopArray
     *
     * 배열을 사용해서 최적화된 루프로 생성한다.
     *
     *
     * @param {Array} data 루프로 생성될 배열
     * @param {Object} [context=null]
     * @return {Function} 최적화된 루프 콜백 (data, index, groupIndex 3가지 파라미터를 받는다.)
     */
    loopArray: function loopArray(data, context) {
        var total = data.length,
            start = 0,
            end = total,
            unit = Math.ceil(total / 5);

        return function (callback) {
            var first = start,
                second = unit * 1,
                third = unit * 2,
                fourth = unit * 3,
                fifth = unit * 4,
                firstMax = second,
                secondMax = third,
                thirdMax = fourth,
                fourthMax = fifth,
                fifthMax = end;

            while (first < firstMax && first < end) {
                callback.call(context, data[first], first, 1);
                first++;
                if (second < secondMax && second < end) {
                    callback.call(context, data[second], second, 2);
                    second++;
                }
                if (third < thirdMax && third < end) {
                    callback.call(context, data[third], third, 3);
                    third++;
                }
                if (fourth < fourthMax && fourth < end) {
                    callback.call(context, data[fourth], fourth, 4);
                    fourth++;
                }
                if (fifth < fifthMax && fifth < end) {
                    callback.call(context, data[fifth], fifth, 5);
                    fifth++;
                }
            }
        };
    },

    /**
     * @method makeIndex
     *
     * 배열의 키 기반 인덱스를 생성한다.
     *
     * 개별 값 별로 멀티 인덱스를 생성한다.
     *
     * @param {Array} data
     * @param {String} keyField
     * @return {Object} 생성된 인덱스
     */
    makeIndex: function makeIndex(data, keyField) {
        var list = {},
            func = this.loopArray(data);

        func(function (d, i) {
            var value = d[keyField];

            if (typeof list[value] == 'undefined') {
                list[value] = [];
            }

            list[value].push(i);
        });

        return list;
    },

    /**
     * @method startsWith
     * Check that it matches the starting string search string.
     *
     * @param {String} string
     * @param {String} searchString
     * @return {Integer} position
     */
    startsWith: function startsWith(string, searchString, position) {
        position = position || 0;

        return string.lastIndexOf(searchString, position) === position;
    },

    /**
     * @method endsWith
     * Check that it matches the end of a string search string.
     *
     * @param {String} string
     * @param {String} searchString
     * @return {Integer} position
     */
    endsWith: function endsWith(string, searchString, position) {
        var subjectString = string;

        if (position === undefined || position > subjectString.length) {
            position = subjectString.length;
        }

        position -= searchString.length;
        var lastIndex = subjectString.indexOf(searchString, position);

        return lastIndex !== -1 && lastIndex === position;
    },

    inArray: function inArray(target, list) {
        if (this.typeCheck(["undefined", "null"], target) || !this.typeCheck("array", list)) return -1;

        for (var i = 0, len = list.length; i < len; i++) {
            if (list[i] == target) return i;
        }

        return -1;
    },

    trim: function trim(text) {
        var whitespace = "[\\x20\\t\\r\\n\\f]",
            rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g");

        return text == null ? "" : (text + "").replace(rtrim, "");
    },

    ready: function () {
        var readyList,
            _DOMContentLoaded2,
            class2type = {};

        class2type["[object Boolean]"] = "boolean";
        class2type["[object Number]"] = "number";
        class2type["[object String]"] = "string";
        class2type["[object Function]"] = "function";
        class2type["[object Array]"] = "array";
        class2type["[object Date]"] = "date";
        class2type["[object RegExp]"] = "regexp";
        class2type["[object Object]"] = "object";

        var ReadyObj = {
            // Is the DOM ready to be used? Set to true once it occurs.
            isReady: false,
            // A counter to track how many items to wait for before
            // the ready event fires. See #6781
            readyWait: 1,
            // Hold (or release) the ready event
            holdReady: function holdReady(hold) {
                if (hold) {
                    ReadyObj.readyWait++;
                } else {
                    ReadyObj.ready(true);
                }
            },
            // Handle when the DOM is ready
            ready: function ready(wait) {
                // Either a released hold or an DOMready/load event and not yet ready
                if (wait === true && ! --ReadyObj.readyWait || wait !== true && !ReadyObj.isReady) {
                    // Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
                    if (!document.body) {
                        return setTimeout(ReadyObj.ready, 1);
                    }

                    // Remember that the DOM is ready
                    ReadyObj.isReady = true;
                    // If a normal DOM Ready event fired, decrement, and wait if need be
                    if (wait !== true && --ReadyObj.readyWait > 0) {
                        return;
                    }
                    // If there are functions bound, to execute
                    readyList.resolveWith(document, [ReadyObj]);

                    // Trigger any bound ready events
                    //if ( ReadyObj.fn.trigger ) {
                    //  ReadyObj( document ).trigger( "ready" ).unbind( "ready" );
                    //}
                }
            },
            bindReady: function bindReady() {
                if (readyList) {
                    return;
                }
                readyList = ReadyObj._Deferred();

                // Catch cases where $(document).ready() is called after the
                // browser event has already occurred.
                if (document.readyState === "complete") {
                    // Handle it asynchronously to allow scripts the opportunity to delay ready
                    return setTimeout(ReadyObj.ready, 1);
                }

                // Mozilla, Opera and webkit nightlies currently support this event
                if (document.addEventListener) {
                    // Use the handy event callback
                    document.addEventListener("DOMContentLoaded", _DOMContentLoaded2, false);
                    // A fallback to window.onload, that will always work
                    window.addEventListener("load", ReadyObj.ready, false);

                    // If IE event model is used
                } else if (document.attachEvent) {
                    // ensure firing before onload,
                    // maybe late but safe also for iframes
                    document.attachEvent("onreadystatechange", _DOMContentLoaded2);

                    // A fallback to window.onload, that will always work
                    window.attachEvent("onload", ReadyObj.ready);

                    // If IE and not a frame
                    // continually check to see if the document is ready
                    var toplevel = false;

                    try {
                        toplevel = window.frameElement == null;
                    } catch (e) {}

                    if (document.documentElement.doScroll && toplevel) {
                        doScrollCheck();
                    }
                }
            },
            _Deferred: function _Deferred() {
                var // callbacks list
                callbacks = [],

                // stored [ context , args ]
                fired,

                // to avoid firing when already doing so
                firing,

                // flag to know if the deferred has been cancelled
                cancelled,

                // the deferred itself
                deferred = {

                    // done( f1, f2, ...)
                    done: function done() {
                        if (!cancelled) {
                            var args = arguments,
                                i,
                                length,
                                elem,
                                type,
                                _fired;
                            if (fired) {
                                _fired = fired;
                                fired = 0;
                            }
                            for (i = 0, length = args.length; i < length; i++) {
                                elem = args[i];
                                type = ReadyObj.type(elem);
                                if (type === "array") {
                                    deferred.done.apply(deferred, elem);
                                } else if (type === "function") {
                                    callbacks.push(elem);
                                }
                            }
                            if (_fired) {
                                deferred.resolveWith(_fired[0], _fired[1]);
                            }
                        }
                        return this;
                    },

                    // resolve with given context and args
                    resolveWith: function resolveWith(context, args) {
                        if (!cancelled && !fired && !firing) {
                            // make sure args are available (#8421)
                            args = args || [];
                            firing = 1;
                            try {
                                while (callbacks[0]) {
                                    callbacks.shift().apply(context, args); //shifts a callback, and applies it to document
                                }
                            } finally {
                                fired = [context, args];
                                firing = 0;
                            }
                        }
                        return this;
                    },

                    // resolve with this as context and given arguments
                    resolve: function resolve() {
                        deferred.resolveWith(this, arguments);
                        return this;
                    },

                    // Has this deferred been resolved?
                    isResolved: function isResolved() {
                        return !!(firing || fired);
                    },

                    // Cancel
                    cancel: function cancel() {
                        cancelled = 1;
                        callbacks = [];
                        return this;
                    }
                };

                return deferred;
            },
            type: function type(obj) {
                return obj == null ? String(obj) : class2type[Object.prototype.toString.call(obj)] || "object";
            }
            // The DOM ready check for Internet Explorer
        };function doScrollCheck() {
            if (ReadyObj.isReady) {
                return;
            }

            try {
                // If IE is used, use the trick by Diego Perini
                // http://javascript.nwbox.com/IEContentLoaded/
                document.documentElement.doScroll("left");
            } catch (e) {
                setTimeout(doScrollCheck, 1);
                return;
            }

            // and execute any waiting functions
            ReadyObj.ready();
        }
        // Cleanup functions for the document ready method
        if (document.addEventListener) {
            _DOMContentLoaded2 = function DOMContentLoaded() {
                document.removeEventListener("DOMContentLoaded", _DOMContentLoaded2, false);
                ReadyObj.ready();
            };
        } else if (document.attachEvent) {
            _DOMContentLoaded2 = function _DOMContentLoaded() {
                // Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
                if (document.readyState === "complete") {
                    document.detachEvent("onreadystatechange", _DOMContentLoaded2);
                    ReadyObj.ready();
                }
            };
        }
        function ready(fn) {
            // Attach the listeners
            ReadyObj.bindReady();

            var type = ReadyObj.type(fn);

            // Add the callback
            readyList.done(fn); //readyList is result of _Deferred()
        }

        return ready;
    }(),

    param: function param(data) {
        var r20 = /%20/g,
            s = [],
            add = function add(key, value) {
            // If value is a function, invoke it and return its value
            value = utility.typeCheck("function", value) ? value() : value == null ? "" : value;
            s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value);
        };

        for (var key in data) {
            add(key, data[key]);
        }

        return s.join("&").replace(r20, "+");
    },

    ajax: function ajax(data) {
        var xhr = null,
            paramStr = "",
            callback = null;

        var opts = utility.extend({
            url: null,
            type: "GET",
            data: null,
            async: true,
            success: null,
            fail: null
        }, data);

        if (!this.typeCheck("string", opts.url) || !this.typeCheck("function", opts.success)) return;

        if (this.typeCheck("object", opts.data)) paramStr = this.param(opts.data);

        if (!this.typeCheck("undefined", XMLHttpRequest)) {
            xhr = new XMLHttpRequest();
        } else {
            var versions = ["MSXML2.XmlHttp.5.0", "MSXML2.XmlHttp.4.0", "MSXML2.XmlHttp.3.0", "MSXML2.XmlHttp.2.0", "Microsoft.XmlHttp"];

            for (var i = 0, len = versions.length; i < len; i++) {
                try {
                    xhr = new ActiveXObject(versions[i]);
                    break;
                } catch (e) {}
            }
        }

        if (xhr != null) {
            xhr.open(opts.type, opts.url, opts.async);
            xhr.send(paramStr);

            callback = function callback() {
                if (xhr.readyState === 4 && xhr.status == 200) {
                    opts.success(xhr);
                } else {
                    if (utility.typeCheck("function", opts.fail)) {
                        opts.fail(xhr);
                    }
                }
            };

            if (!opts.async) {
                callback();
            } else {
                xhr.onreadystatechange = callback;
            }
        }
    },

    scrollWidth: function scrollWidth() {
        var inner = document.createElement("p");
        inner.style.width = "100%";
        inner.style.height = "200px";

        var outer = document.createElement("div");
        outer.style.position = "absolute";
        outer.style.top = "0px";
        outer.style.left = "0px";
        outer.style.visibility = "hidden";
        outer.style.width = "200px";
        outer.style.height = "150px";
        outer.style.overflow = "hidden";
        outer.appendChild(inner);

        document.body.appendChild(outer);
        var w1 = inner.offsetWidth;
        outer.style.overflow = "scroll";
        var w2 = inner.offsetWidth;
        if (w1 == w2) w2 = outer.clientWidth;
        document.body.removeChild(outer);

        return w1 - w2;
    }

    /*
     * Module related functions
     *
     */
};var getDepends = function getDepends(depends) {
    var args = [];

    for (var i = 0; i < depends.length; i++) {
        var module = global$1[depends[i]];

        if (!utility.typeCheck(["function", "object"], module)) {
            var modules = getModules(depends[i]);

            if (modules == null) {
                console.warn("JUI_WARNING_MSG: '" + depends[i] + "' is not loaded");
                args.push(null);
            } else {
                args.push(modules);
            }
        } else {
            args.push(module);
        }
    }

    return args;
};

var getModules = function getModules(parent) {
    var modules = null,
        parent = parent + ".";

    for (var key in global$1) {
        if (key.indexOf(parent) != -1) {
            if (utility.typeCheck(["function", "object"], global$1[key])) {
                var child = key.split(parent).join("");

                if (child.indexOf(".") == -1) {
                    if (modules == null) {
                        modules = {};
                    }

                    modules[child] = global$1[key];
                }
            }
        }
    }

    return modules;
};

/**
 * @class jui
 *
 * Global Object
 *
 * @singleton
 */
var jui = {

    /**
     * @method ready
     *
     * ready 타임에 실행될 callback 정의
     *
     * @param {Function} callback
     */
    ready: function ready() {
        var args = [],
            callback = arguments.length == 2 ? arguments[1] : arguments[0],
            depends = arguments.length == 2 ? arguments[0] : null;

        if (!utility.typeCheck(["array", "null"], depends) || !utility.typeCheck("function", callback)) {
            throw new Error("JUI_CRITICAL_ERR: Invalid parameter type of the function");
        }

        utility.ready(function () {
            if (depends) {
                args = getDepends(depends);
            } else {
                // @Deprecated 기존의 레거시를 위한 코드
                var ui = getModules("ui"),
                    uix = {};

                utility.extend(uix, ui);
                utility.extend(uix, getModules("grid"));

                args = [ui, uix, utility];
            }

            callback.apply(null, args);
        });
    },

    /**
     * @method defineUI
     *
     * 사용자가 실제로 사용할 수 있는 UI 클래스를 정의
     *
     * @param {String} name 모듈 로드와 상속에 사용될 이름을 정한다.
     * @param {Array} depends 'define'이나 'defineUI'로 정의된 클래스나 객체를 인자로 받을 수 있다.
     * @param {Function} callback UI 클래스를 해당 콜백 함수 내에서 클래스 형태로 구현하고 리턴해야 한다.
     */
    defineUI: function defineUI(name, depends, callback, parent) {
        if (!utility.typeCheck("string", name) || !utility.typeCheck("array", depends) || !utility.typeCheck("function", callback) || !utility.typeCheck(["string", "undefined"], parent)) {
            throw new Error("JUI_CRITICAL_ERR: Invalid parameter type of the function");
        }

        if (utility.typeCheck("function", globalClass[name])) {
            throw new Error("JUI_CRITICAL_ERR: '" + name + "' is already exist");
        }

        if (utility.typeCheck("undefined", parent)) {
            parent = "core";
        }

        if (!utility.typeCheck("function", globalClass[parent])) {
            throw new Error("JUI_CRITICAL_ERR: Parents are the only function");
        } else {
            if (globalFunc[parent] !== true) {
                throw new Error("JUI_CRITICAL_ERR: UI function can not be inherited");
            }
        }

        var args = getDepends(depends),
            uiFunc = callback.apply(null, args);

        // 상속
        utility.inherit(uiFunc, globalClass[parent]);

        // TODO: event를 기본 패키지에 포함하면서 다시 롤백한 코드
        global$1[name] = globalClass[parent != "core" ? "event" : "core"].init({
            type: name,
            "class": uiFunc
        });

        globalClass[name] = uiFunc;
        globalFunc[name] = true;

        /**
         * @deprecated
         // support AMD module
         if (typeof define == "function" && define.amd) {
        define(name, function () {
        return global[name]
        });
        }
         */
    },

    /**
     * @method redefineUI
     *
     * UI 클래스에서 사용될 클래스를 정의하고, 자유롭게 상속할 수 있는 클래스를 정의
     *
     * @param {String} name 모듈 로드와 상속에 사용될 이름을 정한다.
     * @param {Array} depends 'define'이나 'defineUI'로 정의된 클래스나 객체를 인자로 받을 수 있다.
     * @param {Function} callback UI 클래스를 해당 콜백 함수 내에서 클래스 형태로 구현하고 리턴해야 한다.
     * @param {String} parent 상속받을 클래스
     */
    redefineUI: function redefineUI(name, depends, callback, parent, skip) {
        if (!skip && globalFunc[name] === true) {
            global$1[name] = null;
            globalClass[name] = null;
            globalFunc[name] = false;
        }

        if (!skip || skip && globalFunc[name] !== true) {
            this.defineUI(name, depends, callback, parent);
        }
    },

    createUIObject: function createUIObject(UI, selector, index, elem, options, afterHook) {
        var mainObj = new UI["class"]();

        // Check Options
        var opts = jui.defineOptions(UI["class"], options || {});

        // Public Properties
        mainObj.init.prototype = mainObj;
        /** @property {String/HTMLElement} selector */
        mainObj.init.prototype.selector = selector;
        /** @property {HTMLElement} root */
        mainObj.init.prototype.root = elem;
        /** @property {Object} options */
        mainObj.init.prototype.options = opts;
        /** @property {Object} tpl Templates */
        mainObj.init.prototype.tpl = {};
        /** @property {Array} event Custom events */
        mainObj.init.prototype.event = new Array(); // Custom Event
        /** @property {Integer} timestamp UI Instance creation time*/
        mainObj.init.prototype.timestamp = new Date().getTime();
        /** @property {Integer} index Index of UI instance*/
        mainObj.init.prototype.index = index;
        /** @property {Class} module Module class */
        mainObj.init.prototype.module = UI;

        // UI 객체 프로퍼티를 외부에서 정의할 수 있음 (jQuery 의존성 제거를 위한 코드)
        if (utility.typeCheck("function", afterHook)) {
            afterHook(mainObj, opts);
        }

        // Script-based Template Settings
        for (var name in opts.tpl) {
            var tplHtml = opts.tpl[name];

            if (utility.typeCheck("string", tplHtml) && tplHtml != "") {
                mainObj.init.prototype.tpl[name] = utility.template(tplHtml);
            }
        }

        var uiObj = new mainObj.init();

        // Custom Event Setting
        for (var key in opts.event) {
            uiObj.on(key, opts.event[key]);
        }

        // 엘리먼트 객체에 jui 속성 추가
        elem.jui = uiObj;

        return uiObj;
    },

    /**
     * @method define
     *
     * UI 클래스에서 사용될 클래스를 정의하고, 자유롭게 상속할 수 있는 클래스를 정의
     *
     * @param {String} name 모듈 로드와 상속에 사용될 이름을 정한다.
     * @param {Array} depends 'define'이나 'defineUI'로 정의된 클래스나 객체를 인자로 받을 수 있다.
     * @param {Function} callback UI 클래스를 해당 콜백 함수 내에서 클래스 형태로 구현하고 리턴해야 한다.
     * @param {String} parent 상속받을 클래스
     */
    define: function define(name, depends, callback, parent) {
        if (!utility.typeCheck("string", name) || !utility.typeCheck("array", depends) || !utility.typeCheck("function", callback) || !utility.typeCheck(["string", "undefined", "null"], parent)) {
            throw new Error("JUI_CRITICAL_ERR: Invalid parameter type of the function");
        }

        if (utility.typeCheck("function", globalClass[name])) {
            throw new Error("JUI_CRITICAL_ERR: '" + name + "' is already exist");
        }

        var args = getDepends(depends),
            uiFunc = callback.apply(null, args);

        if (utility.typeCheck("function", globalClass[parent])) {
            if (globalFunc[parent] !== true) {
                throw new Error("JUI_CRITICAL_ERR: UI function can not be inherited");
            } else {
                utility.inherit(uiFunc, globalClass[parent]);
            }
        }

        // 함수 고유 설정
        global$1[name] = uiFunc;
        globalClass[name] = uiFunc; // original function
        globalFunc[name] = true;

        // support AMD module
        // @deprecated
        /*
        if (typeof define == "function" && define.amd) {
            define(name, function () {
                return global[name]
            });
        }*/
    },

    /**
     * @method redefine
     *
     * UI 클래스에서 사용될 클래스를 정의하고, 자유롭게 상속할 수 있는 클래스를 정의
     *
     * @param {String} name 모듈 로드와 상속에 사용될 이름을 정한다.
     * @param {Array} depends 'define'이나 'defineUI'로 정의된 클래스나 객체를 인자로 받을 수 있다.
     * @param {Function} callback UI 클래스를 해당 콜백 함수 내에서 클래스 형태로 구현하고 리턴해야 한다.
     * @param {String} parent 상속받을 클래스
     */
    redefine: function redefine(name, depends, callback, parent, skip) {
        if (!skip && globalFunc[name] === true) {
            global$1[name] = null;
            globalClass[name] = null;
            globalFunc[name] = false;
        }

        if (!skip || skip && globalFunc[name] !== true) {
            this.define(name, depends, callback, parent);
        }
    },

    /**
     * @method defineOptions
     *
     * 모듈 기본 옵션 정의
     *
     * @param {Object} Module
     * @param {Object} options
     * @param {Object} exceptOpts
     * @return {Object}
     */
    defineOptions: function defineOptions(Module, options, exceptOpts) {
        var defOpts = getOptions(Module, {});
        var defOptKeys = Object.keys(defOpts),
            optKeys = Object.keys(options);

        // 정의되지 않은 옵션 사용 유무 체크
        for (var i = 0; i < optKeys.length; i++) {
            var name = optKeys[i];

            if (utility.inArray(name, defOptKeys) == -1 && utility.inArray(name, exceptOpts) == -1) {
                throw new Error("JUI_CRITICAL_ERR: '" + name + "' is not an option");
            }
        }

        // 사용자 옵션 + 기본 옵션
        utility.extend(options, defOpts, true);

        // 상위 모듈의 옵션까지 모두 얻어오는 함수
        function getOptions(Module, options) {
            if (utility.typeCheck("function", Module)) {
                if (utility.typeCheck("function", Module.setup)) {
                    var opts = Module.setup();

                    for (var key in opts) {
                        if (utility.typeCheck("undefined", options[key])) {
                            options[key] = opts[key];
                        }
                    }
                }

                getOptions(Module.parent, options);
            }

            return options;
        }

        return options;
    },

    /**
     * define과 defineUI로 정의된 클래스 또는 객체를 가져온다.
     *
     * @param name 가져온 클래스 또는 객체의 이름
     * @return {*}
     */
    include: function include(name) {
        if (!utility.typeCheck("string", name)) {
            throw new Error("JUI_CRITICAL_ERR: Invalid parameter type of the function");
        }

        var module = global$1[name];

        if (utility.typeCheck(["function", "object"], module)) {
            return module;
        } else {
            var modules = getModules(name);

            if (modules == null) {
                console.warn("JUI_WARNING_MSG: '" + name + "' is not loaded");
                return null;
            } else {
                return modules;
            }
        }
    },

    /**
     * define과 defineUI로 정의된 모든 클래스와 객체를 가져온다.
     *
     * @return {Array}
     */
    includeAll: function includeAll() {
        var result = [];

        for (var key in global$1) {
            result.push(global$1[key]);
        }

        return result;
    },

    /**
     * 설정된 jui 관리 화면을 윈도우 팝업으로 띄운다.
     *
     * @param logUrl
     * @return {Window}
     */
    log: function log(logUrl) {
        var jui_mng = window.open(logUrl || globalOpts.logUrl, "JUIM", "width=1024, height=768, toolbar=no, menubar=no, resizable=yes");

        jui.debugAll(function (log, str) {
            jui_mng.log(log, str);
        });

        return jui_mng;
    },

    setup: function setup(options) {
        if (utility.typeCheck("object", options)) {
            globalOpts = utility.extend(globalOpts, options);
        }

        return globalOpts;
    },

    use: function use() {
        var modules = [];

        for (var i = 0; i < arguments.length; i++) {
            if (utility.typeCheck("array", arguments[i])) {
                var list = arguments[i];

                for (var j = 0; j < list.length; j++) {
                    if (utility.typeCheck("object", list[j])) {
                        modules.push(list[j]);
                    }
                }
            } else if (utility.typeCheck("object", arguments[i])) {
                modules.push(arguments[i]);
            }
        }

        for (var i = 0; i < modules.length; i++) {
            var module = modules[i];

            if ((typeof module === "undefined" ? "undefined" : _typeof(module)) == "object") {
                if (typeof module.name != "string") return;
                if (typeof module.component != "function") return;

                // 상속 대상 부모 클래스가 존재할 경우
                if (module.extend != null) {
                    if (jui.include(module.extend) == null) {
                        console.warn("JUI_WARNING_MSG: '" + module.extend + "' module should be imported in first");
                    }
                }

                if (module.extend == "core" || module.extend == "event") {
                    jui.redefineUI(module.name, [], module.component, module.extend);
                } else {
                    jui.redefine(module.name, [], module.component, module.extend);
                }
            }
        }
    }
};

var dom = {
    name: "util.dom",
    extend: null,
    component: function component() {
        var _ = jui.include("util.base");

        return {
            find: function find() {
                var args = arguments;

                if (args.length == 1) {
                    if (_.typeCheck("string", args[0])) {
                        return document.querySelectorAll(args[0]);
                    }
                } else if (args.length == 2) {
                    if (_.typeCheck("object", args[0]) && _.typeCheck("string", args[1])) {
                        return args[0].querySelectorAll(args[1]);
                    }
                }

                return [];
            },

            each: function each(selectorOrElements, callback) {
                if (!_.typeCheck("function", callback)) return;

                var elements = null;

                if (_.typeCheck("string", selectorOrElements)) {
                    elements = document.querySelectorAll(selectorOrElements);
                } else if (_.typeCheck("array", selectorOrElements)) {
                    elements = selectorOrElements;
                }

                if (elements != null) {
                    Array.prototype.forEach.call(elements, function (el, i) {
                        callback.apply(el, [i, el]);
                    });
                }
            },

            attr: function attr(selectorOrElements, keyOrAttributes) {
                if (!_.typeCheck(["string", "array"], selectorOrElements)) return;

                var elements = document.querySelectorAll(selectorOrElements);

                if (_.typeCheck("object", keyOrAttributes)) {
                    // set
                    for (var i = 0; i < elements.length; i++) {
                        for (var key in keyOrAttributes) {
                            elements[i].setAttribute(key, keyOrAttributes[key]);
                        }
                    }
                } else if (_.typeCheck("string", keyOrAttributes)) {
                    // get
                    if (elements.length > 0) {
                        return elements[0].getAttribute(keyOrAttributes);
                    }
                }
            },

            remove: function remove(selectorOrElements) {
                this.each(selectorOrElements, function () {
                    this.parentNode.removeChild(this);
                });
            },

            offset: function offset(elem) {
                function isWindow(obj) {
                    /* jshint eqeqeq: false */
                    return obj != null && obj == obj.window;
                }

                function getWindow(elem) {
                    return isWindow(elem) ? elem : elem.nodeType === 9 ? elem.defaultView || elem.parentWindow : false;
                }

                var docElem,
                    win,
                    box = { top: 0, left: 0 },
                    doc = elem && elem.ownerDocument;

                if (!doc) {
                    return;
                }

                docElem = doc.documentElement;

                // Make sure it's not a disconnected DOM node
                /*/
                 if ( !global.jquery.contains( docElem, elem ) ) {
                 return box;
                 }
                 /**/

                // If we don't have gBCR, just use 0,0 rather than error
                // BlackBerry 5, iOS 3 (original iPhone)
                var strundefined = "undefined";
                if (_typeof(elem.getBoundingClientRect) !== strundefined) {
                    box = elem.getBoundingClientRect();
                }
                win = getWindow(doc);

                return {
                    top: box.top + (win.pageYOffset || docElem.scrollTop) - (docElem.clientTop || 0),
                    left: box.left + (win.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || 0)
                };
            }
        };
    }
};

var SortUtil = {
    name: "util.sort",
    extend: null,
    component: function component() {
        var QuickSort = function QuickSort(array, isClone) {
            var compareFunc = null,
                array = isClone ? array.slice(0) : array;

            function swap(indexA, indexB) {
                var temp = array[indexA];

                array[indexA] = array[indexB];
                array[indexB] = temp;
            }

            function partition(pivot, left, right) {
                var storeIndex = left,
                    pivotValue = array[pivot];
                swap(pivot, right);

                for (var v = left; v < right; v++) {
                    if (compareFunc(array[v], pivotValue) || !compareFunc(pivotValue, array[v]) && v % 2 == 1) {
                        swap(v, storeIndex);
                        storeIndex++;
                    }
                }

                swap(right, storeIndex);

                return storeIndex;
            }

            this.setCompare = function (func) {
                compareFunc = func;
            };

            this.run = function (left, right) {
                var pivot = null,
                    newPivot = null;

                if (typeof left !== 'number') {
                    left = 0;
                }

                if (typeof right !== 'number') {
                    right = array.length - 1;
                }

                if (left < right) {
                    pivot = left + Math.ceil((right - left) * 0.5);
                    newPivot = partition(pivot, left, right);

                    this.run(left, newPivot - 1);
                    this.run(newPivot + 1, right);
                }

                return array;
            };
        };

        return QuickSort;
    }
};

var KeyParserUtil = {
    name: "util.keyparser",
    extend: null,
    component: function component() {
        var KeyParser = function KeyParser() {

            /**
             * @method isIndexDepth
             *
             * @param {String} index
             * @return {Boolean}
             */
            this.isIndexDepth = function (index) {
                if (typeof index == "string" && index.indexOf(".") != -1) {
                    return true;
                }

                return false;
            };

            /**
             * @method getIndexList
             *
             * @param {String} index
             * @return {Array}
             */
            this.getIndexList = function (index) {
                // 트리 구조의 모든 키를 배열 형태로 반환
                var resIndex = [],
                    strIndexes = ("" + index).split(".");

                for (var i = 0; i < strIndexes.length; i++) {
                    resIndex[i] = parseInt(strIndexes[i]);
                }

                return resIndex;
            };

            /**
             * @method changeIndex
             *
             *
             * @param {String} index
             * @param {String} targetIndex
             * @param {String} rootIndex
             * @return {String}
             */
            this.changeIndex = function (index, targetIndex, rootIndex) {
                var rootIndexLen = this.getIndexList(rootIndex).length,
                    indexList = this.getIndexList(index),
                    tIndexList = this.getIndexList(targetIndex);

                for (var i = 0; i < rootIndexLen; i++) {
                    indexList.shift();
                }

                return tIndexList.concat(indexList).join(".");
            };

            /**
             * @method getNextIndex
             *
             * @param {String} index
             * @return {String}
             */
            this.getNextIndex = function (index) {
                // 현재 인덱스에서 +1
                var indexList = this.getIndexList(index),
                    no = indexList.pop() + 1;

                indexList.push(no);
                return indexList.join(".");
            };

            /**
             * @method getParentIndex
             *
             *
             * @param {String} index
             * @returns {*}
             */
            this.getParentIndex = function (index) {
                if (!this.isIndexDepth(index)) return null;

                return index.substr(0, index.lastIndexOf("."));
            };
        };

        return KeyParser;
    }
};

var Base64Util = {
    name: "util.base64",
    extend: null,
    component: function component() {
        var Base64 = {

            // private property
            _keyStr: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",

            // public method for encoding
            encode: function encode(input) {
                var output = "";
                var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
                var i = 0;

                input = Base64._utf8_encode(input);

                while (i < input.length) {

                    chr1 = input.charCodeAt(i++);
                    chr2 = input.charCodeAt(i++);
                    chr3 = input.charCodeAt(i++);

                    enc1 = chr1 >> 2;
                    enc2 = (chr1 & 3) << 4 | chr2 >> 4;
                    enc3 = (chr2 & 15) << 2 | chr3 >> 6;
                    enc4 = chr3 & 63;

                    if (isNaN(chr2)) {
                        enc3 = enc4 = 64;
                    } else if (isNaN(chr3)) {
                        enc4 = 64;
                    }

                    output = output + Base64._keyStr.charAt(enc1) + Base64._keyStr.charAt(enc2) + Base64._keyStr.charAt(enc3) + Base64._keyStr.charAt(enc4);
                }

                return output;
            },

            // public method for decoding
            decode: function decode(input) {
                var output = "";
                var chr1, chr2, chr3;
                var enc1, enc2, enc3, enc4;
                var i = 0;

                input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");

                while (i < input.length) {

                    enc1 = Base64._keyStr.indexOf(input.charAt(i++));
                    enc2 = Base64._keyStr.indexOf(input.charAt(i++));
                    enc3 = Base64._keyStr.indexOf(input.charAt(i++));
                    enc4 = Base64._keyStr.indexOf(input.charAt(i++));

                    chr1 = enc1 << 2 | enc2 >> 4;
                    chr2 = (enc2 & 15) << 4 | enc3 >> 2;
                    chr3 = (enc3 & 3) << 6 | enc4;

                    output = output + String.fromCharCode(chr1);

                    if (enc3 != 64) {
                        output = output + String.fromCharCode(chr2);
                    }
                    if (enc4 != 64) {
                        output = output + String.fromCharCode(chr3);
                    }
                }

                output = Base64._utf8_decode(output);

                return output;
            },

            // private method for UTF-8 encoding
            _utf8_encode: function _utf8_encode(string) {
                string = string.replace(/\r\n/g, "\n");

                var utftext = String.fromCharCode(239) + String.fromCharCode(187) + String.fromCharCode(191);

                for (var n = 0; n < string.length; n++) {

                    var c = string.charCodeAt(n);

                    if (c < 128) {
                        utftext += String.fromCharCode(c);
                    } else if (c > 127 && c < 2048) {
                        utftext += String.fromCharCode(c >> 6 | 192);
                        utftext += String.fromCharCode(c & 63 | 128);
                    } else {
                        utftext += String.fromCharCode(c >> 12 | 224);
                        utftext += String.fromCharCode(c >> 6 & 63 | 128);
                        utftext += String.fromCharCode(c & 63 | 128);
                    }
                }

                return utftext;
            },

            // private method for UTF-8 decoding
            _utf8_decode: function _utf8_decode(utftext) {
                var string = "";
                var i = 0;
                var c = c1 = c2 = 0;

                while (i < utftext.length) {

                    c = utftext.charCodeAt(i);

                    if (c < 128) {
                        string += String.fromCharCode(c);
                        i++;
                    } else if (c > 191 && c < 224) {
                        c2 = utftext.charCodeAt(i + 1);
                        string += String.fromCharCode((c & 31) << 6 | c2 & 63);
                        i += 2;
                    } else {
                        c2 = utftext.charCodeAt(i + 1);
                        c3 = utftext.charCodeAt(i + 2);
                        string += String.fromCharCode((c & 15) << 12 | (c2 & 63) << 6 | c3 & 63);
                        i += 3;
                    }
                }

                return string;
            }
        };

        return Base64;
    }
};

var math = {
    name: "util.math",
    extend: null,
    component: function component() {
        var _ = jui.include("util.base");

        // 2x1 or 3x1 or ?x1 형태의 매트릭스 연산
        function _matrix(a, b) {
            var m = [];

            for (var i = 0, len = a.length; i < len; i++) {
                var sum = 0;

                for (var j = 0, len2 = a[i].length; j < len2; j++) {
                    sum += a[i][j] * b[j];
                }

                m.push(sum);
            }

            return m;
        }

        // 2x2 or 3x3 or ?x? 형태의 매트릭스 연산
        function deepMatrix(a, b) {
            var m = [],
                nm = [];

            for (var i = 0, len = b.length; i < len; i++) {
                m[i] = [];
                nm[i] = [];
            }

            for (var i = 0, len = b.length; i < len; i++) {
                for (var j = 0, len2 = b[i].length; j < len2; j++) {
                    m[j].push(b[i][j]);
                }
            }

            for (var i = 0, len = m.length; i < len; i++) {
                var mm = _matrix(a, m[i]);

                for (var j = 0, len2 = mm.length; j < len2; j++) {
                    nm[j].push(mm[j]);
                }
            }

            return nm;
        }

        function _matrix3d(a, b) {
            var m = new Float32Array(4);

            m[0] = a[0][0] * b[0] + a[0][1] * b[1] + a[0][2] * b[2] + a[0][3] * b[3];
            m[1] = a[1][0] * b[0] + a[1][1] * b[1] + a[1][2] * b[2] + a[1][3] * b[3];
            m[2] = a[2][0] * b[0] + a[2][1] * b[1] + a[2][2] * b[2] + a[2][3] * b[3];
            m[3] = a[3][0] * b[0] + a[3][1] * b[1] + a[3][2] * b[2] + a[3][3] * b[3];

            return m;
        }

        function deepMatrix3d(a, b) {
            var nm = [new Float32Array(4), new Float32Array(4), new Float32Array(4), new Float32Array(4)];

            var m = [new Float32Array([b[0][0], b[1][0], b[2][0], b[3][0]]), new Float32Array([b[0][1], b[1][1], b[2][1], b[3][1]]), new Float32Array([b[0][2], b[1][2], b[2][2], b[3][2]]), new Float32Array([b[0][3], b[1][3], b[2][3], b[3][3]])];

            nm[0][0] = a[0][0] * m[0][0] + a[0][1] * m[0][1] + a[0][2] * m[0][2] + a[0][3] * m[0][3];
            nm[1][0] = a[1][0] * m[0][0] + a[1][1] * m[0][1] + a[1][2] * m[0][2] + a[1][3] * m[0][3];
            nm[2][0] = a[2][0] * m[0][0] + a[2][1] * m[0][1] + a[2][2] * m[0][2] + a[2][3] * m[0][3];
            nm[3][0] = a[3][0] * m[0][0] + a[3][1] * m[0][1] + a[3][2] * m[0][2] + a[3][3] * m[0][3];

            nm[0][1] = a[0][0] * m[1][0] + a[0][1] * m[1][1] + a[0][2] * m[1][2] + a[0][3] * m[1][3];
            nm[1][1] = a[1][0] * m[1][0] + a[1][1] * m[1][1] + a[1][2] * m[1][2] + a[1][3] * m[1][3];
            nm[2][1] = a[2][0] * m[1][0] + a[2][1] * m[1][1] + a[2][2] * m[1][2] + a[2][3] * m[1][3];
            nm[3][1] = a[3][0] * m[1][0] + a[3][1] * m[1][1] + a[3][2] * m[1][2] + a[3][3] * m[1][3];

            nm[0][2] = a[0][0] * m[2][0] + a[0][1] * m[2][1] + a[0][2] * m[2][2] + a[0][3] * m[2][3];
            nm[1][2] = a[1][0] * m[2][0] + a[1][1] * m[2][1] + a[1][2] * m[2][2] + a[1][3] * m[2][3];
            nm[2][2] = a[2][0] * m[2][0] + a[2][1] * m[2][1] + a[2][2] * m[2][2] + a[2][3] * m[2][3];
            nm[3][2] = a[3][0] * m[2][0] + a[3][1] * m[2][1] + a[3][2] * m[2][2] + a[3][3] * m[2][3];

            nm[0][3] = a[0][0] * m[3][0] + a[0][1] * m[3][1] + a[0][2] * m[3][2] + a[0][3] * m[3][3];
            nm[1][3] = a[1][0] * m[3][0] + a[1][1] * m[3][1] + a[1][2] * m[3][2] + a[1][3] * m[3][3];
            nm[2][3] = a[2][0] * m[3][0] + a[2][1] * m[3][1] + a[2][2] * m[3][2] + a[2][3] * m[3][3];
            nm[3][3] = a[3][0] * m[3][0] + a[3][1] * m[3][1] + a[3][2] * m[3][2] + a[3][3] * m[3][3];

            return nm;
        }

        function _inverseMatrix3d(me) {
            var te = [new Float32Array(4), new Float32Array(4), new Float32Array(4), new Float32Array(4)];

            var n11 = me[0][0],
                n12 = me[0][1],
                n13 = me[0][2],
                n14 = me[0][3];
            var n21 = me[1][0],
                n22 = me[1][1],
                n23 = me[1][2],
                n24 = me[1][3];
            var n31 = me[2][0],
                n32 = me[2][1],
                n33 = me[2][2],
                n34 = me[2][3];
            var n41 = me[3][0],
                n42 = me[3][1],
                n43 = me[3][2],
                n44 = me[3][3];

            te[0][0] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;
            te[0][1] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;
            te[0][2] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;
            te[0][3] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;
            te[1][0] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;
            te[1][1] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;
            te[1][2] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;
            te[1][3] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;
            te[2][0] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;
            te[2][1] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;
            te[2][2] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;
            te[2][3] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;
            te[3][0] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;
            te[3][1] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;
            te[3][2] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;
            te[3][4] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;

            var det = 1 / (n11 * te[0][0] + n21 * te[0][1] + n31 * te[0][2] + n41 * te[0][3]);

            if (det === 0) {
                te = [new Float32Array([1, 0, 0, 0]), new Float32Array([0, 1, 0, 0]), new Float32Array([0, 0, 1, 0]), new Float32Array([0, 0, 0, 1])];
            } else {
                te[0][0] *= det;te[0][1] *= det;te[0][2] *= det;te[0][3] *= det;
                te[1][0] *= det;te[1][1] *= det;te[1][2] *= det;te[1][3] *= det;
                te[2][0] *= det;te[2][1] *= det;te[2][2] *= det;te[2][3] *= det;
                te[3][0] *= det;te[3][1] *= det;te[3][2] *= det;te[3][4] *= det;
            }

            return te;
        }

        /**
         * @class util.math
         *
         * Math Utility
         *
         * @singleton
         */
        var self = {

            /**
             * @method rotate
             *
             * 2d rotate
             *
             * @param {Number} x
             * @param {Number} y
             * @param {Number} radian	roate 할 radian
             * @return {Object}
             * @return {Number} return.x  변환된 x
             * @return {Number} return.y  변환된 y
             *
             */
            rotate: function rotate(x, y, radian) {
                return {
                    x: x * Math.cos(radian) - y * Math.sin(radian),
                    y: x * Math.sin(radian) + y * Math.cos(radian)
                };
            },

            resize: function resize(maxWidth, maxHeight, objectWidth, objectHeight) {
                var ratio = objectHeight / objectWidth;

                if (objectWidth >= maxWidth && ratio <= 1) {
                    objectWidth = maxWidth;
                    objectHeight = maxHeight * ratio;
                } else if (objectHeight >= maxHeight) {
                    objectHeight = maxHeight;
                    objectWidth = maxWidth / ratio;
                }

                return { width: objectWidth, height: objectHeight };
            },

            /**
             * @method radian
             *
             * convert degree to radian
             *
             * @param {Number} degree
             * @return {Number} radian
             */
            radian: function radian(degree) {
                return degree * Math.PI / 180;
            },

            /**
             * @method degree
             *
             * convert radian to degree
             *
             * @param {Number} radian
             * @return {Number} degree
             */
            degree: function degree(radian) {
                return radian * 180 / Math.PI;
            },

            angle: function angle(x1, y1, x2, y2) {
                var dx = x2 - x1,
                    dy = y2 - y1;

                return Math.atan2(dy, dx);
            },

            /**
             * @method interpolateNumber
             *
             * a, b 의 중간값 계산을 위한 callback 함수 만들기
             *
             * @param {Number} a	first value
             * @param {Number} b 	second value
             * @return {Function}
             */
            interpolateNumber: function interpolateNumber(a, b) {
                var dist = b - a;
                return function (t) {
                    return a + dist * t;
                };
            },

            // 중간값 round 해서 계산하기
            interpolateRound: function interpolateRound(a, b) {

                var dist = b - a;
                return function (t) {
                    return Math.round(a + dist * t);
                };
            },

            getFixed: function getFixed(a, b) {
                var aArr = (a + "").split(".");
                var aLen = aArr.length < 2 ? 0 : aArr[1].length;

                var bArr = (b + "").split(".");
                var bLen = bArr.length < 2 ? 0 : bArr[1].length;

                return aLen > bLen ? aLen : bLen;
            },

            fixed: function fixed(_fixed) {

                var fixedNumber = this.getFixed(_fixed, 0);
                var pow = Math.pow(10, fixedNumber);

                var func = function func(value) {
                    return Math.round(value * pow) / pow;
                };

                func.plus = function (a, b) {
                    return Math.round(a * pow + b * pow) / pow;
                };

                func.minus = function (a, b) {
                    return Math.round(a * pow - b * pow) / pow;
                };

                func.multi = function (a, b) {
                    return Math.round(a * pow * (b * pow)) / (pow * pow);
                };

                func.div = function (a, b) {
                    var result = a * pow / (b * pow);
                    var pow2 = Math.pow(10, this.getFixed(result, 0));
                    return Math.round(result * pow2) / pow2;
                };

                func.remain = function (a, b) {
                    return Math.round(a * pow % (b * pow)) / pow;
                };

                return func;
            },

            round: function round(num, fixed) {
                var fixedNumber = Math.pow(10, fixed);

                return Math.round(num * fixedNumber) / fixedNumber;
            },

            plus: function plus(a, b) {
                var pow = Math.pow(10, this.getFixed(a, b));

                return Math.round(a * pow + b * pow) / pow;
            },

            minus: function minus(a, b) {
                var pow = Math.pow(10, this.getFixed(a, b));
                return Math.round(a * pow - b * pow) / pow;
            },

            multi: function multi(a, b) {
                var pow = Math.pow(10, this.getFixed(a, b));
                return Math.round(a * pow * (b * pow)) / (pow * pow);
            },

            div: function div(a, b) {
                var pow = Math.pow(10, this.getFixed(a, b));

                var result = a * pow / (b * pow);
                var pow2 = Math.pow(10, this.getFixed(result, 0));
                return Math.round(result * pow2) / pow2;
            },

            remain: function remain(a, b) {
                var pow = Math.pow(10, this.getFixed(a, b));
                return Math.round(a * pow % (b * pow)) / pow;
            },

            /**
             * 특정 구간의 값을 자동으로 계산
             *
             * @param {Object} min
             * @param {Object} max
             * @param {Object} ticks
             * @param {Object} isNice
             */
            nice: function nice(min, max, ticks, isNice) {
                isNice = isNice || false;

                if (min > max) {
                    var _max = min;
                    var _min = max;
                } else {
                    var _min = min;
                    var _max = max;
                }

                var _ticks = ticks;
                var _tickSpacing = 0;
                var _range = [];
                var _niceMin;
                var _niceMax;

                function niceNum(range, round) {
                    var exponent = Math.floor(Math.log(range) / Math.LN10);
                    var fraction = range / Math.pow(10, exponent);

                    if (round) {
                        if (fraction < 1.5) niceFraction = 1;else if (fraction < 3) niceFraction = 2;else if (fraction < 7) niceFraction = 5;else niceFraction = 10;
                    } else {
                        if (fraction <= 1) niceFraction = 1;else if (fraction <= 2) niceFraction = 2;else if (fraction <= 5) niceFraction = 5;else niceFraction = 10;

                        //console.log(niceFraction)
                    }

                    return niceFraction * Math.pow(10, exponent);
                }

                function caculate() {
                    _range = isNice ? niceNum(_max - _min, false) : _max - _min;
                    _tickSpacing = isNice ? niceNum(_range / _ticks, true) : _range / _ticks;
                    _niceMin = isNice ? Math.floor(_min / _tickSpacing) * _tickSpacing : _min;
                    _niceMax = isNice ? Math.floor(_max / _tickSpacing) * _tickSpacing : _max;
                }

                caculate();

                return {
                    min: _niceMin,
                    max: _niceMax,
                    range: _range,
                    spacing: _tickSpacing
                };
            },

            matrix: function matrix(a, b) {
                if (_.typeCheck("array", b[0])) {
                    return deepMatrix(a, b);
                }

                return _matrix(a, b);
            },

            matrix3d: function matrix3d(a, b) {
                if (b[0] instanceof Array || b[0] instanceof Float32Array) {
                    return deepMatrix3d(a, b);
                }

                return _matrix3d(a, b);
            },

            inverseMatrix3d: function inverseMatrix3d(a) {
                return _inverseMatrix3d(a);
            },

            scaleValue: function scaleValue(value, minValue, maxValue, minScale, maxScale) {
                // 최소/최대 값이 같을 경우 처리
                minValue = minValue == maxValue ? 0 : minValue;

                var range = maxScale - minScale,
                    tg = range * getPer();

                function getPer() {
                    var range = maxValue - minValue,
                        tg = value - minValue,
                        per = tg / range;

                    return per;
                }

                return tg + minScale;
            }
        };

        return self;
    }
};

var TemplateUtil = {
    name: "util.template",
    extend: null,
    component: function component() {
        var template = function template(text, data, settings) {
            var _ = {},
                breaker = {};

            var ArrayProto = Array.prototype,
                slice = ArrayProto.slice,
                nativeForEach = ArrayProto.forEach;

            var escapes = {
                '\\': '\\',
                "'": "'",
                'r': '\r',
                'n': '\n',
                't': '\t',
                'u2028': '\u2028',
                'u2029': '\u2029'
            };

            for (var p in escapes) {
                escapes[escapes[p]] = p;
            }var escaper = /\\|'|\r|\n|\t|\u2028|\u2029/g,
                unescaper = /\\(\\|'|r|n|t|u2028|u2029)/g,
                noMatch = /.^/;

            var unescape = function unescape(code) {
                return code.replace(unescaper, function (match, escape) {
                    return escapes[escape];
                });
            };

            var each = _.each = _.forEach = function (obj, iterator, context) {
                if (obj == null) return;
                if (nativeForEach && obj.forEach === nativeForEach) {
                    obj.forEach(iterator, context);
                } else if (obj.length === +obj.length) {
                    for (var i = 0, l = obj.length; i < l; i++) {
                        if (i in obj && iterator.call(context, obj[i], i, obj) === breaker) return;
                    }
                } else {
                    for (var key in obj) {
                        if (_.has(obj, key)) {
                            if (iterator.call(context, obj[key], key, obj) === breaker) return;
                        }
                    }
                }
            };

            _.has = function (obj, key) {
                return hasOwnProperty.call(obj, key);
            };

            _.defaults = function (obj) {
                each(slice.call(arguments, 1), function (source) {
                    for (var prop in source) {
                        if (obj[prop] == null) obj[prop] = source[prop];
                    }
                });
                return obj;
            };

            _.template = function (text, data, settings) {
                settings = _.defaults(settings || {});

                var source = "__p+='" + text.replace(escaper, function (match) {
                    return '\\' + escapes[match];
                }).replace(settings.escape || noMatch, function (match, code) {
                    return "'+\n_.escape(" + unescape(code) + ")+\n'";
                }).replace(settings.interpolate || noMatch, function (match, code) {
                    return "'+\n(" + unescape(code) + ")+\n'";
                }).replace(settings.evaluate || noMatch, function (match, code) {
                    return "';\n" + unescape(code) + "\n;__p+='";
                }) + "';\n";

                if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

                source = "var __p='';" + "var print=function(){__p+=Array.prototype.join.call(arguments, '')};\n" + source + "return __p;\n";

                var render = new Function(settings.variable || 'obj', '_', source);
                if (data) return render(data, _);
                var template = function template(data) {
                    return render.call(this, data, _);
                };

                template.source = 'function(' + (settings.variable || 'obj') + '){\n' + source + '}';

                return template;
            };

            return _.template(text, data, settings);
        };

        return template;
    }
};

jui.use(math);

var ColorUtil = {
    name: "util.color",
    extend: null,
    component: function component() {
        var _ = jui.include("util.base");
        var math$$1 = jui.include("util.math");

        function generateHash(name) {
            // Return a vector (0.0->1.0) that is a hash of the input string.
            // The hash is computed to favor early characters over later ones, so
            // that strings with similar starts have similar vectors. Only the first
            // 6 characters are considered.
            var hash = 0,
                weight = 1,
                max_hash = 0,
                mod = 10,
                max_char = 6;

            if (name) {
                for (var i = 0; i < name.length; i++) {
                    if (i > max_char) {
                        break;
                    }
                    hash += weight * (name.charCodeAt(i) % mod);
                    max_hash += weight * (mod - 1);
                    weight *= 0.70;
                }
                if (max_hash > 0) {
                    hash = hash / max_hash;
                }
            }
            return hash;
        }

        /**
         *  @class util.color
         *
         * color utility
         *
         * @singleton
         */
        var self = {

            regex: /(linear|radial)\((.*)\)(.*)/i,

            /**
             * @method format
             *
             * convert color to format string
             *
             *     // hex
             *     color.format({ r : 255, g : 255, b : 255 }, 'hex')  // #FFFFFF
             *
             *     // rgb
             *     color.format({ r : 255, g : 255, b : 255 }, 'rgb') // rgba(255, 255, 255, 0.5);
             *
             *     // rgba
             *     color.format({ r : 255, g : 255, b : 255, a : 0.5 }, 'rgb') // rgba(255, 255, 255, 0.5);
             *
             * @param {Object} obj  obj has r, g, b and a attributes
             * @param {"hex"/"rgb"} type  format string type
             * @returns {*}
             */
            format: function format(obj, type) {
                if (type == 'hex') {
                    var r = obj.r.toString(16);
                    if (obj.r < 16) r = "0" + r;

                    var g = obj.g.toString(16);
                    if (obj.g < 16) g = "0" + g;

                    var b = obj.b.toString(16);
                    if (obj.b < 16) b = "0" + b;

                    return "#" + [r, g, b].join("").toUpperCase();
                } else if (type == 'rgb') {
                    if (typeof obj.a == 'undefined') {
                        return "rgb(" + [obj.r, obj.g, obj.b].join(",") + ")";
                    } else {
                        return "rgba(" + [obj.r, obj.g, obj.b, obj.a].join(",") + ")";
                    }
                }

                return obj;
            },

            /**
             * @method scale
             *
             * get color scale
             *
             * 		var c = color.scale().domain('#FF0000', '#00FF00');
             *
             * 		// get middle color
             * 		c(0.5)   ==  #808000
             *
             * 		// get middle color list
             * 		c.ticks(20);  // return array ,    [startColor, ......, endColor ]
             *
             * @returns {func} scale function
             */
            scale: function scale() {
                var startColor, endColor;

                function func(t, type) {

                    var obj = {
                        r: parseInt(startColor.r + (endColor.r - startColor.r) * t, 10),
                        g: parseInt(startColor.g + (endColor.g - startColor.g) * t, 10),
                        b: parseInt(startColor.b + (endColor.b - startColor.b) * t, 10)
                    };

                    return self.format(obj, type);
                }

                func.domain = function (start, end) {
                    startColor = self.rgb(start);
                    endColor = self.rgb(end);

                    return func;
                };

                func.ticks = function (n) {
                    var unit = 1 / n;

                    var start = 0;
                    var colors = [];
                    while (start <= 1) {
                        var c = func(start, 'hex');
                        colors.push(c);
                        start = math$$1.plus(start, unit);
                    }

                    return colors;
                };

                return func;
            },

            /**
             * @method map
             *
             * create color map
             *
             * 		var colorList = color.map(['#352a87', '#0f5cdd', '#00b5a6', '#ffc337', '#fdff00'], count)
             *
             * @param {Array} color_list
             * @param {Number} count  a divide number
             * @returns {Array} converted color list
             */
            map: function map(color_list, count) {

                var colors = [];
                count = count || 5;
                var scale = self.scale();
                for (var i = 0, len = color_list.length - 1; i < len; i++) {
                    if (i == 0) {
                        colors = scale.domain(color_list[i], color_list[i + 1]).ticks(count);
                    } else {
                        var colors2 = scale.domain(color_list[i], color_list[i + 1]).ticks(count);
                        colors2.shift();
                        colors = colors.concat(colors2);
                    }
                }

                return colors;
            },

            /**
             * @method rgb
             *
             * parse string to rgb color
             *
             * 		color.rgb("#FF0000") === { r : 255, g : 0, b : 0 }
             *
             * 		color.rgb("rgb(255, 0, 0)") == { r : 255, g : 0, b : }
             *
             * @param {String} str color string
             * @returns {Object}  rgb object
             */
            rgb: function rgb(str) {

                if (typeof str == 'string') {
                    if (str.indexOf("rgb(") > -1) {
                        var arr = str.replace("rgb(", "").replace(")", "").split(",");

                        for (var i = 0, len = arr.length; i < len; i++) {
                            arr[i] = parseInt(_.trim(arr[i]), 10);
                        }

                        return { r: arr[0], g: arr[1], b: arr[2], a: 1 };
                    } else if (str.indexOf("rgba(") > -1) {
                        var arr = str.replace("rgba(", "").replace(")", "").split(",");

                        for (var i = 0, len = arr.length; i < len; i++) {

                            if (len - 1 == i) {
                                arr[i] = parseFloat(_.trim(arr[i]));
                            } else {
                                arr[i] = parseInt(_.trim(arr[i]), 10);
                            }
                        }

                        return { r: arr[0], g: arr[1], b: arr[2], a: arr[3] };
                    } else if (str.indexOf("#") == 0) {

                        str = str.replace("#", "");

                        var arr = [];
                        if (str.length == 3) {
                            for (var i = 0, len = str.length; i < len; i++) {
                                var char = str.substr(i, 1);
                                arr.push(parseInt(char + char, 16));
                            }
                        } else {
                            for (var i = 0, len = str.length; i < len; i += 2) {
                                arr.push(parseInt(str.substr(i, 2), 16));
                            }
                        }

                        return { r: arr[0], g: arr[1], b: arr[2], a: 1 };
                    }
                }

                return str;
            },

            /**
             * @method HSVtoRGB
             *
             * convert hsv to rgb
             *
             * 		color.HSVtoRGB(0,0,1) === #FFFFF === { r : 255, g : 0, b : 0 }
             *
             * @param {Number} H  hue color number  (min : 0, max : 360)
             * @param {Number} S  Saturation number  (min : 0, max : 1)
             * @param {Number} V  Value number 		(min : 0, max : 1 )
             * @returns {Object}
             */
            HSVtoRGB: function HSVtoRGB(H, S, V) {

                if (H == 360) {
                    H = 0;
                }

                var C = S * V;
                var X = C * (1 - Math.abs(H / 60 % 2 - 1));
                var m = V - C;

                var temp = [];

                if (0 <= H && H < 60) {
                    temp = [C, X, 0];
                } else if (60 <= H && H < 120) {
                    temp = [X, C, 0];
                } else if (120 <= H && H < 180) {
                    temp = [0, C, X];
                } else if (180 <= H && H < 240) {
                    temp = [0, X, C];
                } else if (240 <= H && H < 300) {
                    temp = [X, 0, C];
                } else if (300 <= H && H < 360) {
                    temp = [C, 0, X];
                }

                return {
                    r: Math.ceil((temp[0] + m) * 255),
                    g: Math.ceil((temp[1] + m) * 255),
                    b: Math.ceil((temp[2] + m) * 255)
                };
            },

            /**
             * @method RGBtoHSV
             *
             * convert rgb to hsv
             *
             * 		color.RGBtoHSV(0, 0, 255) === { h : 240, s : 1, v : 1 } === '#FFFF00'
             *
             * @param {Number} R  red color value
             * @param {Number} G  green color value
             * @param {Number} B  blue color value
             * @return {Object}  hsv color code
             */
            RGBtoHSV: function RGBtoHSV(R, G, B) {

                var R1 = R / 255;
                var G1 = G / 255;
                var B1 = B / 255;

                var MaxC = Math.max(R1, G1, B1);
                var MinC = Math.min(R1, G1, B1);

                var DeltaC = MaxC - MinC;

                var H = 0;

                if (DeltaC == 0) {
                    H = 0;
                } else if (MaxC == R1) {
                    H = 60 * ((G1 - B1) / DeltaC % 6);
                } else if (MaxC == G1) {
                    H = 60 * ((B1 - R1) / DeltaC + 2);
                } else if (MaxC == B1) {
                    H = 60 * ((R1 - G1) / DeltaC + 4);
                }

                if (H < 0) {
                    H = 360 + H;
                }

                var S = 0;

                if (MaxC == 0) S = 0;else S = DeltaC / MaxC;

                var V = MaxC;

                return { h: H, s: S, v: V };
            },

            trim: function trim(str) {
                return (str || "").replace(/^\s+|\s+$/g, '');
            },

            /**
             * @method lighten
             *
             * rgb 컬러 밝은 농도로 변환
             *
             * @param {String} color   RGB color code
             * @param {Number} rate 밝은 농도
             * @return {String}
             */
            lighten: function lighten(color, rate) {
                color = color.replace(/[^0-9a-f]/gi, '');
                rate = rate || 0;

                var rgb = [],
                    c,
                    i;
                for (i = 0; i < 6; i += 2) {
                    c = parseInt(color.substr(i, 2), 16);
                    c = Math.round(Math.min(Math.max(0, c + c * rate), 255)).toString(16);
                    rgb.push(("00" + c).substr(c.length));
                }

                return "#" + rgb.join("");
            },

            /**
             * @method darken
             *
             * rgb 컬러 어두운 농도로 변환
             *
             * @param {String} color   RGB color code
             * @param {Number} rate 어두운 농도
             * @return {String}
             */
            darken: function darken(color, rate) {
                return this.lighten(color, -rate);
            },

            /**
             * @method parse
             *
             * gradient color string parsing
             *
             * @param {String} color
             * @returns {*}
             */
            parse: function parse(color) {
                return this.parseGradient(color);
            },

            /**
             * @method parseGrident
             *
             * gradient parser
             *
             *      linear(left) #fff,#000
             *      linear(right) #fff,50 yellow,black
             *      radial(50%,50%,50%,50,50)
             *
             * @param {String} color
             */
            parseGradient: function parseGradient(color) {
                var matches = color.match(this.regex);

                if (!matches) return color;

                var type = this.trim(matches[1]);
                var attr = this.parseAttr(type, this.trim(matches[2]));
                var stops = this.parseStop(this.trim(matches[3]));

                var obj = { type: type + "Gradient", attr: attr, children: stops };

                return obj;
            },

            parseStop: function parseStop(stop) {
                var stop_list = stop.split(",");

                var stops = [];

                for (var i = 0, len = stop_list.length; i < len; i++) {
                    var stop = stop_list[i];

                    var arr = stop.split(" ");

                    if (arr.length == 0) continue;

                    if (arr.length == 1) {
                        stops.push({ type: "stop", attr: { "stop-color": arr[0] } });
                    } else if (arr.length == 2) {
                        stops.push({ type: "stop", attr: { "offset": arr[0], "stop-color": arr[1] } });
                    } else if (arr.length == 3) {
                        stops.push({ type: "stop", attr: { "offset": arr[0], "stop-color": arr[1], "stop-opacity": arr[2] } });
                    }
                }

                var start = -1;
                var end = -1;
                for (var i = 0, len = stops.length; i < len; i++) {
                    var stop = stops[i];

                    if (i == 0) {
                        if (!stop.offset) stop.offset = 0;
                    } else if (i == len - 1) {
                        if (!stop.offset) stop.offset = 1;
                    }

                    if (start == -1 && typeof stop.offset == 'undefined') {
                        start = i;
                    } else if (end == -1 && typeof stop.offset == 'undefined') {
                        end = i;

                        var count = end - start;

                        var endOffset = stops[end].offset.indexOf("%") > -1 ? parseFloat(stops[end].offset) / 100 : stops[end].offset;
                        var startOffset = stops[start].offset.indexOf("%") > -1 ? parseFloat(stops[start].offset) / 100 : stops[start].offset;

                        var dist = endOffset - startOffset;
                        var value = dist / count;

                        var offset = startOffset + value;
                        for (var index = start + 1; index < end; index++) {
                            stops[index].offset = offset;

                            offset += value;
                        }

                        start = end;
                        end = -1;
                    }
                }

                return stops;
            },

            parseAttr: function parseAttr(type, str) {

                if (type == 'linear') {
                    switch (str) {
                        case "":
                        case "left":
                            return { x1: 0, y1: 0, x2: 1, y2: 0, direction: str || "left" };
                        case "right":
                            return { x1: 1, y1: 0, x2: 0, y2: 0, direction: str };
                        case "top":
                            return { x1: 0, y1: 0, x2: 0, y2: 1, direction: str };
                        case "bottom":
                            return { x1: 0, y1: 1, x2: 0, y2: 0, direction: str };
                        case "top left":
                            return { x1: 0, y1: 0, x2: 1, y2: 1, direction: str };
                        case "top right":
                            return { x1: 1, y1: 0, x2: 0, y2: 1, direction: str };
                        case "bottom left":
                            return { x1: 0, y1: 1, x2: 1, y2: 0, direction: str };
                        case "bottom right":
                            return { x1: 1, y1: 1, x2: 0, y2: 0, direction: str };
                        default:
                            var arr = str.split(",");
                            for (var i = 0, len = arr.length; i < len; i++) {
                                if (arr[i].indexOf("%") == -1) arr[i] = parseFloat(arr[i]);
                            }

                            return { x1: arr[0], y1: arr[1], x2: arr[2], y2: arr[3] };
                    }
                } else {
                    var arr = str.split(",");
                    for (var i = 0, len = arr.length; i < len; i++) {

                        if (arr[i].indexOf("%") == -1) arr[i] = parseFloat(arr[i]);
                    }

                    return { cx: arr[0], cy: arr[1], r: arr[2], fx: arr[3], fy: arr[4] };
                }
            },

            colorHash: function colorHash(name, callback) {
                // Return an rgb() color string that is a hash of the provided name,
                // and with a warm palette.
                var vector = 0;

                if (name) {
                    name = name.replace(/.*`/, ""); // drop module name if present
                    name = name.replace(/\(.*/, ""); // drop extra info
                    vector = generateHash(name);
                }

                if (typeof callback == "function") {
                    return callback(vector);
                }

                return {
                    r: 200 + Math.round(55 * vector),
                    g: 0 + Math.round(230 * (1 - vector)),
                    b: 0 + Math.round(55 * (1 - vector))
                };
            }

        };

        self.map.parula = function (count) {
            return self.map(['#352a87', '#0f5cdd', '#00b5a6', '#ffc337', '#fdff00'], count);
        };
        self.map.jet = function (count) {
            return self.map(['#00008f', '#0020ff', '#00ffff', '#51ff77', '#fdff00', '#ff0000', '#800000'], count);
        };
        self.map.hsv = function (count) {
            return self.map(['#ff0000', '#ffff00', '#00ff00', '#00ffff', '#0000ff', '#ff00ff', '#ff0000'], count);
        };
        self.map.hot = function (count) {
            return self.map(['#0b0000', '#ff0000', '#ffff00', '#ffffff'], count);
        };
        self.map.pink = function (count) {
            return self.map(['#1e0000', '#bd7b7b', '#e7e5b2', '#ffffff'], count);
        };
        self.map.bone = function (count) {
            return self.map(['#000000', '#4a4a68', '#a6c6c6', '#ffffff'], count);
        };
        self.map.copper = function (count) {
            return self.map(['#000000', '#3d2618', '#9d623e', '#ffa167', '#ffc77f'], count);
        };

        return self;
    }
};

var manager = {
    name: "manager",
    extend: null,
    component: function component() {
        var _ = jui.include("util.base");

        var UIManager = new function () {
            var instances = [],
                classes = [];

            /**
             * @method add
             * Adds a component object created
             *
             * @param {Object} ui UI instance
             */
            this.add = function (uiIns) {
                instances.push(uiIns);
            };

            /**
             * @method emit
             * Generates a custom event to an applicable component
             *
             * @param {String} key Selector or UI type
             * @param {String} type Event type
             * @param {Array} args Event arguments
             */
            this.emit = function (key, type, args) {
                var targets = [];

                for (var i = 0; i < instances.length; i++) {
                    var uiSet = instances[i];

                    if (key == uiSet.selector || key == uiSet.type) {
                        targets.push(uiSet);
                    }
                }

                for (var i = 0; i < targets.length; i++) {
                    var uiSet = targets[i];

                    for (var j = 0; j < uiSet.length; j++) {
                        uiSet[j].emit(type, args);
                    }
                }
            };

            /**
             * @method get
             * Gets a component currently created
             *
             * @param {Integer/String} key
             * @returns {Object/Array} UI instance
             */
            this.get = function (key) {
                if (_.typeCheck("integer", key)) {
                    return instances[key];
                } else if (_.typeCheck("string", key)) {
                    // 셀렉터 객체 검색
                    for (var i = 0; i < instances.length; i++) {
                        var uiSet = instances[i];

                        if (key == uiSet.selector) {
                            return uiSet.length == 1 ? uiSet[0] : uiSet;
                        }
                    }

                    // 모듈 객체 검색
                    var result = [];
                    for (var i = 0; i < instances.length; i++) {
                        var uiSet = instances[i];

                        if (key == uiSet.type) {
                            result.push(uiSet);
                        }
                    }

                    return result;
                }
            };

            /**
             * @method getAll
             * Gets all components currently created
             *
             * @return {Array} UI instances
             */
            this.getAll = function () {
                return instances;
            };

            /**
             * @method remove
             * Removes a component object in an applicable index from the list
             *
             * @param {Integer} index
             * @return {Object} Removed instance
             */
            this.remove = function (index) {
                if (_.typeCheck("integer", index)) {
                    // UI 객체 인덱스
                    return instances.splice(index, 1)[0];
                }
            };

            /**
             * @method shift
             * Removes the last component object from the list
             *
             * @return {Object} Removed instance
             */
            this.shift = function () {
                return instances.shift();
            };

            /**
             * @method pop
             * Removes the first component object from the list
             *
             * @return {Object} Removed instance
             */
            this.pop = function () {
                return instances.pop();
            };

            /**
             * @method size
             * Gets the number of objects currently created
             *
             * @return {Number}
             */
            this.size = function () {
                return instances.length;
            };

            /**
             * @method debug
             *
             * @param {Object} uiObj UI instance
             * @param {Number} i
             * @param {Number} j
             * @param {Function} callback
             */
            this.debug = function (uiObj, i, j, callback) {
                if (!uiObj.__proto__) return;
                var exFuncList = ["emit", "on", "addEvent", "addValid", "callBefore", "callAfter", "callDelay", "setTpl", "setVo", "setOption"];

                for (var key in uiObj) {
                    var func = uiObj[key];

                    if (typeof func == "function" && _.inArray(key, exFuncList) == -1) {
                        (function (funcName, funcObj, funcIndex, funcChildIndex) {
                            uiObj.__proto__[funcName] = function () {
                                var nStart = Date.now();
                                var resultObj = funcObj.apply(this, arguments);
                                var nEnd = Date.now();

                                if (typeof callback == "function") {
                                    callback({
                                        type: jui.get(i).type,
                                        name: funcName,
                                        c_index: funcIndex,
                                        u_index: funcChildIndex,
                                        time: nEnd - nStart
                                    }, arguments);
                                } else {
                                    if (!isNaN(funcIndex) && !isNaN(funcChildIndex)) {
                                        console.log("TYPE(" + jui.get(i).type + "), " + "NAME(" + funcName + "), " + "INDEX(" + funcIndex + ":" + funcChildIndex + "), " + "TIME(" + (nEnd - nStart) + "ms), " + "ARGUMENTS...");
                                    } else {
                                        console.log("NAME(" + funcName + "), " + "TIME(" + (nEnd - nStart) + "ms), " + "ARGUMENTS...");
                                    }

                                    console.log(arguments);
                                    console.log("");
                                }

                                return resultObj;
                            };
                        })(key, func, i, j);
                    }
                }
            };

            /**
             * @method debugAll
             * debugs all component objects currently existing
             *
             * @param {Function} callback
             */
            this.debugAll = function (callback) {
                for (var i = 0; i < instances.length; i++) {
                    var uiList = instances[i];

                    for (var j = 0; j < uiList.length; j++) {
                        this.debug(uiList[j], i, j, callback);
                    }
                }
            };

            /**
             * @method addClass
             * Adds a component class
             *
             * @param {Object} uiCls UI Class
             */
            this.addClass = function (uiCls) {
                classes.push(uiCls);
            };

            /**
             * @method getClass
             * Gets a component class
             *
             * @param {String/Integer} key
             * @return {Object}
             */
            this.getClass = function (key) {
                if (_.typeCheck("integer", key)) {
                    return classes[key];
                } else if (_.typeCheck("string", key)) {
                    for (var i = 0; i < classes.length; i++) {
                        if (key == classes[i].type) {
                            return classes[i];
                        }
                    }
                }

                return null;
            };

            /**
             * @method getClassAll
             * Gets all component classes
             *
             * @return {Array}
             */
            this.getClassAll = function () {
                return classes;
            };

            /**
             * @method create
             * It is possible to create a component dynamically after the ready point
             *
             * @param {String} type UI type
             * @param {String/DOMElement} selector
             * @param {Object} options
             * @return {Object}
             */
            this.create = function (type, selector, options) {
                var cls = UIManager.getClass(type);

                if (_.typeCheck("null", cls)) {
                    throw new Error("JUI_CRITICAL_ERR: '" + type + "' does not exist");
                }

                return cls["class"](selector, options);
            };
        }();

        return UIManager;
    }
};

var collection = {
    name: "collection",
    extend: null,
    component: function component() {
        var UICollection = function UICollection(type, selector, options, list) {
            this.type = type;
            this.selector = selector;
            this.options = options;

            this.destroy = function () {
                for (var i = 0; i < list.length; i++) {
                    list[i].destroy();
                }
            };

            for (var i = 0; i < list.length; i++) {
                this.push(list[i]);
            }
        };

        UICollection.prototype = Object.create(Array.prototype);

        return UICollection;
    }
};

jui.use(dom, manager, collection);

var core = {
    name: "core",
    extend: null,
    component: function component() {
        var _ = jui.include("util.base");
        var $$$1 = jui.include("util.dom");
        var UIManager = jui.include("manager");
        var UICollection = jui.include("collection");

        var UICore = function UICore() {

            /**
             * @method emit
             * Generates a custom event. The first parameter is the type of a custom event. A function defined as an option or on method is called
             *
             * @param {String} type Event type
             * @param {Function} args Event Arguments
             * @return {Mixed}
             */
            this.emit = function (type, args) {
                if (!_.typeCheck("string", type)) return;
                var result;

                for (var i = 0; i < this.event.length; i++) {
                    var e = this.event[i];

                    if (e.type == type.toLowerCase()) {
                        var arrArgs = _.typeCheck("array", args) ? args : [args];
                        result = e.callback.apply(this, arrArgs);
                    }
                }

                return result;
            };

            /**
             * @method on
             * A callback function defined as an on method is run when an emit method is called
             *
             * @param {String} type Event type
             * @param {Function} callback
             */
            this.on = function (type, callback) {
                if (!_.typeCheck("string", type) || !_.typeCheck("function", callback)) return;
                this.event.push({ type: type.toLowerCase(), callback: callback, unique: false });
            };

            /**
             * @method off
             * Removes a custom event of an applicable type or callback handler
             *
             * @param {String} type Event type
             */
            this.off = function (type) {
                var event = [];

                for (var i = 0; i < this.event.length; i++) {
                    var e = this.event[i];

                    if (_.typeCheck("function", type) && e.callback != type || _.typeCheck("string", type) && e.type != type.toLowerCase()) {
                        event.push(e);
                    }
                }

                this.event = event;
            };

            /**
             * @method addValid
             * Check the parameter type of a UI method and generates an alarm when a wrong value is entered
             *
             * @param {String} name Method name
             * @param {Array} params Parameters
             */
            this.addValid = function (name, params) {
                if (!this.__proto__) return;
                var ui = this.__proto__[name];

                this.__proto__[name] = function () {
                    var args = arguments;

                    for (var i = 0; i < args.length; i++) {
                        if (!_.typeCheck(params[i], args[i])) {
                            throw new Error("JUI_CRITICAL_ERR: the " + i + "th parameter is not a " + params[i] + " (" + name + ")");
                        }
                    }

                    return ui.apply(this, args);
                };
            };

            /**
             * @method callBefore
             * Sets a callback function that is called before a UI method is run
             *
             * @param {String} name Method name
             * @param {Function} callback
             * @return {Mixed}
             */
            this.callBefore = function (name, callback) {
                if (!this.__proto__) return;
                var ui = this.__proto__[name];

                this.__proto__[name] = function () {
                    var args = arguments;

                    if (_.typeCheck("function", callback)) {
                        // before 콜백이 false가 아닐 경우에만 실행 한다.
                        if (callback.apply(this, args) !== false) {
                            return ui.apply(this, args);
                        }
                    } else {
                        return ui.apply(this, args);
                    }
                };
            };

            /**
             * @method callAfter
             * Sets a callback function that is called after a UI method is run
             *
             * @param {String} name Method name
             * @param {Function} callback
             * @return {Mixed}
             */
            this.callAfter = function (name, callback) {
                if (!this.__proto__) return;
                var ui = this.__proto__[name];

                this.__proto__[name] = function () {
                    var args = arguments,
                        obj = ui.apply(this, args);

                    // 실행 함수의 리턴 값이 false일 경우에는 after 콜백을 실행하지 않는다.
                    if (_.typeCheck("function", callback) && obj !== false) {
                        callback.apply(this, args);
                    }

                    return obj;
                };
            };

            /**
             * @method callDelay
             * Sets a callback function and the delay time before/after a UI method is run
             *
             * @param {String} name Method name
             * @param {Function} callback
             */
            this.callDelay = function (name, callObj) {
                // void 형의 메소드에서만 사용할 수 있음
                if (!this.__proto__) return;

                var ui = this.__proto__[name],
                    delay = !isNaN(callObj.delay) ? callObj.delay : 0;

                this.__proto__[name] = function () {
                    var self = this,
                        args = arguments;

                    if (_.typeCheck("function", callObj.before)) {
                        callObj.before.apply(self, args);
                    }

                    if (delay > 0) {
                        setTimeout(function () {
                            callFunc(self, args);
                        }, delay);
                    } else {
                        callFunc(self, args);
                    }
                };

                function callFunc(self, args) {
                    var obj = ui.apply(self, args);

                    if (_.typeCheck("function", callObj.after) && obj !== false) {
                        // callAfter와 동일
                        callObj.after.apply(self, args);
                    }
                }
            };

            /**
             * @method setTpl
             * Dynamically defines the template method of a UI
             *
             * @param {String} name Template name
             * @param {String} html Template markup
             */
            this.setTpl = function (name, html) {
                this.tpl[name] = _.template(html);
            };

            /**
             * @method setOption
             * Dynamically defines the options of a UI
             *
             * @param {String} key
             * @param {Mixed} value
             */
            this.setOption = function (key, value) {
                if (_.typeCheck("object", key)) {
                    for (var k in key) {
                        this.options[k] = key[k];
                    }
                } else {
                    this.options[key] = value;
                }
            };

            /**
             * @method destroy
             * Removes all events set in a UI obejct and the DOM element
             *
             */
            this.destroy = function () {
                if (this.__proto__) {
                    for (var key in this.__proto__) {
                        delete this.__proto__[key];
                    }
                }
            };
        };

        UICore.build = function (UI) {

            return function (selector, options) {
                var list = [],
                    elemList = [];

                if (_.typeCheck("string", selector)) {
                    elemList = $$$1.find(selector);
                } else if (_.typeCheck("object", selector)) {
                    elemList.push(selector);
                } else {
                    elemList.push(document.createElement("div"));
                }

                for (var i = 0, len = elemList.length; i < len; i++) {
                    list[i] = jui.createUIObject(UI, selector, i, elemList[i], options);
                }

                // UIManager에 데이터 입력
                UIManager.add(new UICollection(UI.type, selector, options, list));

                // 객체가 없을 경우에는 null을 반환 (기존에는 빈 배열을 반환)
                if (list.length == 0) {
                    return null;
                } else if (list.length == 1) {
                    return list[0];
                }

                return list;
            };
        };

        UICore.init = function (UI) {
            var uiObj = null;

            if ((typeof UI === "undefined" ? "undefined" : _typeof(UI)) === "object") {
                uiObj = UICore.build(UI);
                UIManager.addClass({ type: UI.type, "class": uiObj });
            }

            return uiObj;
        };

        UICore.setup = function () {
            return {
                /**
                 * @cfg {Object} [tpl={}]
                 * Defines a template markup to be used in a UI
                 */
                tpl: {},

                /**
                 * @cfg {Object} [event={}]
                 * Defines a DOM event to be used in a UI
                 */
                event: {}
            };
        };

        return UICore;
    }
};

jui.use(manager, collection, core);

var Event = {
    name: "event",
    extend: "core",
    component: function component() {
        var _ = jui.include("util.base");
        var UIManager = jui.include("manager");
        var UICollection = jui.include("collection");

        var DOMEventListener = function DOMEventListener() {
            var list = [];

            function settingEventAnimation(e) {
                var pfx = ["webkit", "moz", "MS", "o", ""];

                for (var p = 0; p < pfx.length; p++) {
                    var type = e.type;

                    if (!pfx[p]) type = type.toLowerCase();
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.target).on(pfx[p] + type, e.callback);
                }

                list.push(e);
            }

            function settingEvent(e) {
                if (e.callback && !e.children) {
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.target).on(e.type, e.callback);
                } else {
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.target).on(e.type, e.children, e.callback);
                }

                list.push(e);
            }

            function settingEventTouch(e) {
                if (e.callback && !e.children) {
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.target).on(getEventTouchType(e.type), e.callback);
                } else {
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.target).on(getEventTouchType(e.type), e.children, e.callback);
                }

                list.push(e);
            }

            function getEventTouchType(type) {
                return {
                    "click": "touchstart",
                    "dblclick": "touchend",
                    "mousedown": "touchstart",
                    "mousemove": "touchmove",
                    "mouseup": "touchend"
                }[type];
            }

            this.add = function (args) {
                var e = { target: args[0], type: args[1] };

                if (_.typeCheck("function", args[2])) {
                    e = __WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend(e, { callback: args[2] });
                } else if (_.typeCheck("string", args[2])) {
                    e = __WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend(e, { children: args[2], callback: args[3] });
                }

                var eventTypes = _.typeCheck("array", e.type) ? e.type : [e.type];

                for (var i = 0; i < eventTypes.length; i++) {
                    e.type = eventTypes[i];

                    if (e.type.toLowerCase().indexOf("animation") != -1) settingEventAnimation(e);else {
                        // body, window, document 경우에만 이벤트 중첩이 가능
                        if (e.target != "body" && e.target != window && e.target != document) {
                            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.target).off(e.type);
                        }

                        if (_.isTouch) {
                            settingEventTouch(e);
                        } else {
                            settingEvent(e);
                        }
                    }
                }
            };

            this.trigger = function (selector, type) {
                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(selector).trigger(_.isTouch ? getEventTouchType(type) : type);
            };

            this.get = function (index) {
                return list[index];
            };

            this.getAll = function () {
                return list;
            };

            this.size = function () {
                return list.length;
            };
        };

        /**
         * @class event
         * Later the jquery dependency should be removed.
         *
         * @alias UIEvent
         * @extends core
         * @requires jquery
         * @requires util.base
         * @requires manager
         * @requires collection
         * @deprecated
         */
        var UIEvent = function UIEvent() {

            /**
             * @method find
             * Get the child element of the root element
             *
             * @param {String/HTMLElement} Selector
             * @returns {*|jQuery}
             */
            this.find = function (selector) {
                return __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root).find(selector);
            };

            /**
             * @method addEvent
             * Defines a browser event of a DOM element
             *
             * @param {String/HTMLElement} selector
             * @param {String} type Dom event type
             * @param {Function} callback
             */
            this.addEvent = function () {
                this.listen.add(arguments);
            };

            /**
             * @method addTrigger
             * Generates an applicable event to a DOM element
             *
             * @param {String/HTMLElement} Selector
             * @param {String} Dom event type
             */
            this.addTrigger = function (selector, type) {
                this.listen.trigger(selector, type);
            };

            /**
             * @method destroy
             * Removes all events set in a UI obejct and the DOM element
             *
             */
            this.destroy = function () {
                for (var i = 0; i < this.listen.size(); i++) {
                    var obj = this.listen.get(i);
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(obj.target).off(obj.type);
                }

                // 생성된 메소드 메모리에서 제거
                if (this.__proto__) {
                    for (var key in this.__proto__) {
                        delete this.__proto__[key];
                    }
                }
            };
        };

        UIEvent.build = function (UI) {

            return function (selector, options) {
                var list = [],
                    $root = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(selector || "<div />");

                $root.each(function (index) {
                    list[index] = jui.createUIObject(UI, $root.selector, index, this, options, function (mainObj, opts) {
                        /** @property {Object} listen Dom events */
                        mainObj.init.prototype.listen = new DOMEventListener();

                        __WEBPACK_IMPORTED_MODULE_0_jquery___default()("script").each(function (i) {
                            if (selector == __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).data("jui") || selector == __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).data("vo") || selector instanceof HTMLElement) {
                                var tplName = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).data("tpl");

                                if (tplName == "") {
                                    throw new Error("JUI_CRITICAL_ERR: 'data-tpl' property is required");
                                }

                                opts.tpl[tplName] = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).html();
                            }
                        });
                    });
                });

                UIManager.add(new UICollection(UI.type, selector, options, list));

                if (list.length == 0) {
                    return null;
                } else if (list.length == 1) {
                    return list[0];
                }

                return list;
            };
        };

        UIEvent.init = function (UI) {
            var uiObj = null;

            if ((typeof UI === "undefined" ? "undefined" : _typeof(UI)) === "object") {
                uiObj = UIEvent.build(UI);
                UIManager.addClass({ type: UI.type, "class": uiObj });
            }

            return uiObj;
        };

        return UIEvent;
    }
};

jui.use([dom, SortUtil, KeyParserUtil, Base64Util, math, TemplateUtil, ColorUtil, manager, collection, core, Event]);

var _ = jui.include("util.base"),
    manager$1 = jui.include("manager");

_.extend(jui, manager$1, true);

/* harmony default export */ __webpack_exports__["a"] = (jui);


/***/ }),
/* 251 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__main_js__ = __webpack_require__(8);



/* harmony default export */ __webpack_exports__["default"] = ({
    name: "ui.datepicker",
    extend: "event",
    component: function () {
        var _ = __WEBPACK_IMPORTED_MODULE_1__main_js__["default"].include("util.base");

        function getStartDate(date) {
            date.setHours(0);
            date.setMinutes(0);
            date.setSeconds(0);
            date.setMilliseconds(0);

            return date;
        }

        var UI = function() {
            var year = null, month = null, date = null,
                selDate = null, items = {}; // 헌재 페이지의 요소 엘리먼트 캐싱
            var $head = null, $body = null;
            var minDate = null, maxDate = null;


            function setCalendarEvent(self) {
                self.addEvent($head.children(".prev"), "click", function(e) {
                    self.prev(e);
                });

                self.addEvent($head.children(".next"), "click", function(e) {
                    self.next(e);
                });

                self.addEvent($head.children(".prev-year"), "click", function(e) {
                    self.prev(e, true);
                });

                self.addEvent($head.children(".next-year"), "click", function(e) {
                    self.next(e, true);
                });
            }

            function setCalendarDate(self, no) {
                var opts = self.options;

                if(opts.type == "daily") {
                    var m = (month < 10) ? "0" + month : month,
                        d = (no < 10) ? "0" + no : no;
                    selDate = new Date(year + "/" + m + "/" + d);
                } else if(opts.type == "monthly") {
                    var m = (no < 10) ? "0" + no : no;
                    selDate = new Date(year + "/" + m + "/01");
                } else if(opts.type == "yearly") {
                    selDate = new Date(no + "/01/01");
                }

                // 0시 0분 0초 0밀리 초로 설정
                selDate = getStartDate(selDate);
            }

            function getCalendarDate(self) {
                var opts = self.options,
                    tmpDate = null;

                if(opts.type == "daily") {
                    var m = (month < 10) ? "0" + month : month;
                    tmpDate = new Date(year + "/" + m + "/01");
                } else if(opts.type == "monthly") {
                    tmpDate = new Date(year + "/01/01");
                } else if(opts.type == "yearly") {
                    tmpDate = new Date();
                }

                return getStartDate(tmpDate);
            }

            function getCalendarHtml(self, obj) {
                var opts = self.options,
                    resHtml = [],
                    tmpItems = [];

                // 활성화 날짜 캐시 초기화
                items = {};

                if(self.tpl["date"]) {
                    for(var i = 0; i < obj.objs.length; i++) {
                        tmpItems.push(self.tpl["date"]({
                            type: obj.objs[i].type,
                            date: obj.objs[i].no,
                            day: tmpItems.length
                        }));

                        if(isNextBr(i)) {
                            resHtml.push("<tr>" + tmpItems.join("") + "</tr>");
                            tmpItems = [];
                        }
                    }
                } else {
                    for(var i = 0; i < obj.objs.length; i++) {
                        tmpItems.push(obj.nums[i]);

                        if(isNextBr(i)) {
                            resHtml.push(self.tpl["dates"]({ dates: tmpItems }));
                            tmpItems = [];
                        }
                    }
                }

                var $list = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(resHtml.join(""));
                $list.find("td").each(function(i) {
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).addClass(obj.objs[i].type);

                    self.addEvent(this, "click", function(e) {
                        if(obj.objs[i].type == "none") return;

                        $body.find("td").removeClass("active");
                        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).addClass("active");

                        setCalendarDate(self, obj.objs[i].no);
                        self.emit("select", [ self.getFormat(), e ]);
                    });

                    if(obj.objs[i].type != "none") {
                        items[obj.objs[i].no] = this;
                    }
                });

                function isNextBr(i) {
                    return (opts.type == "daily") ? ((i + 1) % 7 == 0) : ((i + 1) % 3 == 0);
                }

                return $list;
            }

            function getLastDate(year, month) {
                if(month == 2) {
                    if(year % 100 != 0 && (year % 4 == 0 || year % 400 == 0))
                        return 29;
                    else
                        return 28;
                } else {
                    var months = [ 31, 0, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];
                    return months[month - 1];
                }
            }

            function getDateList(self, y, m) {
                var objs = [],
                    nums = [],
                    no = 1;

                var d = new Date(),
                    start = new Date(y + "-" + ((m < 10) ? "0" + m : m)).getDay(),
                    ldate = getLastDate(y, m), sdate = 0;

                var prevYear = (m == 1) ? y - 1 : y,
                    prevMonth = (m == 1) ? 12 : m - 1,
                    prevLastDay = getLastDate(prevYear, prevMonth);

                // 최소 날짜로 시작일 설정
                if(minDate && minDate.getFullYear() == y && minDate.getMonth() + 1 == m) {
                    sdate = minDate.getDate();
                }

                // 최대 날짜로 종료일 설정
                if(maxDate && maxDate.getFullYear() == y && maxDate.getMonth() + 1 == m) {
                    ldate = maxDate.getDate();
                }

                for(var i = 0; i < start; i++) {
                    nums[i] = (prevLastDay - start) + (i + 1);
                    objs[i] = { type: "none", no: nums[i] };
                }

                for(var i = start; i < 42; i++) {
                    if(sdate <= no && no <= ldate) {
                        var type = "";

                        if(d.getMonth() + 1 == m && d.getDate() == no) {
                            type = "now";
                        }

                        if(selDate != null) {
                            if(selDate.getFullYear() == y && selDate.getMonth() + 1 == m && selDate.getDate() == no) {
                                type = "active";
                            }
                        }

                        nums[i] = no;
                        objs[i] = { type: type, no: nums[i] };
                        no++;
                    } else {
                        nums[i] = no - ldate;
                        objs[i] = { type: "none", no: nums[i] };
                        no++;
                    }
                }

                return { objs: objs, nums: nums };
            }

            function getMonthList(y) {
                var objs = [],
                    nums = [];

                var d = new Date();

                for(var i = 1; i <= 12; i++) {
                    var type = "";

                    if(d.getFullYear() == y && d.getMonth() + 1 == i) {
                        type = "now";
                    }

                    if(selDate != null) {
                        if(selDate.getFullYear() == y && selDate.getMonth() + 1 == i) {
                            type = "active";
                        }
                    }

                    nums.push(i);
                    objs.push({ type: type, no: i });
                }

                return { objs: objs, nums: nums };
            }

            function getYearList(y) {
                var objs = [],
                    nums = [],
                    startYear = y - 4;

                var d = new Date();

                for(var i = startYear; i < startYear + 12; i++) {
                    var type = "";

                    if(d.getFullYear() == i) {
                        type = "now";
                    }

                    if(selDate != null) {
                        if(selDate.getFullYear() == i) {
                            type = "active";
                        }
                    }

                    nums.push(i);
                    objs.push({ type: type, no: i });
                }

                return { objs: objs, nums: nums };
            }

            function checkDate(y, m, d) {
                if(minDate) {
                    var minY = minDate.getFullYear(), minM = minDate.getMonth() + 1, minD = minDate.getDate();
                    if (y < minY || (y == minY && m < minM)) return [minY, minM, minD];
                }
                if(maxDate) {
                    var maxY = maxDate.getFullYear(),maxM = maxDate.getMonth() + 1, maxD = maxDate.getDate()
                    if (y > maxY || (y == maxY && m > maxM)) return [maxY, maxM, maxD];
                }
                return [y, m, d];
            }

            this.init = function() {
                var opts = this.options;

                $head = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root).children(".head");
                $body = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root).children(".body");

                // tbody가 없을 경우에 대한 처리
                if($body.find("tbody").length == 0) {
                    $body.append(__WEBPACK_IMPORTED_MODULE_0_jquery___default()("<tbody></tbody>"));
                }

                minDate = (_.typeCheck("date", opts.minDate)) ? opts.minDate : null;
                maxDate = (_.typeCheck("date", opts.maxDate)) ? opts.maxDate : null;

                if(opts.type == "daily") {
                    // 기본 날짜가 최소 날짜나 최대 날짜보다 작거나 큰 경우
                    if(opts.date < minDate) {
                        opts.date = minDate;
                    } else if(opts.date < minDate) {
                        opts.date = maxDate;
                    }

                    // 최소 날짜와 최대 날짜가 서로 교차하는 경우
                    if(minDate && maxDate && maxDate < minDate) {
                        minDate = null;
                        maxDate = null;
                    }
                }

                // 이벤트 정의
                setCalendarEvent(this);

                // 기본 날짜 설정
                this.select(opts.date);
            }

            /**
             * @method page
             * Outputs a calendar that fits the year/month entered
             *
             * @param {Integer} year
             * @param {Integer} month
             */
            this.page = function(y, m) {
                if(arguments.length == 0) return;

                var opts = this.options,
                    $tbody = $body.find("tbody").empty();

                if(opts.type == "daily") {
                    year = y;
                    month = m;
                    $tbody.append(getCalendarHtml(this, getDateList(this, year, month)));
                } else if(opts.type == "monthly") {
                    year = y;
                    $tbody.append(getCalendarHtml(this, getMonthList(year)));
                } else if(opts.type == "yearly") {
                    year = y;
                    $tbody.append(getCalendarHtml(this, getYearList(year)));
                }

                $head.children(".title").html(_.dateFormat(getCalendarDate(this), opts.titleFormat));
            }

            /**
             * @method prev
             * Outputs a calendar that fits the previous year/month
             *
             */
            this.prev = function(e, moveYear) {
                var opts = this.options;

                if(opts.type == "daily") {

                    if (moveYear) {
                        var y = year - 1, m = month;
                    } else {
                        var y = (month == 1) ? year - 1 : year,
                            m = (month == 1) ? 12 : month - 1;
                    }

                    if(minDate && minDate.getFullYear() == year && minDate.getMonth() + 1 == month) {
                        return;
                    }

                    this.page(y, m);
                } else if(opts.type == "monthly") {
                    this.page(year - 1);
                } else if(opts.type == "yearly") {
                    this.page(year - 12);
                }

                this.emit("prev", [ e ]);
            }

            /**
             * @method next
             * Outputs a calendar that fits the next year/month
             *
             */
            this.next = function(e, moveYear) {
                var opts = this.options;

                if(opts.type == "daily") {

                    if (moveYear) {
                        var y = year + 1, m = month;
                    } else {
                        var y = (month == 12) ? year + 1 : year,
                            m = (month == 12) ? 1 : month + 1;
                    }

                    if(maxDate && maxDate.getFullYear() == year && maxDate.getMonth() + 1 == month) {
                        return;
                    }

                    this.page(y, m);
                } else if(opts.type == "monthly") {
                    this.page(year + 1);
                } else if(opts.type == "yearly") {
                    this.page(year + 12);
                }

                this.emit("next", [ e ]);
            }

            /**
             * @method select
             * Selects today if there is no value, or selects a date applicable to a timestamp or year/month/date
             *
             * @param {"year"/"month"/"date"/"timestamp"/"Date"}
             */
            this.select = function() {
                var opts = this.options,
                    args = arguments,
                    y = year,
                    m = month,
                    d = date;

                if(args.length == 3) {
                    y = args[0];
                    m = args[1];
                    d = args[2];
                } else if(args.length == 1) {
                    var time = (_.typeCheck("date", args[0])) ? args[0] : new Date(args[0]);

                    y = time.getFullYear();
                    m = time.getMonth() + 1;
                    d = time.getDate();
                }

                if(opts.type == "daily") {
                    // 최소일과 최대일이 교차하는 경우
                    if(minDate || maxDate) {
                        var checkedDate = checkDate(y, m, d);
                        this.page(checkedDate[0], checkedDate[1]);
                        this.addTrigger(items[checkedDate[2]], "click");
                    }

                    this.page(y, m);
                    this.addTrigger(items[d], "click");
                } else if(opts.type == "monthly") {
                    this.page(y);
                    this.addTrigger(items[m], "click");
                } else if(opts.type == "yearly") {
                    this.page(y);
                    this.addTrigger(items[y], "click");
                }
            }

            /**
             * @method addTime
             * Selects a date corresponding to the time added to the currently selected date
             *
             * @param {"Integer"/"Date"} time Timestamp or Date
             */
            this.addTime = function(time) {
                selDate = new Date(this.getTime() + time);
                this.select(this.getTime());
            }

            /**
             * @method getDate
             * Gets the value of the date currently selected
             *
             * @return {Date} Date object
             */
            this.getDate = function() {
                return selDate;
            }

            /**
             * @method getTime
             * Gets the timestamp value of the date currently selected
             *
             * @return {Integer} Timestamp
             */
            this.getTime = function() {
                return selDate.getTime();
            }

            /**
             * @method getFormat
             * Gets a date string that fits the format entered
             *
             * @return {String} format Formatted date string
             */
            this.getFormat = function(format) {
                return _.dateFormat(selDate, (typeof(format) == "string") ? format : this.options.format);
            }

            /**
             * @method reload
             * Reloads the datepicker
             */
            this.reload = function() {
                var opts = this.options;
                minDate = (_.typeCheck("date", opts.minDate)) ? opts.minDate : null;
                maxDate = (_.typeCheck("date", opts.maxDate)) ? opts.maxDate : null;

                if(opts.type == "daily") {
                    // 기본 날짜가 최소 날짜나 최대 날짜보다 작거나 큰 경우
                    if(minDate && opts.date < minDate) {
                        opts.date = minDate;
                    } else if(maxDate && opts.date > maxDate) {
                        opts.date = maxDate;
                    }
                }

                this.select();
                this.emit("reload");
            }
        }

        UI.setup = function() {
            var now = getStartDate(new Date());

            return {
                /**
                 * @cfg {"daily"/"monthly"/"yearly"} [type="daily"]
                 * Determines the type of a calendar
                 */
                type: "daily",

                /**
                 * @cfg {String} [titleFormat="yyyy.MM"]
                 * Title format of a calendar
                 */
                titleFormat: "yyyy.MM",

                /**
                 * @cfg {String} [format="yyyy-MM-dd"]
                 * Format of the date handed over when selecting a specific date
                 */
                format: "yyyy-MM-dd",

                /**
                 * @cfg {Date} [date="now"]
                 * Selects a specific date as a basic
                 */
                date: now,

                /**
                 * @cfg {Boolean} [animate=false]
                 * @deprecated
                 */
                animate: false,

                /**
                 * @cfg {Date} [minDate="null"]
                 * Selects a specific minimum date
                 */
                minDate: null,

                /**
                 * @cfg {Date} [maxDate="null"]
                 * Selects a specific maximum date
                 */
                maxDate: null
            };
        }

        /**
         * @event select
         * Event that occurs when selecting a specific date
         *
         * @param {String} value Formatted date string
         * @param {EventObject} e The event object
         */

        /**
         * @event prev
         * Event that occurs when clicking on the previous button
         *
         * @param {EventObject} e The event object
         */

        /**
         * @event next
         * Event that occurs when clicking on the next button
         *
         * @param {EventObject} e The event object
         */

        return UI;
    }
});

/***/ }),
/* 252 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": 66,
	"./af.js": 66,
	"./ar": 67,
	"./ar-dz": 68,
	"./ar-dz.js": 68,
	"./ar-kw": 69,
	"./ar-kw.js": 69,
	"./ar-ly": 70,
	"./ar-ly.js": 70,
	"./ar-ma": 71,
	"./ar-ma.js": 71,
	"./ar-sa": 72,
	"./ar-sa.js": 72,
	"./ar-tn": 73,
	"./ar-tn.js": 73,
	"./ar.js": 67,
	"./az": 74,
	"./az.js": 74,
	"./be": 75,
	"./be.js": 75,
	"./bg": 76,
	"./bg.js": 76,
	"./bm": 77,
	"./bm.js": 77,
	"./bn": 78,
	"./bn.js": 78,
	"./bo": 79,
	"./bo.js": 79,
	"./br": 80,
	"./br.js": 80,
	"./bs": 81,
	"./bs.js": 81,
	"./ca": 82,
	"./ca.js": 82,
	"./cs": 83,
	"./cs.js": 83,
	"./cv": 84,
	"./cv.js": 84,
	"./cy": 85,
	"./cy.js": 85,
	"./da": 86,
	"./da.js": 86,
	"./de": 87,
	"./de-at": 88,
	"./de-at.js": 88,
	"./de-ch": 89,
	"./de-ch.js": 89,
	"./de.js": 87,
	"./dv": 90,
	"./dv.js": 90,
	"./el": 91,
	"./el.js": 91,
	"./en-au": 92,
	"./en-au.js": 92,
	"./en-ca": 93,
	"./en-ca.js": 93,
	"./en-gb": 94,
	"./en-gb.js": 94,
	"./en-ie": 95,
	"./en-ie.js": 95,
	"./en-il": 96,
	"./en-il.js": 96,
	"./en-in": 97,
	"./en-in.js": 97,
	"./en-nz": 98,
	"./en-nz.js": 98,
	"./en-sg": 99,
	"./en-sg.js": 99,
	"./eo": 100,
	"./eo.js": 100,
	"./es": 101,
	"./es-do": 102,
	"./es-do.js": 102,
	"./es-us": 103,
	"./es-us.js": 103,
	"./es.js": 101,
	"./et": 104,
	"./et.js": 104,
	"./eu": 105,
	"./eu.js": 105,
	"./fa": 106,
	"./fa.js": 106,
	"./fi": 107,
	"./fi.js": 107,
	"./fil": 108,
	"./fil.js": 108,
	"./fo": 109,
	"./fo.js": 109,
	"./fr": 110,
	"./fr-ca": 111,
	"./fr-ca.js": 111,
	"./fr-ch": 112,
	"./fr-ch.js": 112,
	"./fr.js": 110,
	"./fy": 113,
	"./fy.js": 113,
	"./ga": 114,
	"./ga.js": 114,
	"./gd": 115,
	"./gd.js": 115,
	"./gl": 116,
	"./gl.js": 116,
	"./gom-deva": 117,
	"./gom-deva.js": 117,
	"./gom-latn": 118,
	"./gom-latn.js": 118,
	"./gu": 119,
	"./gu.js": 119,
	"./he": 120,
	"./he.js": 120,
	"./hi": 121,
	"./hi.js": 121,
	"./hr": 122,
	"./hr.js": 122,
	"./hu": 123,
	"./hu.js": 123,
	"./hy-am": 124,
	"./hy-am.js": 124,
	"./id": 125,
	"./id.js": 125,
	"./is": 126,
	"./is.js": 126,
	"./it": 127,
	"./it-ch": 128,
	"./it-ch.js": 128,
	"./it.js": 127,
	"./ja": 129,
	"./ja.js": 129,
	"./jv": 130,
	"./jv.js": 130,
	"./ka": 131,
	"./ka.js": 131,
	"./kk": 132,
	"./kk.js": 132,
	"./km": 133,
	"./km.js": 133,
	"./kn": 134,
	"./kn.js": 134,
	"./ko": 135,
	"./ko.js": 135,
	"./ku": 136,
	"./ku.js": 136,
	"./ky": 137,
	"./ky.js": 137,
	"./lb": 138,
	"./lb.js": 138,
	"./lo": 139,
	"./lo.js": 139,
	"./lt": 140,
	"./lt.js": 140,
	"./lv": 141,
	"./lv.js": 141,
	"./me": 142,
	"./me.js": 142,
	"./mi": 143,
	"./mi.js": 143,
	"./mk": 144,
	"./mk.js": 144,
	"./ml": 145,
	"./ml.js": 145,
	"./mn": 146,
	"./mn.js": 146,
	"./mr": 147,
	"./mr.js": 147,
	"./ms": 148,
	"./ms-my": 149,
	"./ms-my.js": 149,
	"./ms.js": 148,
	"./mt": 150,
	"./mt.js": 150,
	"./my": 151,
	"./my.js": 151,
	"./nb": 152,
	"./nb.js": 152,
	"./ne": 153,
	"./ne.js": 153,
	"./nl": 154,
	"./nl-be": 155,
	"./nl-be.js": 155,
	"./nl.js": 154,
	"./nn": 156,
	"./nn.js": 156,
	"./oc-lnc": 157,
	"./oc-lnc.js": 157,
	"./pa-in": 158,
	"./pa-in.js": 158,
	"./pl": 159,
	"./pl.js": 159,
	"./pt": 160,
	"./pt-br": 161,
	"./pt-br.js": 161,
	"./pt.js": 160,
	"./ro": 162,
	"./ro.js": 162,
	"./ru": 163,
	"./ru.js": 163,
	"./sd": 164,
	"./sd.js": 164,
	"./se": 165,
	"./se.js": 165,
	"./si": 166,
	"./si.js": 166,
	"./sk": 167,
	"./sk.js": 167,
	"./sl": 168,
	"./sl.js": 168,
	"./sq": 169,
	"./sq.js": 169,
	"./sr": 170,
	"./sr-cyrl": 171,
	"./sr-cyrl.js": 171,
	"./sr.js": 170,
	"./ss": 172,
	"./ss.js": 172,
	"./sv": 173,
	"./sv.js": 173,
	"./sw": 174,
	"./sw.js": 174,
	"./ta": 175,
	"./ta.js": 175,
	"./te": 176,
	"./te.js": 176,
	"./tet": 177,
	"./tet.js": 177,
	"./tg": 178,
	"./tg.js": 178,
	"./th": 179,
	"./th.js": 179,
	"./tk": 180,
	"./tk.js": 180,
	"./tl-ph": 181,
	"./tl-ph.js": 181,
	"./tlh": 182,
	"./tlh.js": 182,
	"./tr": 183,
	"./tr.js": 183,
	"./tzl": 184,
	"./tzl.js": 184,
	"./tzm": 185,
	"./tzm-latn": 186,
	"./tzm-latn.js": 186,
	"./tzm.js": 185,
	"./ug-cn": 187,
	"./ug-cn.js": 187,
	"./uk": 188,
	"./uk.js": 188,
	"./ur": 189,
	"./ur.js": 189,
	"./uz": 190,
	"./uz-latn": 191,
	"./uz-latn.js": 191,
	"./uz.js": 190,
	"./vi": 192,
	"./vi.js": 192,
	"./x-pseudo": 193,
	"./x-pseudo.js": 193,
	"./yo": 194,
	"./yo.js": 194,
	"./zh-cn": 195,
	"./zh-cn.js": 195,
	"./zh-hk": 196,
	"./zh-hk.js": 196,
	"./zh-mo": 197,
	"./zh-mo.js": 197,
	"./zh-tw": 198,
	"./zh-tw.js": 198
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 253;

/***/ }),
/* 254 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 255 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = toSubscriber;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__symbol_rxSubscriber__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Observer__ = __webpack_require__(199);
/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */



function toSubscriber(nextOrObserver, error, complete) {
    if (nextOrObserver) {
        if (nextOrObserver instanceof __WEBPACK_IMPORTED_MODULE_0__Subscriber__["a" /* Subscriber */]) {
            return nextOrObserver;
        }
        if (nextOrObserver[__WEBPACK_IMPORTED_MODULE_1__symbol_rxSubscriber__["a" /* rxSubscriber */]]) {
            return nextOrObserver[__WEBPACK_IMPORTED_MODULE_1__symbol_rxSubscriber__["a" /* rxSubscriber */]]();
        }
    }
    if (!nextOrObserver && !error && !complete) {
        return new __WEBPACK_IMPORTED_MODULE_0__Subscriber__["a" /* Subscriber */](__WEBPACK_IMPORTED_MODULE_2__Observer__["a" /* empty */]);
    }
    return new __WEBPACK_IMPORTED_MODULE_0__Subscriber__["a" /* Subscriber */](nextOrObserver, error, complete);
}
//# sourceMappingURL=toSubscriber.js.map


/***/ }),
/* 256 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return QueueAction; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AsyncAction__ = __webpack_require__(23);
/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */


var QueueAction = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](QueueAction, _super);
    function QueueAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    }
    QueueAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay > 0) {
            return _super.prototype.schedule.call(this, state, delay);
        }
        this.delay = delay;
        this.state = state;
        this.scheduler.flush(this);
        return this;
    };
    QueueAction.prototype.execute = function (state, delay) {
        return (delay > 0 || this.closed) ?
            _super.prototype.execute.call(this, state, delay) :
            this._execute(state, delay);
    };
    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        return scheduler.flush(this);
    };
    return QueueAction;
}(__WEBPACK_IMPORTED_MODULE_1__AsyncAction__["a" /* AsyncAction */]));

//# sourceMappingURL=QueueAction.js.map


/***/ }),
/* 257 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Action; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscription__ = __webpack_require__(7);
/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */


var Action = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](Action, _super);
    function Action(scheduler, work) {
        return _super.call(this) || this;
    }
    Action.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        return this;
    };
    return Action;
}(__WEBPACK_IMPORTED_MODULE_1__Subscription__["a" /* Subscription */]));

//# sourceMappingURL=Action.js.map


/***/ }),
/* 258 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return QueueScheduler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AsyncScheduler__ = __webpack_require__(24);
/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */


var QueueScheduler = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](QueueScheduler, _super);
    function QueueScheduler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return QueueScheduler;
}(__WEBPACK_IMPORTED_MODULE_1__AsyncScheduler__["a" /* AsyncScheduler */]));

//# sourceMappingURL=QueueScheduler.js.map


/***/ }),
/* 259 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AsapAction; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_Immediate__ = __webpack_require__(260);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__AsyncAction__ = __webpack_require__(23);
/** PURE_IMPORTS_START tslib,_util_Immediate,_AsyncAction PURE_IMPORTS_END */



var AsapAction = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](AsapAction, _super);
    function AsapAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    }
    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        scheduler.actions.push(this);
        return scheduler.scheduled || (scheduler.scheduled = __WEBPACK_IMPORTED_MODULE_1__util_Immediate__["a" /* Immediate */].setImmediate(scheduler.flush.bind(scheduler, null)));
    };
    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        }
        if (scheduler.actions.length === 0) {
            __WEBPACK_IMPORTED_MODULE_1__util_Immediate__["a" /* Immediate */].clearImmediate(id);
            scheduler.scheduled = undefined;
        }
        return undefined;
    };
    return AsapAction;
}(__WEBPACK_IMPORTED_MODULE_2__AsyncAction__["a" /* AsyncAction */]));

//# sourceMappingURL=AsapAction.js.map


/***/ }),
/* 260 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Immediate; });
/* unused harmony export TestTools */
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var nextHandle = 1;
var RESOLVED = /*@__PURE__*/ (function () { return /*@__PURE__*/ Promise.resolve(); })();
var activeHandles = {};
function findAndClearHandle(handle) {
    if (handle in activeHandles) {
        delete activeHandles[handle];
        return true;
    }
    return false;
}
var Immediate = {
    setImmediate: function (cb) {
        var handle = nextHandle++;
        activeHandles[handle] = true;
        RESOLVED.then(function () { return findAndClearHandle(handle) && cb(); });
        return handle;
    },
    clearImmediate: function (handle) {
        findAndClearHandle(handle);
    },
};
var TestTools = {
    pending: function () {
        return Object.keys(activeHandles).length;
    }
};
//# sourceMappingURL=Immediate.js.map


/***/ }),
/* 261 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AsapScheduler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AsyncScheduler__ = __webpack_require__(24);
/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */


var AsapScheduler = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](AsapScheduler, _super);
    function AsapScheduler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AsapScheduler.prototype.flush = function (action) {
        this.active = true;
        this.scheduled = undefined;
        var actions = this.actions;
        var error;
        var index = -1;
        var count = actions.length;
        action = action || actions.shift();
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (++index < count && (action = actions.shift()));
        this.active = false;
        if (error) {
            while (++index < count && (action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsapScheduler;
}(__WEBPACK_IMPORTED_MODULE_1__AsyncScheduler__["a" /* AsyncScheduler */]));

//# sourceMappingURL=AsapScheduler.js.map


/***/ }),
/* 262 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return animationFrame; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__AnimationFrameAction__ = __webpack_require__(263);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AnimationFrameScheduler__ = __webpack_require__(264);
/** PURE_IMPORTS_START _AnimationFrameAction,_AnimationFrameScheduler PURE_IMPORTS_END */


var animationFrame = /*@__PURE__*/ new __WEBPACK_IMPORTED_MODULE_1__AnimationFrameScheduler__["a" /* AnimationFrameScheduler */](__WEBPACK_IMPORTED_MODULE_0__AnimationFrameAction__["a" /* AnimationFrameAction */]);
//# sourceMappingURL=animationFrame.js.map


/***/ }),
/* 263 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AnimationFrameAction; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AsyncAction__ = __webpack_require__(23);
/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */


var AnimationFrameAction = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](AnimationFrameAction, _super);
    function AnimationFrameAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    }
    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        scheduler.actions.push(this);
        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(function () { return scheduler.flush(null); }));
    };
    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        }
        if (scheduler.actions.length === 0) {
            cancelAnimationFrame(id);
            scheduler.scheduled = undefined;
        }
        return undefined;
    };
    return AnimationFrameAction;
}(__WEBPACK_IMPORTED_MODULE_1__AsyncAction__["a" /* AsyncAction */]));

//# sourceMappingURL=AnimationFrameAction.js.map


/***/ }),
/* 264 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AnimationFrameScheduler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AsyncScheduler__ = __webpack_require__(24);
/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */


var AnimationFrameScheduler = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](AnimationFrameScheduler, _super);
    function AnimationFrameScheduler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AnimationFrameScheduler.prototype.flush = function (action) {
        this.active = true;
        this.scheduled = undefined;
        var actions = this.actions;
        var error;
        var index = -1;
        var count = actions.length;
        action = action || actions.shift();
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (++index < count && (action = actions.shift()));
        this.active = false;
        if (error) {
            while (++index < count && (action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AnimationFrameScheduler;
}(__WEBPACK_IMPORTED_MODULE_1__AsyncScheduler__["a" /* AsyncScheduler */]));

//# sourceMappingURL=AnimationFrameScheduler.js.map


/***/ }),
/* 265 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return VirtualTimeScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VirtualAction; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AsyncAction__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__AsyncScheduler__ = __webpack_require__(24);
/** PURE_IMPORTS_START tslib,_AsyncAction,_AsyncScheduler PURE_IMPORTS_END */



var VirtualTimeScheduler = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](VirtualTimeScheduler, _super);
    function VirtualTimeScheduler(SchedulerAction, maxFrames) {
        if (SchedulerAction === void 0) {
            SchedulerAction = VirtualAction;
        }
        if (maxFrames === void 0) {
            maxFrames = Number.POSITIVE_INFINITY;
        }
        var _this = _super.call(this, SchedulerAction, function () { return _this.frame; }) || this;
        _this.maxFrames = maxFrames;
        _this.frame = 0;
        _this.index = -1;
        return _this;
    }
    VirtualTimeScheduler.prototype.flush = function () {
        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;
        var error, action;
        while ((action = actions[0]) && action.delay <= maxFrames) {
            actions.shift();
            this.frame = action.delay;
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        }
        if (error) {
            while (action = actions.shift()) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    VirtualTimeScheduler.frameTimeFactor = 10;
    return VirtualTimeScheduler;
}(__WEBPACK_IMPORTED_MODULE_2__AsyncScheduler__["a" /* AsyncScheduler */]));

var VirtualAction = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](VirtualAction, _super);
    function VirtualAction(scheduler, work, index) {
        if (index === void 0) {
            index = scheduler.index += 1;
        }
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        _this.index = index;
        _this.active = true;
        _this.index = scheduler.index = index;
        return _this;
    }
    VirtualAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (!this.id) {
            return _super.prototype.schedule.call(this, state, delay);
        }
        this.active = false;
        var action = new VirtualAction(this.scheduler, this.work);
        this.add(action);
        return action.schedule(state, delay);
    };
    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        this.delay = scheduler.frame + delay;
        var actions = scheduler.actions;
        actions.push(this);
        actions.sort(VirtualAction.sortActions);
        return true;
    };
    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        return undefined;
    };
    VirtualAction.prototype._execute = function (state, delay) {
        if (this.active === true) {
            return _super.prototype._execute.call(this, state, delay);
        }
    };
    VirtualAction.sortActions = function (a, b) {
        if (a.delay === b.delay) {
            if (a.index === b.index) {
                return 0;
            }
            else if (a.index > b.index) {
                return 1;
            }
            else {
                return -1;
            }
        }
        else if (a.delay > b.delay) {
            return 1;
        }
        else {
            return -1;
        }
    };
    return VirtualAction;
}(__WEBPACK_IMPORTED_MODULE_1__AsyncAction__["a" /* AsyncAction */]));

//# sourceMappingURL=VirtualTimeScheduler.js.map


/***/ }),
/* 266 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isObservable;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

function isObservable(obj) {
    return !!obj && (obj instanceof __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */] || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));
}
//# sourceMappingURL=isObservable.js.map


/***/ }),
/* 267 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = bindCallback;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AsyncSubject__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__operators_map__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_canReportError__ = __webpack_require__(45);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_isArray__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_isScheduler__ = __webpack_require__(15);
/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_canReportError,_util_isArray,_util_isScheduler PURE_IMPORTS_END */






function bindCallback(callbackFunc, resultSelector, scheduler) {
    if (resultSelector) {
        if (Object(__WEBPACK_IMPORTED_MODULE_5__util_isScheduler__["a" /* isScheduler */])(resultSelector)) {
            scheduler = resultSelector;
        }
        else {
            return function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return bindCallback(callbackFunc, scheduler).apply(void 0, args).pipe(Object(__WEBPACK_IMPORTED_MODULE_2__operators_map__["a" /* map */])(function (args) { return Object(__WEBPACK_IMPORTED_MODULE_4__util_isArray__["a" /* isArray */])(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));
            };
        }
    }
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var context = this;
        var subject;
        var params = {
            context: context,
            subject: subject,
            callbackFunc: callbackFunc,
            scheduler: scheduler,
        };
        return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
            if (!scheduler) {
                if (!subject) {
                    subject = new __WEBPACK_IMPORTED_MODULE_1__AsyncSubject__["a" /* AsyncSubject */]();
                    var handler = function () {
                        var innerArgs = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            innerArgs[_i] = arguments[_i];
                        }
                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
                        subject.complete();
                    };
                    try {
                        callbackFunc.apply(context, args.concat([handler]));
                    }
                    catch (err) {
                        if (Object(__WEBPACK_IMPORTED_MODULE_3__util_canReportError__["a" /* canReportError */])(subject)) {
                            subject.error(err);
                        }
                        else {
                            console.warn(err);
                        }
                    }
                }
                return subject.subscribe(subscriber);
            }
            else {
                var state = {
                    args: args, subscriber: subscriber, params: params,
                };
                return scheduler.schedule(dispatch, 0, state);
            }
        });
    };
}
function dispatch(state) {
    var _this = this;
    var self = this;
    var args = state.args, subscriber = state.subscriber, params = state.params;
    var callbackFunc = params.callbackFunc, context = params.context, scheduler = params.scheduler;
    var subject = params.subject;
    if (!subject) {
        subject = params.subject = new __WEBPACK_IMPORTED_MODULE_1__AsyncSubject__["a" /* AsyncSubject */]();
        var handler = function () {
            var innerArgs = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                innerArgs[_i] = arguments[_i];
            }
            var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;
            _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));
        };
        try {
            callbackFunc.apply(context, args.concat([handler]));
        }
        catch (err) {
            subject.error(err);
        }
    }
    this.add(subject.subscribe(subscriber));
}
function dispatchNext(state) {
    var value = state.value, subject = state.subject;
    subject.next(value);
    subject.complete();
}
function dispatchError(state) {
    var err = state.err, subject = state.subject;
    subject.error(err);
}
//# sourceMappingURL=bindCallback.js.map


/***/ }),
/* 268 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = bindNodeCallback;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AsyncSubject__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__operators_map__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_canReportError__ = __webpack_require__(45);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_isScheduler__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_isArray__ = __webpack_require__(11);
/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_canReportError,_util_isScheduler,_util_isArray PURE_IMPORTS_END */






function bindNodeCallback(callbackFunc, resultSelector, scheduler) {
    if (resultSelector) {
        if (Object(__WEBPACK_IMPORTED_MODULE_4__util_isScheduler__["a" /* isScheduler */])(resultSelector)) {
            scheduler = resultSelector;
        }
        else {
            return function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return bindNodeCallback(callbackFunc, scheduler).apply(void 0, args).pipe(Object(__WEBPACK_IMPORTED_MODULE_2__operators_map__["a" /* map */])(function (args) { return Object(__WEBPACK_IMPORTED_MODULE_5__util_isArray__["a" /* isArray */])(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));
            };
        }
    }
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var params = {
            subject: undefined,
            args: args,
            callbackFunc: callbackFunc,
            scheduler: scheduler,
            context: this,
        };
        return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
            var context = params.context;
            var subject = params.subject;
            if (!scheduler) {
                if (!subject) {
                    subject = params.subject = new __WEBPACK_IMPORTED_MODULE_1__AsyncSubject__["a" /* AsyncSubject */]();
                    var handler = function () {
                        var innerArgs = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            innerArgs[_i] = arguments[_i];
                        }
                        var err = innerArgs.shift();
                        if (err) {
                            subject.error(err);
                            return;
                        }
                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
                        subject.complete();
                    };
                    try {
                        callbackFunc.apply(context, args.concat([handler]));
                    }
                    catch (err) {
                        if (Object(__WEBPACK_IMPORTED_MODULE_3__util_canReportError__["a" /* canReportError */])(subject)) {
                            subject.error(err);
                        }
                        else {
                            console.warn(err);
                        }
                    }
                }
                return subject.subscribe(subscriber);
            }
            else {
                return scheduler.schedule(dispatch, 0, { params: params, subscriber: subscriber, context: context });
            }
        });
    };
}
function dispatch(state) {
    var _this = this;
    var params = state.params, subscriber = state.subscriber, context = state.context;
    var callbackFunc = params.callbackFunc, args = params.args, scheduler = params.scheduler;
    var subject = params.subject;
    if (!subject) {
        subject = params.subject = new __WEBPACK_IMPORTED_MODULE_1__AsyncSubject__["a" /* AsyncSubject */]();
        var handler = function () {
            var innerArgs = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                innerArgs[_i] = arguments[_i];
            }
            var err = innerArgs.shift();
            if (err) {
                _this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));
            }
            else {
                var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;
                _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));
            }
        };
        try {
            callbackFunc.apply(context, args.concat([handler]));
        }
        catch (err) {
            this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));
        }
    }
    this.add(subject.subscribe(subscriber));
}
function dispatchNext(arg) {
    var value = arg.value, subject = arg.subject;
    subject.next(value);
    subject.complete();
}
function dispatchError(arg) {
    var err = arg.err, subject = arg.subject;
    subject.error(err);
}
//# sourceMappingURL=bindNodeCallback.js.map


/***/ }),
/* 269 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return subscribeToPromise; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__hostReportError__ = __webpack_require__(46);
/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */

var subscribeToPromise = function (promise) {
    return function (subscriber) {
        promise.then(function (value) {
            if (!subscriber.closed) {
                subscriber.next(value);
                subscriber.complete();
            }
        }, function (err) { return subscriber.error(err); })
            .then(null, __WEBPACK_IMPORTED_MODULE_0__hostReportError__["a" /* hostReportError */]);
        return subscriber;
    };
};
//# sourceMappingURL=subscribeToPromise.js.map


/***/ }),
/* 270 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return subscribeToIterable; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__symbol_iterator__ = __webpack_require__(28);
/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */

var subscribeToIterable = function (iterable) {
    return function (subscriber) {
        var iterator = iterable[__WEBPACK_IMPORTED_MODULE_0__symbol_iterator__["a" /* iterator */]]();
        do {
            var item = iterator.next();
            if (item.done) {
                subscriber.complete();
                break;
            }
            subscriber.next(item.value);
            if (subscriber.closed) {
                break;
            }
        } while (true);
        if (typeof iterator.return === 'function') {
            subscriber.add(function () {
                if (iterator.return) {
                    iterator.return();
                }
            });
        }
        return subscriber;
    };
};
//# sourceMappingURL=subscribeToIterable.js.map


/***/ }),
/* 271 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return subscribeToObservable; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__symbol_observable__ = __webpack_require__(19);
/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */

var subscribeToObservable = function (obj) {
    return function (subscriber) {
        var obs = obj[__WEBPACK_IMPORTED_MODULE_0__symbol_observable__["a" /* observable */]]();
        if (typeof obs.subscribe !== 'function') {
            throw new TypeError('Provided object does not correctly implement Symbol.observable');
        }
        else {
            return obs.subscribe(subscriber);
        }
    };
};
//# sourceMappingURL=subscribeToObservable.js.map


/***/ }),
/* 272 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = scheduleObservable;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscription__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__symbol_observable__ = __webpack_require__(19);
/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable PURE_IMPORTS_END */



function scheduleObservable(input, scheduler) {
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var sub = new __WEBPACK_IMPORTED_MODULE_1__Subscription__["a" /* Subscription */]();
        sub.add(scheduler.schedule(function () {
            var observable = input[__WEBPACK_IMPORTED_MODULE_2__symbol_observable__["a" /* observable */]]();
            sub.add(observable.subscribe({
                next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },
                error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },
                complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },
            }));
        }));
        return sub;
    });
}
//# sourceMappingURL=scheduleObservable.js.map


/***/ }),
/* 273 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = schedulePromise;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscription__ = __webpack_require__(7);
/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */


function schedulePromise(input, scheduler) {
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var sub = new __WEBPACK_IMPORTED_MODULE_1__Subscription__["a" /* Subscription */]();
        sub.add(scheduler.schedule(function () {
            return input.then(function (value) {
                sub.add(scheduler.schedule(function () {
                    subscriber.next(value);
                    sub.add(scheduler.schedule(function () { return subscriber.complete(); }));
                }));
            }, function (err) {
                sub.add(scheduler.schedule(function () { return subscriber.error(err); }));
            });
        }));
        return sub;
    });
}
//# sourceMappingURL=schedulePromise.js.map


/***/ }),
/* 274 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = scheduleIterable;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscription__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__symbol_iterator__ = __webpack_require__(28);
/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator PURE_IMPORTS_END */



function scheduleIterable(input, scheduler) {
    if (!input) {
        throw new Error('Iterable cannot be null');
    }
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var sub = new __WEBPACK_IMPORTED_MODULE_1__Subscription__["a" /* Subscription */]();
        var iterator;
        sub.add(function () {
            if (iterator && typeof iterator.return === 'function') {
                iterator.return();
            }
        });
        sub.add(scheduler.schedule(function () {
            iterator = input[__WEBPACK_IMPORTED_MODULE_2__symbol_iterator__["a" /* iterator */]]();
            sub.add(scheduler.schedule(function () {
                if (subscriber.closed) {
                    return;
                }
                var value;
                var done;
                try {
                    var result = iterator.next();
                    value = result.value;
                    done = result.done;
                }
                catch (err) {
                    subscriber.error(err);
                    return;
                }
                if (done) {
                    subscriber.complete();
                }
                else {
                    subscriber.next(value);
                    this.schedule();
                }
            }));
        }));
        return sub;
    });
}
//# sourceMappingURL=scheduleIterable.js.map


/***/ }),
/* 275 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isInteropObservable;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__symbol_observable__ = __webpack_require__(19);
/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */

function isInteropObservable(input) {
    return input && typeof input[__WEBPACK_IMPORTED_MODULE_0__symbol_observable__["a" /* observable */]] === 'function';
}
//# sourceMappingURL=isInteropObservable.js.map


/***/ }),
/* 276 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isIterable;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__symbol_iterator__ = __webpack_require__(28);
/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */

function isIterable(input) {
    return input && typeof input[__WEBPACK_IMPORTED_MODULE_0__symbol_iterator__["a" /* iterator */]] === 'function';
}
//# sourceMappingURL=isIterable.js.map


/***/ }),
/* 277 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = forkJoin;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_isArray__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__operators_map__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_isObject__ = __webpack_require__(47);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__from__ = __webpack_require__(16);
/** PURE_IMPORTS_START _Observable,_util_isArray,_operators_map,_util_isObject,_from PURE_IMPORTS_END */





function forkJoin() {
    var sources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        sources[_i] = arguments[_i];
    }
    if (sources.length === 1) {
        var first_1 = sources[0];
        if (Object(__WEBPACK_IMPORTED_MODULE_1__util_isArray__["a" /* isArray */])(first_1)) {
            return forkJoinInternal(first_1, null);
        }
        if (Object(__WEBPACK_IMPORTED_MODULE_3__util_isObject__["a" /* isObject */])(first_1) && Object.getPrototypeOf(first_1) === Object.prototype) {
            var keys = Object.keys(first_1);
            return forkJoinInternal(keys.map(function (key) { return first_1[key]; }), keys);
        }
    }
    if (typeof sources[sources.length - 1] === 'function') {
        var resultSelector_1 = sources.pop();
        sources = (sources.length === 1 && Object(__WEBPACK_IMPORTED_MODULE_1__util_isArray__["a" /* isArray */])(sources[0])) ? sources[0] : sources;
        return forkJoinInternal(sources, null).pipe(Object(__WEBPACK_IMPORTED_MODULE_2__operators_map__["a" /* map */])(function (args) { return resultSelector_1.apply(void 0, args); }));
    }
    return forkJoinInternal(sources, null);
}
function forkJoinInternal(sources, keys) {
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var len = sources.length;
        if (len === 0) {
            subscriber.complete();
            return;
        }
        var values = new Array(len);
        var completed = 0;
        var emitted = 0;
        var _loop_1 = function (i) {
            var source = Object(__WEBPACK_IMPORTED_MODULE_4__from__["a" /* from */])(sources[i]);
            var hasValue = false;
            subscriber.add(source.subscribe({
                next: function (value) {
                    if (!hasValue) {
                        hasValue = true;
                        emitted++;
                    }
                    values[i] = value;
                },
                error: function (err) { return subscriber.error(err); },
                complete: function () {
                    completed++;
                    if (completed === len || !hasValue) {
                        if (emitted === len) {
                            subscriber.next(keys ?
                                keys.reduce(function (result, key, i) { return (result[key] = values[i], result); }, {}) :
                                values);
                        }
                        subscriber.complete();
                    }
                }
            }));
        };
        for (var i = 0; i < len; i++) {
            _loop_1(i);
        }
    });
}
//# sourceMappingURL=forkJoin.js.map


/***/ }),
/* 278 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = fromEvent;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_isArray__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isFunction__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__operators_map__ = __webpack_require__(13);
/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */




var toString = /*@__PURE__*/ (function () { return Object.prototype.toString; })();
function fromEvent(target, eventName, options, resultSelector) {
    if (Object(__WEBPACK_IMPORTED_MODULE_2__util_isFunction__["a" /* isFunction */])(options)) {
        resultSelector = options;
        options = undefined;
    }
    if (resultSelector) {
        return fromEvent(target, eventName, options).pipe(Object(__WEBPACK_IMPORTED_MODULE_3__operators_map__["a" /* map */])(function (args) { return Object(__WEBPACK_IMPORTED_MODULE_1__util_isArray__["a" /* isArray */])(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));
    }
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        function handler(e) {
            if (arguments.length > 1) {
                subscriber.next(Array.prototype.slice.call(arguments));
            }
            else {
                subscriber.next(e);
            }
        }
        setupSubscription(target, eventName, handler, subscriber, options);
    });
}
function setupSubscription(sourceObj, eventName, handler, subscriber, options) {
    var unsubscribe;
    if (isEventTarget(sourceObj)) {
        var source_1 = sourceObj;
        sourceObj.addEventListener(eventName, handler, options);
        unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };
    }
    else if (isJQueryStyleEventEmitter(sourceObj)) {
        var source_2 = sourceObj;
        sourceObj.on(eventName, handler);
        unsubscribe = function () { return source_2.off(eventName, handler); };
    }
    else if (isNodeStyleEventEmitter(sourceObj)) {
        var source_3 = sourceObj;
        sourceObj.addListener(eventName, handler);
        unsubscribe = function () { return source_3.removeListener(eventName, handler); };
    }
    else if (sourceObj && sourceObj.length) {
        for (var i = 0, len = sourceObj.length; i < len; i++) {
            setupSubscription(sourceObj[i], eventName, handler, subscriber, options);
        }
    }
    else {
        throw new TypeError('Invalid event target');
    }
    subscriber.add(unsubscribe);
}
function isNodeStyleEventEmitter(sourceObj) {
    return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';
}
function isJQueryStyleEventEmitter(sourceObj) {
    return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';
}
function isEventTarget(sourceObj) {
    return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';
}
//# sourceMappingURL=fromEvent.js.map


/***/ }),
/* 279 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = fromEventPattern;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_isArray__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isFunction__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__operators_map__ = __webpack_require__(13);
/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */




function fromEventPattern(addHandler, removeHandler, resultSelector) {
    if (resultSelector) {
        return fromEventPattern(addHandler, removeHandler).pipe(Object(__WEBPACK_IMPORTED_MODULE_3__operators_map__["a" /* map */])(function (args) { return Object(__WEBPACK_IMPORTED_MODULE_1__util_isArray__["a" /* isArray */])(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));
    }
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var handler = function () {
            var e = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                e[_i] = arguments[_i];
            }
            return subscriber.next(e.length === 1 ? e[0] : e);
        };
        var retValue;
        try {
            retValue = addHandler(handler);
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        if (!Object(__WEBPACK_IMPORTED_MODULE_2__util_isFunction__["a" /* isFunction */])(removeHandler)) {
            return undefined;
        }
        return function () { return removeHandler(handler, retValue); };
    });
}
//# sourceMappingURL=fromEventPattern.js.map


/***/ }),
/* 280 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = generate;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_identity__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isScheduler__ = __webpack_require__(15);
/** PURE_IMPORTS_START _Observable,_util_identity,_util_isScheduler PURE_IMPORTS_END */



function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {
    var resultSelector;
    var initialState;
    if (arguments.length == 1) {
        var options = initialStateOrOptions;
        initialState = options.initialState;
        condition = options.condition;
        iterate = options.iterate;
        resultSelector = options.resultSelector || __WEBPACK_IMPORTED_MODULE_1__util_identity__["a" /* identity */];
        scheduler = options.scheduler;
    }
    else if (resultSelectorOrObservable === undefined || Object(__WEBPACK_IMPORTED_MODULE_2__util_isScheduler__["a" /* isScheduler */])(resultSelectorOrObservable)) {
        initialState = initialStateOrOptions;
        resultSelector = __WEBPACK_IMPORTED_MODULE_1__util_identity__["a" /* identity */];
        scheduler = resultSelectorOrObservable;
    }
    else {
        initialState = initialStateOrOptions;
        resultSelector = resultSelectorOrObservable;
    }
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var state = initialState;
        if (scheduler) {
            return scheduler.schedule(dispatch, 0, {
                subscriber: subscriber,
                iterate: iterate,
                condition: condition,
                resultSelector: resultSelector,
                state: state
            });
        }
        do {
            if (condition) {
                var conditionResult = void 0;
                try {
                    conditionResult = condition(state);
                }
                catch (err) {
                    subscriber.error(err);
                    return undefined;
                }
                if (!conditionResult) {
                    subscriber.complete();
                    break;
                }
            }
            var value = void 0;
            try {
                value = resultSelector(state);
            }
            catch (err) {
                subscriber.error(err);
                return undefined;
            }
            subscriber.next(value);
            if (subscriber.closed) {
                break;
            }
            try {
                state = iterate(state);
            }
            catch (err) {
                subscriber.error(err);
                return undefined;
            }
        } while (true);
        return undefined;
    });
}
function dispatch(state) {
    var subscriber = state.subscriber, condition = state.condition;
    if (subscriber.closed) {
        return undefined;
    }
    if (state.needIterate) {
        try {
            state.state = state.iterate(state.state);
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
    }
    else {
        state.needIterate = true;
    }
    if (condition) {
        var conditionResult = void 0;
        try {
            conditionResult = condition(state.state);
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        if (!conditionResult) {
            subscriber.complete();
            return undefined;
        }
        if (subscriber.closed) {
            return undefined;
        }
    }
    var value;
    try {
        value = state.resultSelector(state.state);
    }
    catch (err) {
        subscriber.error(err);
        return undefined;
    }
    if (subscriber.closed) {
        return undefined;
    }
    subscriber.next(value);
    if (subscriber.closed) {
        return undefined;
    }
    return this.schedule(state);
}
//# sourceMappingURL=generate.js.map


/***/ }),
/* 281 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = iif;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__defer__ = __webpack_require__(58);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__empty__ = __webpack_require__(14);
/** PURE_IMPORTS_START _defer,_empty PURE_IMPORTS_END */


function iif(condition, trueResult, falseResult) {
    if (trueResult === void 0) {
        trueResult = __WEBPACK_IMPORTED_MODULE_1__empty__["a" /* EMPTY */];
    }
    if (falseResult === void 0) {
        falseResult = __WEBPACK_IMPORTED_MODULE_1__empty__["a" /* EMPTY */];
    }
    return Object(__WEBPACK_IMPORTED_MODULE_0__defer__["a" /* defer */])(function () { return condition() ? trueResult : falseResult; });
}
//# sourceMappingURL=iif.js.map


/***/ }),
/* 282 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = interval;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__scheduler_async__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isNumeric__ = __webpack_require__(39);
/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric PURE_IMPORTS_END */



function interval(period, scheduler) {
    if (period === void 0) {
        period = 0;
    }
    if (scheduler === void 0) {
        scheduler = __WEBPACK_IMPORTED_MODULE_1__scheduler_async__["a" /* async */];
    }
    if (!Object(__WEBPACK_IMPORTED_MODULE_2__util_isNumeric__["a" /* isNumeric */])(period) || period < 0) {
        period = 0;
    }
    if (!scheduler || typeof scheduler.schedule !== 'function') {
        scheduler = __WEBPACK_IMPORTED_MODULE_1__scheduler_async__["a" /* async */];
    }
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        subscriber.add(scheduler.schedule(dispatch, period, { subscriber: subscriber, counter: 0, period: period }));
        return subscriber;
    });
}
function dispatch(state) {
    var subscriber = state.subscriber, counter = state.counter, period = state.period;
    subscriber.next(counter);
    this.schedule({ subscriber: subscriber, counter: counter + 1, period: period }, period);
}
//# sourceMappingURL=interval.js.map


/***/ }),
/* 283 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = onErrorResumeNext;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__from__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isArray__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__empty__ = __webpack_require__(14);
/** PURE_IMPORTS_START _Observable,_from,_util_isArray,_empty PURE_IMPORTS_END */




function onErrorResumeNext() {
    var sources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        sources[_i] = arguments[_i];
    }
    if (sources.length === 0) {
        return __WEBPACK_IMPORTED_MODULE_3__empty__["a" /* EMPTY */];
    }
    var first = sources[0], remainder = sources.slice(1);
    if (sources.length === 1 && Object(__WEBPACK_IMPORTED_MODULE_2__util_isArray__["a" /* isArray */])(first)) {
        return onErrorResumeNext.apply(void 0, first);
    }
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var subNext = function () { return subscriber.add(onErrorResumeNext.apply(void 0, remainder).subscribe(subscriber)); };
        return Object(__WEBPACK_IMPORTED_MODULE_1__from__["a" /* from */])(first).subscribe({
            next: function (value) { subscriber.next(value); },
            error: subNext,
            complete: subNext,
        });
    });
}
//# sourceMappingURL=onErrorResumeNext.js.map


/***/ }),
/* 284 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = pairs;
/* unused harmony export dispatch */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscription__ = __webpack_require__(7);
/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */


function pairs(obj, scheduler) {
    if (!scheduler) {
        return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
            var keys = Object.keys(obj);
            for (var i = 0; i < keys.length && !subscriber.closed; i++) {
                var key = keys[i];
                if (obj.hasOwnProperty(key)) {
                    subscriber.next([key, obj[key]]);
                }
            }
            subscriber.complete();
        });
    }
    else {
        return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
            var keys = Object.keys(obj);
            var subscription = new __WEBPACK_IMPORTED_MODULE_1__Subscription__["a" /* Subscription */]();
            subscription.add(scheduler.schedule(dispatch, 0, { keys: keys, index: 0, subscriber: subscriber, subscription: subscription, obj: obj }));
            return subscription;
        });
    }
}
function dispatch(state) {
    var keys = state.keys, index = state.index, subscriber = state.subscriber, subscription = state.subscription, obj = state.obj;
    if (!subscriber.closed) {
        if (index < keys.length) {
            var key = keys[index];
            subscriber.next([key, obj[key]]);
            subscription.add(this.schedule({ keys: keys, index: index + 1, subscriber: subscriber, subscription: subscription, obj: obj }));
        }
        else {
            subscriber.complete();
        }
    }
}
//# sourceMappingURL=pairs.js.map


/***/ }),
/* 285 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = partition;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_not__ = __webpack_require__(217);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_subscribeTo__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__operators_filter__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Observable__ = __webpack_require__(3);
/** PURE_IMPORTS_START _util_not,_util_subscribeTo,_operators_filter,_Observable PURE_IMPORTS_END */




function partition(source, predicate, thisArg) {
    return [
        Object(__WEBPACK_IMPORTED_MODULE_2__operators_filter__["a" /* filter */])(predicate, thisArg)(new __WEBPACK_IMPORTED_MODULE_3__Observable__["a" /* Observable */](Object(__WEBPACK_IMPORTED_MODULE_1__util_subscribeTo__["a" /* subscribeTo */])(source))),
        Object(__WEBPACK_IMPORTED_MODULE_2__operators_filter__["a" /* filter */])(Object(__WEBPACK_IMPORTED_MODULE_0__util_not__["a" /* not */])(predicate, thisArg))(new __WEBPACK_IMPORTED_MODULE_3__Observable__["a" /* Observable */](Object(__WEBPACK_IMPORTED_MODULE_1__util_subscribeTo__["a" /* subscribeTo */])(source)))
    ];
}
//# sourceMappingURL=partition.js.map


/***/ }),
/* 286 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = range;
/* unused harmony export dispatch */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

function range(start, count, scheduler) {
    if (start === void 0) {
        start = 0;
    }
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        if (count === undefined) {
            count = start;
            start = 0;
        }
        var index = 0;
        var current = start;
        if (scheduler) {
            return scheduler.schedule(dispatch, 0, {
                index: index, count: count, start: start, subscriber: subscriber
            });
        }
        else {
            do {
                if (index++ >= count) {
                    subscriber.complete();
                    break;
                }
                subscriber.next(current++);
                if (subscriber.closed) {
                    break;
                }
            } while (true);
        }
        return undefined;
    });
}
function dispatch(state) {
    var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;
    if (index >= count) {
        subscriber.complete();
        return;
    }
    subscriber.next(start);
    if (subscriber.closed) {
        return;
    }
    state.index = index + 1;
    state.start = start + 1;
    this.schedule(state);
}
//# sourceMappingURL=range.js.map


/***/ }),
/* 287 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = using;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__from__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__empty__ = __webpack_require__(14);
/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */



function using(resourceFactory, observableFactory) {
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var resource;
        try {
            resource = resourceFactory();
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        var result;
        try {
            result = observableFactory(resource);
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        var source = result ? Object(__WEBPACK_IMPORTED_MODULE_1__from__["a" /* from */])(result) : __WEBPACK_IMPORTED_MODULE_2__empty__["a" /* EMPTY */];
        var subscription = source.subscribe(subscriber);
        return function () {
            subscription.unsubscribe();
            if (resource) {
                resource.unsubscribe();
            }
        };
    });
}
//# sourceMappingURL=using.js.map


/***/ }),
/* 288 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = auditTime;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scheduler_async__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__audit__ = __webpack_require__(220);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__observable_timer__ = __webpack_require__(219);
/** PURE_IMPORTS_START _scheduler_async,_audit,_observable_timer PURE_IMPORTS_END */



function auditTime(duration, scheduler) {
    if (scheduler === void 0) {
        scheduler = __WEBPACK_IMPORTED_MODULE_0__scheduler_async__["a" /* async */];
    }
    return Object(__WEBPACK_IMPORTED_MODULE_1__audit__["a" /* audit */])(function () { return Object(__WEBPACK_IMPORTED_MODULE_2__observable_timer__["a" /* timer */])(duration, scheduler); });
}
//# sourceMappingURL=auditTime.js.map


/***/ }),
/* 289 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = buffer;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function buffer(closingNotifier) {
    return function bufferOperatorFunction(source) {
        return source.lift(new BufferOperator(closingNotifier));
    };
}
var BufferOperator = /*@__PURE__*/ (function () {
    function BufferOperator(closingNotifier) {
        this.closingNotifier = closingNotifier;
    }
    BufferOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));
    };
    return BufferOperator;
}());
var BufferSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](BufferSubscriber, _super);
    function BufferSubscriber(destination, closingNotifier) {
        var _this = _super.call(this, destination) || this;
        _this.buffer = [];
        _this.add(Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(_this, closingNotifier));
        return _this;
    }
    BufferSubscriber.prototype._next = function (value) {
        this.buffer.push(value);
    };
    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var buffer = this.buffer;
        this.buffer = [];
        this.destination.next(buffer);
    };
    return BufferSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=buffer.js.map


/***/ }),
/* 290 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = bufferCount;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function bufferCount(bufferSize, startBufferEvery) {
    if (startBufferEvery === void 0) {
        startBufferEvery = null;
    }
    return function bufferCountOperatorFunction(source) {
        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));
    };
}
var BufferCountOperator = /*@__PURE__*/ (function () {
    function BufferCountOperator(bufferSize, startBufferEvery) {
        this.bufferSize = bufferSize;
        this.startBufferEvery = startBufferEvery;
        if (!startBufferEvery || bufferSize === startBufferEvery) {
            this.subscriberClass = BufferCountSubscriber;
        }
        else {
            this.subscriberClass = BufferSkipCountSubscriber;
        }
    }
    BufferCountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));
    };
    return BufferCountOperator;
}());
var BufferCountSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](BufferCountSubscriber, _super);
    function BufferCountSubscriber(destination, bufferSize) {
        var _this = _super.call(this, destination) || this;
        _this.bufferSize = bufferSize;
        _this.buffer = [];
        return _this;
    }
    BufferCountSubscriber.prototype._next = function (value) {
        var buffer = this.buffer;
        buffer.push(value);
        if (buffer.length == this.bufferSize) {
            this.destination.next(buffer);
            this.buffer = [];
        }
    };
    BufferCountSubscriber.prototype._complete = function () {
        var buffer = this.buffer;
        if (buffer.length > 0) {
            this.destination.next(buffer);
        }
        _super.prototype._complete.call(this);
    };
    return BufferCountSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
var BufferSkipCountSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](BufferSkipCountSubscriber, _super);
    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {
        var _this = _super.call(this, destination) || this;
        _this.bufferSize = bufferSize;
        _this.startBufferEvery = startBufferEvery;
        _this.buffers = [];
        _this.count = 0;
        return _this;
    }
    BufferSkipCountSubscriber.prototype._next = function (value) {
        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;
        this.count++;
        if (count % startBufferEvery === 0) {
            buffers.push([]);
        }
        for (var i = buffers.length; i--;) {
            var buffer = buffers[i];
            buffer.push(value);
            if (buffer.length === bufferSize) {
                buffers.splice(i, 1);
                this.destination.next(buffer);
            }
        }
    };
    BufferSkipCountSubscriber.prototype._complete = function () {
        var _a = this, buffers = _a.buffers, destination = _a.destination;
        while (buffers.length > 0) {
            var buffer = buffers.shift();
            if (buffer.length > 0) {
                destination.next(buffer);
            }
        }
        _super.prototype._complete.call(this);
    };
    return BufferSkipCountSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=bufferCount.js.map


/***/ }),
/* 291 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = bufferTime;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__scheduler_async__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_isScheduler__ = __webpack_require__(15);
/** PURE_IMPORTS_START tslib,_scheduler_async,_Subscriber,_util_isScheduler PURE_IMPORTS_END */




function bufferTime(bufferTimeSpan) {
    var length = arguments.length;
    var scheduler = __WEBPACK_IMPORTED_MODULE_1__scheduler_async__["a" /* async */];
    if (Object(__WEBPACK_IMPORTED_MODULE_3__util_isScheduler__["a" /* isScheduler */])(arguments[arguments.length - 1])) {
        scheduler = arguments[arguments.length - 1];
        length--;
    }
    var bufferCreationInterval = null;
    if (length >= 2) {
        bufferCreationInterval = arguments[1];
    }
    var maxBufferSize = Number.POSITIVE_INFINITY;
    if (length >= 3) {
        maxBufferSize = arguments[2];
    }
    return function bufferTimeOperatorFunction(source) {
        return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));
    };
}
var BufferTimeOperator = /*@__PURE__*/ (function () {
    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
        this.bufferTimeSpan = bufferTimeSpan;
        this.bufferCreationInterval = bufferCreationInterval;
        this.maxBufferSize = maxBufferSize;
        this.scheduler = scheduler;
    }
    BufferTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));
    };
    return BufferTimeOperator;
}());
var Context = /*@__PURE__*/ (function () {
    function Context() {
        this.buffer = [];
    }
    return Context;
}());
var BufferTimeSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](BufferTimeSubscriber, _super);
    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.bufferTimeSpan = bufferTimeSpan;
        _this.bufferCreationInterval = bufferCreationInterval;
        _this.maxBufferSize = maxBufferSize;
        _this.scheduler = scheduler;
        _this.contexts = [];
        var context = _this.openContext();
        _this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;
        if (_this.timespanOnly) {
            var timeSpanOnlyState = { subscriber: _this, context: context, bufferTimeSpan: bufferTimeSpan };
            _this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
        }
        else {
            var closeState = { subscriber: _this, context: context };
            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: _this, scheduler: scheduler };
            _this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));
            _this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));
        }
        return _this;
    }
    BufferTimeSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        var len = contexts.length;
        var filledBufferContext;
        for (var i = 0; i < len; i++) {
            var context_1 = contexts[i];
            var buffer = context_1.buffer;
            buffer.push(value);
            if (buffer.length == this.maxBufferSize) {
                filledBufferContext = context_1;
            }
        }
        if (filledBufferContext) {
            this.onBufferFull(filledBufferContext);
        }
    };
    BufferTimeSubscriber.prototype._error = function (err) {
        this.contexts.length = 0;
        _super.prototype._error.call(this, err);
    };
    BufferTimeSubscriber.prototype._complete = function () {
        var _a = this, contexts = _a.contexts, destination = _a.destination;
        while (contexts.length > 0) {
            var context_2 = contexts.shift();
            destination.next(context_2.buffer);
        }
        _super.prototype._complete.call(this);
    };
    BufferTimeSubscriber.prototype._unsubscribe = function () {
        this.contexts = null;
    };
    BufferTimeSubscriber.prototype.onBufferFull = function (context) {
        this.closeContext(context);
        var closeAction = context.closeAction;
        closeAction.unsubscribe();
        this.remove(closeAction);
        if (!this.closed && this.timespanOnly) {
            context = this.openContext();
            var bufferTimeSpan = this.bufferTimeSpan;
            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };
            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
        }
    };
    BufferTimeSubscriber.prototype.openContext = function () {
        var context = new Context();
        this.contexts.push(context);
        return context;
    };
    BufferTimeSubscriber.prototype.closeContext = function (context) {
        this.destination.next(context.buffer);
        var contexts = this.contexts;
        var spliceIndex = contexts ? contexts.indexOf(context) : -1;
        if (spliceIndex >= 0) {
            contexts.splice(contexts.indexOf(context), 1);
        }
    };
    return BufferTimeSubscriber;
}(__WEBPACK_IMPORTED_MODULE_2__Subscriber__["a" /* Subscriber */]));
function dispatchBufferTimeSpanOnly(state) {
    var subscriber = state.subscriber;
    var prevContext = state.context;
    if (prevContext) {
        subscriber.closeContext(prevContext);
    }
    if (!subscriber.closed) {
        state.context = subscriber.openContext();
        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);
    }
}
function dispatchBufferCreation(state) {
    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;
    var context = subscriber.openContext();
    var action = this;
    if (!subscriber.closed) {
        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));
        action.schedule(state, bufferCreationInterval);
    }
}
function dispatchBufferClose(arg) {
    var subscriber = arg.subscriber, context = arg.context;
    subscriber.closeContext(context);
}
//# sourceMappingURL=bufferTime.js.map


/***/ }),
/* 292 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = bufferToggle;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscription__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscription,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */




function bufferToggle(openings, closingSelector) {
    return function bufferToggleOperatorFunction(source) {
        return source.lift(new BufferToggleOperator(openings, closingSelector));
    };
}
var BufferToggleOperator = /*@__PURE__*/ (function () {
    function BufferToggleOperator(openings, closingSelector) {
        this.openings = openings;
        this.closingSelector = closingSelector;
    }
    BufferToggleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));
    };
    return BufferToggleOperator;
}());
var BufferToggleSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](BufferToggleSubscriber, _super);
    function BufferToggleSubscriber(destination, openings, closingSelector) {
        var _this = _super.call(this, destination) || this;
        _this.openings = openings;
        _this.closingSelector = closingSelector;
        _this.contexts = [];
        _this.add(Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(_this, openings));
        return _this;
    }
    BufferToggleSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        var len = contexts.length;
        for (var i = 0; i < len; i++) {
            contexts[i].buffer.push(value);
        }
    };
    BufferToggleSubscriber.prototype._error = function (err) {
        var contexts = this.contexts;
        while (contexts.length > 0) {
            var context_1 = contexts.shift();
            context_1.subscription.unsubscribe();
            context_1.buffer = null;
            context_1.subscription = null;
        }
        this.contexts = null;
        _super.prototype._error.call(this, err);
    };
    BufferToggleSubscriber.prototype._complete = function () {
        var contexts = this.contexts;
        while (contexts.length > 0) {
            var context_2 = contexts.shift();
            this.destination.next(context_2.buffer);
            context_2.subscription.unsubscribe();
            context_2.buffer = null;
            context_2.subscription = null;
        }
        this.contexts = null;
        _super.prototype._complete.call(this);
    };
    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);
    };
    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {
        this.closeBuffer(innerSub.context);
    };
    BufferToggleSubscriber.prototype.openBuffer = function (value) {
        try {
            var closingSelector = this.closingSelector;
            var closingNotifier = closingSelector.call(this, value);
            if (closingNotifier) {
                this.trySubscribe(closingNotifier);
            }
        }
        catch (err) {
            this._error(err);
        }
    };
    BufferToggleSubscriber.prototype.closeBuffer = function (context) {
        var contexts = this.contexts;
        if (contexts && context) {
            var buffer = context.buffer, subscription = context.subscription;
            this.destination.next(buffer);
            contexts.splice(contexts.indexOf(context), 1);
            this.remove(subscription);
            subscription.unsubscribe();
        }
    };
    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {
        var contexts = this.contexts;
        var buffer = [];
        var subscription = new __WEBPACK_IMPORTED_MODULE_1__Subscription__["a" /* Subscription */]();
        var context = { buffer: buffer, subscription: subscription };
        contexts.push(context);
        var innerSubscription = Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(this, closingNotifier, context);
        if (!innerSubscription || innerSubscription.closed) {
            this.closeBuffer(context);
        }
        else {
            innerSubscription.context = context;
            this.add(innerSubscription);
            subscription.add(innerSubscription);
        }
    };
    return BufferToggleSubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=bufferToggle.js.map


/***/ }),
/* 293 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = bufferWhen;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscription__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_Subscription,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function bufferWhen(closingSelector) {
    return function (source) {
        return source.lift(new BufferWhenOperator(closingSelector));
    };
}
var BufferWhenOperator = /*@__PURE__*/ (function () {
    function BufferWhenOperator(closingSelector) {
        this.closingSelector = closingSelector;
    }
    BufferWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));
    };
    return BufferWhenOperator;
}());
var BufferWhenSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](BufferWhenSubscriber, _super);
    function BufferWhenSubscriber(destination, closingSelector) {
        var _this = _super.call(this, destination) || this;
        _this.closingSelector = closingSelector;
        _this.subscribing = false;
        _this.openBuffer();
        return _this;
    }
    BufferWhenSubscriber.prototype._next = function (value) {
        this.buffer.push(value);
    };
    BufferWhenSubscriber.prototype._complete = function () {
        var buffer = this.buffer;
        if (buffer) {
            this.destination.next(buffer);
        }
        _super.prototype._complete.call(this);
    };
    BufferWhenSubscriber.prototype._unsubscribe = function () {
        this.buffer = null;
        this.subscribing = false;
    };
    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.openBuffer();
    };
    BufferWhenSubscriber.prototype.notifyComplete = function () {
        if (this.subscribing) {
            this.complete();
        }
        else {
            this.openBuffer();
        }
    };
    BufferWhenSubscriber.prototype.openBuffer = function () {
        var closingSubscription = this.closingSubscription;
        if (closingSubscription) {
            this.remove(closingSubscription);
            closingSubscription.unsubscribe();
        }
        var buffer = this.buffer;
        if (this.buffer) {
            this.destination.next(buffer);
        }
        this.buffer = [];
        var closingNotifier;
        try {
            var closingSelector = this.closingSelector;
            closingNotifier = closingSelector();
        }
        catch (err) {
            return this.error(err);
        }
        closingSubscription = new __WEBPACK_IMPORTED_MODULE_1__Subscription__["a" /* Subscription */]();
        this.closingSubscription = closingSubscription;
        this.add(closingSubscription);
        this.subscribing = true;
        closingSubscription.add(Object(__WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__["a" /* subscribeToResult */])(this, closingNotifier));
        this.subscribing = false;
    };
    return BufferWhenSubscriber;
}(__WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=bufferWhen.js.map


/***/ }),
/* 294 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = catchError;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__InnerSubscriber__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function catchError(selector) {
    return function catchErrorOperatorFunction(source) {
        var operator = new CatchOperator(selector);
        var caught = source.lift(operator);
        return (operator.caught = caught);
    };
}
var CatchOperator = /*@__PURE__*/ (function () {
    function CatchOperator(selector) {
        this.selector = selector;
    }
    CatchOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));
    };
    return CatchOperator;
}());
var CatchSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](CatchSubscriber, _super);
    function CatchSubscriber(destination, selector, caught) {
        var _this = _super.call(this, destination) || this;
        _this.selector = selector;
        _this.caught = caught;
        return _this;
    }
    CatchSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var result = void 0;
            try {
                result = this.selector(err, this.caught);
            }
            catch (err2) {
                _super.prototype.error.call(this, err2);
                return;
            }
            this._unsubscribeAndRecycle();
            var innerSubscriber = new __WEBPACK_IMPORTED_MODULE_2__InnerSubscriber__["a" /* InnerSubscriber */](this, undefined, undefined);
            this.add(innerSubscriber);
            var innerSubscription = Object(__WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__["a" /* subscribeToResult */])(this, result, undefined, undefined, innerSubscriber);
            if (innerSubscription !== innerSubscriber) {
                this.add(innerSubscription);
            }
        }
    };
    return CatchSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=catchError.js.map


/***/ }),
/* 295 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = combineAll;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_combineLatest__ = __webpack_require__(55);
/** PURE_IMPORTS_START _observable_combineLatest PURE_IMPORTS_END */

function combineAll(project) {
    return function (source) { return source.lift(new __WEBPACK_IMPORTED_MODULE_0__observable_combineLatest__["a" /* CombineLatestOperator */](project)); };
}
//# sourceMappingURL=combineAll.js.map


/***/ }),
/* 296 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = combineLatest;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_isArray__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__observable_combineLatest__ = __webpack_require__(55);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__observable_from__ = __webpack_require__(16);
/** PURE_IMPORTS_START _util_isArray,_observable_combineLatest,_observable_from PURE_IMPORTS_END */



var none = {};
function combineLatest() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var project = null;
    if (typeof observables[observables.length - 1] === 'function') {
        project = observables.pop();
    }
    if (observables.length === 1 && Object(__WEBPACK_IMPORTED_MODULE_0__util_isArray__["a" /* isArray */])(observables[0])) {
        observables = observables[0].slice();
    }
    return function (source) { return source.lift.call(Object(__WEBPACK_IMPORTED_MODULE_2__observable_from__["a" /* from */])([source].concat(observables)), new __WEBPACK_IMPORTED_MODULE_1__observable_combineLatest__["a" /* CombineLatestOperator */](project)); };
}
//# sourceMappingURL=combineLatest.js.map


/***/ }),
/* 297 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = concat;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_concat__ = __webpack_require__(38);
/** PURE_IMPORTS_START _observable_concat PURE_IMPORTS_END */

function concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return function (source) { return source.lift.call(__WEBPACK_IMPORTED_MODULE_0__observable_concat__["a" /* concat */].apply(void 0, [source].concat(observables))); };
}
//# sourceMappingURL=concat.js.map


/***/ }),
/* 298 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = concatMapTo;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__concatMap__ = __webpack_require__(221);
/** PURE_IMPORTS_START _concatMap PURE_IMPORTS_END */

function concatMapTo(innerObservable, resultSelector) {
    return Object(__WEBPACK_IMPORTED_MODULE_0__concatMap__["a" /* concatMap */])(function () { return innerObservable; }, resultSelector);
}
//# sourceMappingURL=concatMapTo.js.map


/***/ }),
/* 299 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = count;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function count(predicate) {
    return function (source) { return source.lift(new CountOperator(predicate, source)); };
}
var CountOperator = /*@__PURE__*/ (function () {
    function CountOperator(predicate, source) {
        this.predicate = predicate;
        this.source = source;
    }
    CountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));
    };
    return CountOperator;
}());
var CountSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](CountSubscriber, _super);
    function CountSubscriber(destination, predicate, source) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.source = source;
        _this.count = 0;
        _this.index = 0;
        return _this;
    }
    CountSubscriber.prototype._next = function (value) {
        if (this.predicate) {
            this._tryPredicate(value);
        }
        else {
            this.count++;
        }
    };
    CountSubscriber.prototype._tryPredicate = function (value) {
        var result;
        try {
            result = this.predicate(value, this.index++, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this.count++;
        }
    };
    CountSubscriber.prototype._complete = function () {
        this.destination.next(this.count);
        this.destination.complete();
    };
    return CountSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=count.js.map


/***/ }),
/* 300 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = debounce;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function debounce(durationSelector) {
    return function (source) { return source.lift(new DebounceOperator(durationSelector)); };
}
var DebounceOperator = /*@__PURE__*/ (function () {
    function DebounceOperator(durationSelector) {
        this.durationSelector = durationSelector;
    }
    DebounceOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));
    };
    return DebounceOperator;
}());
var DebounceSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](DebounceSubscriber, _super);
    function DebounceSubscriber(destination, durationSelector) {
        var _this = _super.call(this, destination) || this;
        _this.durationSelector = durationSelector;
        _this.hasValue = false;
        _this.durationSubscription = null;
        return _this;
    }
    DebounceSubscriber.prototype._next = function (value) {
        try {
            var result = this.durationSelector.call(this, value);
            if (result) {
                this._tryNext(value, result);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    DebounceSubscriber.prototype._complete = function () {
        this.emitValue();
        this.destination.complete();
    };
    DebounceSubscriber.prototype._tryNext = function (value, duration) {
        var subscription = this.durationSubscription;
        this.value = value;
        this.hasValue = true;
        if (subscription) {
            subscription.unsubscribe();
            this.remove(subscription);
        }
        subscription = Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(this, duration);
        if (subscription && !subscription.closed) {
            this.add(this.durationSubscription = subscription);
        }
    };
    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.emitValue();
    };
    DebounceSubscriber.prototype.notifyComplete = function () {
        this.emitValue();
    };
    DebounceSubscriber.prototype.emitValue = function () {
        if (this.hasValue) {
            var value = this.value;
            var subscription = this.durationSubscription;
            if (subscription) {
                this.durationSubscription = null;
                subscription.unsubscribe();
                this.remove(subscription);
            }
            this.value = null;
            this.hasValue = false;
            _super.prototype._next.call(this, value);
        }
    };
    return DebounceSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=debounce.js.map


/***/ }),
/* 301 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = debounceTime;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scheduler_async__ = __webpack_require__(12);
/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */



function debounceTime(dueTime, scheduler) {
    if (scheduler === void 0) {
        scheduler = __WEBPACK_IMPORTED_MODULE_2__scheduler_async__["a" /* async */];
    }
    return function (source) { return source.lift(new DebounceTimeOperator(dueTime, scheduler)); };
}
var DebounceTimeOperator = /*@__PURE__*/ (function () {
    function DebounceTimeOperator(dueTime, scheduler) {
        this.dueTime = dueTime;
        this.scheduler = scheduler;
    }
    DebounceTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));
    };
    return DebounceTimeOperator;
}());
var DebounceTimeSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](DebounceTimeSubscriber, _super);
    function DebounceTimeSubscriber(destination, dueTime, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.dueTime = dueTime;
        _this.scheduler = scheduler;
        _this.debouncedSubscription = null;
        _this.lastValue = null;
        _this.hasValue = false;
        return _this;
    }
    DebounceTimeSubscriber.prototype._next = function (value) {
        this.clearDebounce();
        this.lastValue = value;
        this.hasValue = true;
        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));
    };
    DebounceTimeSubscriber.prototype._complete = function () {
        this.debouncedNext();
        this.destination.complete();
    };
    DebounceTimeSubscriber.prototype.debouncedNext = function () {
        this.clearDebounce();
        if (this.hasValue) {
            var lastValue = this.lastValue;
            this.lastValue = null;
            this.hasValue = false;
            this.destination.next(lastValue);
        }
    };
    DebounceTimeSubscriber.prototype.clearDebounce = function () {
        var debouncedSubscription = this.debouncedSubscription;
        if (debouncedSubscription !== null) {
            this.remove(debouncedSubscription);
            debouncedSubscription.unsubscribe();
            this.debouncedSubscription = null;
        }
    };
    return DebounceTimeSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
function dispatchNext(subscriber) {
    subscriber.debouncedNext();
}
//# sourceMappingURL=debounceTime.js.map


/***/ }),
/* 302 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = delay;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__scheduler_async__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isDate__ = __webpack_require__(222);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Notification__ = __webpack_require__(35);
/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_Subscriber,_Notification PURE_IMPORTS_END */





function delay(delay, scheduler) {
    if (scheduler === void 0) {
        scheduler = __WEBPACK_IMPORTED_MODULE_1__scheduler_async__["a" /* async */];
    }
    var absoluteDelay = Object(__WEBPACK_IMPORTED_MODULE_2__util_isDate__["a" /* isDate */])(delay);
    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);
    return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };
}
var DelayOperator = /*@__PURE__*/ (function () {
    function DelayOperator(delay, scheduler) {
        this.delay = delay;
        this.scheduler = scheduler;
    }
    DelayOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));
    };
    return DelayOperator;
}());
var DelaySubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](DelaySubscriber, _super);
    function DelaySubscriber(destination, delay, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.delay = delay;
        _this.scheduler = scheduler;
        _this.queue = [];
        _this.active = false;
        _this.errored = false;
        return _this;
    }
    DelaySubscriber.dispatch = function (state) {
        var source = state.source;
        var queue = source.queue;
        var scheduler = state.scheduler;
        var destination = state.destination;
        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {
            queue.shift().notification.observe(destination);
        }
        if (queue.length > 0) {
            var delay_1 = Math.max(0, queue[0].time - scheduler.now());
            this.schedule(state, delay_1);
        }
        else {
            this.unsubscribe();
            source.active = false;
        }
    };
    DelaySubscriber.prototype._schedule = function (scheduler) {
        this.active = true;
        var destination = this.destination;
        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {
            source: this, destination: this.destination, scheduler: scheduler
        }));
    };
    DelaySubscriber.prototype.scheduleNotification = function (notification) {
        if (this.errored === true) {
            return;
        }
        var scheduler = this.scheduler;
        var message = new DelayMessage(scheduler.now() + this.delay, notification);
        this.queue.push(message);
        if (this.active === false) {
            this._schedule(scheduler);
        }
    };
    DelaySubscriber.prototype._next = function (value) {
        this.scheduleNotification(__WEBPACK_IMPORTED_MODULE_4__Notification__["a" /* Notification */].createNext(value));
    };
    DelaySubscriber.prototype._error = function (err) {
        this.errored = true;
        this.queue = [];
        this.destination.error(err);
        this.unsubscribe();
    };
    DelaySubscriber.prototype._complete = function () {
        this.scheduleNotification(__WEBPACK_IMPORTED_MODULE_4__Notification__["a" /* Notification */].createComplete());
        this.unsubscribe();
    };
    return DelaySubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__Subscriber__["a" /* Subscriber */]));
var DelayMessage = /*@__PURE__*/ (function () {
    function DelayMessage(time, notification) {
        this.time = time;
        this.notification = notification;
    }
    return DelayMessage;
}());
//# sourceMappingURL=delay.js.map


/***/ }),
/* 303 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = delayWhen;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





function delayWhen(delayDurationSelector, subscriptionDelay) {
    if (subscriptionDelay) {
        return function (source) {
            return new SubscriptionDelayObservable(source, subscriptionDelay)
                .lift(new DelayWhenOperator(delayDurationSelector));
        };
    }
    return function (source) { return source.lift(new DelayWhenOperator(delayDurationSelector)); };
}
var DelayWhenOperator = /*@__PURE__*/ (function () {
    function DelayWhenOperator(delayDurationSelector) {
        this.delayDurationSelector = delayDurationSelector;
    }
    DelayWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));
    };
    return DelayWhenOperator;
}());
var DelayWhenSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](DelayWhenSubscriber, _super);
    function DelayWhenSubscriber(destination, delayDurationSelector) {
        var _this = _super.call(this, destination) || this;
        _this.delayDurationSelector = delayDurationSelector;
        _this.completed = false;
        _this.delayNotifierSubscriptions = [];
        _this.index = 0;
        return _this;
    }
    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(outerValue);
        this.removeSubscription(innerSub);
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {
        var value = this.removeSubscription(innerSub);
        if (value) {
            this.destination.next(value);
        }
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype._next = function (value) {
        var index = this.index++;
        try {
            var delayNotifier = this.delayDurationSelector(value, index);
            if (delayNotifier) {
                this.tryDelay(delayNotifier, value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    DelayWhenSubscriber.prototype._complete = function () {
        this.completed = true;
        this.tryComplete();
        this.unsubscribe();
    };
    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {
        subscription.unsubscribe();
        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);
        if (subscriptionIdx !== -1) {
            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);
        }
        return subscription.outerValue;
    };
    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {
        var notifierSubscription = Object(__WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__["a" /* subscribeToResult */])(this, delayNotifier, value);
        if (notifierSubscription && !notifierSubscription.closed) {
            var destination = this.destination;
            destination.add(notifierSubscription);
            this.delayNotifierSubscriptions.push(notifierSubscription);
        }
    };
    DelayWhenSubscriber.prototype.tryComplete = function () {
        if (this.completed && this.delayNotifierSubscriptions.length === 0) {
            this.destination.complete();
        }
    };
    return DelayWhenSubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__["a" /* OuterSubscriber */]));
var SubscriptionDelayObservable = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SubscriptionDelayObservable, _super);
    function SubscriptionDelayObservable(source, subscriptionDelay) {
        var _this = _super.call(this) || this;
        _this.source = source;
        _this.subscriptionDelay = subscriptionDelay;
        return _this;
    }
    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {
        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));
    };
    return SubscriptionDelayObservable;
}(__WEBPACK_IMPORTED_MODULE_2__Observable__["a" /* Observable */]));
var SubscriptionDelaySubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SubscriptionDelaySubscriber, _super);
    function SubscriptionDelaySubscriber(parent, source) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        _this.source = source;
        _this.sourceSubscribed = false;
        return _this;
    }
    SubscriptionDelaySubscriber.prototype._next = function (unused) {
        this.subscribeToSource();
    };
    SubscriptionDelaySubscriber.prototype._error = function (err) {
        this.unsubscribe();
        this.parent.error(err);
    };
    SubscriptionDelaySubscriber.prototype._complete = function () {
        this.unsubscribe();
        this.subscribeToSource();
    };
    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {
        if (!this.sourceSubscribed) {
            this.sourceSubscribed = true;
            this.unsubscribe();
            this.source.subscribe(this.parent);
        }
    };
    return SubscriptionDelaySubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=delayWhen.js.map


/***/ }),
/* 304 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = dematerialize;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function dematerialize() {
    return function dematerializeOperatorFunction(source) {
        return source.lift(new DeMaterializeOperator());
    };
}
var DeMaterializeOperator = /*@__PURE__*/ (function () {
    function DeMaterializeOperator() {
    }
    DeMaterializeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DeMaterializeSubscriber(subscriber));
    };
    return DeMaterializeOperator;
}());
var DeMaterializeSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](DeMaterializeSubscriber, _super);
    function DeMaterializeSubscriber(destination) {
        return _super.call(this, destination) || this;
    }
    DeMaterializeSubscriber.prototype._next = function (value) {
        value.observe(this.destination);
    };
    return DeMaterializeSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=dematerialize.js.map


/***/ }),
/* 305 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = distinct;
/* unused harmony export DistinctSubscriber */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function distinct(keySelector, flushes) {
    return function (source) { return source.lift(new DistinctOperator(keySelector, flushes)); };
}
var DistinctOperator = /*@__PURE__*/ (function () {
    function DistinctOperator(keySelector, flushes) {
        this.keySelector = keySelector;
        this.flushes = flushes;
    }
    DistinctOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));
    };
    return DistinctOperator;
}());
var DistinctSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](DistinctSubscriber, _super);
    function DistinctSubscriber(destination, keySelector, flushes) {
        var _this = _super.call(this, destination) || this;
        _this.keySelector = keySelector;
        _this.values = new Set();
        if (flushes) {
            _this.add(Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(_this, flushes));
        }
        return _this;
    }
    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.values.clear();
    };
    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    DistinctSubscriber.prototype._next = function (value) {
        if (this.keySelector) {
            this._useKeySelector(value);
        }
        else {
            this._finalizeNext(value, value);
        }
    };
    DistinctSubscriber.prototype._useKeySelector = function (value) {
        var key;
        var destination = this.destination;
        try {
            key = this.keySelector(value);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        this._finalizeNext(key, value);
    };
    DistinctSubscriber.prototype._finalizeNext = function (key, value) {
        var values = this.values;
        if (!values.has(key)) {
            values.add(key);
            this.destination.next(value);
        }
    };
    return DistinctSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));

//# sourceMappingURL=distinct.js.map


/***/ }),
/* 306 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = distinctUntilKeyChanged;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__distinctUntilChanged__ = __webpack_require__(223);
/** PURE_IMPORTS_START _distinctUntilChanged PURE_IMPORTS_END */

function distinctUntilKeyChanged(key, compare) {
    return Object(__WEBPACK_IMPORTED_MODULE_0__distinctUntilChanged__["a" /* distinctUntilChanged */])(function (x, y) { return compare ? compare(x[key], y[key]) : x[key] === y[key]; });
}
//# sourceMappingURL=distinctUntilKeyChanged.js.map


/***/ }),
/* 307 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = elementAt;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_ArgumentOutOfRangeError__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__filter__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__throwIfEmpty__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__defaultIfEmpty__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__take__ = __webpack_require__(60);
/** PURE_IMPORTS_START _util_ArgumentOutOfRangeError,_filter,_throwIfEmpty,_defaultIfEmpty,_take PURE_IMPORTS_END */





function elementAt(index, defaultValue) {
    if (index < 0) {
        throw new __WEBPACK_IMPORTED_MODULE_0__util_ArgumentOutOfRangeError__["a" /* ArgumentOutOfRangeError */]();
    }
    var hasDefaultValue = arguments.length >= 2;
    return function (source) {
        return source.pipe(Object(__WEBPACK_IMPORTED_MODULE_1__filter__["a" /* filter */])(function (v, i) { return i === index; }), Object(__WEBPACK_IMPORTED_MODULE_4__take__["a" /* take */])(1), hasDefaultValue
            ? Object(__WEBPACK_IMPORTED_MODULE_3__defaultIfEmpty__["a" /* defaultIfEmpty */])(defaultValue)
            : Object(__WEBPACK_IMPORTED_MODULE_2__throwIfEmpty__["a" /* throwIfEmpty */])(function () { return new __WEBPACK_IMPORTED_MODULE_0__util_ArgumentOutOfRangeError__["a" /* ArgumentOutOfRangeError */](); }));
    };
}
//# sourceMappingURL=elementAt.js.map


/***/ }),
/* 308 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = endWith;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_concat__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__observable_of__ = __webpack_require__(36);
/** PURE_IMPORTS_START _observable_concat,_observable_of PURE_IMPORTS_END */


function endWith() {
    var array = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        array[_i] = arguments[_i];
    }
    return function (source) { return Object(__WEBPACK_IMPORTED_MODULE_0__observable_concat__["a" /* concat */])(source, __WEBPACK_IMPORTED_MODULE_1__observable_of__["a" /* of */].apply(void 0, array)); };
}
//# sourceMappingURL=endWith.js.map


/***/ }),
/* 309 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = every;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function every(predicate, thisArg) {
    return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };
}
var EveryOperator = /*@__PURE__*/ (function () {
    function EveryOperator(predicate, thisArg, source) {
        this.predicate = predicate;
        this.thisArg = thisArg;
        this.source = source;
    }
    EveryOperator.prototype.call = function (observer, source) {
        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));
    };
    return EveryOperator;
}());
var EverySubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](EverySubscriber, _super);
    function EverySubscriber(destination, predicate, thisArg, source) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.thisArg = thisArg;
        _this.source = source;
        _this.index = 0;
        _this.thisArg = thisArg || _this;
        return _this;
    }
    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {
        this.destination.next(everyValueMatch);
        this.destination.complete();
    };
    EverySubscriber.prototype._next = function (value) {
        var result = false;
        try {
            result = this.predicate.call(this.thisArg, value, this.index++, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (!result) {
            this.notifyComplete(false);
        }
    };
    EverySubscriber.prototype._complete = function () {
        this.notifyComplete(true);
    };
    return EverySubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=every.js.map


/***/ }),
/* 310 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = exhaust;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function exhaust() {
    return function (source) { return source.lift(new SwitchFirstOperator()); };
}
var SwitchFirstOperator = /*@__PURE__*/ (function () {
    function SwitchFirstOperator() {
    }
    SwitchFirstOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchFirstSubscriber(subscriber));
    };
    return SwitchFirstOperator;
}());
var SwitchFirstSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SwitchFirstSubscriber, _super);
    function SwitchFirstSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.hasCompleted = false;
        _this.hasSubscription = false;
        return _this;
    }
    SwitchFirstSubscriber.prototype._next = function (value) {
        if (!this.hasSubscription) {
            this.hasSubscription = true;
            this.add(Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(this, value));
        }
    };
    SwitchFirstSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (!this.hasSubscription) {
            this.destination.complete();
        }
    };
    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {
        this.remove(innerSub);
        this.hasSubscription = false;
        if (this.hasCompleted) {
            this.destination.complete();
        }
    };
    return SwitchFirstSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=exhaust.js.map


/***/ }),
/* 311 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = exhaustMap;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__InnerSubscriber__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__map__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__observable_from__ = __webpack_require__(16);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */






function exhaustMap(project, resultSelector) {
    if (resultSelector) {
        return function (source) { return source.pipe(exhaustMap(function (a, i) { return Object(__WEBPACK_IMPORTED_MODULE_5__observable_from__["a" /* from */])(project(a, i)).pipe(Object(__WEBPACK_IMPORTED_MODULE_4__map__["a" /* map */])(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };
    }
    return function (source) {
        return source.lift(new ExhaustMapOperator(project));
    };
}
var ExhaustMapOperator = /*@__PURE__*/ (function () {
    function ExhaustMapOperator(project) {
        this.project = project;
    }
    ExhaustMapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));
    };
    return ExhaustMapOperator;
}());
var ExhaustMapSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ExhaustMapSubscriber, _super);
    function ExhaustMapSubscriber(destination, project) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.hasSubscription = false;
        _this.hasCompleted = false;
        _this.index = 0;
        return _this;
    }
    ExhaustMapSubscriber.prototype._next = function (value) {
        if (!this.hasSubscription) {
            this.tryNext(value);
        }
    };
    ExhaustMapSubscriber.prototype.tryNext = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.hasSubscription = true;
        this._innerSub(result, value, index);
    };
    ExhaustMapSubscriber.prototype._innerSub = function (result, value, index) {
        var innerSubscriber = new __WEBPACK_IMPORTED_MODULE_2__InnerSubscriber__["a" /* InnerSubscriber */](this, value, index);
        var destination = this.destination;
        destination.add(innerSubscriber);
        var innerSubscription = Object(__WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__["a" /* subscribeToResult */])(this, result, undefined, undefined, innerSubscriber);
        if (innerSubscription !== innerSubscriber) {
            destination.add(innerSubscription);
        }
    };
    ExhaustMapSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (!this.hasSubscription) {
            this.destination.complete();
        }
        this.unsubscribe();
    };
    ExhaustMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    ExhaustMapSubscriber.prototype.notifyError = function (err) {
        this.destination.error(err);
    };
    ExhaustMapSubscriber.prototype.notifyComplete = function (innerSub) {
        var destination = this.destination;
        destination.remove(innerSub);
        this.hasSubscription = false;
        if (this.hasCompleted) {
            this.destination.complete();
        }
    };
    return ExhaustMapSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=exhaustMap.js.map


/***/ }),
/* 312 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = expand;
/* unused harmony export ExpandOperator */
/* unused harmony export ExpandSubscriber */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function expand(project, concurrent, scheduler) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    if (scheduler === void 0) {
        scheduler = undefined;
    }
    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;
    return function (source) { return source.lift(new ExpandOperator(project, concurrent, scheduler)); };
}
var ExpandOperator = /*@__PURE__*/ (function () {
    function ExpandOperator(project, concurrent, scheduler) {
        this.project = project;
        this.concurrent = concurrent;
        this.scheduler = scheduler;
    }
    ExpandOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));
    };
    return ExpandOperator;
}());

var ExpandSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ExpandSubscriber, _super);
    function ExpandSubscriber(destination, project, concurrent, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.concurrent = concurrent;
        _this.scheduler = scheduler;
        _this.index = 0;
        _this.active = 0;
        _this.hasCompleted = false;
        if (concurrent < Number.POSITIVE_INFINITY) {
            _this.buffer = [];
        }
        return _this;
    }
    ExpandSubscriber.dispatch = function (arg) {
        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;
        subscriber.subscribeToProjection(result, value, index);
    };
    ExpandSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        if (destination.closed) {
            this._complete();
            return;
        }
        var index = this.index++;
        if (this.active < this.concurrent) {
            destination.next(value);
            try {
                var project = this.project;
                var result = project(value, index);
                if (!this.scheduler) {
                    this.subscribeToProjection(result, value, index);
                }
                else {
                    var state = { subscriber: this, result: result, value: value, index: index };
                    var destination_1 = this.destination;
                    destination_1.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));
                }
            }
            catch (e) {
                destination.error(e);
            }
        }
        else {
            this.buffer.push(value);
        }
    };
    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {
        this.active++;
        var destination = this.destination;
        destination.add(Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(this, result, value, index));
    };
    ExpandSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.hasCompleted && this.active === 0) {
            this.destination.complete();
        }
        this.unsubscribe();
    };
    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this._next(innerValue);
    };
    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        var destination = this.destination;
        destination.remove(innerSub);
        this.active--;
        if (buffer && buffer.length > 0) {
            this._next(buffer.shift());
        }
        if (this.hasCompleted && this.active === 0) {
            this.destination.complete();
        }
    };
    return ExpandSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));

//# sourceMappingURL=expand.js.map


/***/ }),
/* 313 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = finalize;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subscription__ = __webpack_require__(7);
/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription PURE_IMPORTS_END */



function finalize(callback) {
    return function (source) { return source.lift(new FinallyOperator(callback)); };
}
var FinallyOperator = /*@__PURE__*/ (function () {
    function FinallyOperator(callback) {
        this.callback = callback;
    }
    FinallyOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new FinallySubscriber(subscriber, this.callback));
    };
    return FinallyOperator;
}());
var FinallySubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](FinallySubscriber, _super);
    function FinallySubscriber(destination, callback) {
        var _this = _super.call(this, destination) || this;
        _this.add(new __WEBPACK_IMPORTED_MODULE_2__Subscription__["a" /* Subscription */](callback));
        return _this;
    }
    return FinallySubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=finalize.js.map


/***/ }),
/* 314 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = findIndex;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__operators_find__ = __webpack_require__(224);
/** PURE_IMPORTS_START _operators_find PURE_IMPORTS_END */

function findIndex(predicate, thisArg) {
    return function (source) { return source.lift(new __WEBPACK_IMPORTED_MODULE_0__operators_find__["a" /* FindValueOperator */](predicate, source, true, thisArg)); };
}
//# sourceMappingURL=findIndex.js.map


/***/ }),
/* 315 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = first;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_EmptyError__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__filter__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__take__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__defaultIfEmpty__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__throwIfEmpty__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_identity__ = __webpack_require__(18);
/** PURE_IMPORTS_START _util_EmptyError,_filter,_take,_defaultIfEmpty,_throwIfEmpty,_util_identity PURE_IMPORTS_END */






function first(predicate, defaultValue) {
    var hasDefaultValue = arguments.length >= 2;
    return function (source) { return source.pipe(predicate ? Object(__WEBPACK_IMPORTED_MODULE_1__filter__["a" /* filter */])(function (v, i) { return predicate(v, i, source); }) : __WEBPACK_IMPORTED_MODULE_5__util_identity__["a" /* identity */], Object(__WEBPACK_IMPORTED_MODULE_2__take__["a" /* take */])(1), hasDefaultValue ? Object(__WEBPACK_IMPORTED_MODULE_3__defaultIfEmpty__["a" /* defaultIfEmpty */])(defaultValue) : Object(__WEBPACK_IMPORTED_MODULE_4__throwIfEmpty__["a" /* throwIfEmpty */])(function () { return new __WEBPACK_IMPORTED_MODULE_0__util_EmptyError__["a" /* EmptyError */](); })); };
}
//# sourceMappingURL=first.js.map


/***/ }),
/* 316 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = ignoreElements;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function ignoreElements() {
    return function ignoreElementsOperatorFunction(source) {
        return source.lift(new IgnoreElementsOperator());
    };
}
var IgnoreElementsOperator = /*@__PURE__*/ (function () {
    function IgnoreElementsOperator() {
    }
    IgnoreElementsOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new IgnoreElementsSubscriber(subscriber));
    };
    return IgnoreElementsOperator;
}());
var IgnoreElementsSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](IgnoreElementsSubscriber, _super);
    function IgnoreElementsSubscriber() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IgnoreElementsSubscriber.prototype._next = function (unused) {
    };
    return IgnoreElementsSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=ignoreElements.js.map


/***/ }),
/* 317 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isEmpty;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function isEmpty() {
    return function (source) { return source.lift(new IsEmptyOperator()); };
}
var IsEmptyOperator = /*@__PURE__*/ (function () {
    function IsEmptyOperator() {
    }
    IsEmptyOperator.prototype.call = function (observer, source) {
        return source.subscribe(new IsEmptySubscriber(observer));
    };
    return IsEmptyOperator;
}());
var IsEmptySubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](IsEmptySubscriber, _super);
    function IsEmptySubscriber(destination) {
        return _super.call(this, destination) || this;
    }
    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {
        var destination = this.destination;
        destination.next(isEmpty);
        destination.complete();
    };
    IsEmptySubscriber.prototype._next = function (value) {
        this.notifyComplete(false);
    };
    IsEmptySubscriber.prototype._complete = function () {
        this.notifyComplete(true);
    };
    return IsEmptySubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=isEmpty.js.map


/***/ }),
/* 318 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = last;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_EmptyError__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__filter__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__takeLast__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__throwIfEmpty__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__defaultIfEmpty__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_identity__ = __webpack_require__(18);
/** PURE_IMPORTS_START _util_EmptyError,_filter,_takeLast,_throwIfEmpty,_defaultIfEmpty,_util_identity PURE_IMPORTS_END */






function last(predicate, defaultValue) {
    var hasDefaultValue = arguments.length >= 2;
    return function (source) { return source.pipe(predicate ? Object(__WEBPACK_IMPORTED_MODULE_1__filter__["a" /* filter */])(function (v, i) { return predicate(v, i, source); }) : __WEBPACK_IMPORTED_MODULE_5__util_identity__["a" /* identity */], Object(__WEBPACK_IMPORTED_MODULE_2__takeLast__["a" /* takeLast */])(1), hasDefaultValue ? Object(__WEBPACK_IMPORTED_MODULE_4__defaultIfEmpty__["a" /* defaultIfEmpty */])(defaultValue) : Object(__WEBPACK_IMPORTED_MODULE_3__throwIfEmpty__["a" /* throwIfEmpty */])(function () { return new __WEBPACK_IMPORTED_MODULE_0__util_EmptyError__["a" /* EmptyError */](); })); };
}
//# sourceMappingURL=last.js.map


/***/ }),
/* 319 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = mapTo;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function mapTo(value) {
    return function (source) { return source.lift(new MapToOperator(value)); };
}
var MapToOperator = /*@__PURE__*/ (function () {
    function MapToOperator(value) {
        this.value = value;
    }
    MapToOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MapToSubscriber(subscriber, this.value));
    };
    return MapToOperator;
}());
var MapToSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](MapToSubscriber, _super);
    function MapToSubscriber(destination, value) {
        var _this = _super.call(this, destination) || this;
        _this.value = value;
        return _this;
    }
    MapToSubscriber.prototype._next = function (x) {
        this.destination.next(this.value);
    };
    return MapToSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=mapTo.js.map


/***/ }),
/* 320 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = materialize;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Notification__ = __webpack_require__(35);
/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */



function materialize() {
    return function materializeOperatorFunction(source) {
        return source.lift(new MaterializeOperator());
    };
}
var MaterializeOperator = /*@__PURE__*/ (function () {
    function MaterializeOperator() {
    }
    MaterializeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MaterializeSubscriber(subscriber));
    };
    return MaterializeOperator;
}());
var MaterializeSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](MaterializeSubscriber, _super);
    function MaterializeSubscriber(destination) {
        return _super.call(this, destination) || this;
    }
    MaterializeSubscriber.prototype._next = function (value) {
        this.destination.next(__WEBPACK_IMPORTED_MODULE_2__Notification__["a" /* Notification */].createNext(value));
    };
    MaterializeSubscriber.prototype._error = function (err) {
        var destination = this.destination;
        destination.next(__WEBPACK_IMPORTED_MODULE_2__Notification__["a" /* Notification */].createError(err));
        destination.complete();
    };
    MaterializeSubscriber.prototype._complete = function () {
        var destination = this.destination;
        destination.next(__WEBPACK_IMPORTED_MODULE_2__Notification__["a" /* Notification */].createComplete());
        destination.complete();
    };
    return MaterializeSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=materialize.js.map


/***/ }),
/* 321 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = max;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__reduce__ = __webpack_require__(42);
/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */

function max(comparer) {
    var max = (typeof comparer === 'function')
        ? function (x, y) { return comparer(x, y) > 0 ? x : y; }
        : function (x, y) { return x > y ? x : y; };
    return Object(__WEBPACK_IMPORTED_MODULE_0__reduce__["a" /* reduce */])(max);
}
//# sourceMappingURL=max.js.map


/***/ }),
/* 322 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = merge;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_merge__ = __webpack_require__(215);
/** PURE_IMPORTS_START _observable_merge PURE_IMPORTS_END */

function merge() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return function (source) { return source.lift.call(__WEBPACK_IMPORTED_MODULE_0__observable_merge__["a" /* merge */].apply(void 0, [source].concat(observables))); };
}
//# sourceMappingURL=merge.js.map


/***/ }),
/* 323 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = mergeMapTo;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mergeMap__ = __webpack_require__(29);
/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */

function mergeMapTo(innerObservable, resultSelector, concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    if (typeof resultSelector === 'function') {
        return Object(__WEBPACK_IMPORTED_MODULE_0__mergeMap__["a" /* mergeMap */])(function () { return innerObservable; }, resultSelector, concurrent);
    }
    if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
    }
    return Object(__WEBPACK_IMPORTED_MODULE_0__mergeMap__["a" /* mergeMap */])(function () { return innerObservable; }, concurrent);
}
//# sourceMappingURL=mergeMapTo.js.map


/***/ }),
/* 324 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = mergeScan;
/* unused harmony export MergeScanOperator */
/* unused harmony export MergeScanSubscriber */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_subscribeToResult__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__InnerSubscriber__ = __webpack_require__(17);
/** PURE_IMPORTS_START tslib,_util_subscribeToResult,_OuterSubscriber,_InnerSubscriber PURE_IMPORTS_END */




function mergeScan(accumulator, seed, concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    return function (source) { return source.lift(new MergeScanOperator(accumulator, seed, concurrent)); };
}
var MergeScanOperator = /*@__PURE__*/ (function () {
    function MergeScanOperator(accumulator, seed, concurrent) {
        this.accumulator = accumulator;
        this.seed = seed;
        this.concurrent = concurrent;
    }
    MergeScanOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));
    };
    return MergeScanOperator;
}());

var MergeScanSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](MergeScanSubscriber, _super);
    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {
        var _this = _super.call(this, destination) || this;
        _this.accumulator = accumulator;
        _this.acc = acc;
        _this.concurrent = concurrent;
        _this.hasValue = false;
        _this.hasCompleted = false;
        _this.buffer = [];
        _this.active = 0;
        _this.index = 0;
        return _this;
    }
    MergeScanSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            var index = this.index++;
            var destination = this.destination;
            var ish = void 0;
            try {
                var accumulator = this.accumulator;
                ish = accumulator(this.acc, value, index);
            }
            catch (e) {
                return destination.error(e);
            }
            this.active++;
            this._innerSub(ish, value, index);
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {
        var innerSubscriber = new __WEBPACK_IMPORTED_MODULE_3__InnerSubscriber__["a" /* InnerSubscriber */](this, value, index);
        var destination = this.destination;
        destination.add(innerSubscriber);
        var innerSubscription = Object(__WEBPACK_IMPORTED_MODULE_1__util_subscribeToResult__["a" /* subscribeToResult */])(this, ish, undefined, undefined, innerSubscriber);
        if (innerSubscription !== innerSubscriber) {
            destination.add(innerSubscription);
        }
    };
    MergeScanSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            if (this.hasValue === false) {
                this.destination.next(this.acc);
            }
            this.destination.complete();
        }
        this.unsubscribe();
    };
    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var destination = this.destination;
        this.acc = innerValue;
        this.hasValue = true;
        destination.next(innerValue);
    };
    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        var destination = this.destination;
        destination.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            if (this.hasValue === false) {
                this.destination.next(this.acc);
            }
            this.destination.complete();
        }
    };
    return MergeScanSubscriber;
}(__WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__["a" /* OuterSubscriber */]));

//# sourceMappingURL=mergeScan.js.map


/***/ }),
/* 325 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = min;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__reduce__ = __webpack_require__(42);
/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */

function min(comparer) {
    var min = (typeof comparer === 'function')
        ? function (x, y) { return comparer(x, y) < 0 ? x : y; }
        : function (x, y) { return x < y ? x : y; };
    return Object(__WEBPACK_IMPORTED_MODULE_0__reduce__["a" /* reduce */])(min);
}
//# sourceMappingURL=min.js.map


/***/ }),
/* 326 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = onErrorResumeNext;
/* unused harmony export onErrorResumeNextStatic */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__observable_from__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isArray__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__InnerSubscriber__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_observable_from,_util_isArray,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult PURE_IMPORTS_END */






function onErrorResumeNext() {
    var nextSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        nextSources[_i] = arguments[_i];
    }
    if (nextSources.length === 1 && Object(__WEBPACK_IMPORTED_MODULE_2__util_isArray__["a" /* isArray */])(nextSources[0])) {
        nextSources = nextSources[0];
    }
    return function (source) { return source.lift(new OnErrorResumeNextOperator(nextSources)); };
}
function onErrorResumeNextStatic() {
    var nextSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        nextSources[_i] = arguments[_i];
    }
    var source = null;
    if (nextSources.length === 1 && Object(__WEBPACK_IMPORTED_MODULE_2__util_isArray__["a" /* isArray */])(nextSources[0])) {
        nextSources = nextSources[0];
    }
    source = nextSources.shift();
    return Object(__WEBPACK_IMPORTED_MODULE_1__observable_from__["a" /* from */])(source, null).lift(new OnErrorResumeNextOperator(nextSources));
}
var OnErrorResumeNextOperator = /*@__PURE__*/ (function () {
    function OnErrorResumeNextOperator(nextSources) {
        this.nextSources = nextSources;
    }
    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));
    };
    return OnErrorResumeNextOperator;
}());
var OnErrorResumeNextSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](OnErrorResumeNextSubscriber, _super);
    function OnErrorResumeNextSubscriber(destination, nextSources) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.nextSources = nextSources;
        return _this;
    }
    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype._error = function (err) {
        this.subscribeToNextSource();
        this.unsubscribe();
    };
    OnErrorResumeNextSubscriber.prototype._complete = function () {
        this.subscribeToNextSource();
        this.unsubscribe();
    };
    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {
        var next = this.nextSources.shift();
        if (!!next) {
            var innerSubscriber = new __WEBPACK_IMPORTED_MODULE_4__InnerSubscriber__["a" /* InnerSubscriber */](this, undefined, undefined);
            var destination = this.destination;
            destination.add(innerSubscriber);
            var innerSubscription = Object(__WEBPACK_IMPORTED_MODULE_5__util_subscribeToResult__["a" /* subscribeToResult */])(this, next, undefined, undefined, innerSubscriber);
            if (innerSubscription !== innerSubscriber) {
                destination.add(innerSubscription);
            }
        }
        else {
            this.destination.complete();
        }
    };
    return OnErrorResumeNextSubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=onErrorResumeNext.js.map


/***/ }),
/* 327 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = pairwise;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function pairwise() {
    return function (source) { return source.lift(new PairwiseOperator()); };
}
var PairwiseOperator = /*@__PURE__*/ (function () {
    function PairwiseOperator() {
    }
    PairwiseOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new PairwiseSubscriber(subscriber));
    };
    return PairwiseOperator;
}());
var PairwiseSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](PairwiseSubscriber, _super);
    function PairwiseSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.hasPrev = false;
        return _this;
    }
    PairwiseSubscriber.prototype._next = function (value) {
        var pair;
        if (this.hasPrev) {
            pair = [this.prev, value];
        }
        else {
            this.hasPrev = true;
        }
        this.prev = value;
        if (pair) {
            this.destination.next(pair);
        }
    };
    return PairwiseSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=pairwise.js.map


/***/ }),
/* 328 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = partition;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_not__ = __webpack_require__(217);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__filter__ = __webpack_require__(20);
/** PURE_IMPORTS_START _util_not,_filter PURE_IMPORTS_END */


function partition(predicate, thisArg) {
    return function (source) {
        return [
            Object(__WEBPACK_IMPORTED_MODULE_1__filter__["a" /* filter */])(predicate, thisArg)(source),
            Object(__WEBPACK_IMPORTED_MODULE_1__filter__["a" /* filter */])(Object(__WEBPACK_IMPORTED_MODULE_0__util_not__["a" /* not */])(predicate, thisArg))(source)
        ];
    };
}
//# sourceMappingURL=partition.js.map


/***/ }),
/* 329 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = pluck;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__map__ = __webpack_require__(13);
/** PURE_IMPORTS_START _map PURE_IMPORTS_END */

function pluck() {
    var properties = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        properties[_i] = arguments[_i];
    }
    var length = properties.length;
    if (length === 0) {
        throw new Error('list of properties cannot be empty.');
    }
    return function (source) { return Object(__WEBPACK_IMPORTED_MODULE_0__map__["a" /* map */])(plucker(properties, length))(source); };
}
function plucker(props, length) {
    var mapper = function (x) {
        var currentProp = x;
        for (var i = 0; i < length; i++) {
            var p = currentProp[props[i]];
            if (typeof p !== 'undefined') {
                currentProp = p;
            }
            else {
                return undefined;
            }
        }
        return currentProp;
    };
    return mapper;
}
//# sourceMappingURL=pluck.js.map


/***/ }),
/* 330 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = publish;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Subject__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__multicast__ = __webpack_require__(21);
/** PURE_IMPORTS_START _Subject,_multicast PURE_IMPORTS_END */


function publish(selector) {
    return selector ?
        Object(__WEBPACK_IMPORTED_MODULE_1__multicast__["a" /* multicast */])(function () { return new __WEBPACK_IMPORTED_MODULE_0__Subject__["a" /* Subject */](); }, selector) :
        Object(__WEBPACK_IMPORTED_MODULE_1__multicast__["a" /* multicast */])(new __WEBPACK_IMPORTED_MODULE_0__Subject__["a" /* Subject */]());
}
//# sourceMappingURL=publish.js.map


/***/ }),
/* 331 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = publishBehavior;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__BehaviorSubject__ = __webpack_require__(204);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__multicast__ = __webpack_require__(21);
/** PURE_IMPORTS_START _BehaviorSubject,_multicast PURE_IMPORTS_END */


function publishBehavior(value) {
    return function (source) { return Object(__WEBPACK_IMPORTED_MODULE_1__multicast__["a" /* multicast */])(new __WEBPACK_IMPORTED_MODULE_0__BehaviorSubject__["a" /* BehaviorSubject */](value))(source); };
}
//# sourceMappingURL=publishBehavior.js.map


/***/ }),
/* 332 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = publishLast;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__AsyncSubject__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__multicast__ = __webpack_require__(21);
/** PURE_IMPORTS_START _AsyncSubject,_multicast PURE_IMPORTS_END */


function publishLast() {
    return function (source) { return Object(__WEBPACK_IMPORTED_MODULE_1__multicast__["a" /* multicast */])(new __WEBPACK_IMPORTED_MODULE_0__AsyncSubject__["a" /* AsyncSubject */]())(source); };
}
//# sourceMappingURL=publishLast.js.map


/***/ }),
/* 333 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = publishReplay;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ReplaySubject__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__multicast__ = __webpack_require__(21);
/** PURE_IMPORTS_START _ReplaySubject,_multicast PURE_IMPORTS_END */


function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {
    if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {
        scheduler = selectorOrScheduler;
    }
    var selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;
    var subject = new __WEBPACK_IMPORTED_MODULE_0__ReplaySubject__["a" /* ReplaySubject */](bufferSize, windowTime, scheduler);
    return function (source) { return Object(__WEBPACK_IMPORTED_MODULE_1__multicast__["a" /* multicast */])(function () { return subject; }, selector)(source); };
}
//# sourceMappingURL=publishReplay.js.map


/***/ }),
/* 334 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = race;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_isArray__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__observable_race__ = __webpack_require__(218);
/** PURE_IMPORTS_START _util_isArray,_observable_race PURE_IMPORTS_END */


function race() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return function raceOperatorFunction(source) {
        if (observables.length === 1 && Object(__WEBPACK_IMPORTED_MODULE_0__util_isArray__["a" /* isArray */])(observables[0])) {
            observables = observables[0];
        }
        return source.lift.call(__WEBPACK_IMPORTED_MODULE_1__observable_race__["a" /* race */].apply(void 0, [source].concat(observables)));
    };
}
//# sourceMappingURL=race.js.map


/***/ }),
/* 335 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = repeat;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__observable_empty__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_Subscriber,_observable_empty PURE_IMPORTS_END */



function repeat(count) {
    if (count === void 0) {
        count = -1;
    }
    return function (source) {
        if (count === 0) {
            return Object(__WEBPACK_IMPORTED_MODULE_2__observable_empty__["b" /* empty */])();
        }
        else if (count < 0) {
            return source.lift(new RepeatOperator(-1, source));
        }
        else {
            return source.lift(new RepeatOperator(count - 1, source));
        }
    };
}
var RepeatOperator = /*@__PURE__*/ (function () {
    function RepeatOperator(count, source) {
        this.count = count;
        this.source = source;
    }
    RepeatOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));
    };
    return RepeatOperator;
}());
var RepeatSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](RepeatSubscriber, _super);
    function RepeatSubscriber(destination, count, source) {
        var _this = _super.call(this, destination) || this;
        _this.count = count;
        _this.source = source;
        return _this;
    }
    RepeatSubscriber.prototype.complete = function () {
        if (!this.isStopped) {
            var _a = this, source = _a.source, count = _a.count;
            if (count === 0) {
                return _super.prototype.complete.call(this);
            }
            else if (count > -1) {
                this.count = count - 1;
            }
            source.subscribe(this._unsubscribeAndRecycle());
        }
    };
    return RepeatSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=repeat.js.map


/***/ }),
/* 336 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = repeatWhen;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subject__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function repeatWhen(notifier) {
    return function (source) { return source.lift(new RepeatWhenOperator(notifier)); };
}
var RepeatWhenOperator = /*@__PURE__*/ (function () {
    function RepeatWhenOperator(notifier) {
        this.notifier = notifier;
    }
    RepeatWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));
    };
    return RepeatWhenOperator;
}());
var RepeatWhenSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](RepeatWhenSubscriber, _super);
    function RepeatWhenSubscriber(destination, notifier, source) {
        var _this = _super.call(this, destination) || this;
        _this.notifier = notifier;
        _this.source = source;
        _this.sourceIsBeingSubscribedTo = true;
        return _this;
    }
    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.sourceIsBeingSubscribedTo = true;
        this.source.subscribe(this);
    };
    RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {
        if (this.sourceIsBeingSubscribedTo === false) {
            return _super.prototype.complete.call(this);
        }
    };
    RepeatWhenSubscriber.prototype.complete = function () {
        this.sourceIsBeingSubscribedTo = false;
        if (!this.isStopped) {
            if (!this.retries) {
                this.subscribeToRetries();
            }
            if (!this.retriesSubscription || this.retriesSubscription.closed) {
                return _super.prototype.complete.call(this);
            }
            this._unsubscribeAndRecycle();
            this.notifications.next();
        }
    };
    RepeatWhenSubscriber.prototype._unsubscribe = function () {
        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;
        if (notifications) {
            notifications.unsubscribe();
            this.notifications = null;
        }
        if (retriesSubscription) {
            retriesSubscription.unsubscribe();
            this.retriesSubscription = null;
        }
        this.retries = null;
    };
    RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {
        var _unsubscribe = this._unsubscribe;
        this._unsubscribe = null;
        _super.prototype._unsubscribeAndRecycle.call(this);
        this._unsubscribe = _unsubscribe;
        return this;
    };
    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {
        this.notifications = new __WEBPACK_IMPORTED_MODULE_1__Subject__["a" /* Subject */]();
        var retries;
        try {
            var notifier = this.notifier;
            retries = notifier(this.notifications);
        }
        catch (e) {
            return _super.prototype.complete.call(this);
        }
        this.retries = retries;
        this.retriesSubscription = Object(__WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__["a" /* subscribeToResult */])(this, retries);
    };
    return RepeatWhenSubscriber;
}(__WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=repeatWhen.js.map


/***/ }),
/* 337 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = retry;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function retry(count) {
    if (count === void 0) {
        count = -1;
    }
    return function (source) { return source.lift(new RetryOperator(count, source)); };
}
var RetryOperator = /*@__PURE__*/ (function () {
    function RetryOperator(count, source) {
        this.count = count;
        this.source = source;
    }
    RetryOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));
    };
    return RetryOperator;
}());
var RetrySubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](RetrySubscriber, _super);
    function RetrySubscriber(destination, count, source) {
        var _this = _super.call(this, destination) || this;
        _this.count = count;
        _this.source = source;
        return _this;
    }
    RetrySubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _a = this, source = _a.source, count = _a.count;
            if (count === 0) {
                return _super.prototype.error.call(this, err);
            }
            else if (count > -1) {
                this.count = count - 1;
            }
            source.subscribe(this._unsubscribeAndRecycle());
        }
    };
    return RetrySubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=retry.js.map


/***/ }),
/* 338 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = retryWhen;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subject__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function retryWhen(notifier) {
    return function (source) { return source.lift(new RetryWhenOperator(notifier, source)); };
}
var RetryWhenOperator = /*@__PURE__*/ (function () {
    function RetryWhenOperator(notifier, source) {
        this.notifier = notifier;
        this.source = source;
    }
    RetryWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));
    };
    return RetryWhenOperator;
}());
var RetryWhenSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](RetryWhenSubscriber, _super);
    function RetryWhenSubscriber(destination, notifier, source) {
        var _this = _super.call(this, destination) || this;
        _this.notifier = notifier;
        _this.source = source;
        return _this;
    }
    RetryWhenSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var errors = this.errors;
            var retries = this.retries;
            var retriesSubscription = this.retriesSubscription;
            if (!retries) {
                errors = new __WEBPACK_IMPORTED_MODULE_1__Subject__["a" /* Subject */]();
                try {
                    var notifier = this.notifier;
                    retries = notifier(errors);
                }
                catch (e) {
                    return _super.prototype.error.call(this, e);
                }
                retriesSubscription = Object(__WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__["a" /* subscribeToResult */])(this, retries);
            }
            else {
                this.errors = null;
                this.retriesSubscription = null;
            }
            this._unsubscribeAndRecycle();
            this.errors = errors;
            this.retries = retries;
            this.retriesSubscription = retriesSubscription;
            errors.next(err);
        }
    };
    RetryWhenSubscriber.prototype._unsubscribe = function () {
        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;
        if (errors) {
            errors.unsubscribe();
            this.errors = null;
        }
        if (retriesSubscription) {
            retriesSubscription.unsubscribe();
            this.retriesSubscription = null;
        }
        this.retries = null;
    };
    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var _unsubscribe = this._unsubscribe;
        this._unsubscribe = null;
        this._unsubscribeAndRecycle();
        this._unsubscribe = _unsubscribe;
        this.source.subscribe(this);
    };
    return RetryWhenSubscriber;
}(__WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=retryWhen.js.map


/***/ }),
/* 339 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = sample;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function sample(notifier) {
    return function (source) { return source.lift(new SampleOperator(notifier)); };
}
var SampleOperator = /*@__PURE__*/ (function () {
    function SampleOperator(notifier) {
        this.notifier = notifier;
    }
    SampleOperator.prototype.call = function (subscriber, source) {
        var sampleSubscriber = new SampleSubscriber(subscriber);
        var subscription = source.subscribe(sampleSubscriber);
        subscription.add(Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(sampleSubscriber, this.notifier));
        return subscription;
    };
    return SampleOperator;
}());
var SampleSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SampleSubscriber, _super);
    function SampleSubscriber() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.hasValue = false;
        return _this;
    }
    SampleSubscriber.prototype._next = function (value) {
        this.value = value;
        this.hasValue = true;
    };
    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.emitValue();
    };
    SampleSubscriber.prototype.notifyComplete = function () {
        this.emitValue();
    };
    SampleSubscriber.prototype.emitValue = function () {
        if (this.hasValue) {
            this.hasValue = false;
            this.destination.next(this.value);
        }
    };
    return SampleSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=sample.js.map


/***/ }),
/* 340 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = sampleTime;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scheduler_async__ = __webpack_require__(12);
/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */



function sampleTime(period, scheduler) {
    if (scheduler === void 0) {
        scheduler = __WEBPACK_IMPORTED_MODULE_2__scheduler_async__["a" /* async */];
    }
    return function (source) { return source.lift(new SampleTimeOperator(period, scheduler)); };
}
var SampleTimeOperator = /*@__PURE__*/ (function () {
    function SampleTimeOperator(period, scheduler) {
        this.period = period;
        this.scheduler = scheduler;
    }
    SampleTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));
    };
    return SampleTimeOperator;
}());
var SampleTimeSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SampleTimeSubscriber, _super);
    function SampleTimeSubscriber(destination, period, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.period = period;
        _this.scheduler = scheduler;
        _this.hasValue = false;
        _this.add(scheduler.schedule(dispatchNotification, period, { subscriber: _this, period: period }));
        return _this;
    }
    SampleTimeSubscriber.prototype._next = function (value) {
        this.lastValue = value;
        this.hasValue = true;
    };
    SampleTimeSubscriber.prototype.notifyNext = function () {
        if (this.hasValue) {
            this.hasValue = false;
            this.destination.next(this.lastValue);
        }
    };
    return SampleTimeSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
function dispatchNotification(state) {
    var subscriber = state.subscriber, period = state.period;
    subscriber.notifyNext();
    this.schedule(state, period);
}
//# sourceMappingURL=sampleTime.js.map


/***/ }),
/* 341 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = sequenceEqual;
/* unused harmony export SequenceEqualOperator */
/* unused harmony export SequenceEqualSubscriber */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function sequenceEqual(compareTo, comparator) {
    return function (source) { return source.lift(new SequenceEqualOperator(compareTo, comparator)); };
}
var SequenceEqualOperator = /*@__PURE__*/ (function () {
    function SequenceEqualOperator(compareTo, comparator) {
        this.compareTo = compareTo;
        this.comparator = comparator;
    }
    SequenceEqualOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));
    };
    return SequenceEqualOperator;
}());

var SequenceEqualSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SequenceEqualSubscriber, _super);
    function SequenceEqualSubscriber(destination, compareTo, comparator) {
        var _this = _super.call(this, destination) || this;
        _this.compareTo = compareTo;
        _this.comparator = comparator;
        _this._a = [];
        _this._b = [];
        _this._oneComplete = false;
        _this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));
        return _this;
    }
    SequenceEqualSubscriber.prototype._next = function (value) {
        if (this._oneComplete && this._b.length === 0) {
            this.emit(false);
        }
        else {
            this._a.push(value);
            this.checkValues();
        }
    };
    SequenceEqualSubscriber.prototype._complete = function () {
        if (this._oneComplete) {
            this.emit(this._a.length === 0 && this._b.length === 0);
        }
        else {
            this._oneComplete = true;
        }
        this.unsubscribe();
    };
    SequenceEqualSubscriber.prototype.checkValues = function () {
        var _c = this, _a = _c._a, _b = _c._b, comparator = _c.comparator;
        while (_a.length > 0 && _b.length > 0) {
            var a = _a.shift();
            var b = _b.shift();
            var areEqual = false;
            try {
                areEqual = comparator ? comparator(a, b) : a === b;
            }
            catch (e) {
                this.destination.error(e);
            }
            if (!areEqual) {
                this.emit(false);
            }
        }
    };
    SequenceEqualSubscriber.prototype.emit = function (value) {
        var destination = this.destination;
        destination.next(value);
        destination.complete();
    };
    SequenceEqualSubscriber.prototype.nextB = function (value) {
        if (this._oneComplete && this._a.length === 0) {
            this.emit(false);
        }
        else {
            this._b.push(value);
            this.checkValues();
        }
    };
    SequenceEqualSubscriber.prototype.completeB = function () {
        if (this._oneComplete) {
            this.emit(this._a.length === 0 && this._b.length === 0);
        }
        else {
            this._oneComplete = true;
        }
    };
    return SequenceEqualSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));

var SequenceEqualCompareToSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SequenceEqualCompareToSubscriber, _super);
    function SequenceEqualCompareToSubscriber(destination, parent) {
        var _this = _super.call(this, destination) || this;
        _this.parent = parent;
        return _this;
    }
    SequenceEqualCompareToSubscriber.prototype._next = function (value) {
        this.parent.nextB(value);
    };
    SequenceEqualCompareToSubscriber.prototype._error = function (err) {
        this.parent.error(err);
        this.unsubscribe();
    };
    SequenceEqualCompareToSubscriber.prototype._complete = function () {
        this.parent.completeB();
        this.unsubscribe();
    };
    return SequenceEqualCompareToSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=sequenceEqual.js.map


/***/ }),
/* 342 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = share;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__multicast__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__refCount__ = __webpack_require__(50);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subject__ = __webpack_require__(10);
/** PURE_IMPORTS_START _multicast,_refCount,_Subject PURE_IMPORTS_END */



function shareSubjectFactory() {
    return new __WEBPACK_IMPORTED_MODULE_2__Subject__["a" /* Subject */]();
}
function share() {
    return function (source) { return Object(__WEBPACK_IMPORTED_MODULE_1__refCount__["a" /* refCount */])()(Object(__WEBPACK_IMPORTED_MODULE_0__multicast__["a" /* multicast */])(shareSubjectFactory)(source)); };
}
//# sourceMappingURL=share.js.map


/***/ }),
/* 343 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = shareReplay;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ReplaySubject__ = __webpack_require__(51);
/** PURE_IMPORTS_START _ReplaySubject PURE_IMPORTS_END */

function shareReplay(configOrBufferSize, windowTime, scheduler) {
    var config;
    if (configOrBufferSize && typeof configOrBufferSize === 'object') {
        config = configOrBufferSize;
    }
    else {
        config = {
            bufferSize: configOrBufferSize,
            windowTime: windowTime,
            refCount: false,
            scheduler: scheduler
        };
    }
    return function (source) { return source.lift(shareReplayOperator(config)); };
}
function shareReplayOperator(_a) {
    var _b = _a.bufferSize, bufferSize = _b === void 0 ? Number.POSITIVE_INFINITY : _b, _c = _a.windowTime, windowTime = _c === void 0 ? Number.POSITIVE_INFINITY : _c, useRefCount = _a.refCount, scheduler = _a.scheduler;
    var subject;
    var refCount = 0;
    var subscription;
    var hasError = false;
    var isComplete = false;
    return function shareReplayOperation(source) {
        refCount++;
        if (!subject || hasError) {
            hasError = false;
            subject = new __WEBPACK_IMPORTED_MODULE_0__ReplaySubject__["a" /* ReplaySubject */](bufferSize, windowTime, scheduler);
            subscription = source.subscribe({
                next: function (value) { subject.next(value); },
                error: function (err) {
                    hasError = true;
                    subject.error(err);
                },
                complete: function () {
                    isComplete = true;
                    subscription = undefined;
                    subject.complete();
                },
            });
        }
        var innerSub = subject.subscribe(this);
        this.add(function () {
            refCount--;
            innerSub.unsubscribe();
            if (subscription && !isComplete && useRefCount && refCount === 0) {
                subscription.unsubscribe();
                subscription = undefined;
                subject = undefined;
            }
        });
    };
}
//# sourceMappingURL=shareReplay.js.map


/***/ }),
/* 344 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = single;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_EmptyError__ = __webpack_require__(27);
/** PURE_IMPORTS_START tslib,_Subscriber,_util_EmptyError PURE_IMPORTS_END */



function single(predicate) {
    return function (source) { return source.lift(new SingleOperator(predicate, source)); };
}
var SingleOperator = /*@__PURE__*/ (function () {
    function SingleOperator(predicate, source) {
        this.predicate = predicate;
        this.source = source;
    }
    SingleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));
    };
    return SingleOperator;
}());
var SingleSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SingleSubscriber, _super);
    function SingleSubscriber(destination, predicate, source) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.source = source;
        _this.seenValue = false;
        _this.index = 0;
        return _this;
    }
    SingleSubscriber.prototype.applySingleValue = function (value) {
        if (this.seenValue) {
            this.destination.error('Sequence contains more than one element');
        }
        else {
            this.seenValue = true;
            this.singleValue = value;
        }
    };
    SingleSubscriber.prototype._next = function (value) {
        var index = this.index++;
        if (this.predicate) {
            this.tryNext(value, index);
        }
        else {
            this.applySingleValue(value);
        }
    };
    SingleSubscriber.prototype.tryNext = function (value, index) {
        try {
            if (this.predicate(value, index, this.source)) {
                this.applySingleValue(value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    SingleSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (this.index > 0) {
            destination.next(this.seenValue ? this.singleValue : undefined);
            destination.complete();
        }
        else {
            destination.error(new __WEBPACK_IMPORTED_MODULE_2__util_EmptyError__["a" /* EmptyError */]);
        }
    };
    return SingleSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=single.js.map


/***/ }),
/* 345 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = skip;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function skip(count) {
    return function (source) { return source.lift(new SkipOperator(count)); };
}
var SkipOperator = /*@__PURE__*/ (function () {
    function SkipOperator(total) {
        this.total = total;
    }
    SkipOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SkipSubscriber(subscriber, this.total));
    };
    return SkipOperator;
}());
var SkipSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SkipSubscriber, _super);
    function SkipSubscriber(destination, total) {
        var _this = _super.call(this, destination) || this;
        _this.total = total;
        _this.count = 0;
        return _this;
    }
    SkipSubscriber.prototype._next = function (x) {
        if (++this.count > this.total) {
            this.destination.next(x);
        }
    };
    return SkipSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=skip.js.map


/***/ }),
/* 346 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = skipLast;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_ArgumentOutOfRangeError__ = __webpack_require__(26);
/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError PURE_IMPORTS_END */



function skipLast(count) {
    return function (source) { return source.lift(new SkipLastOperator(count)); };
}
var SkipLastOperator = /*@__PURE__*/ (function () {
    function SkipLastOperator(_skipCount) {
        this._skipCount = _skipCount;
        if (this._skipCount < 0) {
            throw new __WEBPACK_IMPORTED_MODULE_2__util_ArgumentOutOfRangeError__["a" /* ArgumentOutOfRangeError */];
        }
    }
    SkipLastOperator.prototype.call = function (subscriber, source) {
        if (this._skipCount === 0) {
            return source.subscribe(new __WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */](subscriber));
        }
        else {
            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));
        }
    };
    return SkipLastOperator;
}());
var SkipLastSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SkipLastSubscriber, _super);
    function SkipLastSubscriber(destination, _skipCount) {
        var _this = _super.call(this, destination) || this;
        _this._skipCount = _skipCount;
        _this._count = 0;
        _this._ring = new Array(_skipCount);
        return _this;
    }
    SkipLastSubscriber.prototype._next = function (value) {
        var skipCount = this._skipCount;
        var count = this._count++;
        if (count < skipCount) {
            this._ring[count] = value;
        }
        else {
            var currentIndex = count % skipCount;
            var ring = this._ring;
            var oldValue = ring[currentIndex];
            ring[currentIndex] = value;
            this.destination.next(oldValue);
        }
    };
    return SkipLastSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=skipLast.js.map


/***/ }),
/* 347 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = skipUntil;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__InnerSubscriber__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function skipUntil(notifier) {
    return function (source) { return source.lift(new SkipUntilOperator(notifier)); };
}
var SkipUntilOperator = /*@__PURE__*/ (function () {
    function SkipUntilOperator(notifier) {
        this.notifier = notifier;
    }
    SkipUntilOperator.prototype.call = function (destination, source) {
        return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));
    };
    return SkipUntilOperator;
}());
var SkipUntilSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SkipUntilSubscriber, _super);
    function SkipUntilSubscriber(destination, notifier) {
        var _this = _super.call(this, destination) || this;
        _this.hasValue = false;
        var innerSubscriber = new __WEBPACK_IMPORTED_MODULE_2__InnerSubscriber__["a" /* InnerSubscriber */](_this, undefined, undefined);
        _this.add(innerSubscriber);
        _this.innerSubscription = innerSubscriber;
        var innerSubscription = Object(__WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__["a" /* subscribeToResult */])(_this, notifier, undefined, undefined, innerSubscriber);
        if (innerSubscription !== innerSubscriber) {
            _this.add(innerSubscription);
            _this.innerSubscription = innerSubscription;
        }
        return _this;
    }
    SkipUntilSubscriber.prototype._next = function (value) {
        if (this.hasValue) {
            _super.prototype._next.call(this, value);
        }
    };
    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.hasValue = true;
        if (this.innerSubscription) {
            this.innerSubscription.unsubscribe();
        }
    };
    SkipUntilSubscriber.prototype.notifyComplete = function () {
    };
    return SkipUntilSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=skipUntil.js.map


/***/ }),
/* 348 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = skipWhile;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function skipWhile(predicate) {
    return function (source) { return source.lift(new SkipWhileOperator(predicate)); };
}
var SkipWhileOperator = /*@__PURE__*/ (function () {
    function SkipWhileOperator(predicate) {
        this.predicate = predicate;
    }
    SkipWhileOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));
    };
    return SkipWhileOperator;
}());
var SkipWhileSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SkipWhileSubscriber, _super);
    function SkipWhileSubscriber(destination, predicate) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.skipping = true;
        _this.index = 0;
        return _this;
    }
    SkipWhileSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        if (this.skipping) {
            this.tryCallPredicate(value);
        }
        if (!this.skipping) {
            destination.next(value);
        }
    };
    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {
        try {
            var result = this.predicate(value, this.index++);
            this.skipping = Boolean(result);
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    return SkipWhileSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=skipWhile.js.map


/***/ }),
/* 349 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = startWith;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_concat__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_isScheduler__ = __webpack_require__(15);
/** PURE_IMPORTS_START _observable_concat,_util_isScheduler PURE_IMPORTS_END */


function startWith() {
    var array = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        array[_i] = arguments[_i];
    }
    var scheduler = array[array.length - 1];
    if (Object(__WEBPACK_IMPORTED_MODULE_1__util_isScheduler__["a" /* isScheduler */])(scheduler)) {
        array.pop();
        return function (source) { return Object(__WEBPACK_IMPORTED_MODULE_0__observable_concat__["a" /* concat */])(array, source, scheduler); };
    }
    else {
        return function (source) { return Object(__WEBPACK_IMPORTED_MODULE_0__observable_concat__["a" /* concat */])(array, source); };
    }
}
//# sourceMappingURL=startWith.js.map


/***/ }),
/* 350 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = subscribeOn;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_SubscribeOnObservable__ = __webpack_require__(351);
/** PURE_IMPORTS_START _observable_SubscribeOnObservable PURE_IMPORTS_END */

function subscribeOn(scheduler, delay) {
    if (delay === void 0) {
        delay = 0;
    }
    return function subscribeOnOperatorFunction(source) {
        return source.lift(new SubscribeOnOperator(scheduler, delay));
    };
}
var SubscribeOnOperator = /*@__PURE__*/ (function () {
    function SubscribeOnOperator(scheduler, delay) {
        this.scheduler = scheduler;
        this.delay = delay;
    }
    SubscribeOnOperator.prototype.call = function (subscriber, source) {
        return new __WEBPACK_IMPORTED_MODULE_0__observable_SubscribeOnObservable__["a" /* SubscribeOnObservable */](source, this.delay, this.scheduler).subscribe(subscriber);
    };
    return SubscribeOnOperator;
}());
//# sourceMappingURL=subscribeOn.js.map


/***/ }),
/* 351 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SubscribeOnObservable; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Observable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scheduler_asap__ = __webpack_require__(209);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_isNumeric__ = __webpack_require__(39);
/** PURE_IMPORTS_START tslib,_Observable,_scheduler_asap,_util_isNumeric PURE_IMPORTS_END */




var SubscribeOnObservable = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SubscribeOnObservable, _super);
    function SubscribeOnObservable(source, delayTime, scheduler) {
        if (delayTime === void 0) {
            delayTime = 0;
        }
        if (scheduler === void 0) {
            scheduler = __WEBPACK_IMPORTED_MODULE_2__scheduler_asap__["a" /* asap */];
        }
        var _this = _super.call(this) || this;
        _this.source = source;
        _this.delayTime = delayTime;
        _this.scheduler = scheduler;
        if (!Object(__WEBPACK_IMPORTED_MODULE_3__util_isNumeric__["a" /* isNumeric */])(delayTime) || delayTime < 0) {
            _this.delayTime = 0;
        }
        if (!scheduler || typeof scheduler.schedule !== 'function') {
            _this.scheduler = __WEBPACK_IMPORTED_MODULE_2__scheduler_asap__["a" /* asap */];
        }
        return _this;
    }
    SubscribeOnObservable.create = function (source, delay, scheduler) {
        if (delay === void 0) {
            delay = 0;
        }
        if (scheduler === void 0) {
            scheduler = __WEBPACK_IMPORTED_MODULE_2__scheduler_asap__["a" /* asap */];
        }
        return new SubscribeOnObservable(source, delay, scheduler);
    };
    SubscribeOnObservable.dispatch = function (arg) {
        var source = arg.source, subscriber = arg.subscriber;
        return this.add(source.subscribe(subscriber));
    };
    SubscribeOnObservable.prototype._subscribe = function (subscriber) {
        var delay = this.delayTime;
        var source = this.source;
        var scheduler = this.scheduler;
        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {
            source: source, subscriber: subscriber
        });
    };
    return SubscribeOnObservable;
}(__WEBPACK_IMPORTED_MODULE_1__Observable__["a" /* Observable */]));

//# sourceMappingURL=SubscribeOnObservable.js.map


/***/ }),
/* 352 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = switchAll;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__switchMap__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_identity__ = __webpack_require__(18);
/** PURE_IMPORTS_START _switchMap,_util_identity PURE_IMPORTS_END */


function switchAll() {
    return Object(__WEBPACK_IMPORTED_MODULE_0__switchMap__["a" /* switchMap */])(__WEBPACK_IMPORTED_MODULE_1__util_identity__["a" /* identity */]);
}
//# sourceMappingURL=switchAll.js.map


/***/ }),
/* 353 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = switchMapTo;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__switchMap__ = __webpack_require__(63);
/** PURE_IMPORTS_START _switchMap PURE_IMPORTS_END */

function switchMapTo(innerObservable, resultSelector) {
    return resultSelector ? Object(__WEBPACK_IMPORTED_MODULE_0__switchMap__["a" /* switchMap */])(function () { return innerObservable; }, resultSelector) : Object(__WEBPACK_IMPORTED_MODULE_0__switchMap__["a" /* switchMap */])(function () { return innerObservable; });
}
//# sourceMappingURL=switchMapTo.js.map


/***/ }),
/* 354 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = takeUntil;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function takeUntil(notifier) {
    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };
}
var TakeUntilOperator = /*@__PURE__*/ (function () {
    function TakeUntilOperator(notifier) {
        this.notifier = notifier;
    }
    TakeUntilOperator.prototype.call = function (subscriber, source) {
        var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);
        var notifierSubscription = Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(takeUntilSubscriber, this.notifier);
        if (notifierSubscription && !takeUntilSubscriber.seenValue) {
            takeUntilSubscriber.add(notifierSubscription);
            return source.subscribe(takeUntilSubscriber);
        }
        return takeUntilSubscriber;
    };
    return TakeUntilOperator;
}());
var TakeUntilSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](TakeUntilSubscriber, _super);
    function TakeUntilSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.seenValue = false;
        return _this;
    }
    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.seenValue = true;
        this.complete();
    };
    TakeUntilSubscriber.prototype.notifyComplete = function () {
    };
    return TakeUntilSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=takeUntil.js.map


/***/ }),
/* 355 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = takeWhile;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function takeWhile(predicate, inclusive) {
    if (inclusive === void 0) {
        inclusive = false;
    }
    return function (source) {
        return source.lift(new TakeWhileOperator(predicate, inclusive));
    };
}
var TakeWhileOperator = /*@__PURE__*/ (function () {
    function TakeWhileOperator(predicate, inclusive) {
        this.predicate = predicate;
        this.inclusive = inclusive;
    }
    TakeWhileOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));
    };
    return TakeWhileOperator;
}());
var TakeWhileSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](TakeWhileSubscriber, _super);
    function TakeWhileSubscriber(destination, predicate, inclusive) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.inclusive = inclusive;
        _this.index = 0;
        return _this;
    }
    TakeWhileSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        var result;
        try {
            result = this.predicate(value, this.index++);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        this.nextOrComplete(value, result);
    };
    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {
        var destination = this.destination;
        if (Boolean(predicateResult)) {
            destination.next(value);
        }
        else {
            if (this.inclusive) {
                destination.next(value);
            }
            destination.complete();
        }
    };
    return TakeWhileSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=takeWhile.js.map


/***/ }),
/* 356 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = tap;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_noop__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_isFunction__ = __webpack_require__(22);
/** PURE_IMPORTS_START tslib,_Subscriber,_util_noop,_util_isFunction PURE_IMPORTS_END */




function tap(nextOrObserver, error, complete) {
    return function tapOperatorFunction(source) {
        return source.lift(new DoOperator(nextOrObserver, error, complete));
    };
}
var DoOperator = /*@__PURE__*/ (function () {
    function DoOperator(nextOrObserver, error, complete) {
        this.nextOrObserver = nextOrObserver;
        this.error = error;
        this.complete = complete;
    }
    DoOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));
    };
    return DoOperator;
}());
var TapSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](TapSubscriber, _super);
    function TapSubscriber(destination, observerOrNext, error, complete) {
        var _this = _super.call(this, destination) || this;
        _this._tapNext = __WEBPACK_IMPORTED_MODULE_2__util_noop__["a" /* noop */];
        _this._tapError = __WEBPACK_IMPORTED_MODULE_2__util_noop__["a" /* noop */];
        _this._tapComplete = __WEBPACK_IMPORTED_MODULE_2__util_noop__["a" /* noop */];
        _this._tapError = error || __WEBPACK_IMPORTED_MODULE_2__util_noop__["a" /* noop */];
        _this._tapComplete = complete || __WEBPACK_IMPORTED_MODULE_2__util_noop__["a" /* noop */];
        if (Object(__WEBPACK_IMPORTED_MODULE_3__util_isFunction__["a" /* isFunction */])(observerOrNext)) {
            _this._context = _this;
            _this._tapNext = observerOrNext;
        }
        else if (observerOrNext) {
            _this._context = observerOrNext;
            _this._tapNext = observerOrNext.next || __WEBPACK_IMPORTED_MODULE_2__util_noop__["a" /* noop */];
            _this._tapError = observerOrNext.error || __WEBPACK_IMPORTED_MODULE_2__util_noop__["a" /* noop */];
            _this._tapComplete = observerOrNext.complete || __WEBPACK_IMPORTED_MODULE_2__util_noop__["a" /* noop */];
        }
        return _this;
    }
    TapSubscriber.prototype._next = function (value) {
        try {
            this._tapNext.call(this._context, value);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(value);
    };
    TapSubscriber.prototype._error = function (err) {
        try {
            this._tapError.call(this._context, err);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.error(err);
    };
    TapSubscriber.prototype._complete = function () {
        try {
            this._tapComplete.call(this._context);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        return this.destination.complete();
    };
    return TapSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=tap.js.map


/***/ }),
/* 357 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = throttleTime;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scheduler_async__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__throttle__ = __webpack_require__(225);
/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async,_throttle PURE_IMPORTS_END */




function throttleTime(duration, scheduler, config) {
    if (scheduler === void 0) {
        scheduler = __WEBPACK_IMPORTED_MODULE_2__scheduler_async__["a" /* async */];
    }
    if (config === void 0) {
        config = __WEBPACK_IMPORTED_MODULE_3__throttle__["a" /* defaultThrottleConfig */];
    }
    return function (source) { return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing)); };
}
var ThrottleTimeOperator = /*@__PURE__*/ (function () {
    function ThrottleTimeOperator(duration, scheduler, leading, trailing) {
        this.duration = duration;
        this.scheduler = scheduler;
        this.leading = leading;
        this.trailing = trailing;
    }
    ThrottleTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));
    };
    return ThrottleTimeOperator;
}());
var ThrottleTimeSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ThrottleTimeSubscriber, _super);
    function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {
        var _this = _super.call(this, destination) || this;
        _this.duration = duration;
        _this.scheduler = scheduler;
        _this.leading = leading;
        _this.trailing = trailing;
        _this._hasTrailingValue = false;
        _this._trailingValue = null;
        return _this;
    }
    ThrottleTimeSubscriber.prototype._next = function (value) {
        if (this.throttled) {
            if (this.trailing) {
                this._trailingValue = value;
                this._hasTrailingValue = true;
            }
        }
        else {
            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));
            if (this.leading) {
                this.destination.next(value);
            }
            else if (this.trailing) {
                this._trailingValue = value;
                this._hasTrailingValue = true;
            }
        }
    };
    ThrottleTimeSubscriber.prototype._complete = function () {
        if (this._hasTrailingValue) {
            this.destination.next(this._trailingValue);
            this.destination.complete();
        }
        else {
            this.destination.complete();
        }
    };
    ThrottleTimeSubscriber.prototype.clearThrottle = function () {
        var throttled = this.throttled;
        if (throttled) {
            if (this.trailing && this._hasTrailingValue) {
                this.destination.next(this._trailingValue);
                this._trailingValue = null;
                this._hasTrailingValue = false;
            }
            throttled.unsubscribe();
            this.remove(throttled);
            this.throttled = null;
        }
    };
    return ThrottleTimeSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
function dispatchNext(arg) {
    var subscriber = arg.subscriber;
    subscriber.clearThrottle();
}
//# sourceMappingURL=throttleTime.js.map


/***/ }),
/* 358 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = timeInterval;
/* unused harmony export TimeInterval */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scheduler_async__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__scan__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__observable_defer__ = __webpack_require__(58);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__map__ = __webpack_require__(13);
/** PURE_IMPORTS_START _scheduler_async,_scan,_observable_defer,_map PURE_IMPORTS_END */




function timeInterval(scheduler) {
    if (scheduler === void 0) {
        scheduler = __WEBPACK_IMPORTED_MODULE_0__scheduler_async__["a" /* async */];
    }
    return function (source) {
        return Object(__WEBPACK_IMPORTED_MODULE_2__observable_defer__["a" /* defer */])(function () {
            return source.pipe(Object(__WEBPACK_IMPORTED_MODULE_1__scan__["a" /* scan */])(function (_a, value) {
                var current = _a.current;
                return ({ value: value, current: scheduler.now(), last: current });
            }, { current: scheduler.now(), value: undefined, last: undefined }), Object(__WEBPACK_IMPORTED_MODULE_3__map__["a" /* map */])(function (_a) {
                var current = _a.current, last = _a.last, value = _a.value;
                return new TimeInterval(value, current - last);
            }));
        });
    };
}
var TimeInterval = /*@__PURE__*/ (function () {
    function TimeInterval(value, interval) {
        this.value = value;
        this.interval = interval;
    }
    return TimeInterval;
}());

//# sourceMappingURL=timeInterval.js.map


/***/ }),
/* 359 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = timeout;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scheduler_async__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_TimeoutError__ = __webpack_require__(210);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__timeoutWith__ = __webpack_require__(226);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__observable_throwError__ = __webpack_require__(53);
/** PURE_IMPORTS_START _scheduler_async,_util_TimeoutError,_timeoutWith,_observable_throwError PURE_IMPORTS_END */




function timeout(due, scheduler) {
    if (scheduler === void 0) {
        scheduler = __WEBPACK_IMPORTED_MODULE_0__scheduler_async__["a" /* async */];
    }
    return Object(__WEBPACK_IMPORTED_MODULE_2__timeoutWith__["a" /* timeoutWith */])(due, Object(__WEBPACK_IMPORTED_MODULE_3__observable_throwError__["a" /* throwError */])(new __WEBPACK_IMPORTED_MODULE_1__util_TimeoutError__["a" /* TimeoutError */]()), scheduler);
}
//# sourceMappingURL=timeout.js.map


/***/ }),
/* 360 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = timestamp;
/* unused harmony export Timestamp */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scheduler_async__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__map__ = __webpack_require__(13);
/** PURE_IMPORTS_START _scheduler_async,_map PURE_IMPORTS_END */


function timestamp(scheduler) {
    if (scheduler === void 0) {
        scheduler = __WEBPACK_IMPORTED_MODULE_0__scheduler_async__["a" /* async */];
    }
    return Object(__WEBPACK_IMPORTED_MODULE_1__map__["a" /* map */])(function (value) { return new Timestamp(value, scheduler.now()); });
}
var Timestamp = /*@__PURE__*/ (function () {
    function Timestamp(value, timestamp) {
        this.value = value;
        this.timestamp = timestamp;
    }
    return Timestamp;
}());

//# sourceMappingURL=timestamp.js.map


/***/ }),
/* 361 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = toArray;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__reduce__ = __webpack_require__(42);
/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */

function toArrayReducer(arr, item, index) {
    if (index === 0) {
        return [item];
    }
    arr.push(item);
    return arr;
}
function toArray() {
    return Object(__WEBPACK_IMPORTED_MODULE_0__reduce__["a" /* reduce */])(toArrayReducer, []);
}
//# sourceMappingURL=toArray.js.map


/***/ }),
/* 362 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = window;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subject__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function window(windowBoundaries) {
    return function windowOperatorFunction(source) {
        return source.lift(new WindowOperator(windowBoundaries));
    };
}
var WindowOperator = /*@__PURE__*/ (function () {
    function WindowOperator(windowBoundaries) {
        this.windowBoundaries = windowBoundaries;
    }
    WindowOperator.prototype.call = function (subscriber, source) {
        var windowSubscriber = new WindowSubscriber(subscriber);
        var sourceSubscription = source.subscribe(windowSubscriber);
        if (!sourceSubscription.closed) {
            windowSubscriber.add(Object(__WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__["a" /* subscribeToResult */])(windowSubscriber, this.windowBoundaries));
        }
        return sourceSubscription;
    };
    return WindowOperator;
}());
var WindowSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](WindowSubscriber, _super);
    function WindowSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.window = new __WEBPACK_IMPORTED_MODULE_1__Subject__["a" /* Subject */]();
        destination.next(_this.window);
        return _this;
    }
    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.openWindow();
    };
    WindowSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    WindowSubscriber.prototype.notifyComplete = function (innerSub) {
        this._complete();
    };
    WindowSubscriber.prototype._next = function (value) {
        this.window.next(value);
    };
    WindowSubscriber.prototype._error = function (err) {
        this.window.error(err);
        this.destination.error(err);
    };
    WindowSubscriber.prototype._complete = function () {
        this.window.complete();
        this.destination.complete();
    };
    WindowSubscriber.prototype._unsubscribe = function () {
        this.window = null;
    };
    WindowSubscriber.prototype.openWindow = function () {
        var prevWindow = this.window;
        if (prevWindow) {
            prevWindow.complete();
        }
        var destination = this.destination;
        var newWindow = this.window = new __WEBPACK_IMPORTED_MODULE_1__Subject__["a" /* Subject */]();
        destination.next(newWindow);
    };
    return WindowSubscriber;
}(__WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=window.js.map


/***/ }),
/* 363 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = windowCount;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subject__ = __webpack_require__(10);
/** PURE_IMPORTS_START tslib,_Subscriber,_Subject PURE_IMPORTS_END */



function windowCount(windowSize, startWindowEvery) {
    if (startWindowEvery === void 0) {
        startWindowEvery = 0;
    }
    return function windowCountOperatorFunction(source) {
        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));
    };
}
var WindowCountOperator = /*@__PURE__*/ (function () {
    function WindowCountOperator(windowSize, startWindowEvery) {
        this.windowSize = windowSize;
        this.startWindowEvery = startWindowEvery;
    }
    WindowCountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));
    };
    return WindowCountOperator;
}());
var WindowCountSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](WindowCountSubscriber, _super);
    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.windowSize = windowSize;
        _this.startWindowEvery = startWindowEvery;
        _this.windows = [new __WEBPACK_IMPORTED_MODULE_2__Subject__["a" /* Subject */]()];
        _this.count = 0;
        destination.next(_this.windows[0]);
        return _this;
    }
    WindowCountSubscriber.prototype._next = function (value) {
        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;
        var destination = this.destination;
        var windowSize = this.windowSize;
        var windows = this.windows;
        var len = windows.length;
        for (var i = 0; i < len && !this.closed; i++) {
            windows[i].next(value);
        }
        var c = this.count - windowSize + 1;
        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {
            windows.shift().complete();
        }
        if (++this.count % startWindowEvery === 0 && !this.closed) {
            var window_1 = new __WEBPACK_IMPORTED_MODULE_2__Subject__["a" /* Subject */]();
            windows.push(window_1);
            destination.next(window_1);
        }
    };
    WindowCountSubscriber.prototype._error = function (err) {
        var windows = this.windows;
        if (windows) {
            while (windows.length > 0 && !this.closed) {
                windows.shift().error(err);
            }
        }
        this.destination.error(err);
    };
    WindowCountSubscriber.prototype._complete = function () {
        var windows = this.windows;
        if (windows) {
            while (windows.length > 0 && !this.closed) {
                windows.shift().complete();
            }
        }
        this.destination.complete();
    };
    WindowCountSubscriber.prototype._unsubscribe = function () {
        this.count = 0;
        this.windows = null;
    };
    return WindowCountSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=windowCount.js.map


/***/ }),
/* 364 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = windowTime;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subject__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scheduler_async__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Subscriber__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_isNumeric__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_isScheduler__ = __webpack_require__(15);
/** PURE_IMPORTS_START tslib,_Subject,_scheduler_async,_Subscriber,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */






function windowTime(windowTimeSpan) {
    var scheduler = __WEBPACK_IMPORTED_MODULE_2__scheduler_async__["a" /* async */];
    var windowCreationInterval = null;
    var maxWindowSize = Number.POSITIVE_INFINITY;
    if (Object(__WEBPACK_IMPORTED_MODULE_5__util_isScheduler__["a" /* isScheduler */])(arguments[3])) {
        scheduler = arguments[3];
    }
    if (Object(__WEBPACK_IMPORTED_MODULE_5__util_isScheduler__["a" /* isScheduler */])(arguments[2])) {
        scheduler = arguments[2];
    }
    else if (Object(__WEBPACK_IMPORTED_MODULE_4__util_isNumeric__["a" /* isNumeric */])(arguments[2])) {
        maxWindowSize = arguments[2];
    }
    if (Object(__WEBPACK_IMPORTED_MODULE_5__util_isScheduler__["a" /* isScheduler */])(arguments[1])) {
        scheduler = arguments[1];
    }
    else if (Object(__WEBPACK_IMPORTED_MODULE_4__util_isNumeric__["a" /* isNumeric */])(arguments[1])) {
        windowCreationInterval = arguments[1];
    }
    return function windowTimeOperatorFunction(source) {
        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));
    };
}
var WindowTimeOperator = /*@__PURE__*/ (function () {
    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
        this.windowTimeSpan = windowTimeSpan;
        this.windowCreationInterval = windowCreationInterval;
        this.maxWindowSize = maxWindowSize;
        this.scheduler = scheduler;
    }
    WindowTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));
    };
    return WindowTimeOperator;
}());
var CountedSubject = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](CountedSubject, _super);
    function CountedSubject() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._numberOfNextedValues = 0;
        return _this;
    }
    CountedSubject.prototype.next = function (value) {
        this._numberOfNextedValues++;
        _super.prototype.next.call(this, value);
    };
    Object.defineProperty(CountedSubject.prototype, "numberOfNextedValues", {
        get: function () {
            return this._numberOfNextedValues;
        },
        enumerable: true,
        configurable: true
    });
    return CountedSubject;
}(__WEBPACK_IMPORTED_MODULE_1__Subject__["a" /* Subject */]));
var WindowTimeSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](WindowTimeSubscriber, _super);
    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.windowTimeSpan = windowTimeSpan;
        _this.windowCreationInterval = windowCreationInterval;
        _this.maxWindowSize = maxWindowSize;
        _this.scheduler = scheduler;
        _this.windows = [];
        var window = _this.openWindow();
        if (windowCreationInterval !== null && windowCreationInterval >= 0) {
            var closeState = { subscriber: _this, window: window, context: null };
            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: _this, scheduler: scheduler };
            _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));
            _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));
        }
        else {
            var timeSpanOnlyState = { subscriber: _this, window: window, windowTimeSpan: windowTimeSpan };
            _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));
        }
        return _this;
    }
    WindowTimeSubscriber.prototype._next = function (value) {
        var windows = this.windows;
        var len = windows.length;
        for (var i = 0; i < len; i++) {
            var window_1 = windows[i];
            if (!window_1.closed) {
                window_1.next(value);
                if (window_1.numberOfNextedValues >= this.maxWindowSize) {
                    this.closeWindow(window_1);
                }
            }
        }
    };
    WindowTimeSubscriber.prototype._error = function (err) {
        var windows = this.windows;
        while (windows.length > 0) {
            windows.shift().error(err);
        }
        this.destination.error(err);
    };
    WindowTimeSubscriber.prototype._complete = function () {
        var windows = this.windows;
        while (windows.length > 0) {
            var window_2 = windows.shift();
            if (!window_2.closed) {
                window_2.complete();
            }
        }
        this.destination.complete();
    };
    WindowTimeSubscriber.prototype.openWindow = function () {
        var window = new CountedSubject();
        this.windows.push(window);
        var destination = this.destination;
        destination.next(window);
        return window;
    };
    WindowTimeSubscriber.prototype.closeWindow = function (window) {
        window.complete();
        var windows = this.windows;
        windows.splice(windows.indexOf(window), 1);
    };
    return WindowTimeSubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__Subscriber__["a" /* Subscriber */]));
function dispatchWindowTimeSpanOnly(state) {
    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;
    if (window) {
        subscriber.closeWindow(window);
    }
    state.window = subscriber.openWindow();
    this.schedule(state, windowTimeSpan);
}
function dispatchWindowCreation(state) {
    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;
    var window = subscriber.openWindow();
    var action = this;
    var context = { action: action, subscription: null };
    var timeSpanState = { subscriber: subscriber, window: window, context: context };
    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);
    action.add(context.subscription);
    action.schedule(state, windowCreationInterval);
}
function dispatchWindowClose(state) {
    var subscriber = state.subscriber, window = state.window, context = state.context;
    if (context && context.action && context.subscription) {
        context.action.remove(context.subscription);
    }
    subscriber.closeWindow(window);
}
//# sourceMappingURL=windowTime.js.map


/***/ }),
/* 365 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = windowToggle;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subject__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subscription__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_Subject,_Subscription,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





function windowToggle(openings, closingSelector) {
    return function (source) { return source.lift(new WindowToggleOperator(openings, closingSelector)); };
}
var WindowToggleOperator = /*@__PURE__*/ (function () {
    function WindowToggleOperator(openings, closingSelector) {
        this.openings = openings;
        this.closingSelector = closingSelector;
    }
    WindowToggleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));
    };
    return WindowToggleOperator;
}());
var WindowToggleSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](WindowToggleSubscriber, _super);
    function WindowToggleSubscriber(destination, openings, closingSelector) {
        var _this = _super.call(this, destination) || this;
        _this.openings = openings;
        _this.closingSelector = closingSelector;
        _this.contexts = [];
        _this.add(_this.openSubscription = Object(__WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__["a" /* subscribeToResult */])(_this, openings, openings));
        return _this;
    }
    WindowToggleSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        if (contexts) {
            var len = contexts.length;
            for (var i = 0; i < len; i++) {
                contexts[i].window.next(value);
            }
        }
    };
    WindowToggleSubscriber.prototype._error = function (err) {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context_1 = contexts[index];
                context_1.window.error(err);
                context_1.subscription.unsubscribe();
            }
        }
        _super.prototype._error.call(this, err);
    };
    WindowToggleSubscriber.prototype._complete = function () {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context_2 = contexts[index];
                context_2.window.complete();
                context_2.subscription.unsubscribe();
            }
        }
        _super.prototype._complete.call(this);
    };
    WindowToggleSubscriber.prototype._unsubscribe = function () {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context_3 = contexts[index];
                context_3.window.unsubscribe();
                context_3.subscription.unsubscribe();
            }
        }
    };
    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (outerValue === this.openings) {
            var closingNotifier = void 0;
            try {
                var closingSelector = this.closingSelector;
                closingNotifier = closingSelector(innerValue);
            }
            catch (e) {
                return this.error(e);
            }
            var window_1 = new __WEBPACK_IMPORTED_MODULE_1__Subject__["a" /* Subject */]();
            var subscription = new __WEBPACK_IMPORTED_MODULE_2__Subscription__["a" /* Subscription */]();
            var context_4 = { window: window_1, subscription: subscription };
            this.contexts.push(context_4);
            var innerSubscription = Object(__WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__["a" /* subscribeToResult */])(this, closingNotifier, context_4);
            if (innerSubscription.closed) {
                this.closeWindow(this.contexts.length - 1);
            }
            else {
                innerSubscription.context = context_4;
                subscription.add(innerSubscription);
            }
            this.destination.next(window_1);
        }
        else {
            this.closeWindow(this.contexts.indexOf(outerValue));
        }
    };
    WindowToggleSubscriber.prototype.notifyError = function (err) {
        this.error(err);
    };
    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {
        if (inner !== this.openSubscription) {
            this.closeWindow(this.contexts.indexOf(inner.context));
        }
    };
    WindowToggleSubscriber.prototype.closeWindow = function (index) {
        if (index === -1) {
            return;
        }
        var contexts = this.contexts;
        var context = contexts[index];
        var window = context.window, subscription = context.subscription;
        contexts.splice(index, 1);
        window.complete();
        subscription.unsubscribe();
    };
    return WindowToggleSubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=windowToggle.js.map


/***/ }),
/* 366 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = windowWhen;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subject__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function windowWhen(closingSelector) {
    return function windowWhenOperatorFunction(source) {
        return source.lift(new WindowOperator(closingSelector));
    };
}
var WindowOperator = /*@__PURE__*/ (function () {
    function WindowOperator(closingSelector) {
        this.closingSelector = closingSelector;
    }
    WindowOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));
    };
    return WindowOperator;
}());
var WindowSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](WindowSubscriber, _super);
    function WindowSubscriber(destination, closingSelector) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.closingSelector = closingSelector;
        _this.openWindow();
        return _this;
    }
    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.openWindow(innerSub);
    };
    WindowSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    WindowSubscriber.prototype.notifyComplete = function (innerSub) {
        this.openWindow(innerSub);
    };
    WindowSubscriber.prototype._next = function (value) {
        this.window.next(value);
    };
    WindowSubscriber.prototype._error = function (err) {
        this.window.error(err);
        this.destination.error(err);
        this.unsubscribeClosingNotification();
    };
    WindowSubscriber.prototype._complete = function () {
        this.window.complete();
        this.destination.complete();
        this.unsubscribeClosingNotification();
    };
    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {
        if (this.closingNotification) {
            this.closingNotification.unsubscribe();
        }
    };
    WindowSubscriber.prototype.openWindow = function (innerSub) {
        if (innerSub === void 0) {
            innerSub = null;
        }
        if (innerSub) {
            this.remove(innerSub);
            innerSub.unsubscribe();
        }
        var prevWindow = this.window;
        if (prevWindow) {
            prevWindow.complete();
        }
        var window = this.window = new __WEBPACK_IMPORTED_MODULE_1__Subject__["a" /* Subject */]();
        this.destination.next(window);
        var closingNotifier;
        try {
            var closingSelector = this.closingSelector;
            closingNotifier = closingSelector();
        }
        catch (e) {
            this.destination.error(e);
            this.window.error(e);
            return;
        }
        this.add(this.closingNotification = Object(__WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__["a" /* subscribeToResult */])(this, closingNotifier));
    };
    return WindowSubscriber;
}(__WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=windowWhen.js.map


/***/ }),
/* 367 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = withLatestFrom;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(5);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function withLatestFrom() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return function (source) {
        var project;
        if (typeof args[args.length - 1] === 'function') {
            project = args.pop();
        }
        var observables = args;
        return source.lift(new WithLatestFromOperator(observables, project));
    };
}
var WithLatestFromOperator = /*@__PURE__*/ (function () {
    function WithLatestFromOperator(observables, project) {
        this.observables = observables;
        this.project = project;
    }
    WithLatestFromOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));
    };
    return WithLatestFromOperator;
}());
var WithLatestFromSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](WithLatestFromSubscriber, _super);
    function WithLatestFromSubscriber(destination, observables, project) {
        var _this = _super.call(this, destination) || this;
        _this.observables = observables;
        _this.project = project;
        _this.toRespond = [];
        var len = observables.length;
        _this.values = new Array(len);
        for (var i = 0; i < len; i++) {
            _this.toRespond.push(i);
        }
        for (var i = 0; i < len; i++) {
            var observable = observables[i];
            _this.add(Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(_this, observable, observable, i));
        }
        return _this;
    }
    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.values[outerIndex] = innerValue;
        var toRespond = this.toRespond;
        if (toRespond.length > 0) {
            var found = toRespond.indexOf(outerIndex);
            if (found !== -1) {
                toRespond.splice(found, 1);
            }
        }
    };
    WithLatestFromSubscriber.prototype.notifyComplete = function () {
    };
    WithLatestFromSubscriber.prototype._next = function (value) {
        if (this.toRespond.length === 0) {
            var args = [value].concat(this.values);
            if (this.project) {
                this._tryProject(args);
            }
            else {
                this.destination.next(args);
            }
        }
    };
    WithLatestFromSubscriber.prototype._tryProject = function (args) {
        var result;
        try {
            result = this.project.apply(this, args);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return WithLatestFromSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=withLatestFrom.js.map


/***/ }),
/* 368 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = zip;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_zip__ = __webpack_require__(59);
/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */

function zip() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return function zipOperatorFunction(source) {
        return source.lift.call(__WEBPACK_IMPORTED_MODULE_0__observable_zip__["b" /* zip */].apply(void 0, [source].concat(observables)));
    };
}
//# sourceMappingURL=zip.js.map


/***/ }),
/* 369 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = zipAll;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_zip__ = __webpack_require__(59);
/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */

function zipAll(project) {
    return function (source) { return source.lift(new __WEBPACK_IMPORTED_MODULE_0__observable_zip__["a" /* ZipOperator */](project)); };
}
//# sourceMappingURL=zipAll.js.map


/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _baseWidget = __webpack_require__(6);

var _baseWidget2 = _interopRequireDefault(_baseWidget);

var _rxjs = __webpack_require__(32);

var _operators = __webpack_require__(40);

var _utils = __webpack_require__(44);

__webpack_require__(371);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var initValue = {
    source: [],
    width: '100%',
    height: '30px',
    listHeight: null,
    itemHeight: '30px',
    value: null,
    renderer: null,
    selectionRenderer: null,
    listVisible: false,
    disabled: false
};

var ACTION = {
    select: function select(idx) {
        return {
            type: 'SELECT',
            index: idx
        };
    },
    changeSource: function changeSource(source) {
        return {
            type: 'CHANGE_SOURCE',
            source: source
        };
    },
    setState: function setState(opts) {
        return {
            type: 'SET_STATE',
            value: opts
        };
    }
};

var defaultRenderer = function defaultRenderer(item) {
    var label = (typeof item === 'undefined' ? 'undefined' : _typeof(item)) === 'object' ? item.label : item;
    return $('<span>' + label + '</span>');
};

/**
 *  DropDown Widget
 *
 *  --- create ---
 *  <div class="dropdown-add-position"></div>
 *
 *  var $dropdown = $('.dropdown-add-position');
 *  var dropdown = brtcWidget.dropdownList($dropdown, {
 *      'value': 
 *      'width': 
 *      'height': 
 *      'listHeight': 
 *      'itemHeight': 
 *      'source': 
 *      'disabled': 
 *      'selectionRenderer': 
 *      'renderer': 
 *  });
 *
 *
 *  --- method ---
 *  destroy: destory widget
 *  close: close dropdown list
 *
 *
 *  --- event ---
 *  - change -
 *
 */

var DropDownList = function (_Base) {
    _inherits(DropDownList, _Base);

    function DropDownList($el, options) {
        _classCallCheck(this, DropDownList);

        return _possibleConstructorReturn(this, (DropDownList.__proto__ || Object.getPrototypeOf(DropDownList)).call(this, $el, options));
    }

    _createClass(DropDownList, [{
        key: 'create',
        value: function create($el, opt) {
            var _this2 = this;

            if (!$(document.body).find('.dropdown.jui').length) {
                var $juiDiv = $('<div class="dropdown jui" />');
                $(document.body).append($juiDiv);
            }

            this.listeners = {
                change: []
            };

            this.subscriptions = [];

            this.state = Object.assign({}, initValue, opt);
            this.$elem = DropDownList.getTemplate(opt);

            var idx = Math.max(0, this.state.source.findIndex(function (e) {
                return (typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object' ? e.value === _this2.state.value : e === _this2.state.value;
            }));

            this.$elem.find('.brtc-widget-drop-down__value-view').append($('<div class="brtc-widget-drop-down__value-view-left"></div>'), $('<i class="brtc-widget-drop-down__value-view-right fa fa-caret-down"></i>'));
            var renderer = this.state.renderer || defaultRenderer;
            this.$elem.find('.brtc-widget-drop-down__value-view-left-view').empty().append(renderer(this.state.source[idx]));

            this.actionSource = new _rxjs.Subject();

            var state$ = this.actionSource.pipe((0, _operators.scan)(function (_ref, action) {
                var _ref2 = _slicedToArray(_ref, 2),
                    state = _ref2[0],
                    prevAction = _ref2[1];

                switch (action.type) {
                    case 'SELECT':
                        return [Object.assign({}, state, {
                            value: _typeof(state.source[action.index]) === 'object' ? state.source[action.index].value : state.source[action.index],
                            listVisible: false
                        }), action];
                    case 'SET_STATE':
                        return [Object.assign({}, state, action.value), action];
                    default:
                        return [state, action];
                }
            }, [this.state, null]));

            this.subscriptions.push(state$.subscribe(function (_ref3) {
                var _ref4 = _slicedToArray(_ref3, 2),
                    state = _ref4[0],
                    action = _ref4[1];

                _this2.state = state;
                _this2._applyOption(state);
                if (action.type === 'SELECT') {
                    _this2.listeners.change.forEach(function (fn) {
                        return fn(_this2.state.value);
                    });
                }
            }));

            this.$list = $('<div class="brtc-widget-drop-down__list-wrapper" tabindex="-1">\n            <ul class="brtc-widget-drop-down__list"></ul>\n        </div>');

            $(document.body).find('.dropdown.jui').append(this.$list);
            this.$list.hide();

            $el.append(this.$elem);

            this.subscriptions.push((0, _rxjs.fromEvent)(this.$elem, 'click').subscribe(function () {
                if (!_this2.state.disabled) {
                    _this2.actionSource.next(ACTION.setState({
                        listVisible: !_this2.state.listVisible
                    }));
                }
            }));

            this.subscriptions.push((0, _rxjs.fromEvent)(this.$list, 'blur').pipe((0, _operators.filter)(function (e) {
                return !_this2.$list[0].contains(e.relatedTarget);
            })).subscribe(function () {
                _this2.actionSource.next(ACTION.setState({
                    listVisible: false
                }));
            }));

            this._applyOption(this.state);
        }
    }, {
        key: '_applyOption',
        value: function _applyOption(opts) {
            var _this3 = this;

            var $lis = (0, _utils.to$Array)(opts.source.map(function (src, idx) {
                if (opts.selectionRenderer) {
                    return '<li index="' + idx + '" class="brtc-widget-drop-down__list-item">\n                    ' + opts.selectionRenderer(src) + '\n                </li>';
                }

                var _ref5 = (typeof src === 'undefined' ? 'undefined' : _typeof(src)) === 'object' ? [src.label, src.value] : [src, src],
                    _ref6 = _slicedToArray(_ref5, 2),
                    label = _ref6[0],
                    value = _ref6[1];

                var itemHeight = opts.itemHeight || '30px';
                return '<li style="height: ' + itemHeight + ';" index="' + idx + '" class="brtc-widget-drop-down__list-item\n                ' + (opts.value === value ? "brtc-widget-drop-down__list-item--selected" : "") + ' \n            ">\n                <span class="brtc-widget-drop-down__list-item-inner">' + label + '</span>\n            </li>';
            }));

            $lis.forEach(function ($li) {
                return $li.on('click', function (e) {
                    var idx = e.currentTarget.getAttribute('index');
                    _this3.actionSource.next(ACTION.select(parseInt(idx, 10)));
                });
            });

            this.$list.find('.brtc-widget-drop-down__list').empty().append($lis);

            var rect = this.$elem[0].getBoundingClientRect();
            var width = this.$elem.width();

            var _height = opts.listHeight ? opts.listHeight : this.$list.height() + rect.top + rect.height;
            if (_height < window.innerHeight) {
                this.$list.css({
                    width: width,
                    top: rect.top + rect.height,
                    left: rect.left,
                    position: 'absolute'
                    //'max-height': $(window)[0].innerHeight - rect.top - rect.height - 20,
                });
            } else {
                this.$list.css({
                    width: width,
                    top: rect.top - (opts.listHeight ? opts.listHeight : this.$list.height()),
                    left: rect.left,
                    position: 'absolute'
                    //'max-height': $(window)[0].innerHeight - rect.top - rect.height - 20,
                });
            }

            if (opts.listHeight) {
                this.$list.css({
                    height: opts.listHeight
                });
            }

            var idx = Math.max(0, opts.source.findIndex(function (e) {
                return (typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object' ? e.value === opts.value : e === opts.value;
            }));

            var renderer = this.state.renderer || defaultRenderer;
            this.$elem.find('.brtc-widget-drop-down__value-view-left').empty().append(renderer(opts.source[idx]));

            this.$elem.css('width', opts.width || '100%');
            this.$elem.css('height', opts.height || '30px');

            this.$list.toggle(opts.listVisible);
            if (opts.listVisible) {
                this.$list.focus();
            }

            this.$elem.attr('disabled', opts.disabled);
        }
    }, {
        key: '_getEventList',
        value: function _getEventList(attrNm) {
            return {
                'change': this._setOnChange
            }[attrNm];
        }
    }, {
        key: '_getMethodList',
        value: function _getMethodList(attrNm) {
            return {
                'destroy': this._destroy,
                'close': this._close
            }[attrNm];
        }
    }, {
        key: '_setValue',
        value: function _setValue(_val) {
            this.state.value = _val;
            this._applyOption(this.state);
        }
    }, {
        key: '_setSource',
        value: function _setSource(val) {
            this.state.source = (val || []).slice();
        }
    }, {
        key: '_close',
        value: function _close() {
            this.actionSource.next(ACTION.setState({ listVisible: false }));
        }
    }, {
        key: '_destroy',
        value: function _destroy() {
            this.subscriptions.forEach(function (s) {
                return s.unsubscribe();
            });
            if (this.$elem) this.$elem.remove();
            if (this.$list) this.$list.remove();
        }
    }, {
        key: '_getValue',
        value: function _getValue() {
            return this.state.value;
        }
    }, {
        key: '_setOnChange',
        value: function _setOnChange(func) {
            this.listeners.change.push(func);
        }
    }, {
        key: 'setOption',
        value: function setOption(opts) {
            this.actionSource.next(ACTION.setState(opts));
        }
    }, {
        key: 'getOption',
        value: function getOption(name) {
            return this.state[name];
        }
    }], [{
        key: 'getTemplate',
        value: function getTemplate(opt) {
            var $template = $('\n            <div class="brtc-widget-drop-down">\n                <div class="brtc-widget-drop-down__value-view">\n                </div>\n            </div>    \n        ');

            return $template;
        }
    }]);

    return DropDownList;
}(_baseWidget2.default);

exports.default = DropDownList;

/***/ }),
/* 371 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _baseWidget = __webpack_require__(6);

var _baseWidget2 = _interopRequireDefault(_baseWidget);

__webpack_require__(373);

var _juijsUi = __webpack_require__(8);

var _juijsUi2 = _interopRequireDefault(_juijsUi);

var _accordion = __webpack_require__(374);

var _accordion2 = _interopRequireDefault(_accordion);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

_juijsUi2.default.use(_accordion2.default);

var emptyFunction = function emptyFunction() {};

/**
 *  Expander Widget
 *
 *  --- create ---
 *  <div class="expander-add-position"></div>
 *
 *  var $expander = $('.expander-add-position');
 *  var expander = brtcWidget.colorPicker($expander, {
 *      expanded: false,    // boolean
 *      initContent: init, // function ( dom detail setting )
 *  });
 *
 *
 *  --- method ---
 *  setHeaderContent
 *  getDomByClass
 *  destroy
 *
 *
 *  --- event ---
 *  collapsed
 *  expanded
 *
 *
 */

var Expander = function (_Base) {
    _inherits(Expander, _Base);

    function Expander($el, options) {
        _classCallCheck(this, Expander);

        return _possibleConstructorReturn(this, (Expander.__proto__ || Object.getPrototypeOf(Expander)).call(this, $el, options));
    }

    _createClass(Expander, [{
        key: '_setIndex',
        value: function _setIndex(value) {
            this.applyOpt.index = value;
        }
    }, {
        key: '_doInitHeader',
        value: function _doInitHeader(func) {

            var header = this.$elem.find('.brtc-expander-header');
            header.empty();
            header.append('<div class="brtc-expander-arrow"></div>');
            func.call(this, this.$elem, this.$elem.find('.brtc-expander-header'));
        }
    }, {
        key: '_doInitContent',
        value: function _doInitContent(func) {
            func.call(this, this.$elem, this.$elem.find('.brtc-expander-contents'));
        }
    }, {
        key: '_setExpanded',
        value: function _setExpanded(value) {
            if (value) {
                this.$elem.removeClass('brtc-expander-wrapper-collapsed').addClass('brtc-expander-wrapper-expanded');
                this.$elem.find('.title').addClass('active');
            } else {
                this.$elem.removeClass('brtc-expander-wrapper-expanded').addClass('brtc-expander-wrapper-collapsed');
                this.$elem.find('.title').removeClass('active');
            }
        }
    }, {
        key: '_getPropertyList',
        value: function _getPropertyList(attrNm) {
            var setters = {
                expanded: this._setExpanded,
                initHeader: this._doInitHeader,
                initContent: this._doInitContent
            };
            return setters[attrNm];
        }
    }, {
        key: '_getEventList',
        value: function _getEventList(name) {
            return {
                collapsed: this._onCollapsed,
                expanded: this._onExpanded
            }[name];
        }
    }, {
        key: '_getMethodList',
        value: function _getMethodList(name) {
            return {
                setHeaderContent: this._setHeaderContent,
                getDomByClass: this._getDomByClass,
                destroy: this._destroy
            }[name];
        }

        // expect String HTML tags

    }, {
        key: '_getDomByClass',
        value: function _getDomByClass(selector) {
            return this.$elem.find(selector);
        }
    }, {
        key: '_setHeaderContent',
        value: function _setHeaderContent(opt) {
            var header = this.$elem.find('.title');
            header.empty();
            header.append('<div class="brtc-expander-arrow"></div>');
            header.append(opt);
        }
    }, {
        key: '_destroy',
        value: function _destroy() {
            if (this.expander) {
                this.expander.destroy();
                this.expander = null;
            }
            this.$elem.remove();
        }

        // Event`s prototype

    }, {
        key: '_onCollapsed',
        value: function _onCollapsed(callbackfn) {
            if (typeof callbackfn === 'function') {
                this.listeners.fold.push(callbackfn);
            }
        }
    }, {
        key: '_onExpanded',
        value: function _onExpanded(callbackfn) {
            if (typeof callbackfn === 'function') {
                this.listeners.open.push(callbackfn);
            }
        }
    }, {
        key: 'create',
        value: function create($el, opt) {
            // defaultValue를 초기 대입.
            this.listeners = {
                open: [],
                fold: []
            };

            var state = {
                expanded: false,
                initContent: emptyFunction
            };
            this.$elem = Expander.getTemplate();
            var applyOpt = $.extend(true, {}, state, opt);
            this.setOption(applyOpt);
            $el.append(this.$elem);
        }
    }, {
        key: '_applyOption',
        value: function _applyOption(opts) {
            var self = this;
            var _opts = Object.assign({}, {
                event: {
                    open: function open(i, e) {
                        self.listeners.open.forEach(function (fn) {
                            return fn(e);
                        });
                    },
                    fold: function fold(i, e) {
                        self.listeners.fold.forEach(function (fn) {
                            return fn(e);
                        });
                    }
                },
                autoFold: true
            }, opts);
            this.expander = _juijsUi2.default.create('ui.accordion', this.$elem, _opts);
        }
    }], [{
        key: 'getTemplate',
        value: function getTemplate() {
            var $template = $('\n        <div class="brtc-expander-wrapper accordion">\n            <div class="brtc-expander-header title">\n                <!--Header-->\n            </div>\n            <div class="brtc-expander-contents content">\n                <!--Content-->\n            </div>\n        </div>\n        ');
            return $template;
        }
    }]);

    return Expander;
}(_baseWidget2.default);

exports.default = Expander;

/***/ }),
/* 373 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 374 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__main_js__ = __webpack_require__(8);



/* harmony default export */ __webpack_exports__["default"] = ({
    name: "ui.accordion",
    extend: "event",
    component: function () {
        var _ = __WEBPACK_IMPORTED_MODULE_1__main_js__["default"].include("util.base");

        var UI = function() {
            var self;
            var activeIndex = 0;

            var $title = null,
                $contents = null;

            function showTitle(index) {
                $title.each(function(i) {
                    if(index == i) {
                        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).addClass("active");

                        if (self.options.multipanel) {
                            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).next('.content').show();
                        }  else {
                            $contents.insertAfter(this).show();
                        }
                    } else {
                        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).removeClass("active");

                        if (self.options.multipanel) {
                            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).next('.content').hide();
                        }

                    }
                });
            }

            function setTitleEvent(self) {
                $title.each(function(i) {
                    self.addEvent(this, "click", function(e) {
                        if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).hasClass("active") && self.options.autoFold) {
                            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).removeClass("active");

                            if (self.options.multipanel) {
                                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).next('.content').hide();
                            } else {
                                $contents.hide();
                            }
                            self.emit("fold", [ i, e ] );
                        } else {
                            showTitle(i);
                            self.emit("open", [ i, e ]);
                        }
                    });
                });
            }

            this.init = function() {
                self = this;
                var opts = this.options;

                $title = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root).find(".title");
                $contents = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root).find(".content");

                if (opts.index == null) {
                    for(var i=0; i < $title.length; i++) {
                        if (__WEBPACK_IMPORTED_MODULE_0_jquery___default()($title[i]).hasClass("active")) {
                            opts.index = i;
                        }
                    }
                }

                if(_.typeCheck("integer", opts.index)) {
                    showTitle(opts.index);
                } else {
                    $contents.hide();
                }

                setTitleEvent(this);

                this.emit('init');
            };

            /**
             * @method activeIndex
             * Gets the index of the currently enabled node
             *
             * @return {Integer} Index
             */
            this.activeIndex = function() {
                return activeIndex;
            }
        };

        UI.setup = function() {
            return {
                /**
                 * @cfg {Integer} [index=null]
                 * Sets an enabled node
                 */
                index: null,

                /**
                 * @cfg {Boolean} [autoFold=false]
                 * When you click on a node, the node folding
                 */
                autoFold: false,

                /**
                 * @cfg {Boolean} [multipanel=false]
                 *
                 */
                multipanel : false
            }
        };

        /**
         * @event open
         * When a node is opened, the events that occur
         *
         * @param {Integer} index Index
         * @param {jQueryEvent} e The event object
         */

        /**
         * @event fold
         * When a node is closed, the events that occur
         *
         * @param {Integer} index Index
         * @param {jQueryEvent} e The event object
         */

        return UI;
    }
});


/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _baseWidget = __webpack_require__(6);

var _baseWidget2 = _interopRequireDefault(_baseWidget);

__webpack_require__(376);

var _rxjs = __webpack_require__(32);

var _operators = __webpack_require__(40);

var _immutable = __webpack_require__(377);

var _utils = __webpack_require__(44);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var defaultSelectedTabClass = 'brtc-tabs-list--selected-tab';

var initState = {
    tabs: [],
    contents: [],
    selectedIndex: 0,
    additionalClass: null,
    selectedTabClass: defaultSelectedTabClass
};

var ACTION = {
    select: function select(index) {
        return {
            type: 'SELECT',
            value: index
        };
    },
    changeTabs: function changeTabs(tabs) {
        return {
            type: 'CHANGE_TABS',
            value: tabs
        };
    },
    changeContents: function changeContents(index, contents) {
        return {
            type: 'CHANGE_CONTENTS',
            index: index,
            value: contents
        };
    },
    setOption: function setOption(opts) {
        return {
            type: 'SET_OPTION',
            value: opts
        };
    }
};

function tabsReducer(_ref, action) {
    var _ref2 = _slicedToArray(_ref, 1),
        state = _ref2[0];

    switch (action.type) {
        case 'SELECT':
            return [Object.assign({}, state, {
                selectedIndex: action.value
            }), action];
        case 'CHANGE_TABS':
            return [Object.assign({}, state, {
                tabs: action.value.slice()
            }), action];
        case 'CHANGE_CONTENTS':
            return [Object.assign({}, state, {
                contents: (0, _immutable.arrayUpdate)(state.contents, action.index, action.value)
            }), action];
        case 'SET_OPTION':
            return [Object.assign({}, state, action.value), action];
        default:
            return [state, action];
    }
}

/**
 *  Tabs Widget
 *
 *  --- create ---
 *  <div class="tab-wrapper"></div>
 *
 *  var $tab = $('.tab-wrapper');
 *  var tab = brtcWidget.tabs($tab, {
 *      tabs: [], // array
 *      contents: [], // array
 *      selectedIndex: 0, // number
 *      additionalClass: null, // null | string
 *      selectedTabClass: defaultSelectedTabClass, // string
 *  });
 *
 *
 *  --- method ---
 *  setContentAt: contents setting
 *  select: select Tab
 *  getDomByClass: get dom by class
 *
 *
 *  --- event ---
 *  selected
 *
 *
 */

var Tabs = function (_Base) {
    _inherits(Tabs, _Base);

    function Tabs($el, options) {
        _classCallCheck(this, Tabs);

        return _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, $el, options));
    }

    _createClass(Tabs, [{
        key: '_getEventList',
        value: function _getEventList(name) {
            return {
                selected: this._onSelected
            }[name];
        }
    }, {
        key: '_setContentAt',
        value: function _setContentAt(index, $content) {
            this.actionSource$.next(ACTION.changeContents(index, $content));
        }
    }, {
        key: '_getMethodList',
        value: function _getMethodList(name) {
            var _this2 = this;

            return {
                setContentAt: this._setContentAt,
                getDomByClass: this._getDomByClass,
                select: function select(idx) {
                    return _this2.actionSource$.next(ACTION.setOption({
                        selectedIndex: idx
                    }));
                }
            }[name];
        }
    }, {
        key: '_getDomByClass',
        value: function _getDomByClass(selector) {
            return this.$elem.find(selector);
        }
    }, {
        key: '_onSelected',
        value: function _onSelected(callbackfn) {
            this.listeners.selected.push(callbackfn);
        }
    }, {
        key: 'setOption',
        value: function setOption(opts) {
            this.actionSource$.next(ACTION.setOption(opts));
        }
    }, {
        key: 'getOption',
        value: function getOption(name) {
            return this.prevState[name];
        }
    }, {
        key: 'create',
        value: function create($el) {
            var _this3 = this;

            var opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

            this.$elem = Tabs.getTemplate();
            this.$tabListContainer = this.$elem.find('.brtc-tab-header');
            this.$contentListContainer = this.$elem.find('.brtc-tab-content-wrapper');

            this.listeners = {
                selected: []
            };

            this.tabItemSubscriptions = [];
            this.subscriptions = [];

            var state = Object.assign({}, initState, opt);

            this.actionSource$ = new _rxjs.Subject();

            this.subscriptions.push(this.actionSource$.pipe((0, _operators.scan)(tabsReducer, [state, null])).subscribe(function (_ref3) {
                var _ref4 = _slicedToArray(_ref3, 2),
                    state = _ref4[0],
                    lastAction = _ref4[1];

                switch (lastAction.type) {
                    case 'SELECT':
                        _this3._switchTab(state);
                        _this3.listeners.selected.forEach(function (fn) {
                            return fn(state.selectedIndex);
                        });
                        break;
                    case 'CHANGE_CONTENTS':
                        _this3._changeContents(lastAction.index, lastAction.value);
                        _this3._switchTab(state);
                        break;
                    default:
                        _this3._applyOption(state);
                }
                _this3.prevState = state;
            }));

            this._applyOption(state);
            this.prevState = state;

            $el.append(this.$elem);
        }
    }, {
        key: '_applyOption',
        value: function _applyOption(state) {
            var _this4 = this;

            var tabs = state.tabs,
                selectedIndex = state.selectedIndex,
                contents = state.contents,
                additionalClass = state.additionalClass,
                selectedTabClass = state.selectedTabClass;

            this.tabItemSubscriptions.forEach(function (s) {
                return s.unsubscribe();
            });

            if (this.prevState && this.prevState.additionalClass) {
                var ac = this.prevState.additionalClass;
                [].concat(ac).forEach(function (cls) {
                    return _this4.$elem.removeClass(cls);
                });
            }

            [].concat(additionalClass).forEach(function (cls) {
                return _this4.$elem.addClass(cls);
            });

            var $tabs = tabs.map(function (label, index) {
                var $t = $('<li class="brtc-tabs-list ' + (index === selectedIndex ? selectedTabClass : '') + '">\n                        <div class="brtc-tab-items" title="' + label + '">' + label + '</div></li>');
                return $t;
            });

            this.tabItemSubscriptions = $tabs.map(function ($t, i) {
                return (0, _rxjs.fromEvent)($t, 'click').pipe((0, _operators.mapTo)(ACTION.select(i))).subscribe(_this4.actionSource$);
            });

            this.$tabListContainer.empty();
            this.$tabListContainer.append($tabs);

            this.$contentListContainer.empty();
            this.$contentListContainer.append((0, _utils.to$Array)(contents).map(function ($c, idx) {
                var $wrapper = $('\n                    <div class="brtc-tab-content" tab-index=' + idx + '>\n                    </div>\n                ');

                $c.appendTo($wrapper);
                return $wrapper;
            }));
            this._switchTab(state);
        }
    }, {
        key: '_wrapContent',
        value: function _wrapContent(idx, content) {
            var $wrapper = $('\n            <div class="brtc-tab-content" tab-index=' + idx + '>\n            </div>\n        ');

            $wrapper.append(content);
            return $wrapper;
        }
    }, {
        key: '_switchTab',
        value: function _switchTab(state) {
            var selectedIndex = state.selectedIndex,
                selectedTabClass = state.selectedTabClass;

            var $contentsWrappers = (0, _utils.to$Array)(this.$contentListContainer.find('.brtc-tab-content'));
            $contentsWrappers.forEach(function ($e) {
                $e.toggleClass('brtc-tab-content--hidden', parseInt($e.attr('tab-index'), 10) !== selectedIndex);
            });
            var $tabList = (0, _utils.to$Array)(this.$tabListContainer.find('.brtc-tabs-list'));
            $tabList.forEach(function ($el, i) {
                return $el.toggleClass(selectedTabClass, i === selectedIndex);
            });
        }
    }, {
        key: '_changeContents',
        value: function _changeContents(idx, content) {
            var $el = this.$contentListContainer.find('.brtc-tab-content[tab-index="' + idx + '"]');
            if ($el.length !== 0) {
                $el.empty();
                content.appendTo($el);
                return;
            }
            this.$contentListContainer.append(this._wrapContent(idx, content));
        }
    }], [{
        key: 'getTemplate',
        value: function getTemplate() {
            var $template = $('\n        <div class="brtc-tab">\n            <ul class="brtc-tab-header">\n            </ul>\n            <div class="brtc-tab-content-wrapper">\n            </div>\n        </div>\n        ');
            return $template;
        }
    }]);

    return Tabs;
}(_baseWidget2.default);

exports.default = Tabs;

/***/ }),
/* 376 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.arrayUpdate = arrayUpdate;
function arrayUpdate(array, idx, value) {
    var a = array.slice();
    a[idx] = value;
    return a;
}

/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _baseWidget = __webpack_require__(6);

var _baseWidget2 = _interopRequireDefault(_baseWidget);

__webpack_require__(379);

var _juijsUi = __webpack_require__(8);

var _juijsUi2 = _interopRequireDefault(_juijsUi);

var _dropdown = __webpack_require__(227);

var _dropdown2 = _interopRequireDefault(_dropdown);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

_juijsUi2.default.use(_dropdown2.default);

/**
 *  Menu Widget
 *
 *  --- create ---
 *  <div class="menu-add-position"></div>
 *
 *  var $menu = $('.menu-add-position');
 *  var menu = brtcWidget.menu($menu, {
 *      width: 0, // number | string
 *      menu: menu, // Object
 *      close: true, // boolean
 *      event: function, // function
 *  });
 *
 *
 *  --- method ---
 *  width: return menu width
 *  isOpen: return open status
 *  open: menu open
 *  destroy: destory widget,
 *
 *
 *  --- event ---
 *  - none -
 *
 *
 */

var Menu = function (_Base) {
    _inherits(Menu, _Base);

    function Menu($el, options) {
        _classCallCheck(this, Menu);

        return _possibleConstructorReturn(this, (Menu.__proto__ || Object.getPrototypeOf(Menu)).call(this, $el, options));
    }

    _createClass(Menu, [{
        key: '_setWidth',
        value: function _setWidth(value) {
            if (isNaN(value) && value.indexOf('%') > 0) {
                this.applyOpt.width = value;
            } else {
                this.applyOpt.width = parseInt(value);
            }
        }
    }, {
        key: '_setClickEvent',
        value: function _setClickEvent(value) {
            this.setClickEvent = value;
        }
    }, {
        key: '_setMenu',
        value: function _setMenu(menu) {
            var $ul = $('<ul></ul>');
            for (var key in menu) {
                if (menu[key].type === 'action') {
                    var $li = $('<li></li>');
                    $li.attr('value', key);
                    $li.text(menu[key].title);

                    // TODO
                    if (this.setClickEvent && menu[key].click) {
                        $li[0].onclick = menu[key].click;
                    }
                    $ul.append($li);
                } else if (menu[key].type === 'divider') {
                    var _$li = $('<li class=\'divider\'></li>');
                    $ul.append(_$li);
                }
            }
            this.$elem.append($ul);
        }
    }, {
        key: '_setClose',
        value: function _setClose(value) {
            this.applyOpt.close = value;
        }
    }, {
        key: '_setEvent',
        value: function _setEvent(value) {
            this.applyOpt.event = value;
        }
    }, {
        key: '_getPropertyList',
        value: function _getPropertyList(attrNm) {
            var setters = {
                width: this._setWidth,
                setClickEvent: this._setClickEvent,
                menu: this._setMenu,
                close: this._setClose,
                event: this._setEvent
            };
            return setters[attrNm];
        }
    }, {
        key: '_getEventList',
        value: function _getEventList(name) {
            return {}[name];
        }
    }, {
        key: '_getMethodList',
        value: function _getMethodList(name) {
            return {
                width: this._width,
                isOpen: this._isOpen,
                open: this._open,
                destroy: this._destroy,
                hide: this._hide
            }[name];
        }

        // expect String HTML tags

    }, {
        key: '_destroy',
        value: function _destroy() {
            this.menu.destroy();
            this.$elem.remove();
        }
    }, {
        key: 'create',
        value: function create($el, opt) {
            // defaultValue를 초기 대입.
            var state = {
                close: true
            };
            this.lazyExecuteList = [];
            this.$elem = Menu.getTemplate();

            var applyOpt = $.extend(true, {}, state, opt);
            this.setOption(applyOpt);
            $el.append(this.$elem);
        }
    }, {
        key: '_applyOption',
        value: function _applyOption(opts) {
            this.menu = _juijsUi2.default.create('ui.dropdown', this.$elem, opts);
        }
    }, {
        key: '_isOpen',
        value: function _isOpen() {
            return this.menu.type === 'show';
        }
    }, {
        key: '_open',
        value: function _open(x, y) {
            this.menu.show(x, y);
        }
    }, {
        key: '_hide',
        value: function _hide() {
            this.menu.hide();
        }
    }, {
        key: '_width',
        value: function _width() {
            return this.$elem.find('ul').width();
        }
    }], [{
        key: 'getTemplate',
        value: function getTemplate() {
            var $template = $('\n        <div class="brtc-context-menu dropdown">\n            <!-- menuList -->\n        </div>\n        ');
            return $template;
        }
    }]);

    return Menu;
}(_baseWidget2.default);

exports.default = Menu;

/***/ }),
/* 379 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _baseWidget = __webpack_require__(6);

var _baseWidget2 = _interopRequireDefault(_baseWidget);

__webpack_require__(381);

var _juijsGrid = __webpack_require__(31);

var _juijsGrid2 = _interopRequireDefault(_juijsGrid);

var _table = __webpack_require__(383);

var _table2 = _interopRequireDefault(_table);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Source: listbox.js
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by ji_sung.park on 2018-12-11
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


_juijsGrid2.default.use(_table2.default);

/**
 *  ListBox Widget
 *
 *  --- create ---
 *  <div class="listbox-add-position"></div>
 *
 *  var $listbox = $('.listbox-add-position');
 *  var listbox = brtcWidget.listbox($listbox, {
 *      'source': source // Array
 *      'width': 0, // number | string
 *      'height': 200 // number | string
 *  });
 *
 *
 *  --- method ---
 *  itemByIndex: return item by index
 *  checkIndex: check item by index
 *  uncheckIndex: uncheck item by index
 *  checkItem: check item 
 *  uncheckItem: uncheck item
 *  checkAll: check all item
 *  uncheckAll: uncheck all item
 *  updateData: change list item
 *
 *
 *  --- event ---
 *  - none -
 *
 *
 */

var ListBox = function (_Base) {
    _inherits(ListBox, _Base);

    function ListBox($el, options) {
        _classCallCheck(this, ListBox);

        return _possibleConstructorReturn(this, (ListBox.__proto__ || Object.getPrototypeOf(ListBox)).call(this, $el, options));
    }

    _createClass(ListBox, [{
        key: 'create',
        value: function create($el, opt) {
            this.lazyExecuteList = [];
            this.$elem = ListBox.getTemplate();
            var applyOpt = $.extend(true, {}, opt);
            $el.append(this.$elem);
            this.setOption(applyOpt);
        }
    }, {
        key: '_getPropertyList',
        value: function _getPropertyList(attrNm) {
            return {
                'source': this._setSource,
                'width': this._setWidth,
                'height': this._setHeight
            }[attrNm];
        }
    }, {
        key: '_setSource',
        value: function _setSource(source) {
            this.applyOpt.source = this._makeSourceByListBox(source);
        }
    }, {
        key: '_setWidth',
        value: function _setWidth(width) {
            if (isNaN(width) && width.indexOf('%') > 0) {
                this.applyOpt.width = width;
            } else {
                this.applyOpt.width = parseInt(width);
            }
        }
    }, {
        key: '_setHeight',
        value: function _setHeight(height) {
            if (isNaN(height) && height.indexOf('%') > 0) {
                this.applyOpt.height = height;
            } else {
                this.applyOpt.height = parseInt(height);
            }
        }
    }, {
        key: '_getMethodList',
        value: function _getMethodList(name) {
            return {
                'itemByIndex': this._getItemByIndex,
                'checkIndex': this._checkIndex,
                'uncheckIndex': this._unCheckIndex,
                'checkItem': this._checkItem,
                'uncheckItem': this._uncheckItem,
                'checkAll': this._checkAll,
                'uncheckAll': this._uncheckAll,
                'updateData': this._updateData
            }[name];
        }
    }, {
        key: '_checkIndex',
        value: function _checkIndex(index) {
            console.log(index);
            if (index) this.listbox.check(index);
        }
    }, {
        key: '_unCheckIndex',
        value: function _unCheckIndex(index) {
            if (index) this.listbox.uncheck(index);
        }
    }, {
        key: '_checkItem',
        value: function _checkItem(item) {
            var index = this._searchIndexByValue(item);
            if (index !== -1) this.listbox.check(index);
        }
    }, {
        key: '_uncheckItem',
        value: function _uncheckItem(item) {
            var index = this._searchIndexByValue(item);
            if (index !== -1) this.listbox.uncheck(index);
        }
    }, {
        key: '_checkAll',
        value: function _checkAll() {
            for (var i = 0; i < this.listbox.list().length; i++) {
                this.listbox.check(i);
            }
        }
    }, {
        key: '_uncheckAll',
        value: function _uncheckAll() {
            this.listbox.uncheckAll();
        }
    }, {
        key: '_updateData',
        value: function _updateData(source) {
            this.listbox.update(this._makeSourceByListBox(source));
        }
    }, {
        key: '_getEventList',
        value: function _getEventList(name) {
            return {
                'checkChange': this._setOnCheckChange
            }[name];
        }
    }, {
        key: '_setOnCheckChange',
        value: function _setOnCheckChange(callbackfn) {
            if (typeof callbackfn === 'function') {
                this.listbox.on('select', callbackfn);
            }
        }
    }, {
        key: '_getItemByIndex',
        value: function _getItemByIndex(index) {
            return this.listbox.get(index);
        }
    }, {
        key: '_applyOption',
        value: function _applyOption(opts) {
            this._createListBox(opts);
        }
    }, {
        key: '_createListBox',
        value: function _createListBox(opts) {
            this.listbox = _juijsGrid2.default.create('grid.table', this.$elem, {
                fields: ['value'],
                resize: false,
                sort: false,
                scroll: true,
                width: opts.width,
                scrollHeight: opts.height,
                tpl: {
                    row: '<tr><td><!= value !></td></tr>'
                },
                event: {
                    select: function select(row, e) {
                        if (row.data.value !== '(Select All)') {
                            if ($(row.element).hasClass('checked')) {
                                this.uncheck(row.index);
                            } else {
                                this.check(row.index);
                            }
                        }
                    }
                }
            });

            this.listbox.update(opts.source);
        }
    }, {
        key: '_makeSourceByListBox',
        value: function _makeSourceByListBox(source) {
            var customSource = [];
            for (var i = 0; i < source.length; i++) {
                customSource.push({ value: source[i] });
            }
            return customSource;
        }
    }, {
        key: '_searchIndexByValue',
        value: function _searchIndexByValue(value) {
            var list = this.listbox.list();
            for (var i = 0; i < list.length; i++) {
                if (list[i].data.value === value) return i;
            }
            return -1;
        }
    }], [{
        key: 'getTemplate',
        value: function getTemplate() {
            var $template = $('<div class="brtc-widget listbox priority-scroll">' + '    <table class="table">' + '        <tbody></tbody>' + '    </table>' + '</div>');
            return $template;
        }
    }]);

    return ListBox;
}(_baseWidget2.default);

exports.default = ListBox;

/***/ }),
/* 381 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 382 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};

var global$1 = {},
    globalFunc = {},
    globalClass = {};

// JUI의 기본 설정 값 (향후 더 추가될 수 있음)
var globalOpts = {
    template: {
        evaluate: /<\!([\s\S]+?)\!>/g,
        interpolate: /<\!=([\s\S]+?)\!>/g,
        escape: /<\!-([\s\S]+?)\!>/g
    },
    logUrl: "tool/debug.html"
};

/**
 * @class util.base
 *
 * jui 에서 공통적으로 사용하는 유틸리티 함수 모음
 *
 * ```
 * var _ = jui.include("util.base");
 *
 * console.warn(_.browser.webkit);
 * ```
 *
 * @singleton
 */
var utility = global$1["util.base"] = {

    /**
     * @property browser check browser agent
     * @property {Boolean} browser.webkit  Webkit 브라우저 체크
     * @property {Boolean} browser.mozilla  Mozilla 브라우저 체크
     * @property {Boolean} browser.msie  IE 브라우저 체크 */
    browser: {
        webkit: 'WebkitAppearance' in document.documentElement.style ? true : false,
        mozilla: typeof window.mozInnerScreenX != "undefined" ? true : false,
        msie: window.navigator.userAgent.indexOf("Trident") != -1 ? true : false
    },

    /**
     * @property {Boolean} isTouch
     * check touch device
     */
    isTouch: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(window.navigator.userAgent),

    /**
     * @method inherit
     *
     * 프로토타입 기반의 상속 제공
     *
     * @param {Function} ctor base Class
     * @param {Function} superCtor super Class
     */
    inherit: function inherit(ctor, superCtor) {
        if (!this.typeCheck("function", ctor) || !this.typeCheck("function", superCtor)) return;

        ctor.parent = superCtor;
        ctor.prototype = new superCtor();
        ctor.prototype.constructor = ctor;
        ctor.prototype.parent = ctor.prototype;

        /**
         * @method super
         * call parent method
         * @param {String} method  parent method name
         * @param {Array} args
         * @returns {Mixed}
         */
        ctor.prototype.super = function (method, args) {
            return this.constructor.prototype[method].apply(this, args);
        };
    },

    /**
     * @method extend
     *
     * implements object extend
     *
     * @param {Object|Function} origin
     * @param {Object|Function} add
     * @param {Boolean} skip
     * @return {Object}
     */
    extend: function extend(origin, add, skip) {
        if (!this.typeCheck(["object", "function"], origin)) origin = {};
        if (!this.typeCheck(["object", "function"], add)) return origin;

        for (var key in add) {
            if (skip === true) {
                if (isRecursive(origin[key])) {
                    this.extend(origin[key], add[key], skip);
                } else if (this.typeCheck("undefined", origin[key])) {
                    origin[key] = add[key];
                }
            } else {
                if (isRecursive(origin[key])) {
                    this.extend(origin[key], add[key], skip);
                } else {
                    origin[key] = add[key];
                }
            }
        }

        function isRecursive(value) {
            return utility.typeCheck("object", value);
        }

        return origin;
    },

    /**
     * convert px to integer
     * @param {String or Number} px
     * @return {Number}
     */
    pxToInt: function pxToInt(px) {
        if (this.typeCheck("string", px) && px.indexOf("px") != -1) {
            return parseInt(px.split("px").join(""));
        }

        return px;
    },

    /**
     * @method clone
     * implements object clone
     * @param {Array/Object} obj 복사할 객체
     * @return {Array}
     */
    clone: function clone(obj) {
        var clone = this.typeCheck("array", obj) ? [] : {};

        for (var i in obj) {
            if (this.typeCheck("object", obj[i])) clone[i] = this.clone(obj[i]);else clone[i] = obj[i];
        }

        return clone;
    },

    /**
     * @method deepClone
     * implements object deep clone
     * @param obj
     * @param emit
     * @return {*}
     */
    deepClone: function deepClone(obj, emit) {
        var value = null;
        emit = emit || {};

        if (this.typeCheck("array", obj)) {
            value = new Array(obj.length);

            for (var i = 0, len = obj.length; i < len; i++) {
                value[i] = this.deepClone(obj[i], emit);
            }
        } else if (this.typeCheck("date", obj)) {
            value = obj;
        } else if (this.typeCheck("object", obj)) {
            value = {};

            for (var key in obj) {
                if (emit[key]) {
                    value[key] = obj[key];
                } else {
                    value[key] = this.deepClone(obj[key], emit);
                }
            }
        } else {
            value = obj;
        }

        return value;
    },

    /**
     * @method sort
     * use QuickSort
     * @param {Array} array
     * @return {QuickSort}
     */
    sort: function sort(array) {
        var QuickSort = jui.include("util.sort");
        return new QuickSort(array);
    },

    /**
     * @method runtime
     *
     * caculate callback runtime
     *
     * @param {String} name
     * @param {Function} callback
     */
    runtime: function runtime(name, callback) {
        var nStart = new Date().getTime();
        callback();
        var nEnd = new Date().getTime();

        console.warn(name + " : " + (nEnd - nStart) + "ms");
    },

    /**
     * @method template
     * parsing template string
     * @param html
     * @param obj
     */
    template: function template(html, obj) {
        var tpl = jui.include("util.template");

        if (!obj) return tpl(html, null, globalOpts.template);else return tpl(html, obj, globalOpts.template);
    },

    /**
     * @method resize
     * add event in window resize event
     * @param {Function} callback
     * @param {Number} ms delay time
     */
    resize: function resize(callback, ms) {
        var after_resize = function () {
            var timer = 0;

            return function () {
                clearTimeout(timer);
                timer = setTimeout(callback, ms);
            };
        }();

        if (window.addEventListener) {
            window.addEventListener("resize", after_resize);
        } else if (object.attachEvent) {
            window.attachEvent("onresize", after_resize);
        } else {
            window["onresize"] = after_resize;
        }
    },

    /**
     * @method index
     *
     * IndexParser 객체 생성
     *
     * @return {IndexParser}
     */
    index: function index() {
        var KeyParser = jui.include("util.keyparser");
        return new KeyParser();
    },

    /**
     * @method chunk
     * split array by length
     * @param {Array} arr
     * @param {Number} len
     * @return {Array}
     */
    chunk: function chunk(arr, len) {
        var chunks = [],
            i = 0,
            n = arr.length;

        while (i < n) {
            chunks.push(arr.slice(i, i += len));
        }

        return chunks;
    },

    /**
     * @method typeCheck
     * check data  type
     * @param {String} t  type string
     * @param {Object} v value object
     * @return {Boolean}
     */
    typeCheck: function typeCheck(t, v) {
        function check(type, value) {
            if (typeof type != "string") return false;

            if (type == "string") {
                return typeof value == "string";
            } else if (type == "integer") {
                return typeof value == "number" && value % 1 == 0;
            } else if (type == "float") {
                return typeof value == "number" && value % 1 != 0;
            } else if (type == "number") {
                return typeof value == "number";
            } else if (type == "boolean") {
                return typeof value == "boolean";
            } else if (type == "undefined") {
                return typeof value == "undefined";
            } else if (type == "null") {
                return value === null;
            } else if (type == "array") {
                return value instanceof Array;
            } else if (type == "date") {
                return value instanceof Date;
            } else if (type == "function") {
                return typeof value == "function";
            } else if (type == "object") {
                // typeCheck에 정의된 타입일 경우에는 object 체크시 false를 반환 (date, array, null)
                return (typeof value === "undefined" ? "undefined" : _typeof(value)) == "object" && value !== null && !(value instanceof Array) && !(value instanceof Date) && !(value instanceof RegExp);
            }

            return false;
        }

        if ((typeof t === "undefined" ? "undefined" : _typeof(t)) == "object" && t.length) {
            var typeList = t;

            for (var i = 0; i < typeList.length; i++) {
                if (check(typeList[i], v)) return true;
            }

            return false;
        } else {
            return check(t, v);
        }
    },
    typeCheckObj: function typeCheckObj(uiObj, list) {
        if ((typeof uiObj === "undefined" ? "undefined" : _typeof(uiObj)) != "object") return;
        var self = this;

        for (var key in uiObj) {
            var func = uiObj[key];

            if (typeof func == "function") {
                (function (funcName, funcObj) {
                    uiObj[funcName] = function () {
                        var args = arguments,
                            params = list[funcName];

                        for (var i = 0; i < args.length; i++) {
                            if (!self.typeCheck(params[i], args[i])) {
                                throw new Error("JUI_CRITICAL_ERR: the " + i + "th parameter is not a " + params[i] + " (" + name + ")");
                            }
                        }

                        return funcObj.apply(this, args);
                    };
                })(key, func);
            }
        }
    },

    /**
     * @method dataToCsv
     *
     * data 를 csv 로 변환한다.
     *
     * @param {Array} keys
     * @param {Array} dataList
     * @param {Number} dataSize
     * @return {String}  변환된 csv 문자열
     */
    dataToCsv: function dataToCsv(keys, dataList, dataSize) {
        var csv = "",
            len = !dataSize ? dataList.length : dataSize;

        for (var i = -1; i < len; i++) {
            var tmpArr = [];

            for (var j = 0; j < keys.length; j++) {
                if (keys[j]) {
                    if (i == -1) {
                        tmpArr.push('"' + keys[j] + '"');
                    } else {
                        var value = dataList[i][keys[j]];
                        tmpArr.push(isNaN(value) ? '"' + value + '"' : value);
                    }
                }
            }

            csv += tmpArr.join(",") + "\n";
        }

        return csv;
    },

    /**
     * @method dataToCsv2
     *
     * @param {Object} options
     * @return {String}
     */
    dataToCsv2: function dataToCsv2(options) {
        var csv = "";
        var opts = this.extend({
            fields: null, // required
            rows: null, // required
            names: null,
            types: null,
            count: this.typeCheck("integer", options.count) ? options.count : options.rows.length
        }, options);

        for (var i = -1; i < opts.count; i++) {
            var tmpArr = [];

            for (var j = 0; j < opts.fields.length; j++) {
                if (opts.fields[j]) {
                    if (i == -1) {
                        if (opts.names && opts.names[j]) {
                            tmpArr.push('"' + opts.names[j] + '"');
                        } else {
                            tmpArr.push('"' + opts.fields[j] + '"');
                        }
                    } else {
                        var value = opts.rows[i][opts.fields[j]];

                        if (this.typeCheck("array", opts.types)) {
                            if (opts.types[j] == "string") {
                                tmpArr.push('"' + value + '"');
                            } else if (opts.types[j] == "integer") {
                                tmpArr.push(parseInt(value));
                            } else if (opts.types[j] == "float") {
                                tmpArr.push(parseFloat(value));
                            } else {
                                tmpArr.push(value);
                            }
                        } else {
                            tmpArr.push(isNaN(value) ? '"' + value + '"' : value);
                        }
                    }
                }
            }

            csv += tmpArr.join(",") + "\n";
        }

        return csv;
    },

    /**
     * @method fileToCsv
     *
     * file 에서 csv 컨텐츠 로드
     *
     * @param {File} file
     * @param {Function} callback
     */
    fileToCsv: function fileToCsv(file, callback) {
        var reader = new FileReader();

        reader.onload = function (readerEvt) {
            if (utility.typeCheck("function", callback)) {
                callback(readerEvt.target.result);
            }
        };

        reader.readAsText(file);
    },
    /**
     * @method csvToBase64
     *
     * csv 다운로드 링크로 변환
     *
     * @param {String} csv
     * @return {String}
     */
    csvToBase64: function csvToBase64(csv) {
        var Base64 = jui.include("util.base64");
        return "data:application/octet-stream;base64," + Base64.encode(csv);
    },
    /**
     * @method csvToData
     *
     * @param {Array} keys
     * @param {String} csv
     * @param {Number} csvNumber
     * @return {Array}
     */
    csvToData: function csvToData(keys, csv, csvNumber) {
        var dataList = [],
            tmpRowArr = csv.split("\n");

        for (var i = 1; i < tmpRowArr.length; i++) {
            if (tmpRowArr[i] != "") {
                var tmpArr = tmpRowArr[i].split(","),
                    // TODO: 값 안에 콤마(,)가 있을 경우에 별도로 처리해야 함
                data = {};

                for (var j = 0; j < keys.length; j++) {
                    data[keys[j]] = tmpArr[j];

                    // '"' 로 감싸져있는 문자열은 '"' 제거
                    if (this.startsWith(tmpArr[j], '"') && this.endsWith(tmpArr[j], '"')) {
                        data[keys[j]] = tmpArr[j].split('"').join('');
                    } else {
                        data[keys[j]] = tmpArr[j];
                    }

                    if (this.inArray(keys[j], csvNumber) != -1) {
                        data[keys[j]] = parseFloat(tmpArr[j]);
                    }
                }

                dataList.push(data);
            }
        }

        return dataList;
    },
    /**
     * @method getCsvFields
     *
     * csv 에서 필드 얻어오기
     *
     * @param {Array} fields
     * @param {Array} csvFields
     * @return {Array}
     */
    getCsvFields: function getCsvFields(fields, csvFields) {
        var tmpFields = this.typeCheck("array", csvFields) ? csvFields : fields;

        for (var i = 0; i < tmpFields.length; i++) {
            if (!isNaN(tmpFields[i])) {
                tmpFields[i] = fields[tmpFields[i]];
            }
        }

        return tmpFields;
    },

    /**
     * @method svgToBase64
     *
     * xml 문자열로 svg datauri 생성
     *
     * @param {String} xml
     * @return {String} 변환된 data uri 링크
     */
    svgToBase64: function svgToBase64(xml) {
        var Base64 = jui.include("util.base64");
        return "data:image/svg+xml;base64," + Base64.encode(xml);
    },

    /**
     * @method dateFormat
     *
     * implements date format function
     *
     * yyyy : 4 digits year
     * yy : 2 digits year
     * y : 1 digit year
     *
     * @param {Date} date
     * @param {String} format   date format string
     * @param utc
     * @return {string}
     */
    dateFormat: function dateFormat(date, format, utc) {
        var MMMM = ["\x00", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
        var MMM = ["\x01", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        var dddd = ["\x02", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
        var ddd = ["\x03", "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];

        function ii(i, len) {
            var s = i + "";
            len = len || 2;
            while (s.length < len) {
                s = "0" + s;
            }return s;
        }

        var y = utc ? date.getUTCFullYear() : date.getFullYear();
        format = format.replace(/(^|[^\\])yyyy+/g, "$1" + y);
        format = format.replace(/(^|[^\\])yy/g, "$1" + y.toString().substr(2, 2));
        format = format.replace(/(^|[^\\])y/g, "$1" + y);

        var M = (utc ? date.getUTCMonth() : date.getMonth()) + 1;
        format = format.replace(/(^|[^\\])MMMM+/g, "$1" + MMMM[0]);
        format = format.replace(/(^|[^\\])MMM/g, "$1" + MMM[0]);
        format = format.replace(/(^|[^\\])MM/g, "$1" + ii(M));
        format = format.replace(/(^|[^\\])M/g, "$1" + M);

        var d = utc ? date.getUTCDate() : date.getDate();
        format = format.replace(/(^|[^\\])dddd+/g, "$1" + dddd[0]);
        format = format.replace(/(^|[^\\])ddd/g, "$1" + ddd[0]);
        format = format.replace(/(^|[^\\])dd/g, "$1" + ii(d));
        format = format.replace(/(^|[^\\])d/g, "$1" + d);

        var H = utc ? date.getUTCHours() : date.getHours();
        format = format.replace(/(^|[^\\])HH+/g, "$1" + ii(H));
        format = format.replace(/(^|[^\\])H/g, "$1" + H);

        var h = H > 12 ? H - 12 : H == 0 ? 12 : H;
        format = format.replace(/(^|[^\\])hh+/g, "$1" + ii(h));
        format = format.replace(/(^|[^\\])h/g, "$1" + h);

        var m = utc ? date.getUTCMinutes() : date.getMinutes();
        format = format.replace(/(^|[^\\])mm+/g, "$1" + ii(m));
        format = format.replace(/(^|[^\\])m/g, "$1" + m);

        var s = utc ? date.getUTCSeconds() : date.getSeconds();
        format = format.replace(/(^|[^\\])ss+/g, "$1" + ii(s));
        format = format.replace(/(^|[^\\])s/g, "$1" + s);

        var f = utc ? date.getUTCMilliseconds() : date.getMilliseconds();
        format = format.replace(/(^|[^\\])fff+/g, "$1" + ii(f, 3));
        f = Math.round(f / 10);
        format = format.replace(/(^|[^\\])ff/g, "$1" + ii(f));
        f = Math.round(f / 10);
        format = format.replace(/(^|[^\\])f/g, "$1" + f);

        var T = H < 12 ? "AM" : "PM";
        format = format.replace(/(^|[^\\])TT+/g, "$1" + T);
        format = format.replace(/(^|[^\\])T/g, "$1" + T.charAt(0));

        var t = T.toLowerCase();
        format = format.replace(/(^|[^\\])tt+/g, "$1" + t);
        format = format.replace(/(^|[^\\])t/g, "$1" + t.charAt(0));

        var tz = -date.getTimezoneOffset();
        var K = utc || !tz ? "Z" : tz > 0 ? "+" : "-";
        if (!utc) {
            tz = Math.abs(tz);
            var tzHrs = Math.floor(tz / 60);
            var tzMin = tz % 60;
            K += ii(tzHrs) + ":" + ii(tzMin);
        }
        format = format.replace(/(^|[^\\])K/g, "$1" + K);

        var day = (utc ? date.getUTCDay() : date.getDay()) + 1;
        format = format.replace(new RegExp(dddd[0], "g"), dddd[day]);
        format = format.replace(new RegExp(ddd[0], "g"), ddd[day]);

        format = format.replace(new RegExp(MMMM[0], "g"), MMMM[M]);
        format = format.replace(new RegExp(MMM[0], "g"), MMM[M]);

        format = format.replace(/\\(.)/g, "$1");

        return format;
    },
    /**
     * @method createId
     *
     * 유니크 아이디 생성
     *
     * @param {String} key  prefix string
     * @return {String} 생성된 아이디 문자열
     */
    createId: function createId(key) {
        return [key || "id", +new Date(), Math.round(Math.random() * 100) % 100].join("-");
    },
    /**
     * @method btoa
     *
     * Base64 인코딩
     *
     * @return {String}
     */
    btoa: function btoa(input) {
        var Base64 = jui.include("util.base64");
        return Base64.encode(input);
    },
    /**
     * @method atob
     *
     * Base64 디코딩
     *
     * @return {String}
     */
    atob: function atob(input) {
        var Base64 = jui.include("util.base64");
        return Base64.decode(input);
    },

    /**
     * implement async loop without blocking ui
     *
     * @param total
     * @param context
     * @returns {Function}
     */
    timeLoop: function timeLoop(total, context) {

        return function (callback, lastCallback) {
            function TimeLoopCallback(i) {

                if (i < 1) return;

                if (i == 1) {
                    callback.call(context, i);
                    lastCallback.call(context);
                } else {
                    setTimeout(function () {
                        if (i > -1) callback.call(context, i--);
                        if (i > -1) TimeLoopCallback(i);
                    }, 1);
                }
            }

            TimeLoopCallback(total);
        };
    },
    /**
     * @method loop
     *
     * 최적화된 루프 생성 (5단계로 나눔)
     *
     * @param {Number} total
     * @param {Object} [context=null]
     * @return {Function} 최적화된 루프 콜백 (index, groupIndex 2가지 파라미터를 받는다.)
     */
    loop: function loop(total, context) {
        var start = 0,
            end = total,
            unit = Math.ceil(total / 5);

        return function (callback) {
            var first = start,
                second = unit * 1,
                third = unit * 2,
                fourth = unit * 3,
                fifth = unit * 4,
                firstMax = second,
                secondMax = third,
                thirdMax = fourth,
                fourthMax = fifth,
                fifthMax = end;

            while (first < firstMax && first < end) {
                callback.call(context, first, 1);
                first++;

                if (second < secondMax && second < end) {
                    callback.call(context, second, 2);
                    second++;
                }
                if (third < thirdMax && third < end) {
                    callback.call(context, third, 3);
                    third++;
                }
                if (fourth < fourthMax && fourth < end) {
                    callback.call(context, fourth, 4);
                    fourth++;
                }
                if (fifth < fifthMax && fifth < end) {
                    callback.call(context, fifth, 5);
                    fifth++;
                }
            }
        };
    },

    /**
     * @method loopArray
     *
     * 배열을 사용해서 최적화된 루프로 생성한다.
     *
     *
     * @param {Array} data 루프로 생성될 배열
     * @param {Object} [context=null]
     * @return {Function} 최적화된 루프 콜백 (data, index, groupIndex 3가지 파라미터를 받는다.)
     */
    loopArray: function loopArray(data, context) {
        var total = data.length,
            start = 0,
            end = total,
            unit = Math.ceil(total / 5);

        return function (callback) {
            var first = start,
                second = unit * 1,
                third = unit * 2,
                fourth = unit * 3,
                fifth = unit * 4,
                firstMax = second,
                secondMax = third,
                thirdMax = fourth,
                fourthMax = fifth,
                fifthMax = end;

            while (first < firstMax && first < end) {
                callback.call(context, data[first], first, 1);
                first++;
                if (second < secondMax && second < end) {
                    callback.call(context, data[second], second, 2);
                    second++;
                }
                if (third < thirdMax && third < end) {
                    callback.call(context, data[third], third, 3);
                    third++;
                }
                if (fourth < fourthMax && fourth < end) {
                    callback.call(context, data[fourth], fourth, 4);
                    fourth++;
                }
                if (fifth < fifthMax && fifth < end) {
                    callback.call(context, data[fifth], fifth, 5);
                    fifth++;
                }
            }
        };
    },

    /**
     * @method makeIndex
     *
     * 배열의 키 기반 인덱스를 생성한다.
     *
     * 개별 값 별로 멀티 인덱스를 생성한다.
     *
     * @param {Array} data
     * @param {String} keyField
     * @return {Object} 생성된 인덱스
     */
    makeIndex: function makeIndex(data, keyField) {
        var list = {},
            func = this.loopArray(data);

        func(function (d, i) {
            var value = d[keyField];

            if (typeof list[value] == 'undefined') {
                list[value] = [];
            }

            list[value].push(i);
        });

        return list;
    },

    /**
     * @method startsWith
     * Check that it matches the starting string search string.
     *
     * @param {String} string
     * @param {String} searchString
     * @return {Integer} position
     */
    startsWith: function startsWith(string, searchString, position) {
        position = position || 0;

        return string.lastIndexOf(searchString, position) === position;
    },

    /**
     * @method endsWith
     * Check that it matches the end of a string search string.
     *
     * @param {String} string
     * @param {String} searchString
     * @return {Integer} position
     */
    endsWith: function endsWith(string, searchString, position) {
        var subjectString = string;

        if (position === undefined || position > subjectString.length) {
            position = subjectString.length;
        }

        position -= searchString.length;
        var lastIndex = subjectString.indexOf(searchString, position);

        return lastIndex !== -1 && lastIndex === position;
    },

    inArray: function inArray(target, list) {
        if (this.typeCheck(["undefined", "null"], target) || !this.typeCheck("array", list)) return -1;

        for (var i = 0, len = list.length; i < len; i++) {
            if (list[i] == target) return i;
        }

        return -1;
    },

    trim: function trim(text) {
        var whitespace = "[\\x20\\t\\r\\n\\f]",
            rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g");

        return text == null ? "" : (text + "").replace(rtrim, "");
    },

    ready: function () {
        var readyList,
            _DOMContentLoaded2,
            class2type = {};

        class2type["[object Boolean]"] = "boolean";
        class2type["[object Number]"] = "number";
        class2type["[object String]"] = "string";
        class2type["[object Function]"] = "function";
        class2type["[object Array]"] = "array";
        class2type["[object Date]"] = "date";
        class2type["[object RegExp]"] = "regexp";
        class2type["[object Object]"] = "object";

        var ReadyObj = {
            // Is the DOM ready to be used? Set to true once it occurs.
            isReady: false,
            // A counter to track how many items to wait for before
            // the ready event fires. See #6781
            readyWait: 1,
            // Hold (or release) the ready event
            holdReady: function holdReady(hold) {
                if (hold) {
                    ReadyObj.readyWait++;
                } else {
                    ReadyObj.ready(true);
                }
            },
            // Handle when the DOM is ready
            ready: function ready(wait) {
                // Either a released hold or an DOMready/load event and not yet ready
                if (wait === true && ! --ReadyObj.readyWait || wait !== true && !ReadyObj.isReady) {
                    // Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
                    if (!document.body) {
                        return setTimeout(ReadyObj.ready, 1);
                    }

                    // Remember that the DOM is ready
                    ReadyObj.isReady = true;
                    // If a normal DOM Ready event fired, decrement, and wait if need be
                    if (wait !== true && --ReadyObj.readyWait > 0) {
                        return;
                    }
                    // If there are functions bound, to execute
                    readyList.resolveWith(document, [ReadyObj]);

                    // Trigger any bound ready events
                    //if ( ReadyObj.fn.trigger ) {
                    //  ReadyObj( document ).trigger( "ready" ).unbind( "ready" );
                    //}
                }
            },
            bindReady: function bindReady() {
                if (readyList) {
                    return;
                }
                readyList = ReadyObj._Deferred();

                // Catch cases where $(document).ready() is called after the
                // browser event has already occurred.
                if (document.readyState === "complete") {
                    // Handle it asynchronously to allow scripts the opportunity to delay ready
                    return setTimeout(ReadyObj.ready, 1);
                }

                // Mozilla, Opera and webkit nightlies currently support this event
                if (document.addEventListener) {
                    // Use the handy event callback
                    document.addEventListener("DOMContentLoaded", _DOMContentLoaded2, false);
                    // A fallback to window.onload, that will always work
                    window.addEventListener("load", ReadyObj.ready, false);

                    // If IE event model is used
                } else if (document.attachEvent) {
                    // ensure firing before onload,
                    // maybe late but safe also for iframes
                    document.attachEvent("onreadystatechange", _DOMContentLoaded2);

                    // A fallback to window.onload, that will always work
                    window.attachEvent("onload", ReadyObj.ready);

                    // If IE and not a frame
                    // continually check to see if the document is ready
                    var toplevel = false;

                    try {
                        toplevel = window.frameElement == null;
                    } catch (e) {}

                    if (document.documentElement.doScroll && toplevel) {
                        doScrollCheck();
                    }
                }
            },
            _Deferred: function _Deferred() {
                var // callbacks list
                callbacks = [],

                // stored [ context , args ]
                fired,

                // to avoid firing when already doing so
                firing,

                // flag to know if the deferred has been cancelled
                cancelled,

                // the deferred itself
                deferred = {

                    // done( f1, f2, ...)
                    done: function done() {
                        if (!cancelled) {
                            var args = arguments,
                                i,
                                length,
                                elem,
                                type,
                                _fired;
                            if (fired) {
                                _fired = fired;
                                fired = 0;
                            }
                            for (i = 0, length = args.length; i < length; i++) {
                                elem = args[i];
                                type = ReadyObj.type(elem);
                                if (type === "array") {
                                    deferred.done.apply(deferred, elem);
                                } else if (type === "function") {
                                    callbacks.push(elem);
                                }
                            }
                            if (_fired) {
                                deferred.resolveWith(_fired[0], _fired[1]);
                            }
                        }
                        return this;
                    },

                    // resolve with given context and args
                    resolveWith: function resolveWith(context, args) {
                        if (!cancelled && !fired && !firing) {
                            // make sure args are available (#8421)
                            args = args || [];
                            firing = 1;
                            try {
                                while (callbacks[0]) {
                                    callbacks.shift().apply(context, args); //shifts a callback, and applies it to document
                                }
                            } finally {
                                fired = [context, args];
                                firing = 0;
                            }
                        }
                        return this;
                    },

                    // resolve with this as context and given arguments
                    resolve: function resolve() {
                        deferred.resolveWith(this, arguments);
                        return this;
                    },

                    // Has this deferred been resolved?
                    isResolved: function isResolved() {
                        return !!(firing || fired);
                    },

                    // Cancel
                    cancel: function cancel() {
                        cancelled = 1;
                        callbacks = [];
                        return this;
                    }
                };

                return deferred;
            },
            type: function type(obj) {
                return obj == null ? String(obj) : class2type[Object.prototype.toString.call(obj)] || "object";
            }
            // The DOM ready check for Internet Explorer
        };function doScrollCheck() {
            if (ReadyObj.isReady) {
                return;
            }

            try {
                // If IE is used, use the trick by Diego Perini
                // http://javascript.nwbox.com/IEContentLoaded/
                document.documentElement.doScroll("left");
            } catch (e) {
                setTimeout(doScrollCheck, 1);
                return;
            }

            // and execute any waiting functions
            ReadyObj.ready();
        }
        // Cleanup functions for the document ready method
        if (document.addEventListener) {
            _DOMContentLoaded2 = function DOMContentLoaded() {
                document.removeEventListener("DOMContentLoaded", _DOMContentLoaded2, false);
                ReadyObj.ready();
            };
        } else if (document.attachEvent) {
            _DOMContentLoaded2 = function _DOMContentLoaded() {
                // Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
                if (document.readyState === "complete") {
                    document.detachEvent("onreadystatechange", _DOMContentLoaded2);
                    ReadyObj.ready();
                }
            };
        }
        function ready(fn) {
            // Attach the listeners
            ReadyObj.bindReady();

            var type = ReadyObj.type(fn);

            // Add the callback
            readyList.done(fn); //readyList is result of _Deferred()
        }

        return ready;
    }(),

    param: function param(data) {
        var r20 = /%20/g,
            s = [],
            add = function add(key, value) {
            // If value is a function, invoke it and return its value
            value = utility.typeCheck("function", value) ? value() : value == null ? "" : value;
            s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value);
        };

        for (var key in data) {
            add(key, data[key]);
        }

        return s.join("&").replace(r20, "+");
    },

    ajax: function ajax(data) {
        var xhr = null,
            paramStr = "",
            callback = null;

        var opts = utility.extend({
            url: null,
            type: "GET",
            data: null,
            async: true,
            success: null,
            fail: null
        }, data);

        if (!this.typeCheck("string", opts.url) || !this.typeCheck("function", opts.success)) return;

        if (this.typeCheck("object", opts.data)) paramStr = this.param(opts.data);

        if (!this.typeCheck("undefined", XMLHttpRequest)) {
            xhr = new XMLHttpRequest();
        } else {
            var versions = ["MSXML2.XmlHttp.5.0", "MSXML2.XmlHttp.4.0", "MSXML2.XmlHttp.3.0", "MSXML2.XmlHttp.2.0", "Microsoft.XmlHttp"];

            for (var i = 0, len = versions.length; i < len; i++) {
                try {
                    xhr = new ActiveXObject(versions[i]);
                    break;
                } catch (e) {}
            }
        }

        if (xhr != null) {
            xhr.open(opts.type, opts.url, opts.async);
            xhr.send(paramStr);

            callback = function callback() {
                if (xhr.readyState === 4 && xhr.status == 200) {
                    opts.success(xhr);
                } else {
                    if (utility.typeCheck("function", opts.fail)) {
                        opts.fail(xhr);
                    }
                }
            };

            if (!opts.async) {
                callback();
            } else {
                xhr.onreadystatechange = callback;
            }
        }
    },

    scrollWidth: function scrollWidth() {
        var inner = document.createElement("p");
        inner.style.width = "100%";
        inner.style.height = "200px";

        var outer = document.createElement("div");
        outer.style.position = "absolute";
        outer.style.top = "0px";
        outer.style.left = "0px";
        outer.style.visibility = "hidden";
        outer.style.width = "200px";
        outer.style.height = "150px";
        outer.style.overflow = "hidden";
        outer.appendChild(inner);

        document.body.appendChild(outer);
        var w1 = inner.offsetWidth;
        outer.style.overflow = "scroll";
        var w2 = inner.offsetWidth;
        if (w1 == w2) w2 = outer.clientWidth;
        document.body.removeChild(outer);

        return w1 - w2;
    }

    /*
     * Module related functions
     *
     */
};var getDepends = function getDepends(depends) {
    var args = [];

    for (var i = 0; i < depends.length; i++) {
        var module = global$1[depends[i]];

        if (!utility.typeCheck(["function", "object"], module)) {
            var modules = getModules(depends[i]);

            if (modules == null) {
                console.warn("JUI_WARNING_MSG: '" + depends[i] + "' is not loaded");
                args.push(null);
            } else {
                args.push(modules);
            }
        } else {
            args.push(module);
        }
    }

    return args;
};

var getModules = function getModules(parent) {
    var modules = null,
        parent = parent + ".";

    for (var key in global$1) {
        if (key.indexOf(parent) != -1) {
            if (utility.typeCheck(["function", "object"], global$1[key])) {
                var child = key.split(parent).join("");

                if (child.indexOf(".") == -1) {
                    if (modules == null) {
                        modules = {};
                    }

                    modules[child] = global$1[key];
                }
            }
        }
    }

    return modules;
};

/**
 * @class jui
 *
 * Global Object
 *
 * @singleton
 */
var jui = {

    /**
     * @method ready
     *
     * ready 타임에 실행될 callback 정의
     *
     * @param {Function} callback
     */
    ready: function ready() {
        var args = [],
            callback = arguments.length == 2 ? arguments[1] : arguments[0],
            depends = arguments.length == 2 ? arguments[0] : null;

        if (!utility.typeCheck(["array", "null"], depends) || !utility.typeCheck("function", callback)) {
            throw new Error("JUI_CRITICAL_ERR: Invalid parameter type of the function");
        }

        utility.ready(function () {
            if (depends) {
                args = getDepends(depends);
            } else {
                // @Deprecated 기존의 레거시를 위한 코드
                var ui = getModules("ui"),
                    uix = {};

                utility.extend(uix, ui);
                utility.extend(uix, getModules("grid"));

                args = [ui, uix, utility];
            }

            callback.apply(null, args);
        });
    },

    /**
     * @method defineUI
     *
     * 사용자가 실제로 사용할 수 있는 UI 클래스를 정의
     *
     * @param {String} name 모듈 로드와 상속에 사용될 이름을 정한다.
     * @param {Array} depends 'define'이나 'defineUI'로 정의된 클래스나 객체를 인자로 받을 수 있다.
     * @param {Function} callback UI 클래스를 해당 콜백 함수 내에서 클래스 형태로 구현하고 리턴해야 한다.
     */
    defineUI: function defineUI(name, depends, callback, parent) {
        if (!utility.typeCheck("string", name) || !utility.typeCheck("array", depends) || !utility.typeCheck("function", callback) || !utility.typeCheck(["string", "undefined"], parent)) {
            throw new Error("JUI_CRITICAL_ERR: Invalid parameter type of the function");
        }

        if (utility.typeCheck("function", globalClass[name])) {
            throw new Error("JUI_CRITICAL_ERR: '" + name + "' is already exist");
        }

        if (utility.typeCheck("undefined", parent)) {
            parent = "core";
        }

        if (!utility.typeCheck("function", globalClass[parent])) {
            throw new Error("JUI_CRITICAL_ERR: Parents are the only function");
        } else {
            if (globalFunc[parent] !== true) {
                throw new Error("JUI_CRITICAL_ERR: UI function can not be inherited");
            }
        }

        var args = getDepends(depends),
            uiFunc = callback.apply(null, args);

        // 상속
        utility.inherit(uiFunc, globalClass[parent]);

        // TODO: event를 기본 패키지에 포함하면서 다시 롤백한 코드
        global$1[name] = globalClass[parent != "core" ? "event" : "core"].init({
            type: name,
            "class": uiFunc
        });

        globalClass[name] = uiFunc;
        globalFunc[name] = true;

        /**
         * @deprecated
         // support AMD module
         if (typeof define == "function" && define.amd) {
        define(name, function () {
        return global[name]
        });
        }
         */
    },

    /**
     * @method redefineUI
     *
     * UI 클래스에서 사용될 클래스를 정의하고, 자유롭게 상속할 수 있는 클래스를 정의
     *
     * @param {String} name 모듈 로드와 상속에 사용될 이름을 정한다.
     * @param {Array} depends 'define'이나 'defineUI'로 정의된 클래스나 객체를 인자로 받을 수 있다.
     * @param {Function} callback UI 클래스를 해당 콜백 함수 내에서 클래스 형태로 구현하고 리턴해야 한다.
     * @param {String} parent 상속받을 클래스
     */
    redefineUI: function redefineUI(name, depends, callback, parent, skip) {
        if (!skip && globalFunc[name] === true) {
            global$1[name] = null;
            globalClass[name] = null;
            globalFunc[name] = false;
        }

        if (!skip || skip && globalFunc[name] !== true) {
            this.defineUI(name, depends, callback, parent);
        }
    },

    createUIObject: function createUIObject(UI, selector, index, elem, options, afterHook) {
        var mainObj = new UI["class"]();

        // Check Options
        var opts = jui.defineOptions(UI["class"], options || {});

        // Public Properties
        mainObj.init.prototype = mainObj;
        /** @property {String/HTMLElement} selector */
        mainObj.init.prototype.selector = selector;
        /** @property {HTMLElement} root */
        mainObj.init.prototype.root = elem;
        /** @property {Object} options */
        mainObj.init.prototype.options = opts;
        /** @property {Object} tpl Templates */
        mainObj.init.prototype.tpl = {};
        /** @property {Array} event Custom events */
        mainObj.init.prototype.event = new Array(); // Custom Event
        /** @property {Integer} timestamp UI Instance creation time*/
        mainObj.init.prototype.timestamp = new Date().getTime();
        /** @property {Integer} index Index of UI instance*/
        mainObj.init.prototype.index = index;
        /** @property {Class} module Module class */
        mainObj.init.prototype.module = UI;

        // UI 객체 프로퍼티를 외부에서 정의할 수 있음 (jQuery 의존성 제거를 위한 코드)
        if (utility.typeCheck("function", afterHook)) {
            afterHook(mainObj, opts);
        }

        // Script-based Template Settings
        for (var name in opts.tpl) {
            var tplHtml = opts.tpl[name];

            if (utility.typeCheck("string", tplHtml) && tplHtml != "") {
                mainObj.init.prototype.tpl[name] = utility.template(tplHtml);
            }
        }

        var uiObj = new mainObj.init();

        // Custom Event Setting
        for (var key in opts.event) {
            uiObj.on(key, opts.event[key]);
        }

        // 엘리먼트 객체에 jui 속성 추가
        elem.jui = uiObj;

        return uiObj;
    },

    /**
     * @method define
     *
     * UI 클래스에서 사용될 클래스를 정의하고, 자유롭게 상속할 수 있는 클래스를 정의
     *
     * @param {String} name 모듈 로드와 상속에 사용될 이름을 정한다.
     * @param {Array} depends 'define'이나 'defineUI'로 정의된 클래스나 객체를 인자로 받을 수 있다.
     * @param {Function} callback UI 클래스를 해당 콜백 함수 내에서 클래스 형태로 구현하고 리턴해야 한다.
     * @param {String} parent 상속받을 클래스
     */
    define: function define(name, depends, callback, parent) {
        if (!utility.typeCheck("string", name) || !utility.typeCheck("array", depends) || !utility.typeCheck("function", callback) || !utility.typeCheck(["string", "undefined", "null"], parent)) {
            throw new Error("JUI_CRITICAL_ERR: Invalid parameter type of the function");
        }

        if (utility.typeCheck("function", globalClass[name])) {
            throw new Error("JUI_CRITICAL_ERR: '" + name + "' is already exist");
        }

        var args = getDepends(depends),
            uiFunc = callback.apply(null, args);

        if (utility.typeCheck("function", globalClass[parent])) {
            if (globalFunc[parent] !== true) {
                throw new Error("JUI_CRITICAL_ERR: UI function can not be inherited");
            } else {
                utility.inherit(uiFunc, globalClass[parent]);
            }
        }

        // 함수 고유 설정
        global$1[name] = uiFunc;
        globalClass[name] = uiFunc; // original function
        globalFunc[name] = true;

        // support AMD module
        // @deprecated
        /*
        if (typeof define == "function" && define.amd) {
            define(name, function () {
                return global[name]
            });
        }*/
    },

    /**
     * @method redefine
     *
     * UI 클래스에서 사용될 클래스를 정의하고, 자유롭게 상속할 수 있는 클래스를 정의
     *
     * @param {String} name 모듈 로드와 상속에 사용될 이름을 정한다.
     * @param {Array} depends 'define'이나 'defineUI'로 정의된 클래스나 객체를 인자로 받을 수 있다.
     * @param {Function} callback UI 클래스를 해당 콜백 함수 내에서 클래스 형태로 구현하고 리턴해야 한다.
     * @param {String} parent 상속받을 클래스
     */
    redefine: function redefine(name, depends, callback, parent, skip) {
        if (!skip && globalFunc[name] === true) {
            global$1[name] = null;
            globalClass[name] = null;
            globalFunc[name] = false;
        }

        if (!skip || skip && globalFunc[name] !== true) {
            this.define(name, depends, callback, parent);
        }
    },

    /**
     * @method defineOptions
     *
     * 모듈 기본 옵션 정의
     *
     * @param {Object} Module
     * @param {Object} options
     * @param {Object} exceptOpts
     * @return {Object}
     */
    defineOptions: function defineOptions(Module, options, exceptOpts) {
        var defOpts = getOptions(Module, {});
        var defOptKeys = Object.keys(defOpts),
            optKeys = Object.keys(options);

        // 정의되지 않은 옵션 사용 유무 체크
        for (var i = 0; i < optKeys.length; i++) {
            var name = optKeys[i];

            if (utility.inArray(name, defOptKeys) == -1 && utility.inArray(name, exceptOpts) == -1) {
                throw new Error("JUI_CRITICAL_ERR: '" + name + "' is not an option");
            }
        }

        // 사용자 옵션 + 기본 옵션
        utility.extend(options, defOpts, true);

        // 상위 모듈의 옵션까지 모두 얻어오는 함수
        function getOptions(Module, options) {
            if (utility.typeCheck("function", Module)) {
                if (utility.typeCheck("function", Module.setup)) {
                    var opts = Module.setup();

                    for (var key in opts) {
                        if (utility.typeCheck("undefined", options[key])) {
                            options[key] = opts[key];
                        }
                    }
                }

                getOptions(Module.parent, options);
            }

            return options;
        }

        return options;
    },

    /**
     * define과 defineUI로 정의된 클래스 또는 객체를 가져온다.
     *
     * @param name 가져온 클래스 또는 객체의 이름
     * @return {*}
     */
    include: function include(name) {
        if (!utility.typeCheck("string", name)) {
            throw new Error("JUI_CRITICAL_ERR: Invalid parameter type of the function");
        }

        var module = global$1[name];

        if (utility.typeCheck(["function", "object"], module)) {
            return module;
        } else {
            var modules = getModules(name);

            if (modules == null) {
                console.warn("JUI_WARNING_MSG: '" + name + "' is not loaded");
                return null;
            } else {
                return modules;
            }
        }
    },

    /**
     * define과 defineUI로 정의된 모든 클래스와 객체를 가져온다.
     *
     * @return {Array}
     */
    includeAll: function includeAll() {
        var result = [];

        for (var key in global$1) {
            result.push(global$1[key]);
        }

        return result;
    },

    /**
     * 설정된 jui 관리 화면을 윈도우 팝업으로 띄운다.
     *
     * @param logUrl
     * @return {Window}
     */
    log: function log(logUrl) {
        var jui_mng = window.open(logUrl || globalOpts.logUrl, "JUIM", "width=1024, height=768, toolbar=no, menubar=no, resizable=yes");

        jui.debugAll(function (log, str) {
            jui_mng.log(log, str);
        });

        return jui_mng;
    },

    setup: function setup(options) {
        if (utility.typeCheck("object", options)) {
            globalOpts = utility.extend(globalOpts, options);
        }

        return globalOpts;
    },

    use: function use() {
        var modules = [];

        for (var i = 0; i < arguments.length; i++) {
            if (utility.typeCheck("array", arguments[i])) {
                var list = arguments[i];

                for (var j = 0; j < list.length; j++) {
                    if (utility.typeCheck("object", list[j])) {
                        modules.push(list[j]);
                    }
                }
            } else if (utility.typeCheck("object", arguments[i])) {
                modules.push(arguments[i]);
            }
        }

        for (var i = 0; i < modules.length; i++) {
            var module = modules[i];

            if ((typeof module === "undefined" ? "undefined" : _typeof(module)) == "object") {
                if (typeof module.name != "string") return;
                if (typeof module.component != "function") return;

                // 상속 대상 부모 클래스가 존재할 경우
                if (module.extend != null) {
                    if (jui.include(module.extend) == null) {
                        console.warn("JUI_WARNING_MSG: '" + module.extend + "' module should be imported in first");
                    }
                }

                if (module.extend == "core" || module.extend == "event") {
                    jui.redefineUI(module.name, [], module.component, module.extend);
                } else {
                    jui.redefine(module.name, [], module.component, module.extend);
                }
            }
        }
    }
};

var dom = {
    name: "util.dom",
    extend: null,
    component: function component() {
        var _ = jui.include("util.base");

        return {
            find: function find() {
                var args = arguments;

                if (args.length == 1) {
                    if (_.typeCheck("string", args[0])) {
                        return document.querySelectorAll(args[0]);
                    }
                } else if (args.length == 2) {
                    if (_.typeCheck("object", args[0]) && _.typeCheck("string", args[1])) {
                        return args[0].querySelectorAll(args[1]);
                    }
                }

                return [];
            },

            each: function each(selectorOrElements, callback) {
                if (!_.typeCheck("function", callback)) return;

                var elements = null;

                if (_.typeCheck("string", selectorOrElements)) {
                    elements = document.querySelectorAll(selectorOrElements);
                } else if (_.typeCheck("array", selectorOrElements)) {
                    elements = selectorOrElements;
                }

                if (elements != null) {
                    Array.prototype.forEach.call(elements, function (el, i) {
                        callback.apply(el, [i, el]);
                    });
                }
            },

            attr: function attr(selectorOrElements, keyOrAttributes) {
                if (!_.typeCheck(["string", "array"], selectorOrElements)) return;

                var elements = document.querySelectorAll(selectorOrElements);

                if (_.typeCheck("object", keyOrAttributes)) {
                    // set
                    for (var i = 0; i < elements.length; i++) {
                        for (var key in keyOrAttributes) {
                            elements[i].setAttribute(key, keyOrAttributes[key]);
                        }
                    }
                } else if (_.typeCheck("string", keyOrAttributes)) {
                    // get
                    if (elements.length > 0) {
                        return elements[0].getAttribute(keyOrAttributes);
                    }
                }
            },

            remove: function remove(selectorOrElements) {
                this.each(selectorOrElements, function () {
                    this.parentNode.removeChild(this);
                });
            },

            offset: function offset(elem) {
                function isWindow(obj) {
                    /* jshint eqeqeq: false */
                    return obj != null && obj == obj.window;
                }

                function getWindow(elem) {
                    return isWindow(elem) ? elem : elem.nodeType === 9 ? elem.defaultView || elem.parentWindow : false;
                }

                var docElem,
                    win,
                    box = { top: 0, left: 0 },
                    doc = elem && elem.ownerDocument;

                if (!doc) {
                    return;
                }

                docElem = doc.documentElement;

                // Make sure it's not a disconnected DOM node
                /*/
                 if ( !global.jquery.contains( docElem, elem ) ) {
                 return box;
                 }
                 /**/

                // If we don't have gBCR, just use 0,0 rather than error
                // BlackBerry 5, iOS 3 (original iPhone)
                var strundefined = "undefined";
                if (_typeof(elem.getBoundingClientRect) !== strundefined) {
                    box = elem.getBoundingClientRect();
                }
                win = getWindow(doc);

                return {
                    top: box.top + (win.pageYOffset || docElem.scrollTop) - (docElem.clientTop || 0),
                    left: box.left + (win.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || 0)
                };
            }
        };
    }
};

var SortUtil = {
    name: "util.sort",
    extend: null,
    component: function component() {
        var QuickSort = function QuickSort(array, isClone) {
            var compareFunc = null,
                array = isClone ? array.slice(0) : array;

            function swap(indexA, indexB) {
                var temp = array[indexA];

                array[indexA] = array[indexB];
                array[indexB] = temp;
            }

            function partition(pivot, left, right) {
                var storeIndex = left,
                    pivotValue = array[pivot];
                swap(pivot, right);

                for (var v = left; v < right; v++) {
                    if (compareFunc(array[v], pivotValue) || !compareFunc(pivotValue, array[v]) && v % 2 == 1) {
                        swap(v, storeIndex);
                        storeIndex++;
                    }
                }

                swap(right, storeIndex);

                return storeIndex;
            }

            this.setCompare = function (func) {
                compareFunc = func;
            };

            this.run = function (left, right) {
                var pivot = null,
                    newPivot = null;

                if (typeof left !== 'number') {
                    left = 0;
                }

                if (typeof right !== 'number') {
                    right = array.length - 1;
                }

                if (left < right) {
                    pivot = left + Math.ceil((right - left) * 0.5);
                    newPivot = partition(pivot, left, right);

                    this.run(left, newPivot - 1);
                    this.run(newPivot + 1, right);
                }

                return array;
            };
        };

        return QuickSort;
    }
};

var KeyParserUtil = {
    name: "util.keyparser",
    extend: null,
    component: function component() {
        var KeyParser = function KeyParser() {

            /**
             * @method isIndexDepth
             *
             * @param {String} index
             * @return {Boolean}
             */
            this.isIndexDepth = function (index) {
                if (typeof index == "string" && index.indexOf(".") != -1) {
                    return true;
                }

                return false;
            };

            /**
             * @method getIndexList
             *
             * @param {String} index
             * @return {Array}
             */
            this.getIndexList = function (index) {
                // 트리 구조의 모든 키를 배열 형태로 반환
                var resIndex = [],
                    strIndexes = ("" + index).split(".");

                for (var i = 0; i < strIndexes.length; i++) {
                    resIndex[i] = parseInt(strIndexes[i]);
                }

                return resIndex;
            };

            /**
             * @method changeIndex
             *
             *
             * @param {String} index
             * @param {String} targetIndex
             * @param {String} rootIndex
             * @return {String}
             */
            this.changeIndex = function (index, targetIndex, rootIndex) {
                var rootIndexLen = this.getIndexList(rootIndex).length,
                    indexList = this.getIndexList(index),
                    tIndexList = this.getIndexList(targetIndex);

                for (var i = 0; i < rootIndexLen; i++) {
                    indexList.shift();
                }

                return tIndexList.concat(indexList).join(".");
            };

            /**
             * @method getNextIndex
             *
             * @param {String} index
             * @return {String}
             */
            this.getNextIndex = function (index) {
                // 현재 인덱스에서 +1
                var indexList = this.getIndexList(index),
                    no = indexList.pop() + 1;

                indexList.push(no);
                return indexList.join(".");
            };

            /**
             * @method getParentIndex
             *
             *
             * @param {String} index
             * @returns {*}
             */
            this.getParentIndex = function (index) {
                if (!this.isIndexDepth(index)) return null;

                return index.substr(0, index.lastIndexOf("."));
            };
        };

        return KeyParser;
    }
};

var Base64Util = {
    name: "util.base64",
    extend: null,
    component: function component() {
        var Base64 = {

            // private property
            _keyStr: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",

            // public method for encoding
            encode: function encode(input) {
                var output = "";
                var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
                var i = 0;

                input = Base64._utf8_encode(input);

                while (i < input.length) {

                    chr1 = input.charCodeAt(i++);
                    chr2 = input.charCodeAt(i++);
                    chr3 = input.charCodeAt(i++);

                    enc1 = chr1 >> 2;
                    enc2 = (chr1 & 3) << 4 | chr2 >> 4;
                    enc3 = (chr2 & 15) << 2 | chr3 >> 6;
                    enc4 = chr3 & 63;

                    if (isNaN(chr2)) {
                        enc3 = enc4 = 64;
                    } else if (isNaN(chr3)) {
                        enc4 = 64;
                    }

                    output = output + Base64._keyStr.charAt(enc1) + Base64._keyStr.charAt(enc2) + Base64._keyStr.charAt(enc3) + Base64._keyStr.charAt(enc4);
                }

                return output;
            },

            // public method for decoding
            decode: function decode(input) {
                var output = "";
                var chr1, chr2, chr3;
                var enc1, enc2, enc3, enc4;
                var i = 0;

                input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");

                while (i < input.length) {

                    enc1 = Base64._keyStr.indexOf(input.charAt(i++));
                    enc2 = Base64._keyStr.indexOf(input.charAt(i++));
                    enc3 = Base64._keyStr.indexOf(input.charAt(i++));
                    enc4 = Base64._keyStr.indexOf(input.charAt(i++));

                    chr1 = enc1 << 2 | enc2 >> 4;
                    chr2 = (enc2 & 15) << 4 | enc3 >> 2;
                    chr3 = (enc3 & 3) << 6 | enc4;

                    output = output + String.fromCharCode(chr1);

                    if (enc3 != 64) {
                        output = output + String.fromCharCode(chr2);
                    }
                    if (enc4 != 64) {
                        output = output + String.fromCharCode(chr3);
                    }
                }

                output = Base64._utf8_decode(output);

                return output;
            },

            // private method for UTF-8 encoding
            _utf8_encode: function _utf8_encode(string) {
                string = string.replace(/\r\n/g, "\n");

                var utftext = String.fromCharCode(239) + String.fromCharCode(187) + String.fromCharCode(191);

                for (var n = 0; n < string.length; n++) {

                    var c = string.charCodeAt(n);

                    if (c < 128) {
                        utftext += String.fromCharCode(c);
                    } else if (c > 127 && c < 2048) {
                        utftext += String.fromCharCode(c >> 6 | 192);
                        utftext += String.fromCharCode(c & 63 | 128);
                    } else {
                        utftext += String.fromCharCode(c >> 12 | 224);
                        utftext += String.fromCharCode(c >> 6 & 63 | 128);
                        utftext += String.fromCharCode(c & 63 | 128);
                    }
                }

                return utftext;
            },

            // private method for UTF-8 decoding
            _utf8_decode: function _utf8_decode(utftext) {
                var string = "";
                var i = 0;
                var c = c1 = c2 = 0;

                while (i < utftext.length) {

                    c = utftext.charCodeAt(i);

                    if (c < 128) {
                        string += String.fromCharCode(c);
                        i++;
                    } else if (c > 191 && c < 224) {
                        c2 = utftext.charCodeAt(i + 1);
                        string += String.fromCharCode((c & 31) << 6 | c2 & 63);
                        i += 2;
                    } else {
                        c2 = utftext.charCodeAt(i + 1);
                        c3 = utftext.charCodeAt(i + 2);
                        string += String.fromCharCode((c & 15) << 12 | (c2 & 63) << 6 | c3 & 63);
                        i += 3;
                    }
                }

                return string;
            }
        };

        return Base64;
    }
};

var math = {
    name: "util.math",
    extend: null,
    component: function component() {
        var _ = jui.include("util.base");

        // 2x1 or 3x1 or ?x1 형태의 매트릭스 연산
        function _matrix(a, b) {
            var m = [];

            for (var i = 0, len = a.length; i < len; i++) {
                var sum = 0;

                for (var j = 0, len2 = a[i].length; j < len2; j++) {
                    sum += a[i][j] * b[j];
                }

                m.push(sum);
            }

            return m;
        }

        // 2x2 or 3x3 or ?x? 형태의 매트릭스 연산
        function deepMatrix(a, b) {
            var m = [],
                nm = [];

            for (var i = 0, len = b.length; i < len; i++) {
                m[i] = [];
                nm[i] = [];
            }

            for (var i = 0, len = b.length; i < len; i++) {
                for (var j = 0, len2 = b[i].length; j < len2; j++) {
                    m[j].push(b[i][j]);
                }
            }

            for (var i = 0, len = m.length; i < len; i++) {
                var mm = _matrix(a, m[i]);

                for (var j = 0, len2 = mm.length; j < len2; j++) {
                    nm[j].push(mm[j]);
                }
            }

            return nm;
        }

        function _matrix3d(a, b) {
            var m = new Float32Array(4);

            m[0] = a[0][0] * b[0] + a[0][1] * b[1] + a[0][2] * b[2] + a[0][3] * b[3];
            m[1] = a[1][0] * b[0] + a[1][1] * b[1] + a[1][2] * b[2] + a[1][3] * b[3];
            m[2] = a[2][0] * b[0] + a[2][1] * b[1] + a[2][2] * b[2] + a[2][3] * b[3];
            m[3] = a[3][0] * b[0] + a[3][1] * b[1] + a[3][2] * b[2] + a[3][3] * b[3];

            return m;
        }

        function deepMatrix3d(a, b) {
            var nm = [new Float32Array(4), new Float32Array(4), new Float32Array(4), new Float32Array(4)];

            var m = [new Float32Array([b[0][0], b[1][0], b[2][0], b[3][0]]), new Float32Array([b[0][1], b[1][1], b[2][1], b[3][1]]), new Float32Array([b[0][2], b[1][2], b[2][2], b[3][2]]), new Float32Array([b[0][3], b[1][3], b[2][3], b[3][3]])];

            nm[0][0] = a[0][0] * m[0][0] + a[0][1] * m[0][1] + a[0][2] * m[0][2] + a[0][3] * m[0][3];
            nm[1][0] = a[1][0] * m[0][0] + a[1][1] * m[0][1] + a[1][2] * m[0][2] + a[1][3] * m[0][3];
            nm[2][0] = a[2][0] * m[0][0] + a[2][1] * m[0][1] + a[2][2] * m[0][2] + a[2][3] * m[0][3];
            nm[3][0] = a[3][0] * m[0][0] + a[3][1] * m[0][1] + a[3][2] * m[0][2] + a[3][3] * m[0][3];

            nm[0][1] = a[0][0] * m[1][0] + a[0][1] * m[1][1] + a[0][2] * m[1][2] + a[0][3] * m[1][3];
            nm[1][1] = a[1][0] * m[1][0] + a[1][1] * m[1][1] + a[1][2] * m[1][2] + a[1][3] * m[1][3];
            nm[2][1] = a[2][0] * m[1][0] + a[2][1] * m[1][1] + a[2][2] * m[1][2] + a[2][3] * m[1][3];
            nm[3][1] = a[3][0] * m[1][0] + a[3][1] * m[1][1] + a[3][2] * m[1][2] + a[3][3] * m[1][3];

            nm[0][2] = a[0][0] * m[2][0] + a[0][1] * m[2][1] + a[0][2] * m[2][2] + a[0][3] * m[2][3];
            nm[1][2] = a[1][0] * m[2][0] + a[1][1] * m[2][1] + a[1][2] * m[2][2] + a[1][3] * m[2][3];
            nm[2][2] = a[2][0] * m[2][0] + a[2][1] * m[2][1] + a[2][2] * m[2][2] + a[2][3] * m[2][3];
            nm[3][2] = a[3][0] * m[2][0] + a[3][1] * m[2][1] + a[3][2] * m[2][2] + a[3][3] * m[2][3];

            nm[0][3] = a[0][0] * m[3][0] + a[0][1] * m[3][1] + a[0][2] * m[3][2] + a[0][3] * m[3][3];
            nm[1][3] = a[1][0] * m[3][0] + a[1][1] * m[3][1] + a[1][2] * m[3][2] + a[1][3] * m[3][3];
            nm[2][3] = a[2][0] * m[3][0] + a[2][1] * m[3][1] + a[2][2] * m[3][2] + a[2][3] * m[3][3];
            nm[3][3] = a[3][0] * m[3][0] + a[3][1] * m[3][1] + a[3][2] * m[3][2] + a[3][3] * m[3][3];

            return nm;
        }

        function _inverseMatrix3d(me) {
            var te = [new Float32Array(4), new Float32Array(4), new Float32Array(4), new Float32Array(4)];

            var n11 = me[0][0],
                n12 = me[0][1],
                n13 = me[0][2],
                n14 = me[0][3];
            var n21 = me[1][0],
                n22 = me[1][1],
                n23 = me[1][2],
                n24 = me[1][3];
            var n31 = me[2][0],
                n32 = me[2][1],
                n33 = me[2][2],
                n34 = me[2][3];
            var n41 = me[3][0],
                n42 = me[3][1],
                n43 = me[3][2],
                n44 = me[3][3];

            te[0][0] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;
            te[0][1] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;
            te[0][2] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;
            te[0][3] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;
            te[1][0] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;
            te[1][1] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;
            te[1][2] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;
            te[1][3] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;
            te[2][0] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;
            te[2][1] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;
            te[2][2] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;
            te[2][3] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;
            te[3][0] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;
            te[3][1] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;
            te[3][2] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;
            te[3][4] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;

            var det = 1 / (n11 * te[0][0] + n21 * te[0][1] + n31 * te[0][2] + n41 * te[0][3]);

            if (det === 0) {
                te = [new Float32Array([1, 0, 0, 0]), new Float32Array([0, 1, 0, 0]), new Float32Array([0, 0, 1, 0]), new Float32Array([0, 0, 0, 1])];
            } else {
                te[0][0] *= det;te[0][1] *= det;te[0][2] *= det;te[0][3] *= det;
                te[1][0] *= det;te[1][1] *= det;te[1][2] *= det;te[1][3] *= det;
                te[2][0] *= det;te[2][1] *= det;te[2][2] *= det;te[2][3] *= det;
                te[3][0] *= det;te[3][1] *= det;te[3][2] *= det;te[3][4] *= det;
            }

            return te;
        }

        /**
         * @class util.math
         *
         * Math Utility
         *
         * @singleton
         */
        var self = {

            /**
             * @method rotate
             *
             * 2d rotate
             *
             * @param {Number} x
             * @param {Number} y
             * @param {Number} radian	roate 할 radian
             * @return {Object}
             * @return {Number} return.x  변환된 x
             * @return {Number} return.y  변환된 y
             *
             */
            rotate: function rotate(x, y, radian) {
                return {
                    x: x * Math.cos(radian) - y * Math.sin(radian),
                    y: x * Math.sin(radian) + y * Math.cos(radian)
                };
            },

            resize: function resize(maxWidth, maxHeight, objectWidth, objectHeight) {
                var ratio = objectHeight / objectWidth;

                if (objectWidth >= maxWidth && ratio <= 1) {
                    objectWidth = maxWidth;
                    objectHeight = maxHeight * ratio;
                } else if (objectHeight >= maxHeight) {
                    objectHeight = maxHeight;
                    objectWidth = maxWidth / ratio;
                }

                return { width: objectWidth, height: objectHeight };
            },

            /**
             * @method radian
             *
             * convert degree to radian
             *
             * @param {Number} degree
             * @return {Number} radian
             */
            radian: function radian(degree) {
                return degree * Math.PI / 180;
            },

            /**
             * @method degree
             *
             * convert radian to degree
             *
             * @param {Number} radian
             * @return {Number} degree
             */
            degree: function degree(radian) {
                return radian * 180 / Math.PI;
            },

            angle: function angle(x1, y1, x2, y2) {
                var dx = x2 - x1,
                    dy = y2 - y1;

                return Math.atan2(dy, dx);
            },

            /**
             * @method interpolateNumber
             *
             * a, b 의 중간값 계산을 위한 callback 함수 만들기
             *
             * @param {Number} a	first value
             * @param {Number} b 	second value
             * @return {Function}
             */
            interpolateNumber: function interpolateNumber(a, b) {
                var dist = b - a;
                return function (t) {
                    return a + dist * t;
                };
            },

            // 중간값 round 해서 계산하기
            interpolateRound: function interpolateRound(a, b) {

                var dist = b - a;
                return function (t) {
                    return Math.round(a + dist * t);
                };
            },

            getFixed: function getFixed(a, b) {
                var aArr = (a + "").split(".");
                var aLen = aArr.length < 2 ? 0 : aArr[1].length;

                var bArr = (b + "").split(".");
                var bLen = bArr.length < 2 ? 0 : bArr[1].length;

                return aLen > bLen ? aLen : bLen;
            },

            fixed: function fixed(_fixed) {

                var fixedNumber = this.getFixed(_fixed, 0);
                var pow = Math.pow(10, fixedNumber);

                var func = function func(value) {
                    return Math.round(value * pow) / pow;
                };

                func.plus = function (a, b) {
                    return Math.round(a * pow + b * pow) / pow;
                };

                func.minus = function (a, b) {
                    return Math.round(a * pow - b * pow) / pow;
                };

                func.multi = function (a, b) {
                    return Math.round(a * pow * (b * pow)) / (pow * pow);
                };

                func.div = function (a, b) {
                    var result = a * pow / (b * pow);
                    var pow2 = Math.pow(10, this.getFixed(result, 0));
                    return Math.round(result * pow2) / pow2;
                };

                func.remain = function (a, b) {
                    return Math.round(a * pow % (b * pow)) / pow;
                };

                return func;
            },

            round: function round(num, fixed) {
                var fixedNumber = Math.pow(10, fixed);

                return Math.round(num * fixedNumber) / fixedNumber;
            },

            plus: function plus(a, b) {
                var pow = Math.pow(10, this.getFixed(a, b));

                return Math.round(a * pow + b * pow) / pow;
            },

            minus: function minus(a, b) {
                var pow = Math.pow(10, this.getFixed(a, b));
                return Math.round(a * pow - b * pow) / pow;
            },

            multi: function multi(a, b) {
                var pow = Math.pow(10, this.getFixed(a, b));
                return Math.round(a * pow * (b * pow)) / (pow * pow);
            },

            div: function div(a, b) {
                var pow = Math.pow(10, this.getFixed(a, b));

                var result = a * pow / (b * pow);
                var pow2 = Math.pow(10, this.getFixed(result, 0));
                return Math.round(result * pow2) / pow2;
            },

            remain: function remain(a, b) {
                var pow = Math.pow(10, this.getFixed(a, b));
                return Math.round(a * pow % (b * pow)) / pow;
            },

            /**
             * 특정 구간의 값을 자동으로 계산
             *
             * @param {Object} min
             * @param {Object} max
             * @param {Object} ticks
             * @param {Object} isNice
             */
            nice: function nice(min, max, ticks, isNice) {
                isNice = isNice || false;

                if (min > max) {
                    var _max = min;
                    var _min = max;
                } else {
                    var _min = min;
                    var _max = max;
                }

                var _ticks = ticks;
                var _tickSpacing = 0;
                var _range = [];
                var _niceMin;
                var _niceMax;

                function niceNum(range, round) {
                    var exponent = Math.floor(Math.log(range) / Math.LN10);
                    var fraction = range / Math.pow(10, exponent);

                    if (round) {
                        if (fraction < 1.5) niceFraction = 1;else if (fraction < 3) niceFraction = 2;else if (fraction < 7) niceFraction = 5;else niceFraction = 10;
                    } else {
                        if (fraction <= 1) niceFraction = 1;else if (fraction <= 2) niceFraction = 2;else if (fraction <= 5) niceFraction = 5;else niceFraction = 10;

                        //console.log(niceFraction)
                    }

                    return niceFraction * Math.pow(10, exponent);
                }

                function caculate() {
                    _range = isNice ? niceNum(_max - _min, false) : _max - _min;
                    _tickSpacing = isNice ? niceNum(_range / _ticks, true) : _range / _ticks;
                    _niceMin = isNice ? Math.floor(_min / _tickSpacing) * _tickSpacing : _min;
                    _niceMax = isNice ? Math.floor(_max / _tickSpacing) * _tickSpacing : _max;
                }

                caculate();

                return {
                    min: _niceMin,
                    max: _niceMax,
                    range: _range,
                    spacing: _tickSpacing
                };
            },

            matrix: function matrix(a, b) {
                if (_.typeCheck("array", b[0])) {
                    return deepMatrix(a, b);
                }

                return _matrix(a, b);
            },

            matrix3d: function matrix3d(a, b) {
                if (b[0] instanceof Array || b[0] instanceof Float32Array) {
                    return deepMatrix3d(a, b);
                }

                return _matrix3d(a, b);
            },

            inverseMatrix3d: function inverseMatrix3d(a) {
                return _inverseMatrix3d(a);
            },

            scaleValue: function scaleValue(value, minValue, maxValue, minScale, maxScale) {
                // 최소/최대 값이 같을 경우 처리
                minValue = minValue == maxValue ? 0 : minValue;

                var range = maxScale - minScale,
                    tg = range * getPer();

                function getPer() {
                    var range = maxValue - minValue,
                        tg = value - minValue,
                        per = tg / range;

                    return per;
                }

                return tg + minScale;
            }
        };

        return self;
    }
};

var TemplateUtil = {
    name: "util.template",
    extend: null,
    component: function component() {
        var template = function template(text, data, settings) {
            var _ = {},
                breaker = {};

            var ArrayProto = Array.prototype,
                slice = ArrayProto.slice,
                nativeForEach = ArrayProto.forEach;

            var escapes = {
                '\\': '\\',
                "'": "'",
                'r': '\r',
                'n': '\n',
                't': '\t',
                'u2028': '\u2028',
                'u2029': '\u2029'
            };

            for (var p in escapes) {
                escapes[escapes[p]] = p;
            }var escaper = /\\|'|\r|\n|\t|\u2028|\u2029/g,
                unescaper = /\\(\\|'|r|n|t|u2028|u2029)/g,
                noMatch = /.^/;

            var unescape = function unescape(code) {
                return code.replace(unescaper, function (match, escape) {
                    return escapes[escape];
                });
            };

            var each = _.each = _.forEach = function (obj, iterator, context) {
                if (obj == null) return;
                if (nativeForEach && obj.forEach === nativeForEach) {
                    obj.forEach(iterator, context);
                } else if (obj.length === +obj.length) {
                    for (var i = 0, l = obj.length; i < l; i++) {
                        if (i in obj && iterator.call(context, obj[i], i, obj) === breaker) return;
                    }
                } else {
                    for (var key in obj) {
                        if (_.has(obj, key)) {
                            if (iterator.call(context, obj[key], key, obj) === breaker) return;
                        }
                    }
                }
            };

            _.has = function (obj, key) {
                return hasOwnProperty.call(obj, key);
            };

            _.defaults = function (obj) {
                each(slice.call(arguments, 1), function (source) {
                    for (var prop in source) {
                        if (obj[prop] == null) obj[prop] = source[prop];
                    }
                });
                return obj;
            };

            _.template = function (text, data, settings) {
                settings = _.defaults(settings || {});

                var source = "__p+='" + text.replace(escaper, function (match) {
                    return '\\' + escapes[match];
                }).replace(settings.escape || noMatch, function (match, code) {
                    return "'+\nescape(" + unescape(code) + ")+\n'";
                }).replace(settings.interpolate || noMatch, function (match, code) {
                    return "'+\n(" + unescape(code) + ")+\n'";
                }).replace(settings.evaluate || noMatch, function (match, code) {
                    return "';\n" + unescape(code) + "\n;__p+='";
                }) + "';\n";

                if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

                source = "var __p='';" + "var print=function(){__p+=Array.prototype.join.call(arguments, '')};\n" + source + "return __p;\n";

                var render = new Function(settings.variable || 'obj', '_', source);
                if (data) return render(data, _);
                var template = function template(data) {
                    return render.call(this, data, _);
                };

                template.source = 'function(' + (settings.variable || 'obj') + '){\n' + source + '}';

                return template;
            };

            return _.template(text, data, settings);
        };

        return template;
    }
};

jui.use(math);

var ColorUtil = {
    name: "util.color",
    extend: null,
    component: function component() {
        var _ = jui.include("util.base");
        var math$$1 = jui.include("util.math");

        function generateHash(name) {
            // Return a vector (0.0->1.0) that is a hash of the input string.
            // The hash is computed to favor early characters over later ones, so
            // that strings with similar starts have similar vectors. Only the first
            // 6 characters are considered.
            var hash = 0,
                weight = 1,
                max_hash = 0,
                mod = 10,
                max_char = 6;

            if (name) {
                for (var i = 0; i < name.length; i++) {
                    if (i > max_char) {
                        break;
                    }
                    hash += weight * (name.charCodeAt(i) % mod);
                    max_hash += weight * (mod - 1);
                    weight *= 0.70;
                }
                if (max_hash > 0) {
                    hash = hash / max_hash;
                }
            }
            return hash;
        }

        /**
         *  @class util.color
         *
         * color utility
         *
         * @singleton
         */
        var self = {

            regex: /(linear|radial)\((.*)\)(.*)/i,

            /**
             * @method format
             *
             * convert color to format string
             *
             *     // hex
             *     color.format({ r : 255, g : 255, b : 255 }, 'hex')  // #FFFFFF
             *
             *     // rgb
             *     color.format({ r : 255, g : 255, b : 255 }, 'rgb') // rgba(255, 255, 255, 0.5);
             *
             *     // rgba
             *     color.format({ r : 255, g : 255, b : 255, a : 0.5 }, 'rgb') // rgba(255, 255, 255, 0.5);
             *
             * @param {Object} obj  obj has r, g, b and a attributes
             * @param {"hex"/"rgb"} type  format string type
             * @returns {*}
             */
            format: function format(obj, type) {
                if (type == 'hex') {
                    var r = obj.r.toString(16);
                    if (obj.r < 16) r = "0" + r;

                    var g = obj.g.toString(16);
                    if (obj.g < 16) g = "0" + g;

                    var b = obj.b.toString(16);
                    if (obj.b < 16) b = "0" + b;

                    return "#" + [r, g, b].join("").toUpperCase();
                } else if (type == 'rgb') {
                    if (typeof obj.a == 'undefined') {
                        return "rgb(" + [obj.r, obj.g, obj.b].join(",") + ")";
                    } else {
                        return "rgba(" + [obj.r, obj.g, obj.b, obj.a].join(",") + ")";
                    }
                }

                return obj;
            },

            /**
             * @method scale
             *
             * get color scale
             *
             * 		var c = color.scale().domain('#FF0000', '#00FF00');
             *
             * 		// get middle color
             * 		c(0.5)   ==  #808000
             *
             * 		// get middle color list
             * 		c.ticks(20);  // return array ,    [startColor, ......, endColor ]
             *
             * @returns {func} scale function
             */
            scale: function scale() {
                var startColor, endColor;

                function func(t, type) {

                    var obj = {
                        r: parseInt(startColor.r + (endColor.r - startColor.r) * t, 10),
                        g: parseInt(startColor.g + (endColor.g - startColor.g) * t, 10),
                        b: parseInt(startColor.b + (endColor.b - startColor.b) * t, 10)
                    };

                    return self.format(obj, type);
                }

                func.domain = function (start, end) {
                    startColor = self.rgb(start);
                    endColor = self.rgb(end);

                    return func;
                };

                func.ticks = function (n) {
                    var unit = 1 / n;

                    var start = 0;
                    var colors = [];
                    while (start <= 1) {
                        var c = func(start, 'hex');
                        colors.push(c);
                        start = math$$1.plus(start, unit);
                    }

                    return colors;
                };

                return func;
            },

            /**
             * @method map
             *
             * create color map
             *
             * 		var colorList = color.map(['#352a87', '#0f5cdd', '#00b5a6', '#ffc337', '#fdff00'], count)
             *
             * @param {Array} color_list
             * @param {Number} count  a divide number
             * @returns {Array} converted color list
             */
            map: function map(color_list, count) {

                var colors = [];
                count = count || 5;
                var scale = self.scale();
                for (var i = 0, len = color_list.length - 1; i < len; i++) {
                    if (i == 0) {
                        colors = scale.domain(color_list[i], color_list[i + 1]).ticks(count);
                    } else {
                        var colors2 = scale.domain(color_list[i], color_list[i + 1]).ticks(count);
                        colors2.shift();
                        colors = colors.concat(colors2);
                    }
                }

                return colors;
            },

            /**
             * @method rgb
             *
             * parse string to rgb color
             *
             * 		color.rgb("#FF0000") === { r : 255, g : 0, b : 0 }
             *
             * 		color.rgb("rgb(255, 0, 0)") == { r : 255, g : 0, b : }
             *
             * @param {String} str color string
             * @returns {Object}  rgb object
             */
            rgb: function rgb(str) {

                if (typeof str == 'string') {
                    if (str.indexOf("rgb(") > -1) {
                        var arr = str.replace("rgb(", "").replace(")", "").split(",");

                        for (var i = 0, len = arr.length; i < len; i++) {
                            arr[i] = parseInt(_.trim(arr[i]), 10);
                        }

                        return { r: arr[0], g: arr[1], b: arr[2], a: 1 };
                    } else if (str.indexOf("rgba(") > -1) {
                        var arr = str.replace("rgba(", "").replace(")", "").split(",");

                        for (var i = 0, len = arr.length; i < len; i++) {

                            if (len - 1 == i) {
                                arr[i] = parseFloat(_.trim(arr[i]));
                            } else {
                                arr[i] = parseInt(_.trim(arr[i]), 10);
                            }
                        }

                        return { r: arr[0], g: arr[1], b: arr[2], a: arr[3] };
                    } else if (str.indexOf("#") == 0) {

                        str = str.replace("#", "");

                        var arr = [];
                        if (str.length == 3) {
                            for (var i = 0, len = str.length; i < len; i++) {
                                var char = str.substr(i, 1);
                                arr.push(parseInt(char + char, 16));
                            }
                        } else {
                            for (var i = 0, len = str.length; i < len; i += 2) {
                                arr.push(parseInt(str.substr(i, 2), 16));
                            }
                        }

                        return { r: arr[0], g: arr[1], b: arr[2], a: 1 };
                    }
                }

                return str;
            },

            /**
             * @method HSVtoRGB
             *
             * convert hsv to rgb
             *
             * 		color.HSVtoRGB(0,0,1) === #FFFFF === { r : 255, g : 0, b : 0 }
             *
             * @param {Number} H  hue color number  (min : 0, max : 360)
             * @param {Number} S  Saturation number  (min : 0, max : 1)
             * @param {Number} V  Value number 		(min : 0, max : 1 )
             * @returns {Object}
             */
            HSVtoRGB: function HSVtoRGB(H, S, V) {

                if (H == 360) {
                    H = 0;
                }

                var C = S * V;
                var X = C * (1 - Math.abs(H / 60 % 2 - 1));
                var m = V - C;

                var temp = [];

                if (0 <= H && H < 60) {
                    temp = [C, X, 0];
                } else if (60 <= H && H < 120) {
                    temp = [X, C, 0];
                } else if (120 <= H && H < 180) {
                    temp = [0, C, X];
                } else if (180 <= H && H < 240) {
                    temp = [0, X, C];
                } else if (240 <= H && H < 300) {
                    temp = [X, 0, C];
                } else if (300 <= H && H < 360) {
                    temp = [C, 0, X];
                }

                return {
                    r: Math.ceil((temp[0] + m) * 255),
                    g: Math.ceil((temp[1] + m) * 255),
                    b: Math.ceil((temp[2] + m) * 255)
                };
            },

            /**
             * @method RGBtoHSV
             *
             * convert rgb to hsv
             *
             * 		color.RGBtoHSV(0, 0, 255) === { h : 240, s : 1, v : 1 } === '#FFFF00'
             *
             * @param {Number} R  red color value
             * @param {Number} G  green color value
             * @param {Number} B  blue color value
             * @return {Object}  hsv color code
             */
            RGBtoHSV: function RGBtoHSV(R, G, B) {

                var R1 = R / 255;
                var G1 = G / 255;
                var B1 = B / 255;

                var MaxC = Math.max(R1, G1, B1);
                var MinC = Math.min(R1, G1, B1);

                var DeltaC = MaxC - MinC;

                var H = 0;

                if (DeltaC == 0) {
                    H = 0;
                } else if (MaxC == R1) {
                    H = 60 * ((G1 - B1) / DeltaC % 6);
                } else if (MaxC == G1) {
                    H = 60 * ((B1 - R1) / DeltaC + 2);
                } else if (MaxC == B1) {
                    H = 60 * ((R1 - G1) / DeltaC + 4);
                }

                if (H < 0) {
                    H = 360 + H;
                }

                var S = 0;

                if (MaxC == 0) S = 0;else S = DeltaC / MaxC;

                var V = MaxC;

                return { h: H, s: S, v: V };
            },

            trim: function trim(str) {
                return (str || "").replace(/^\s+|\s+$/g, '');
            },

            /**
             * @method lighten
             *
             * rgb 컬러 밝은 농도로 변환
             *
             * @param {String} color   RGB color code
             * @param {Number} rate 밝은 농도
             * @return {String}
             */
            lighten: function lighten(color, rate) {
                color = color.replace(/[^0-9a-f]/gi, '');
                rate = rate || 0;

                var rgb = [],
                    c,
                    i;
                for (i = 0; i < 6; i += 2) {
                    c = parseInt(color.substr(i, 2), 16);
                    c = Math.round(Math.min(Math.max(0, c + c * rate), 255)).toString(16);
                    rgb.push(("00" + c).substr(c.length));
                }

                return "#" + rgb.join("");
            },

            /**
             * @method darken
             *
             * rgb 컬러 어두운 농도로 변환
             *
             * @param {String} color   RGB color code
             * @param {Number} rate 어두운 농도
             * @return {String}
             */
            darken: function darken(color, rate) {
                return this.lighten(color, -rate);
            },

            /**
             * @method parse
             *
             * gradient color string parsing
             *
             * @param {String} color
             * @returns {*}
             */
            parse: function parse(color) {
                return this.parseGradient(color);
            },

            /**
             * @method parseGrident
             *
             * gradient parser
             *
             *      linear(left) #fff,#000
             *      linear(right) #fff,50 yellow,black
             *      radial(50%,50%,50%,50,50)
             *
             * @param {String} color
             */
            parseGradient: function parseGradient(color) {
                var matches = color.match(this.regex);

                if (!matches) return color;

                var type = this.trim(matches[1]);
                var attr = this.parseAttr(type, this.trim(matches[2]));
                var stops = this.parseStop(this.trim(matches[3]));

                var obj = { type: type + "Gradient", attr: attr, children: stops };

                return obj;
            },

            parseStop: function parseStop(stop) {
                var stop_list = stop.split(",");

                var stops = [];

                for (var i = 0, len = stop_list.length; i < len; i++) {
                    var stop = stop_list[i];

                    var arr = stop.split(" ");

                    if (arr.length == 0) continue;

                    if (arr.length == 1) {
                        stops.push({ type: "stop", attr: { "stop-color": arr[0] } });
                    } else if (arr.length == 2) {
                        stops.push({ type: "stop", attr: { "offset": arr[0], "stop-color": arr[1] } });
                    } else if (arr.length == 3) {
                        stops.push({ type: "stop", attr: { "offset": arr[0], "stop-color": arr[1], "stop-opacity": arr[2] } });
                    }
                }

                var start = -1;
                var end = -1;
                for (var i = 0, len = stops.length; i < len; i++) {
                    var stop = stops[i];

                    if (i == 0) {
                        if (!stop.offset) stop.offset = 0;
                    } else if (i == len - 1) {
                        if (!stop.offset) stop.offset = 1;
                    }

                    if (start == -1 && typeof stop.offset == 'undefined') {
                        start = i;
                    } else if (end == -1 && typeof stop.offset == 'undefined') {
                        end = i;

                        var count = end - start;

                        var endOffset = stops[end].offset.indexOf("%") > -1 ? parseFloat(stops[end].offset) / 100 : stops[end].offset;
                        var startOffset = stops[start].offset.indexOf("%") > -1 ? parseFloat(stops[start].offset) / 100 : stops[start].offset;

                        var dist = endOffset - startOffset;
                        var value = dist / count;

                        var offset = startOffset + value;
                        for (var index = start + 1; index < end; index++) {
                            stops[index].offset = offset;

                            offset += value;
                        }

                        start = end;
                        end = -1;
                    }
                }

                return stops;
            },

            parseAttr: function parseAttr(type, str) {

                if (type == 'linear') {
                    switch (str) {
                        case "":
                        case "left":
                            return { x1: 0, y1: 0, x2: 1, y2: 0, direction: str || "left" };
                        case "right":
                            return { x1: 1, y1: 0, x2: 0, y2: 0, direction: str };
                        case "top":
                            return { x1: 0, y1: 0, x2: 0, y2: 1, direction: str };
                        case "bottom":
                            return { x1: 0, y1: 1, x2: 0, y2: 0, direction: str };
                        case "top left":
                            return { x1: 0, y1: 0, x2: 1, y2: 1, direction: str };
                        case "top right":
                            return { x1: 1, y1: 0, x2: 0, y2: 1, direction: str };
                        case "bottom left":
                            return { x1: 0, y1: 1, x2: 1, y2: 0, direction: str };
                        case "bottom right":
                            return { x1: 1, y1: 1, x2: 0, y2: 0, direction: str };
                        default:
                            var arr = str.split(",");
                            for (var i = 0, len = arr.length; i < len; i++) {
                                if (arr[i].indexOf("%") == -1) arr[i] = parseFloat(arr[i]);
                            }

                            return { x1: arr[0], y1: arr[1], x2: arr[2], y2: arr[3] };
                    }
                } else {
                    var arr = str.split(",");
                    for (var i = 0, len = arr.length; i < len; i++) {

                        if (arr[i].indexOf("%") == -1) arr[i] = parseFloat(arr[i]);
                    }

                    return { cx: arr[0], cy: arr[1], r: arr[2], fx: arr[3], fy: arr[4] };
                }
            },

            colorHash: function colorHash(name, callback) {
                // Return an rgb() color string that is a hash of the provided name,
                // and with a warm palette.
                var vector = 0;

                if (name) {
                    name = name.replace(/.*`/, ""); // drop module name if present
                    name = name.replace(/\(.*/, ""); // drop extra info
                    vector = generateHash(name);
                }

                if (typeof callback == "function") {
                    return callback(vector);
                }

                return {
                    r: 200 + Math.round(55 * vector),
                    g: 0 + Math.round(230 * (1 - vector)),
                    b: 0 + Math.round(55 * (1 - vector))
                };
            }

        };

        self.map.parula = function (count) {
            return self.map(['#352a87', '#0f5cdd', '#00b5a6', '#ffc337', '#fdff00'], count);
        };
        self.map.jet = function (count) {
            return self.map(['#00008f', '#0020ff', '#00ffff', '#51ff77', '#fdff00', '#ff0000', '#800000'], count);
        };
        self.map.hsv = function (count) {
            return self.map(['#ff0000', '#ffff00', '#00ff00', '#00ffff', '#0000ff', '#ff00ff', '#ff0000'], count);
        };
        self.map.hot = function (count) {
            return self.map(['#0b0000', '#ff0000', '#ffff00', '#ffffff'], count);
        };
        self.map.pink = function (count) {
            return self.map(['#1e0000', '#bd7b7b', '#e7e5b2', '#ffffff'], count);
        };
        self.map.bone = function (count) {
            return self.map(['#000000', '#4a4a68', '#a6c6c6', '#ffffff'], count);
        };
        self.map.copper = function (count) {
            return self.map(['#000000', '#3d2618', '#9d623e', '#ffa167', '#ffc77f'], count);
        };

        return self;
    }
};

var manager = {
    name: "manager",
    extend: null,
    component: function component() {
        var _ = jui.include("util.base");

        var UIManager = new function () {
            var instances = [],
                classes = [];

            /**
             * @method add
             * Adds a component object created
             *
             * @param {Object} ui UI instance
             */
            this.add = function (uiIns) {
                instances.push(uiIns);
            };

            /**
             * @method emit
             * Generates a custom event to an applicable component
             *
             * @param {String} key Selector or UI type
             * @param {String} type Event type
             * @param {Array} args Event arguments
             */
            this.emit = function (key, type, args) {
                var targets = [];

                for (var i = 0; i < instances.length; i++) {
                    var uiSet = instances[i];

                    if (key == uiSet.selector || key == uiSet.type) {
                        targets.push(uiSet);
                    }
                }

                for (var i = 0; i < targets.length; i++) {
                    var uiSet = targets[i];

                    for (var j = 0; j < uiSet.length; j++) {
                        uiSet[j].emit(type, args);
                    }
                }
            };

            /**
             * @method get
             * Gets a component currently created
             *
             * @param {Integer/String} key
             * @returns {Object/Array} UI instance
             */
            this.get = function (key) {
                if (_.typeCheck("integer", key)) {
                    return instances[key];
                } else if (_.typeCheck("string", key)) {
                    // 셀렉터 객체 검색
                    for (var i = 0; i < instances.length; i++) {
                        var uiSet = instances[i];

                        if (key == uiSet.selector) {
                            return uiSet.length == 1 ? uiSet[0] : uiSet;
                        }
                    }

                    // 모듈 객체 검색
                    var result = [];
                    for (var i = 0; i < instances.length; i++) {
                        var uiSet = instances[i];

                        if (key == uiSet.type) {
                            result.push(uiSet);
                        }
                    }

                    return result;
                }
            };

            /**
             * @method getAll
             * Gets all components currently created
             *
             * @return {Array} UI instances
             */
            this.getAll = function () {
                return instances;
            };

            /**
             * @method remove
             * Removes a component object in an applicable index from the list
             *
             * @param {Integer} index
             * @return {Object} Removed instance
             */
            this.remove = function (index) {
                if (_.typeCheck("integer", index)) {
                    // UI 객체 인덱스
                    return instances.splice(index, 1)[0];
                }
            };

            /**
             * @method shift
             * Removes the last component object from the list
             *
             * @return {Object} Removed instance
             */
            this.shift = function () {
                return instances.shift();
            };

            /**
             * @method pop
             * Removes the first component object from the list
             *
             * @return {Object} Removed instance
             */
            this.pop = function () {
                return instances.pop();
            };

            /**
             * @method size
             * Gets the number of objects currently created
             *
             * @return {Number}
             */
            this.size = function () {
                return instances.length;
            };

            /**
             * @method debug
             *
             * @param {Object} uiObj UI instance
             * @param {Number} i
             * @param {Number} j
             * @param {Function} callback
             */
            this.debug = function (uiObj, i, j, callback) {
                if (!uiObj.__proto__) return;
                var exFuncList = ["emit", "on", "addEvent", "addValid", "callBefore", "callAfter", "callDelay", "setTpl", "setVo", "setOption"];

                for (var key in uiObj) {
                    var func = uiObj[key];

                    if (typeof func == "function" && _.inArray(key, exFuncList) == -1) {
                        (function (funcName, funcObj, funcIndex, funcChildIndex) {
                            uiObj.__proto__[funcName] = function () {
                                var nStart = Date.now();
                                var resultObj = funcObj.apply(this, arguments);
                                var nEnd = Date.now();

                                if (typeof callback == "function") {
                                    callback({
                                        type: jui.get(i).type,
                                        name: funcName,
                                        c_index: funcIndex,
                                        u_index: funcChildIndex,
                                        time: nEnd - nStart
                                    }, arguments);
                                } else {
                                    if (!isNaN(funcIndex) && !isNaN(funcChildIndex)) {
                                        console.log("TYPE(" + jui.get(i).type + "), " + "NAME(" + funcName + "), " + "INDEX(" + funcIndex + ":" + funcChildIndex + "), " + "TIME(" + (nEnd - nStart) + "ms), " + "ARGUMENTS...");
                                    } else {
                                        console.log("NAME(" + funcName + "), " + "TIME(" + (nEnd - nStart) + "ms), " + "ARGUMENTS...");
                                    }

                                    console.log(arguments);
                                    console.log("");
                                }

                                return resultObj;
                            };
                        })(key, func, i, j);
                    }
                }
            };

            /**
             * @method debugAll
             * debugs all component objects currently existing
             *
             * @param {Function} callback
             */
            this.debugAll = function (callback) {
                for (var i = 0; i < instances.length; i++) {
                    var uiList = instances[i];

                    for (var j = 0; j < uiList.length; j++) {
                        this.debug(uiList[j], i, j, callback);
                    }
                }
            };

            /**
             * @method addClass
             * Adds a component class
             *
             * @param {Object} uiCls UI Class
             */
            this.addClass = function (uiCls) {
                classes.push(uiCls);
            };

            /**
             * @method getClass
             * Gets a component class
             *
             * @param {String/Integer} key
             * @return {Object}
             */
            this.getClass = function (key) {
                if (_.typeCheck("integer", key)) {
                    return classes[key];
                } else if (_.typeCheck("string", key)) {
                    for (var i = 0; i < classes.length; i++) {
                        if (key == classes[i].type) {
                            return classes[i];
                        }
                    }
                }

                return null;
            };

            /**
             * @method getClassAll
             * Gets all component classes
             *
             * @return {Array}
             */
            this.getClassAll = function () {
                return classes;
            };

            /**
             * @method create
             * It is possible to create a component dynamically after the ready point
             *
             * @param {String} type UI type
             * @param {String/DOMElement} selector
             * @param {Object} options
             * @return {Object}
             */
            this.create = function (type, selector, options) {
                var cls = UIManager.getClass(type);

                if (_.typeCheck("null", cls)) {
                    throw new Error("JUI_CRITICAL_ERR: '" + type + "' does not exist");
                }

                return cls["class"](selector, options);
            };
        }();

        return UIManager;
    }
};

var collection = {
    name: "collection",
    extend: null,
    component: function component() {
        var UICollection = function UICollection(type, selector, options, list) {
            this.type = type;
            this.selector = selector;
            this.options = options;

            this.destroy = function () {
                for (var i = 0; i < list.length; i++) {
                    list[i].destroy();
                }
            };

            for (var i = 0; i < list.length; i++) {
                this.push(list[i]);
            }
        };

        UICollection.prototype = Object.create(Array.prototype);

        return UICollection;
    }
};

jui.use(dom, manager, collection);

var core = {
    name: "core",
    extend: null,
    component: function component() {
        var _ = jui.include("util.base");
        var $$$1 = jui.include("util.dom");
        var UIManager = jui.include("manager");
        var UICollection = jui.include("collection");

        var UICore = function UICore() {

            /**
             * @method emit
             * Generates a custom event. The first parameter is the type of a custom event. A function defined as an option or on method is called
             *
             * @param {String} type Event type
             * @param {Function} args Event Arguments
             * @return {Mixed}
             */
            this.emit = function (type, args) {
                if (!_.typeCheck("string", type)) return;
                var result;

                for (var i = 0; i < this.event.length; i++) {
                    var e = this.event[i];

                    if (e.type == type.toLowerCase()) {
                        var arrArgs = _.typeCheck("array", args) ? args : [args];
                        result = e.callback.apply(this, arrArgs);
                    }
                }

                return result;
            };

            /**
             * @method on
             * A callback function defined as an on method is run when an emit method is called
             *
             * @param {String} type Event type
             * @param {Function} callback
             */
            this.on = function (type, callback) {
                if (!_.typeCheck("string", type) || !_.typeCheck("function", callback)) return;
                this.event.push({ type: type.toLowerCase(), callback: callback, unique: false });
            };

            /**
             * @method off
             * Removes a custom event of an applicable type or callback handler
             *
             * @param {String} type Event type
             */
            this.off = function (type) {
                var event = [];

                for (var i = 0; i < this.event.length; i++) {
                    var e = this.event[i];

                    if (_.typeCheck("function", type) && e.callback != type || _.typeCheck("string", type) && e.type != type.toLowerCase()) {
                        event.push(e);
                    }
                }

                this.event = event;
            };

            /**
             * @method addValid
             * Check the parameter type of a UI method and generates an alarm when a wrong value is entered
             *
             * @param {String} name Method name
             * @param {Array} params Parameters
             */
            this.addValid = function (name, params) {
                if (!this.__proto__) return;
                var ui = this.__proto__[name];

                this.__proto__[name] = function () {
                    var args = arguments;

                    for (var i = 0; i < args.length; i++) {
                        if (!_.typeCheck(params[i], args[i])) {
                            throw new Error("JUI_CRITICAL_ERR: the " + i + "th parameter is not a " + params[i] + " (" + name + ")");
                        }
                    }

                    return ui.apply(this, args);
                };
            };

            /**
             * @method callBefore
             * Sets a callback function that is called before a UI method is run
             *
             * @param {String} name Method name
             * @param {Function} callback
             * @return {Mixed}
             */
            this.callBefore = function (name, callback) {
                if (!this.__proto__) return;
                var ui = this.__proto__[name];

                this.__proto__[name] = function () {
                    var args = arguments;

                    if (_.typeCheck("function", callback)) {
                        // before 콜백이 false가 아닐 경우에만 실행 한다.
                        if (callback.apply(this, args) !== false) {
                            return ui.apply(this, args);
                        }
                    } else {
                        return ui.apply(this, args);
                    }
                };
            };

            /**
             * @method callAfter
             * Sets a callback function that is called after a UI method is run
             *
             * @param {String} name Method name
             * @param {Function} callback
             * @return {Mixed}
             */
            this.callAfter = function (name, callback) {
                if (!this.__proto__) return;
                var ui = this.__proto__[name];

                this.__proto__[name] = function () {
                    var args = arguments,
                        obj = ui.apply(this, args);

                    // 실행 함수의 리턴 값이 false일 경우에는 after 콜백을 실행하지 않는다.
                    if (_.typeCheck("function", callback) && obj !== false) {
                        callback.apply(this, args);
                    }

                    return obj;
                };
            };

            /**
             * @method callDelay
             * Sets a callback function and the delay time before/after a UI method is run
             *
             * @param {String} name Method name
             * @param {Function} callback
             */
            this.callDelay = function (name, callObj) {
                // void 형의 메소드에서만 사용할 수 있음
                if (!this.__proto__) return;

                var ui = this.__proto__[name],
                    delay = !isNaN(callObj.delay) ? callObj.delay : 0;

                this.__proto__[name] = function () {
                    var self = this,
                        args = arguments;

                    if (_.typeCheck("function", callObj.before)) {
                        callObj.before.apply(self, args);
                    }

                    if (delay > 0) {
                        setTimeout(function () {
                            callFunc(self, args);
                        }, delay);
                    } else {
                        callFunc(self, args);
                    }
                };

                function callFunc(self, args) {
                    var obj = ui.apply(self, args);

                    if (_.typeCheck("function", callObj.after) && obj !== false) {
                        // callAfter와 동일
                        callObj.after.apply(self, args);
                    }
                }
            };

            /**
             * @method setTpl
             * Dynamically defines the template method of a UI
             *
             * @param {String} name Template name
             * @param {String} html Template markup
             */
            this.setTpl = function (name, html) {
                this.tpl[name] = _.template(html);
            };

            /**
             * @method setOption
             * Dynamically defines the options of a UI
             *
             * @param {String} key
             * @param {Mixed} value
             */
            this.setOption = function (key, value) {
                if (_.typeCheck("object", key)) {
                    for (var k in key) {
                        this.options[k] = key[k];
                    }
                } else {
                    this.options[key] = value;
                }
            };

            /**
             * @method destroy
             * Removes all events set in a UI obejct and the DOM element
             *
             */
            this.destroy = function () {
                if (this.__proto__) {
                    for (var key in this.__proto__) {
                        delete this.__proto__[key];
                    }
                }
            };
        };

        UICore.build = function (UI) {

            return function (selector, options) {
                var list = [],
                    elemList = [];

                if (_.typeCheck("string", selector)) {
                    elemList = $$$1.find(selector);
                } else if (_.typeCheck("object", selector)) {
                    elemList.push(selector);
                } else {
                    elemList.push(document.createElement("div"));
                }

                for (var i = 0, len = elemList.length; i < len; i++) {
                    list[i] = jui.createUIObject(UI, selector, i, elemList[i], options);
                }

                // UIManager에 데이터 입력
                UIManager.add(new UICollection(UI.type, selector, options, list));

                // 객체가 없을 경우에는 null을 반환 (기존에는 빈 배열을 반환)
                if (list.length == 0) {
                    return null;
                } else if (list.length == 1) {
                    return list[0];
                }

                return list;
            };
        };

        UICore.init = function (UI) {
            var uiObj = null;

            if ((typeof UI === "undefined" ? "undefined" : _typeof(UI)) === "object") {
                uiObj = UICore.build(UI);
                UIManager.addClass({ type: UI.type, "class": uiObj });
            }

            return uiObj;
        };

        UICore.setup = function () {
            return {
                /**
                 * @cfg {Object} [tpl={}]
                 * Defines a template markup to be used in a UI
                 */
                tpl: {},

                /**
                 * @cfg {Object} [event={}]
                 * Defines a DOM event to be used in a UI
                 */
                event: {}
            };
        };

        return UICore;
    }
};

jui.use(manager, collection, core);

var Event = {
    name: "event",
    extend: "core",
    component: function component() {
        var _ = jui.include("util.base");
        var UIManager = jui.include("manager");
        var UICollection = jui.include("collection");

        var DOMEventListener = function DOMEventListener() {
            var list = [];

            function settingEventAnimation(e) {
                var pfx = ["webkit", "moz", "MS", "o", ""];

                for (var p = 0; p < pfx.length; p++) {
                    var type = e.type;

                    if (!pfx[p]) type = type.toLowerCase();
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.target).on(pfx[p] + type, e.callback);
                }

                list.push(e);
            }

            function settingEvent(e) {
                if (e.callback && !e.children) {
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.target).on(e.type, e.callback);
                } else {
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.target).on(e.type, e.children, e.callback);
                }

                list.push(e);
            }

            function settingEventTouch(e) {
                if (e.callback && !e.children) {
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.target).on(getEventTouchType(e.type), e.callback);
                } else {
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.target).on(getEventTouchType(e.type), e.children, e.callback);
                }

                list.push(e);
            }

            function getEventTouchType(type) {
                return {
                    "click": "touchstart",
                    "dblclick": "touchend",
                    "mousedown": "touchstart",
                    "mousemove": "touchmove",
                    "mouseup": "touchend"
                }[type];
            }

            this.add = function (args) {
                var e = { target: args[0], type: args[1] };

                if (_.typeCheck("function", args[2])) {
                    e = __WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend(e, { callback: args[2] });
                } else if (_.typeCheck("string", args[2])) {
                    e = __WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend(e, { children: args[2], callback: args[3] });
                }

                var eventTypes = _.typeCheck("array", e.type) ? e.type : [e.type];

                for (var i = 0; i < eventTypes.length; i++) {
                    e.type = eventTypes[i];

                    if (e.type.toLowerCase().indexOf("animation") != -1) settingEventAnimation(e);else {
                        // body, window, document 경우에만 이벤트 중첩이 가능
                        if (e.target != "body" && e.target != window && e.target != document) {
                            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.target).off(e.type);
                        }

                        if (_.isTouch) {
                            settingEventTouch(e);
                        } else {
                            settingEvent(e);
                        }
                    }
                }
            };

            this.trigger = function (selector, type) {
                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(selector).trigger(_.isTouch ? getEventTouchType(type) : type);
            };

            this.get = function (index) {
                return list[index];
            };

            this.getAll = function () {
                return list;
            };

            this.size = function () {
                return list.length;
            };
        };

        /**
         * @class event
         * Later the jquery dependency should be removed.
         *
         * @alias UIEvent
         * @extends core
         * @requires jquery
         * @requires util.base
         * @requires manager
         * @requires collection
         * @deprecated
         */
        var UIEvent = function UIEvent() {

            /**
             * @method find
             * Get the child element of the root element
             *
             * @param {String/HTMLElement} Selector
             * @returns {*|jQuery}
             */
            this.find = function (selector) {
                return __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root).find(selector);
            };

            /**
             * @method addEvent
             * Defines a browser event of a DOM element
             *
             * @param {String/HTMLElement} selector
             * @param {String} type Dom event type
             * @param {Function} callback
             */
            this.addEvent = function () {
                this.listen.add(arguments);
            };

            /**
             * @method addTrigger
             * Generates an applicable event to a DOM element
             *
             * @param {String/HTMLElement} Selector
             * @param {String} Dom event type
             */
            this.addTrigger = function (selector, type) {
                this.listen.trigger(selector, type);
            };

            /**
             * @method destroy
             * Removes all events set in a UI obejct and the DOM element
             *
             */
            this.destroy = function () {
                for (var i = 0; i < this.listen.size(); i++) {
                    var obj = this.listen.get(i);
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(obj.target).off(obj.type);
                }

                // 생성된 메소드 메모리에서 제거
                if (this.__proto__) {
                    for (var key in this.__proto__) {
                        delete this.__proto__[key];
                    }
                }
            };
        };

        UIEvent.build = function (UI) {

            return function (selector, options) {
                var list = [],
                    $root = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(selector || "<div />");

                $root.each(function (index) {
                    list[index] = jui.createUIObject(UI, $root.selector, index, this, options, function (mainObj, opts) {
                        /** @property {Object} listen Dom events */
                        mainObj.init.prototype.listen = new DOMEventListener();

                        __WEBPACK_IMPORTED_MODULE_0_jquery___default()("script").each(function (i) {
                            if (selector == __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).data("jui") || selector == __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).data("vo") || selector instanceof HTMLElement) {
                                var tplName = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).data("tpl");

                                if (tplName == "") {
                                    throw new Error("JUI_CRITICAL_ERR: 'data-tpl' property is required");
                                }

                                opts.tpl[tplName] = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).html();
                            }
                        });
                    });
                });

                UIManager.add(new UICollection(UI.type, selector, options, list));

                if (list.length == 0) {
                    return null;
                } else if (list.length == 1) {
                    return list[0];
                }

                return list;
            };
        };

        UIEvent.init = function (UI) {
            var uiObj = null;

            if ((typeof UI === "undefined" ? "undefined" : _typeof(UI)) === "object") {
                uiObj = UIEvent.build(UI);
                UIManager.addClass({ type: UI.type, "class": uiObj });
            }

            return uiObj;
        };

        return UIEvent;
    }
};

jui.use([dom, SortUtil, KeyParserUtil, Base64Util, math, TemplateUtil, ColorUtil, manager, collection, core, Event]);

var _ = jui.include("util.base"),
    manager$1 = jui.include("manager");

_.extend(jui, manager$1, true);

/* harmony default export */ __webpack_exports__["a"] = (jui);


/***/ }),
/* 383 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__main_js__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__base_binder_js__ = __webpack_require__(384);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__base_core_js__ = __webpack_require__(385);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_juijs_ui_src_components_dropdown_js__ = __webpack_require__(227);






__WEBPACK_IMPORTED_MODULE_1__main_js__["default"].use(__WEBPACK_IMPORTED_MODULE_3__base_core_js__["a" /* default */], __WEBPACK_IMPORTED_MODULE_4_juijs_ui_src_components_dropdown_js__["default"]);

__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.fn.jbinder = function(options) {
    var result = [], opts = __WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({
        target: null,
        attr: "data-bind"
    }, options);

    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).each(function(i) {
        var binder = new __WEBPACK_IMPORTED_MODULE_2__base_binder_js__["a" /* default */](this, opts);
        result[i] = (opts.target != null) ? __WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend(opts.target, binder) : binder;
    });

    return (result.length == 1) ? result[0] : result;
}

/* harmony default export */ __webpack_exports__["default"] = ({
    name: "grid.table",
    extend: "event",
    component: function () {
        const _ = __WEBPACK_IMPORTED_MODULE_1__main_js__["default"].include("util.base");
        const dropdown = __WEBPACK_IMPORTED_MODULE_1__main_js__["default"].include("ui.dropdown");
        const Base = __WEBPACK_IMPORTED_MODULE_1__main_js__["default"].include("grid.base");
        const Row = __WEBPACK_IMPORTED_MODULE_1__main_js__["default"].include("grid.row");

        _.resize(function() {
            var call_list = __WEBPACK_IMPORTED_MODULE_1__main_js__["default"].get("grid.table");

            for(var i = 0; i < call_list.length; i++) {
                var ui_list = call_list[i];

                for(var j = 0; j < ui_list.length; j++) {
                    ui_list[j].resize();
                }
            }
        }, 1000);

        var UI = function() {
            var $obj = null, ddUi = null; // table/thead/tbody 구성요소, 컬럼 설정 UI (Dropdown)
            var selectedIndex = null, editableIndex = null, dragIndex = null, expandedIndex = null, checkedIndexes = {}; // TODO: 로우 객체 기반으로 변경하기 (#8)
            var is_resize = false;
            var vo = null;

            function getExpandHtml(self) {
                return "<tr class='expand' style='display: none;'><td id='EXPAND_" + self.timestamp + "'></td></tr>";
            }

            function getColumnIndexes(self, colkeys) {
                var indexList = [];

                for(var i = 0; i < colkeys.length; i++) {
                    if(typeof(colkeys[i]) == "string") {
                        var column = self.getColumn(colkeys[i]);
                        indexList.push(column.index);
                    } else {
                        indexList.push(colkeys[i]);
                    }
                }

                return indexList;
            }

            function setColumnStatus(self) {
                var colkeys = self.options.colshow,
                    len = self.uit.getColumnCount();

                if(colkeys === true) {
                    self.options.colshow = colkeys = [];

                    for(var i = 0; i < len; i++) {
                        colkeys.push(i);
                    }
                } else {
                    colkeys = getColumnIndexes(self, colkeys);
                }

                for(var i = 0; i < len; i++) {
                    if(__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.inArray(i, colkeys) == -1)
                        self.uit.hideColumn(i);
                    else
                        self.uit.showColumn(i);
                }
            }

            function setColumnMenu(self) {
                var columns = self.listColumn(),
                    columnNames = [];

                for(var i = 0; i < columns.length; i++) {
                    columnNames.push(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(columns[i].element).text());
                }

                var $ddObj = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(self.tpl.menu({ columns: columnNames }));

                __WEBPACK_IMPORTED_MODULE_0_jquery___default()("body").append($ddObj);
                ddUi = dropdown($ddObj, { close: false });

                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(ddUi.root).find("input[type=checkbox]").each(function(i) {
                    if(columns[i].type == "show") this.checked = true;
                    else this.checked = false;

                    self.addEvent(this, "click", function(e) {
                        var isExist = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(ddUi.root).find("input[type=checkbox]:checked") != null;

                        if(this.checked) {
                            self.showColumn(i, e);
                        } else {
                            if(isExist) {
                                self.hideColumn(i, e);
                            } else {
                                this.checked = true;
                            }
                        }

                        self.hideExpand();
                        self.scroll();
                    });
                });
            }

            function setScrollResize(self) {
                var tableWidth = $obj.table.outerWidth(),
                    thCount = self.uit.getColumnCount(),
                    isLastCheck = false;

                for(var i = thCount - 1; i >= 0; i--) {
                    var colInfo = self.getColumn(i),
                        thWidth = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(colInfo.element).outerWidth();

                    // 마지막 TD는 스크롤 사이즈를 차감
                    if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(colInfo.element).css("display") == "none") {}
                    else {
                        if(!isLastCheck) {
                            thWidth = thWidth - _.scrollWidth();
                            isLastCheck = true;
                        }
                    }

                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(colInfo.list[0]).outerWidth(thWidth);
                }

                $obj.tbody.outerWidth(tableWidth);
            }

            function setScrollEvent(self) {
                if(!__WEBPACK_IMPORTED_MODULE_0_jquery___default()(self.root).hasClass("table-scroll")) { // 스크롤일 경우, 별도 처리
                    self.scroll();
                }

                $obj.tbody.off("scroll").scroll(function(e) {
                    if(($obj.tbody.scrollTop() + self.options.scrollHeight) == $obj.tbody.get(0).scrollHeight){
                        self.emit("scroll", e);
                        return false;
                    }
                });
            }

            function setUpdateInit(self, isInit) {
                if(self.uit.getRowCount() < 1) return;

                if(isInit) {
                    if(self.options.expand) {
                        $obj.tbody.prepend(getExpandHtml(self));
                    }

                    self.scroll();
                }

                if(self.options.scroll) { // 스크롤 이벤트 처리
                    setScrollEvent(self);
                }

                self.setVo(); // TODO: 차후에 제거해야 함
            }

            function setEventRows(self, rows) {
                var rows = (!rows) ? self.uit.getRow() : rows;

                for(var i = 0; i < rows.length; i++) {
                    (function(row) {
                        if(row.element == null) return;

                        if(row.children.length > 0) {
                            setEventRow(self, row);
                            setEventRows(self, row.children);
                        } else {
                            setEventRow(self, row);
                        }
                    })(rows[i])
                }
            }

            function setEventRow(self, row) {
                self.addEvent(row.element, "click", function(e) {
                    // 1. 공통 이벤트 발생
                    self.emit("select", [ row, e ]); // deprecated
                    self.emit("click", [ row, e ]);

                    // 2. 확장영역 자동 이벤트 처리
                    if(self.options.expand) {
                        if(self.options.expandEvent === false) return;

                        var expandedRow = (expandedIndex instanceof Row) ? expandedIndex : self.get(expandedIndex); // TODO: #8 가상스크롤 지원 이슈로 인한 사이드이펙트

                        if(expandedRow === row) {
                            self.hideExpand(e);
                        } else {
                            if(expandedIndex != null) {
                                self.hideExpand(e);
                            }

                            self.showExpand(row, undefined, e);
                        }
                    }
                });

                self.addEvent(row.element, "dblclick", function(e) {
                    self.emit("dblclick", [ row, e ]);
                });

                self.addEvent(row.element, "contextmenu", function(e) {
                    self.emit("rowmenu", [ row, e ]);
                    return false;
                });


                // 로우 수정 이벤트 설정
                if(self.options.editRow && self.options.editEvent) {
                    self.addEvent(row.element, "dblclick", function(e) {
                        if(e.target.tagName == "TD" || e.target.tagName == "TR") {
                            self.showEditRow(row.index, e);
                        }
                    });
                }

                // 로우 이동 이벤트 설정
                if(self.options.moveRow) {
                    // 드래그 시작 이벤트
                    self.addEvent(row.element, "mousedown", function(e) {
                        if(dragIndex != null) return;
                        dragIndex = row.index;

                        // 테이블 상태 초기화
                        $obj.tbody.find("tr").removeClass("dragtarget");
                        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(row.element).addClass("dragtarget");

                        __WEBPACK_IMPORTED_MODULE_0_jquery___default()("body").append(createRow(row.element));
                    });

                    // 마우스 오버시 라인 위치 변경 이벤트
                    self.addEvent(row.element, "mouseover", function(e) {
                        if(dragIndex == null) return;

                        $obj.tbody.find(".dragline").remove();
                        createLine().insertBefore(row.element);
                    });
                    self.addEvent(document, "mouseover", function(e) {
                        if(dragIndex == null || e.target.tagName == "TD" || e.target.tagName == "TR") return;

                        $obj.tbody.find(".dragline").remove();
                        $obj.tbody.append(createLine());
                    });

                    // 마우스 이동시 클론 로우 위치 변경 이벤트
                    self.addEvent(row.element, "mousemove", function(e) {
                        if(dragIndex == null) return;

                        __WEBPACK_IMPORTED_MODULE_0_jquery___default()("#TABLE_LAYER_" + self.timestamp).css({
                            left: e.pageX + 2,
                            top: e.pageY + 2,
                            display: "table"
                        });
                    });

                    // 마우스 드래그 완료시 처리 이벤트
                    self.addEvent(row.element, "mouseup", function(e) {
                        moveDragEnd(row.index, e);
                    });
                    self.addEvent($obj.thead, "mouseover", function(e) {
                        moveDragEnd(0, e);
                    });
                    self.addEvent(document, "mouseup", function(e) {
                        moveDragEnd(self.count(), e);
                    });

                    function createLine() {
                        return __WEBPACK_IMPORTED_MODULE_0_jquery___default()("<tr class='dragline'><td colspan='" + row.list.length + "'></td></tr>");
                    }

                    function createRow(element) {
                        var $clone = __WEBPACK_IMPORTED_MODULE_0_jquery___default()("<table id='TABLE_LAYER_" + self.timestamp + "' class='" + __WEBPACK_IMPORTED_MODULE_0_jquery___default()(self.root).attr("class") + " layer'></table>"),
                            $cloneRow = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(element).clone();

                        $clone.css({
                            position: "absolute",
                            width: __WEBPACK_IMPORTED_MODULE_0_jquery___default()(self.root).width(),
                            display: "none"
                        });

                        $cloneRow.attr({
                            "class": "dragclone"
                        });

                        $clone.append($cloneRow);

                        return $clone;
                    }

                    function moveDragEnd(end, e) {
                        $obj.tbody.find(".dragline").remove();

                        if(dragIndex != null) {
                            __WEBPACK_IMPORTED_MODULE_0_jquery___default()("#TABLE_LAYER_" + self.timestamp).remove();

                            if (dragIndex != end) {
                                if (self.emit("move", [ self.get(dragIndex), e ]) !== false) {
                                    self.move(dragIndex, end);

                                    var row = self.get((dragIndex < end) ? end - 1 : end);
                                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(row.element).addClass("dragtarget");

                                    self.hideExpand(e);
                                    self.emit("moveend", [ row, e ]);
                                }
                            }

                            dragIndex = null;
                        }
                    }
                }
            }

            function setEventEditCell(self, elem, row, colIndex, event, callback) {
                var column = self.getColumn(colIndex),
                    colkeys = self.options.editRow,
                    $input = null;

                if(!column.name || (colkeys !== true && __WEBPACK_IMPORTED_MODULE_0_jquery___default.a.inArray(colIndex, getColumnIndexes(self, colkeys)) == -1)) {
                    $input = __WEBPACK_IMPORTED_MODULE_0_jquery___default()("<div class='edit'></div>").html(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(elem).html() || "&nbsp;");
                    $input.attr("disabled", true);
                } else {
                    $input = __WEBPACK_IMPORTED_MODULE_0_jquery___default()("<input type='text' class='edit' />").val((column.name) ? column.data[row.index] : "");
                }

                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(elem).html($input.css("width", "100%"));

                // 클릭 엘리먼트에 포커스 맞추기
                if(event && event.target == elem) $input.focus();

                // 엔터 키 이벤트 발생시 업데이트
                self.addEvent($input, "keypress", function(e) {
                    if(e.which == 13) {
                        update();
                    }
                });

                // 포커스가 바뀌었을 경우 업데이트
                self.addEvent($obj.tbody, "mousedown", function(e) {
                    if(e.target.tagName == "TD" || e.target.tagName == "TR") {
                        update();
                    }
                });

                function update() {
                    if(editableIndex != null) {
                        callback();
                    }
                }
            }

            function setEventColumn(self) {
                var opts = self.options,
                    len = self.uit.getColumnCount();

                // 컬럼 컨텍스트 이벤트
                for(var i = 0; i < len; i++) {
                    var col = self.getColumn(i);

                    (function(index, column) {
                        if(!opts.fields || !opts.sort || opts.sortEvent !== true) {
                            self.addEvent(column.element, "click", function (e) {
                                self.emit("colclick", [ column, e ]);
                            });
                        }

                        self.addEvent(column.element, "dblclick", function(e) {
                            self.emit("coldblclick", [ column, e ]);
                        });

                        self.addEvent(column.element, "contextmenu", function(e) {
                            self.emit("colmenu", [ column, e ]);
                            return false;
                        });
                    })(i, col);
                }
            }

            function setEventSort(self) {
                var sortIndexes = self.options.sort,
                    len = (sortIndexes === true) ? self.uit.getColumnCount() : sortIndexes.length;

                for(var i = 0; i < len; i++) {
                    var colKey = (sortIndexes === true) ? i : sortIndexes[i],
                        col = self.getColumn(colKey);

                    if(col.element != null) {
                        (function(index, column) {
                            self.addEvent(column.element, "click", function(e) {
                                if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(e.target).hasClass("resize")) return;

                                self.sort(index, undefined, e);
                                self.emit("colclick", [ column, e ]);
                            });
                        })(colKey, col);

                        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(col.element).css("cursor", "pointer");
                    }
                }
            }

            function setColumnResize(self) {
                var resizeX = 0,
                    tablePos = $obj.table.offset();
                var col = null,
                    colNext = null,
                    colWidth = 0,
                    colNextWidth = 0,
                    colResize = null;

                // 리사이즈 엘리먼트 삭제
                $obj.thead.find(".resize").remove();

                for(var i = 0; i < self.uit.getColumnCount() - 1; i++) {
                    var $colElem = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(self.getColumn(i).element),
                        $resizeBar = __WEBPACK_IMPORTED_MODULE_0_jquery___default()("<div class='resize'></div>");
                    var pos = $colElem.offset(); // ie8 버그로 인해 position에서 offset으로 변경함

                    $resizeBar.css({
                        position: "absolute",
                        width: "8px",
                        height: $colElem.outerHeight(),
                        left: ($colElem.outerWidth() + (pos.left - tablePos.left) - 1) + "px",
                        top: (pos.top - tablePos.top) + "px",
                        cursor: "w-resize",
                        "z-index": "1"
                    });

                    $colElem.append($resizeBar);

                    // Event Start
                    (function(index) {
                        self.addEvent($resizeBar, "mousedown", function(e) {
                            if(resizeX == 0) resizeX = e.pageX;

                            // 컬럼 객체 가져오기
                            col = self.getColumn(index);
                            colNext = getNextColumn(index);
                            colWidth = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(col.element).outerWidth();
                            colNextWidth = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(colNext.element).outerWidth();
                            colResize = this;
                            is_resize = true;

                            return false;
                        });
                    })(i);
                }

                self.addEvent(document, "mousemove", function(e) {
                    if(resizeX > 0) {
                        colResizeWidth(self, e.pageX - resizeX);
                    }
                });

                self.addEvent(document, "mouseup", function(e) {
                    if(resizeX > 0) {
                        resizeX = 0;

                        // 리사이징 바, 위치 이동
                        var left = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(col.element).offset().left - tablePos.left;
                        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(colResize).css("left", __WEBPACK_IMPORTED_MODULE_0_jquery___default()(col.element).outerWidth() + left - 1);

                        self.emit("colresize", [ col, e ]);

                        // 리사이징 상태 변경 (delay)
                        setTimeout(function() {
                            is_resize = false;
                        }, 100);

                        return false;
                    }
                });

                function getNextColumn(index) {
                    for(var i = index + 1; i < self.uit.getColumnCount(); i++) {
                        var elem = self.getColumn(i).element;

                        if(!__WEBPACK_IMPORTED_MODULE_0_jquery___default()(elem).is(':hidden')) {
                            return self.getColumn(i);
                        }
                    }
                }

                function colResizeWidth(self, disWidth) {
                    var colMinWidth = 30;

                    // 최소 크기 체크
                    if(colWidth + disWidth < colMinWidth || colNextWidth - disWidth < colMinWidth)
                        return;

                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(col.element).outerWidth(colWidth + disWidth);
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(colNext.element).outerWidth(colNextWidth - disWidth);

                    // 스크롤 옵션일 경우, 별도 처리
                    if(self.options.scroll) {
                        var colLastWidth = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(colNext.element).outerWidth() - ((col.index == self.uit.getColumnCount() - 2) ? _.scrollWidth() : 0);

                        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(col.list[0]).outerWidth(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(col.element).outerWidth());
                        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(colNext.list[0]).outerWidth(colLastWidth);
                    }
                }
            }

            function resetRowStatus(self, isChecked) {
                self.hideExpand();
                self.hideEditRow();
                self.unselect();

                if(!isChecked) {
                    self.uncheckAll();
                }
            }

            this.init = function() {
                var opts = this.options;

                // @Deprecated, 'rows'는 의미상 맞지 않아 차후 삭제
                opts.data = (opts.rows != null) ? opts.rows : opts.data;

                // UIHandler, 추후 코어에서 처리
                $obj = {
                    table: __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root).css({ "position": "relative" }),
                    thead: __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root).find("thead"),
                    tbody: __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root).find("tbody")
                };

                // UITable 객체 생성
                this.uit = new Base({
                    $obj: $obj, $tpl: this.tpl
                }, opts.fields); // 신규 테이블 클래스 사용

                if(opts.moveRow) {
                    $obj.tbody.css({
                        "-webkit-user-select": "none",
                        "-moz-user-select": "none",
                        "-ms-user-select": "none",
                        "-o-user-select": "none",
                        "user-select": "none"
                    });
                }

                if(opts.fields && opts.colshow) { // 컬럼 보이기 초기값 설정
                    setColumnStatus(this);
                }

                if(opts.fields && this.tpl.menu && dropdown != null) { // 컬럼 보이기/숨기기 메뉴 설정
                    setColumnMenu(this);
                }

                if(opts.resize) {
                    setColumnResize(this);
                }

                if(opts.fields && opts.sort && opts.sortEvent === true) {
                    setEventSort(this);
                }

                if(opts.data.length > 0) {
                    this.update(opts.data);
                } else {
                    this.setVo(); // TODO: 차후에 제거해야 함
                }

                if(opts.width > 0) {
                    $obj.table.outerWidth(opts.width);
                }

                if(!opts.fields) {
                    if(opts.sort || opts.colshow || opts.editRow) {
                        throw new Error("JUI_CRITICAL_ERR: 'fields' option is required");
                    }
                }

                setEventColumn(this);
            }

            /**
             * @method update
             * Updates the list of rows or modifies the row at a specified index.
             *
             * @param {Array} rows
             */
            this.update = function() {
                var dataList = (arguments.length == 1) ? arguments[0] : arguments[1],
                    index = (arguments.length == 2) ? arguments[0] : null;

                if(index != null) { // 1. 단일 로우 업데이트
                    var tmpRow = this.uit.updateRow(index, dataList);
                    setEventRow(this, tmpRow);

                    // 첫번째 로우일 경우, 스크롤 다시 처리
                    if(parseInt(index) == 0) {
                        this.scroll();
                    }
                } else { // 2. 로우 목록 업데이트
                    this.uit.removeRows();
                    this.scroll();
                    this.append(dataList);

                    // 정렬 인덱스가 옵션에 있을 경우, 해당 인덱스의 컬럼 정렬
                    if(this.options.sortIndex) {
                        this.sort(this.options.sortIndex, this.options.sortOrder, null);
                    }
                }
            }

            /**
             * @method updateTree
             * It is possible to configure a tree table using an object array with the index and data properties.
             *
             * @param {Array} rows
             */
            this.updateTree = function(rows) { // index & data 조합의 객체 배열
                var iParser = _.index();

                // 전체 로우 제거
                this.uit.removeRows();

                // 트리 로우 추가
                for(var i = 0; i < rows.length; i++) {
                    var pIndex = iParser.getParentIndex(rows[i].index);

                    if(pIndex == null) {
                        this.uit.appendRow(rows[i].data);
                    } else {
                        this.uit.appendRow(pIndex, rows[i].data);
                    }
                }

                setUpdateInit(this, true);
                setEventRows(this);
            }

            /**
             * @method append
             * Add a row or a child row to at a specified index.
             *
             * @param {RowObject} row
             */
            this.append = function() {
                var isInit = (this.count() > 0) ? false : true;
                var dataList = (arguments.length == 1) ? arguments[0] : arguments[1],
                    index = (arguments.length == 2) ? arguments[0] : null;

                dataList = (dataList.length == undefined) ? [ dataList ] : dataList;

                for(var i = 0; i < dataList.length; i++) {
                    var tmpRow = null;

                    if(index != null) tmpRow = this.uit.appendRow(index, dataList[i]);
                    else tmpRow = this.uit.appendRow(dataList[i]);

                    // 추가 로우 추가시 이벤트 걸기
                    if(!isInit) {
                        setEventRow(this, tmpRow);
                    }
                }

                setUpdateInit(this, isInit);
                if(isInit) setEventRows(this); // 최초에 데이터가 없을 경우에만 전체 이벤트 걸기
            }

            /**
             * @method insert
             * Adds a row at a specified index.
             *
             * @param {Integer} index
             * @param {RowObject} row
             */
            this.insert = function(index, dataList) {
                var isInit = (this.count() > 0) ? false : true;
                var dataList = (dataList.length == undefined) ? [ dataList ] : dataList;

                for(var i = 0; i < dataList.length; i++) {
                    this.uit.insertRow(index, dataList[i]);
                }

                setUpdateInit(this, isInit);
                setEventRows(this);
            }

            /**
             * @method select
             * Adds a selected class to a row at a specified index and gets an instance of the applicable row.
             *
             * @param {Integer} index
             * @return {RowObject} row
             */
            this.select = function(index) {
                // 모든 로우 상태 초기화
                resetRowStatus(this);

                var row = this.get(index);

                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(row.element).parent().find(".selected").removeClass("selected");
                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(row.element).addClass("selected");

                selectedIndex = index;
                return row;
            }

            /**
             * @method unselect
             * Removes a selected class from a selected row and gets an instance of the row in question.
             *
             * @return {RowObject} row
             */
            this.unselect = function() {
                if(selectedIndex == null) return;
                var row = this.get(selectedIndex);

                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(row.element).removeClass("selected");
                selectedIndex = null;

                return row;
            }

            /**
             * @method check
             * Add a checked class to a row at a specified index.
             *
             * @param {Integer} index
             */
            this.check = function(index) {
                // 모든 로우 상태 초기화 (체크만 제외 )
                resetRowStatus(this, true);

                var row = this.get(index);

                // 초기화
                this.hideExpand();
                this.hideEditRow();
                this.unselect();

                checkedIndexes[index] = row;
                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(row.element).addClass("checked");
            }

            /**
             * @method uncheck
             * Removes a checked class from a row at a specified index.
             *
             * @param {Integer} index
             */
            this.uncheck = function(index) {
                if(checkedIndexes[index] == null) return;
                var row = this.get(index);

                checkedIndexes[index] = null;
                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(row.element).removeClass("checked");
            }

            /**
             * @method uncheckAll
             * Removes checked classes from all rows.
             */
            this.uncheckAll = function() {
                checkedIndexes = {};
                $obj.tbody.find(".checked").removeClass("checked");
            }

            /**
             * @method remove
             * Remove a row at a specified index.
             *
             * @param {Integer} index
             */
            this.remove = function(index) {
                if(index == null) return null;

                this.uit.removeRow(index);
                setEventRows(this);
                this.scroll();
            }

            /**
             * @method reset
             * Removes all rows.
             */
            this.reset = function() {
                selectedIndex = null;
                expandedIndex = null;
                editableIndex = null;
                dragIndex = null;
                checkedIndexes = {};

                this.uit.removeRows();
                this.scroll();
            }

            /**
             * @method move
             * Moves a row iat a specified index to the target index.
             *
             * @param {Integer} index
             * @param {Integer} targetIndex
             */
            this.move = function(index, targetIndex) {
                this.uit.moveRow(index, targetIndex);
                setEventRows(this);

                // 첫번째 로우일 경우, 스크롤 다시 처리
                if(parseInt(index) == 0 || parseInt(targetIndex) == 0) {
                    this.scroll();
                }
            }

            /**
             * @method sort
             * Moves a row iat a specified index to the target index.
             *
             * @param {Integer} index
             * @param {String} order  "asc" or "desc"
             */
            this.sort = function(index, order, e) {  // index는 컬럼 key 또는 컬럼 name
                if(!this.options.fields || !this.options.sort || is_resize) return;
                var column = this.getColumn(index);

                if(typeof(column.name) == "string") {
                    column.order = (order) ? order : (column.order == "asc" || column.order == null) ? "desc" : "asc";

                    this.uit.setColumn(index, column);
                    this.uit.sortRows(column.name, (column.order == "desc") ? true : false);
                    this.emit("sort", [ column, e ]);

                    setUpdateInit(this, true);
                    setEventRows(this);
                }
            }

            /**
             * @method scroll
             * Sets the scroll based on the height of a table.
             *
             * @param {Integer} height
             */
            this.scroll = function(height) {
                if(!this.options.scroll) return;

                var self = this,
                    h = (height && height > 0) ? height : this.options.scrollHeight,
                    h = (h > 0) ? h : 200;

                this.options.scrollHeight = h;
                $obj.tbody.css("maxHeight", h + "px");

                setTimeout(function() {
                    if($obj.tbody.outerHeight() < h) {
                        $obj.table.css({
                            "table-layout": ""
                        });

                        $obj.tbody.css({
                            "display": "",
                            "overflow": ""
                        });
                    } else {
                        $obj.table.css({
                            "table-layout": "fixed"
                        });

                        $obj.tbody.css({
                            "display": "block",
                            "overflow": "auto"
                        });
                    }

                    setScrollResize(self);
                }, 10);
            }

            /**
             * @method open
             * Shows a child row of a specified index.
             *
             * @param {Integer} index
             */
            this.open = function(index) { // 로트 제외, 하위 모든 노드 대상
                if(index == null) return;

                this.uit.openRow(index);
                this.emit("open", [ this.get(index) ]);
            }

            /**
             * @method fold
             * Hides a child row of a specified index.
             *
             * @param {Integer} index
             */
            this.fold = function(index) {
                if(index == null) return;

                this.uit.foldRow(index);
                this.emit("fold", [ this.get(index) ]);
            }

            /**
             * @method openAll
             * Shows all child rows of a specified index.
             */
            this.openAll = function() { // 로트 포함, 하위 모든 노드 대상
                this.uit.openRowAll();
                this.emit("openall");
            }

            /**
             * @method foldAll
             * Hides all child rows of a specified index.
             */
            this.foldAll = function() {
                this.uit.foldRowAll();
                this.emit("foldall");
            }

            /**
             * @method resize
             * Resets the inner scroll and columns of a table.
             */
            this.resize = function() {
                this.scroll();

                if(this.options.resize) {
                    setColumnResize(this);
                }
            }

            /**
             * @method resizeColumns
             * Resets the sizes of all columns of a table.
             */
            this.resizeColumns = function() {
                var columns = this.listColumn();

                for(var i = 0; i < columns.length; i++) {
                    if(columns[i].width == null) {
                        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(columns[i].element).outerWidth("auto");
                    }
                }
            }

            /**
             * @method size
             * Gets the size of all the rows of a table.
             *
             * @return {Integer} size
             */
            this.size = function() { // 차후 수정 (컬럼 * 로우 개수 * 바이트)
                return this.uit.getRowCount();
            }

            /**
             * @method count
             * Gets the number of trows of a table.
             *
             * @return {Integer} count
             */
            this.count = function() {
                return this.uit.getRowCount();
            }

            /**
             * @method list
             * Gets all the rows of a table.
             *
             * @return {Array} rows
             */
            this.list = function() {
                return this.uit.getRow();
            }

            /**
             * @method listData
             * Gets the data of all the rows of a table.
             *
             * @return {Array} datas
             */
            this.listData = function() {
                var rows = this.list(),
                    data = [];

                for(var i = 0; i < rows.length; i++) {
                    data.push(rows[i].data);
                }

                return data;
            }

            /**
             * @method listAll
             * Gets all the rows of a table including child rows.
             *
             * @return {Array} rows
             */
            this.listAll = function() {
                return this.uit.getRowAll();
            }

            /**
             * @method listChecked
             * Gets all rows in a check state.
             *
             * @return {Array} rows
             */
            this.listChecked = function() {
                var list = [];

                for(var row in checkedIndexes) {
                    if(checkedIndexes[row] != null) {
                        list.push(checkedIndexes[row]);
                    }
                }

                return list;
            }

            /**
             * @method listColumn
             * Gets all columns.
             *
             * @return {Array} columns
             */
            this.listColumn = function() {
                return this.uit.getColumn();
            }

            /**
             * @method get
             * Gets the row at the specified index.
             *
             * @param {Integer} index
             * @return {RowObject} row
             */
            this.get = function(index) {
                if(index == null) return null;
                return this.uit.getRow(index);
            }

            /**
             * @method getAll
             * Gets all rows of at the specified index including child rows.
             *
             * @param {Integer} index
             * @return {Array} rows
             */
            this.getAll = function(index) {
                if(index == null) return null;
                return this.uit.getRowAll(index);
            }

            /**
             * @method getColumn
             * Gets the column at the specified index.
             *
             * @param {"Integer"/"String"} key index or column key
             * @return {ColumnObject} column
             */
            this.getColumn = function(index) { // index or columnName
                if(index == null) return null;
                else {
                    if(typeof(index) == "string")
                        return this.uit.getColumn(__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.inArray(index, this.options.fields));
                    else
                        return this.uit.getColumn(index);
                }
            }

            /**
             * @method showColumn
             * Shows the column index (or column name).
             *
             * @param {"Integer"/"String"} key index or column name
             */
            this.showColumn = function(index, e) { // index or columnName
                if(!this.options.fields) return;
                var column = this.getColumn(index);

                this.uit.showColumn(column.index);
                this.scroll();
                this.resizeColumns();

                if(this.options.resize) {
                    setColumnResize(this);
                }

                // 커스텀 이벤트 발생
                this.emit("colshow", [ column, e ]);
            }

            /**
             * @method hideColumn
             * Hides the column index (or column name).
             *
             * @param {"Integer"/"String"} key index or column name
             */
            this.hideColumn = function(index, e) { // index or columnName
                if(!this.options.fields) return;
                var column = this.getColumn(index);

                this.uit.hideColumn(column.index);
                this.scroll();
                this.resizeColumns();

                if(this.options.resize) {
                    setColumnResize(this);
                }

                // 커스텀 이벤트 발생
                this.emit("colhide", [ column, e ]);
            }

            /**
             * @method initColumns
             * It is possible to determine the index or name of the column to be shown in an array.
             *
             * @param {"Integer"/"String"} key index or column name
             */
            this.initColumns = function(keys) {
                if(typeof(keys) != "object") return;
                this.options.colshow = keys;

                setColumnStatus(this);
                this.scroll();
                this.resizeColumns();

                if(this.options.resize) {
                    setColumnResize(this);
                }
            }

            /**
             * @method showColumnMenu
             * Shows the Show/Hide Column menu at specified coordinates.
             *
             * @param {Integer} x
             * @param {Integer} y
             */
            this.showColumnMenu = function(x, y) {
                if(!this.options.fields || !ddUi) return;

                var columns = this.listColumn(),
                    offset = $obj.thead.offset(),
                    cx = _.typeCheck("integer", x) ? x : 0,
                    cy = _.typeCheck("integer", y) ? y : offset.top + $obj.thead.outerHeight();

                // 현재 체크박스 상태 설정
                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(ddUi.root).find("input[type=checkbox]").each(function(i) {
                    if(columns[i].type == "show") this.checked = true;
                    else this.checked = false;
                });

                ddUi.move(cx, cy);
                ddUi.show();
            }

            /**
             * @method hideColumnMenu
             * Hides the Show/Hide Column menu.
             */
            this.hideColumnMenu = function() {
                if(!this.options.fields || !ddUi) return;
                ddUi.hide();
            }

            /**
             * @method toggleColumnMenu
             * Shows or hides the Show/Hide Column menu.
             *
             * @param {Integer} x
             * @param {Integer} y
             */
            this.toggleColumnMenu = function(x, y) {
                if(!this.options.fields || !ddUi) return;

                if(ddUi.type == "show") this.hideColumnMenu();
                else this.showColumnMenu(x, y);
            }

            /**
             * @method showExpand
             * Shows the extended row area of a specified index.
             *
             * @param {Integer} index
             */
            this.showExpand = function(index, obj, e) {
                if(!this.options.expand) return;

                // 모든 로우 상태 초기화
                resetRowStatus(this);

                var expandSel = "#EXPAND_" + this.timestamp,
                    row = (index instanceof Row) ? index : this.get(index),
                    obj = (typeof(obj) != "object") ? __WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({ row: row }, row.data) : obj,
                    $expand = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(expandSel).parent().show();

                $obj.tbody.find("tr").removeClass("open");
                $expand.insertAfter(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(row.element).addClass("open"));

                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(expandSel)
                    .attr("colspan", $obj.thead.find("tr:last > th:visible").length)
                    .html(this.tpl["expand"](obj));

                // 스크롤 적용
                this.scroll();
                // TODO: 차후에 제거해야 함
                this.setVo();

                // 커스텀 이벤트 호출
                expandedIndex = index;
                this.emit("expand", [ row, e ]);
            }

            /**
             * @method hideExpand
             * Hides the extended row area of a specified index.
             */
            this.hideExpand = function(e) {
                if(expandedIndex == null) return;

                var row = (expandedIndex instanceof Row) ? expandedIndex : this.get(expandedIndex);

                __WEBPACK_IMPORTED_MODULE_0_jquery___default()('#EXPAND_' + this.timestamp).parent().hide();
                $obj.tbody.find("tr").removeClass("open");

                // 스크롤 적용
                this.scroll();

                expandedIndex = null;
                this.emit("expandend", [ row, e ]);
            }

            /**
             * @method getExpand
             * Get a row in which the extended area is currently activated.
             *
             * @return {RowObject} row
             */
            this.getExpand = function() {
                if(expandedIndex == null) return null;

                return (expandedIndex instanceof Row) ? expandedIndex : this.get(expandedIndex);
            }

            /**
             * @method showEditRow
             * Shows the modified row area of a specified index.
             *
             * @param {Integer} index
             */
            this.showEditRow = function(index, e) {
                if(!this.options.editRow) return;

                // 모든 로우 상태 초기화
                resetRowStatus(this);

                var self = this,
                    row = this.get(index);
                var $cells = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(row.element).find("td");

                $cells.each(function(i) {
                    setEventEditCell(self, this, row, i, e, function() {
                        var data = {},
                            originData = row.data;

                        $cells.each(function(colIndex) {
                            var column = self.getColumn(colIndex);

                            if(column.name != null) {
                                var $edit = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).find("input.edit");

                                if($edit.length == 1) {
                                    var value = $edit.val();
                                    data[column.name] = (!isNaN(value) && value != null && value != "") ? parseFloat(value) : value;
                                }
                            }
                        });

                        // 변경된 값으로 데이터 갱신하기
                        row.data = __WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend(row.data, data);

                        // 콜백 결과 가져오기
                        var res = self.emit("editend", [ row, e ]);

                        // 이벤트 리턴 값이 false가 아닐 경우에만 업데이트
                        if(res !== false) {
                            self.hideEditRow(data);
                        } else {
                            row.data = originData;
                        }
                    });
                });

                editableIndex = index;
                self.emit("editstart", [ row, e ]);
            }

            /**
             * @method hideEditRow
             * Hides the modified row area of a specified index.
             */
            this.hideEditRow = function(data) {
                if(editableIndex == null) return;
                var row = this.get(editableIndex);

                editableIndex = null;
                this.update(row.index, !data ? row.data : data);
            }

            /**
             * @method getEditRow
             * Get a row in which the modified area is currently activated.
             *
             * @return {RowObject} row
             */
            this.getEditRow = function() {
                if(editableIndex == null) return null;
                return this.get(editableIndex);
            }

            /**
             * @method setCsv
             * Updates a table using a CVS string.
             */
            this.setCsv = function() {
                var opts = this.options;
                if(!opts.fields && !opts.csv) return;

                var csv = (arguments.length == 1) ? arguments[0] : arguments[1],
                    key = (arguments.length == 2) ? arguments[0] : null;

                var fields = _.getCsvFields(opts.fields, opts.csv),
                    csvNumber = (opts.csvNumber) ? _.getCsvFields(opts.fields, opts.csvNumber) : null,
                    dataList = _.csvToData(fields, csv, csvNumber);

                if(key == null) {
                    this.update(dataList);
                } else {
                    this.reset();

                    for(var i = 0; i < dataList.length; i++) {
                        var index = dataList[i][key];

                        if(index) {
                            this.insert(index, dataList[i]);
                        }
                    }
                }
            }

            /**
             * @method setCsvFile
             * Updates a table using a CVS file.
             */
            this.setCsvFile = function() {
                if(!this.options.fields && !this.options.csv) return;

                var self = this,
                    file = (arguments.length == 1) ? arguments[0] : arguments[1],
                    key = (arguments.length == 2) ? arguments[0] : null;

                _.fileToCsv(file, function(csv) {
                    if(key == null) self.setCsv(csv);
                    else self.setCsv(key, csv);
                });
            }

            /**
             * @method getCsv
             * Gets the data of a table as a CSV string.
             *
             * @param {Boolean} isTree
             * @return {String} csv
             */
            this.getCsv = function(isTree) {
                if(!this.options.fields && !this.options.csv) return;

                var fields = _.getCsvFields(this.options.fields, this.options.csv);
                var dataList = [],
                    rows = (isTree) ? this.listAll() : this.list();

                for(var i = 0; i < rows.length; i++) {
                    dataList.push(rows[i].data);
                }

                return _.dataToCsv2({
                    fields: fields,
                    rows: dataList,
                    names: this.options.csvNames
                });
            }

            /**
             * @method getCsvBase64
             * Gets the data of a table as a CSV string encoded as base64.
             *
             * @param {Boolean} isTree
             * @return {String} base64
             */
            this.getCsvBase64 = function(isTree) {
                if(!this.options.fields && !this.options.csv) return;

                return _.csvToBase64(this.getCsv(isTree));
            }

            /**
             * @method downloadCsv
             * Downloads the data of a table as a CSV file.
             *
             * @param {String} name
             * @param {Boolean} isTree
             */
            this.downloadCsv = function(name, isTree) {
                if(_.typeCheck("string", name)) {
                    name = name.split(".")[0];
                }

                var a = document.createElement('a');
                a.download = (name) ? name + ".csv" : "table.csv";
                a.href = this.getCsvBase64(isTree);

                document.body.appendChild(a);
                a.click();
                a.parentNode.removeChild(a);
            }

            /**
             * @method activeIndex
             * Gets the index of a row that is activated in an extended/modified/selected state.
             *
             * @return {Integer} index
             */
            this.activeIndex = function() { // 활성화된 확장/수정/선택 상태의 로우 인덱스를 리턴
                if(expandedIndex != null) {
                    return (expandedIndex instanceof Row) ? expandedIndex.index : expandedIndex;
                }

                return selectedIndex || editableIndex;
            }

            /**
             * @method setVo
             * Dynamically defines the template method of a UI
             *
             * @deprecated
             */
            this.setVo = function() {
                if(!this.options.vo) return;

                if(vo != null) vo.reload();
                vo = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.selector).jbinder();

                this.bind = vo;
            }
        }

        UI.setup = function() {
            return {
                /**
                 * @cfg {Array} [fields=null]
                 * Sets the name of columns in the order of being displayed on the table screen.
                 */
                fields: null,

                /**
                 * @cfg {Array} [csv=null]
                 * Sets the column key shown when converted to a CSV string.
                 */
                csv: null,

                /**
                 * @cfg {Array} [csvNames=null]
                 * Sets the name of a column shown when converting to a CSV string, which must be defined in the same order as the CSV option.
                 */
                csvNames: null,

                /**
                 * @cfg {Array} [csvNumber=null]
                 * Sets the column key to be changed to a number form when converted to a CSV string.
                 */
                csvNumber: null,

                /**
                 * @cfg {Array} data
                 * Sets the initial row list of a table.
                 */
                data: [],

                /**
                 * @cfg {Array} rows
                 * Sets the initial row list of a table (@Deprecated).
                 */
                rows: null, // @Deprecated

                /**
                 * @cfg {Boolean/Array} [colshow=false]
                 * Sets a column index shown when the Show/Hide Column menu is enabled.
                 */
                colshow: false,

                /**
                 * @cfg {Boolean} [scroll=false]
                 * Determines whether to use a table scroll.
                 */
                scroll: false,

                /**
                 * @cfg {Integer} [scrollHeight=200]
                 * Sets the reference height of a body area when using a table scroll.
                 */
                scrollHeight: 200,

                /**
                 * @cfg {Integer} [width=0]
                 * Sets the area of a table.
                 */
                width: 0,

                /**
                 * @cfg {Boolean} [expand=false]
                 * Determines whether to use an extended row area.
                 */
                expand: false,

                /**
                 * @cfg {Boolean} [expandEvent=true]
                 * Sets the Show/Hide state of an extended row area when clicking on a row.
                 */
                expandEvent: true,

                /**
                 * @cfg {Boolean|Array} [editRow=false]
                 * Determines whether to use a modified row area.
                 */
                editRow: false,

                /**
                 * @cfg {Boolean} [editEvent=true]
                 * Sets the Show/Hide state of an extended row area when doubleclicking on a row/cell.
                 */
                editEvent: true,

                /**
                 * @cfg {Boolean} [resize=false]
                 * Determines whether to use the column resizing function.
                 */
                resize: false,

                /**
                 * @cfg {Boolean/Array} [sort=false]
                 * Determines whether to use the table sort function.
                 */
                sort: false,

                /**
                 * @cfg {Integer} [sortIndex=null]
                 * Determines whether to use the table sort function.
                 */
                sortIndex: null,

                /**
                 * @cfg {String} [sortOrder="asc"]
                 * Determines whether to use the table sort function.
                 */
                sortOrder: "asc",

                /**
                 * @cfg {Boolean} [sortEvent=true]
                 * Determines whether to use the sort function when you click on a column.
                 */
                sortEvent: true,

                /**
                 * @cfg {Boolean} [moveRow=false]
                 * Determines whether to use the move function when you fire row draggable event.
                 */
                moveRow: false,

                /**
                 * @cfg {Object} [vo=false]
                 * Configures a binding object of a markup
                 *
                 * @deprecated
                 */
                vo: false,

                /**
                 * @cfg {Object} [animate=false]
                 *
                 * @deprecated
                 */
                animate: false
            }
        }

        /**
         * @event select
         * Event that occurs when a row is selected (@Deprecated)
         *
         * @param {RowObject) row
         * @param {EventObject} e The event object
         */

        /**
         * @event click
         * Event that occurs when a row is clicked
         *
         * @param {RowObject) row
         * @param {EventObject} e The event object
         */

        /**
         * @event dblclick
         * Event that occurs when a row is double clicked
         *
         * @param {RowObject) row
         * @param {EventObject} e The event object
         */

        /**
         * @event sort
         * Event that occurs when the table is sorted.
         *
         * @param {ColumnObject) column
         * @param {EventObject} e The event object
         */

        /**
         * @event scroll
         * Event that occurs when the scroll of a table is located at the lowermost position.
         *
         * @param {EventObject} e The event object
         */

        /**
         * @event rowmenu
         * Event that occurs when a row is right clicked.
         *
         * @param {RowObject) row
         * @param {EventObject} e The event object
         */

        /**
         * @event colclick
         * Event that occurs when a column is clicked.
         *
         * @param {ColumnObject) column
         * @param {EventObject} e The event object
         */

        /**
         * @event colshow
         * Event that occurs when shown column is selected.
         *
         * @param {ColumnObject) column
         * @param {EventObject} e The event object
         */

        /**
         * @event colhide
         * Event that occurs when hidden column is selected.
         *
         * @param {ColumnObject) column
         * @param {EventObject} e The event object
         */

        /**
         * @event colresize
         * Event that occurs when the column resizing is activated.
         *
         * @param {ColumnObject) column
         * @param {EventObject} e The event object
         */

        /**
         * @event editstart
         * Event that occurs when a row is in a modification state.
         *
         * @param {RowObject) row
         * @param {EventObject} e The event object
         */

        /**
         * @event editend
         * Event that occurs when the modification of a row is completed.
         *
         * @param {RowObject) row
         * @param {EventObject} e The event object
         */

        /**
         * @event expand
         * Event that occurs when the extended row area is enabled.
         *
         * @param {RowObject) row
         * @param {EventObject} e The event object
         */

        /**
         * @event expandend
         * Event that occurs when the extended row area is disabled.
         *
         * @param {RowObject) row
         * @param {EventObject} e The event object
         */

        /**
         * @event open
         * Event that occurs when a child row is shown.
         *
         * @param {RowObject) row
         * @param {EventObject} e The event object
         */

        /**
         * @event fold
         * Event that occurs when a child row is hidden.
         *
         * @param {RowObject) row
         * @param {EventObject} e The event object
         */

        /**
         * @event openall
         * Event that occurs when all child rows are shown.
         */

        /**
         * @event foldall
         * Event that occurs when all child rows are hidden.
         */

        return UI;
    }
});


/***/ }),
/* 384 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);


function ViewData(type, elem) {
    var $sel = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(elem);
    var dataType = 0,
        dataAttr = null;

    function isTypeHtml(elem) {
        if(elem.value == undefined || elem.tagName.toUpperCase() == 'BUTTON')
            return true;

        return false;
    }

    function init() {
        if(!type) {
            if(isTypeHtml(elem)) dataType = "html";
            else dataType = "value";
        } else {
            if(type.indexOf(".") != -1) {
                var arr = type.split(".");

                dataType = arr[0];
                dataAttr = arr[1];
            } else {
                dataType = "css";
                dataAttr = type;
            }
        }
    }

    this.run = function(value) {
        var isSetter = (typeof(value) == "undefined" || value == null) ? false : true;

        var method = {
            "html": function() {
                if(isSetter) $sel.html(value);
                else return $sel.html();
            },
            "value": function() {
                if(isSetter) $sel.val(value);
                else return $sel.val();
            },
            "css": function() {
                if(isSetter) {
                    if(typeof(value) == "object") {
                        $sel.css(value);
                    } else {
                        $sel.css(dataAttr, value);
                    }
                } else return $sel.css(dataAttr);
            },
            "attr": function() {
                if(isSetter) {
                    if(typeof(value) == "object") {
                        $sel.attr(value);
                    } else {
                        $sel.attr(dataAttr, value);
                    }
                } else return $sel.attr(dataAttr);
            }
        };

        return method[dataType]();
    }

    init();
}

/* harmony default export */ __webpack_exports__["a"] = (function(root, options) {
    var	self = this,
        auto = {};

    var def_methods = {
        get: true, val: true, destroy: true, close: true, reload: true
    };

    function init() {
        var funcList = [],
            bindList = [],
            autoList = [];

        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(root).find("[" + options.attr + "]").each(function(i) {
            var $this = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this),
                tmpComm = $this.attr(options.attr),
                tmpCommArr = getParseCommandArr(tmpComm);

            var commArr = (tmpCommArr.length > 0) ? tmpCommArr : [ tmpCommArr ];

            for(var j=0, len=commArr.length; j < len; j++) {
                var command = commArr[j];

                if(!command.is_auto) {
                    if(!command.key) {
                        bindList.push({ name: command.func, elem: this });
                    } else {
                        funcList.push({ func: command.func, key: command.key, data: this });
                    }
                } else {
                    if(this.tagName == "INPUT" || this.tagName == "SELECT" || this.tagName == "TEXTAREA") {
                        autoList.push({ func: command.func, type: command.type, elem: this });
                    }
                }
            }

            if(funcList.length > 0) settingBindFunc(funcList);
            if(bindList.length > 0) settingBindMulti(bindList);
            if(autoList.length > 0) settingBindAuto(autoList);
        });
    }

    /**
     * data 속성의 value 파싱 함수
     *
     * @param {String} command
     */
    function getParseCommand(command) {
        var key = null, func = null, type = null;
        var is_auto = false;

        if(command) {
            if(command.indexOf('@') != -1) {
                var arr = command.split("@");
                func = arr[0],
                    type = arr[1],
                    is_auto = true;
            } else {
                if(command.indexOf('#') != -1) {
                    var arr = command.split("#");
                    type = arr[1],
                        command = arr[0];
                }

                if(command.indexOf(':') != -1) {
                    var arr = command.split(":");
                    key = arr[1],
                        func = arr[0];
                } else {
                    func = command;
                }
            }
        }

        return {
            key		: key,
            func	: func,
            type	: type,
            is_auto	: is_auto
        };
    }

    function getParseCommandArr(command) {
        if(command.indexOf(',') != -1) {
            //if(command.indexOf(':') != -1) throw new Error("JBINDER_BIND_ERR: bind array keys can not be used");

            var arr = command.split(","),
                commArr = new Array();

            for(var i=0, len=arr.length; i < len; i++) {
                commArr.push(getParseCommand(arr[i]));
            }

            return commArr;
        }

        return getParseCommand(command);
    }

    /**
     * bind 태그일 경우,
     * 엘리먼트 유형에 따라 처리하는 함수
     *
     * @param {Element} elem
     * @param {String} value
     */
    function settingBindProc(func, elem, value) {
        var tmpComm = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(elem).attr(options.attr),
            tmpCommArr = getParseCommandArr(tmpComm),
            commArr = (tmpCommArr.length > 0) ? tmpCommArr : [ tmpCommArr ];

        for(var i=0, len=commArr.length; i < len; i++) {
            var comm = commArr[i];

            if(comm.func == func) {
                new ViewData(comm.type, elem).run(value);
            }
        }
    }

    /**
     * bind 태그일 경우,
     * 단일/멀티 유형에 따라 처리하는 함수
     *
     * @param {Array} bindList
     */
    function settingBindMulti(bindList) {
        var list = new Object();

        for(var i=0, len=bindList.length; i < len; i++) {
            var obj = bindList[i];
            if(!list[obj.name]) list[obj.name] = [];

            list[obj.name].push(obj.elem);
        }

        for(var func in list) {
            (function(func) {
                self[func] = function(value) {
                    var elemList = list[func];

                    for(var j=0, len=elemList.length; j < len; j++) {
                        var elem = elemList[j];

                        settingBindProc(func, elem, value);
                    }

                    return (elemList.length > 1) ? elemList : elemList[0];
                }
            })(func);
        }
    }

    /**
     * bind 태그 메소드 세팅 함수
     * bind일 경우, settingBindProc 호출
     *
     * @param {Array} funcList
     */
    function settingBindFunc(funcList) {
        for(var i=0, len=funcList.length; i < len; i++) {
            var func = funcList[i].func;

            (function(func) {
                self.funcMultiProc = function(key, value) {
                    var data = getFuncElem(funcList, func, key);
                    settingBindProc(func, data, value);

                    return data;
                };
            })(func);

            function getFuncElem(funcList, func, key) {
                for(var i=0, len=funcList.length; i < len; i++) {
                    var obj = funcList[i];

                    if(obj.func == func && obj.key == key) {
                        return obj.data;
                    }
                }
            }

            self[func] = self.funcMultiProc;
        }
    }

    /**
     * bind 태그 이벤트 오토 세팅 함수
     *
     * @param {Array} autoList
     */
    function settingBindAuto(autoList) {
        for(var i=0, len=autoList.length; i < len; i++) {
            var elem = autoList[i].elem,
                func = autoList[i].func,
                type = autoList[i].type;

            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(elem).unbind(type).on(type, function(e) {
                self[func](__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).val());
            });
        }
    }

    /**
     * bind/tag/act, 엘리먼트 또는 데이터을 가져오는 메소드
     *
     * @param {String} key
     * @param {Boolean} is_elem
     */
    function _search(key, is_elem) {
        var sel	= "[" + options.attr + "]",
            cmdList = [];

        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(root).find(sel).each(function(i) {
            var cmd_str = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).attr(options.attr),
                command = getParseCommandArr(cmd_str);
            command = (!command.length) ? [ command ] : command;

            for(var i = 0; i < command.length; i++) {
                if(key == command[i].func) {
                    cmdList.push({ cmd: command[i], elem: this });
                }
            }
        });

        function getData(data) {
            return new ViewData(data.cmd.type, data.elem).run();
        }

        return (function(cmdList) {
            if(cmdList.length == 1 && !cmdList[0].cmd.key) {
                if(is_elem) return cmdList[0].elem;
                else return getData(cmdList[0]);

            } else {
                var list = new Object(),
                    index = 0;

                for(var i=0, len=cmdList.length; i < len; i++) {
                    var cmd = cmdList[i].cmd;

                    if(cmd.key) { key = cmd.key; }
                    else { key = index; index++; }

                    if(is_elem) list[key] = cmdList[i].elem;
                    else list[key] = getData(cmdList[i]);
                }

                return list;
            }
        })(cmdList);
    }

    //-- Search API
    self.get = function(key) { return _search(key, true); }
    self.val = function(key) { return _search(key, false); }

    //-- Memory Returned API
    self.destroy = function() {
        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(root).off().remove();
        self.close(true);
    }

    self.close = function(isOff) {
        if(!isOff) __WEBPACK_IMPORTED_MODULE_0_jquery___default()(root).off();
        for(var key in this) { delete this[key]; }
    }

    self.reload = function() {
        for(var key in this) {
            if(!def_methods[key]) {
                delete this[key];
            }
        }

        init();
    }

    //-- Initialization
    init();
});

/***/ }),
/* 385 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__main_js__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__column_js__ = __webpack_require__(386);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__row_js__ = __webpack_require__(387);





__WEBPACK_IMPORTED_MODULE_1__main_js__["default"].use(__WEBPACK_IMPORTED_MODULE_2__column_js__["a" /* default */], __WEBPACK_IMPORTED_MODULE_3__row_js__["a" /* default */]);

/* harmony default export */ __webpack_exports__["a"] = ({
    name: "grid.base",
    component: function () {
        const _ = __WEBPACK_IMPORTED_MODULE_1__main_js__["default"].include("util.base");
        const Column = __WEBPACK_IMPORTED_MODULE_1__main_js__["default"].include("grid.column");
        const Row = __WEBPACK_IMPORTED_MODULE_1__main_js__["default"].include("grid.row");

        var Base = function(handler, fields) {
            var self = this;

            var $obj = handler.$obj,
                $tpl = handler.$tpl;

            var columns = [],
                rows = [],
                folds = {};

            var isNone = false,
                iParser = _.index();

            function init() {
                toggleRowNone();
                initColumns();
            }

            function initColumns() {
                var tmpColumns = [];

                $obj.thead.find("tr:last > th").each(function(i) {
                    tmpColumns.push(this);
                });

                for(var i = 0; i < tmpColumns.length; i++) {
                    var column = new Column(i);

                    if(columns[i]) {
                        column.element = columns[i].element;
                        column.order = columns[i].order;
                        column.name = columns[i].name;
                        column.data = columns[i].data;
                        column.list = columns[i].list;
                        column.type = columns[i].type;
                        column.width = columns[i].width;
                    } else {
                        column.element = tmpColumns[i];

                        if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(column.element).attr("width") || (
                            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(column.element).attr("style") &&
                            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(column.element).attr("style").indexOf("width") != -1)) {
                            column.width = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(column.element).outerWidth();
                        }

                        if(fields && fields[i]) {
                            column.name = fields[i];
                        }
                    }

                    for(var j = 0; j < rows.length; j++) {
                        column.list.push(rows[j].list[i]);
                        column.data.push(rows[j].data[column.name]);
                    }

                    columns[i] = column;
                }
            }

            function initColumnRows(type, row) {
                if(type == "reload" || type == "append") {
                    for(var i = 0; i < columns.length; i++) {
                        columns[i].list[row.index] = row.list[i];
                        columns[i].data[row.index] = row.data[columns[i].name];
                    }
                } else if(type == "remove") {
                    for(var i = 0; i < columns.length; i++) {
                        columns[i].list.splice(row.index, 1);
                        columns[i].data.splice(row.index, 1);
                    }
                } else {
                    initColumns();
                }
            }

            function createRow(data, no, pRow) {
                if(data instanceof Row) return data;

                var row = new Row();
                row.init(data, $tpl.row, pRow);
                row.setIndex(no);
                row.reload(columns);

                return row;
            }

            function setRowChildAll(dataList, row) {
                var child_rows = row.children;

                if(child_rows.length > 0) {
                    for(var i = 0; i < child_rows.length; i++) {
                        dataList.push(child_rows[i]);

                        if(child_rows[i].children.length > 0) {
                            setRowChildAll(dataList, child_rows[i]);
                        }
                    }
                }
            }

            function getRowChildLeaf(keys, row) {
                if(!row) return null;
                var tmpKey = keys.shift();

                if(tmpKey == undefined) {
                    return row;
                } else {
                    return getRowChildLeaf(keys, row.children[tmpKey]);
                }
            }

            function reloadRows() {
                var index = arguments[0], callback = arguments[1];

                if(typeof(index) == "function") {
                    callback = index;
                    index = 0;
                } else {
                    index = (!isNaN(index)) ? index : 0;
                }

                for(var i = index; i < rows.length; i++) {
                    rows[i].setIndex(i);
                    rows[i].reload();
                    initColumnRows("reload", rows[i]);

                    if(typeof(callback) == "function") {
                        callback(i);
                    }
                }
            }

            function insertRowData(index, data) {
                var row = createRow(data, index), preRows = row;

                if(rows.length == index && !(index == 0 && rows.length == 1)) {
                    var tRow = rows[index - 1];
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(row.element).insertAfter((tRow.children.length == 0) ? tRow.element : tRow.lastChildLeaf().element);
                } else {
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(row.element).insertBefore(rows[index].element);
                }

                preRows = rows.splice(0, index);
                preRows.push(row);
                rows = preRows.concat(rows);

                // Rows UI
                reloadRows(index);

                return row;
            }

            function insertRowDataChild(index, data) {
                var keys = iParser.getIndexList(index);

                var pRow = self.getRowParent(index),
                    rownum = keys[keys.length - 1],
                    row = createRow(data, rownum, pRow);

                pRow.insertChild(rownum, row);

                return row;
            }

            function appendRowData(data) {
                var row = createRow(data, rows.length);
                rows.push(row);

                $obj.tbody.append(row.element);
                initColumnRows("append", row);

                return row;
            }

            function appendRowDataChild(index, data) {
                var pRow = self.getRow(index),
                    cRow = createRow(data, pRow.children.length, pRow);

                pRow.appendChild(cRow);

                return cRow;
            }

            function toggleRowNone() {
                if(typeof($tpl.none) != "function") return false;

                if(isNone) {
                    if(rows.length > 0) {
                        $obj.tbody.find("tr:first").remove();
                        isNone = false;
                    }
                } else {
                    if(rows.length == 0) {
                        $obj.tbody.html($tpl.none());
                        isNone = true;
                    }
                }

                return true;
            }

            function getIndexToRow(index) {
                for(var i = 0, len = rows.length; i < len; i++) {
                    if(rows[i].index == ("" + index)) {
                        return rows[i];
                        break;
                    }
                }

                return null;
            }

            this.appendRow = function() {
                var index = arguments[0], data = arguments[1];
                var result = null;

                if(!data) result = appendRowData(index);
                else result = appendRowDataChild(index, data);

                toggleRowNone();
                return result;
            }

            this.insertRow = function(index, data) {
                var result = null;

                if(iParser.isIndexDepth(index)) {
                    result = insertRowDataChild(index, data);
                } else {
                    if(rows.length == 0 && parseInt(index) == 0) {
                        result = this.appendRow(data);
                    } else {
                        result = insertRowData(index, data);
                    }
                }

                toggleRowNone();
                return result;
            }

            this.updateRow = function(index, data) {
                var row = this.getRow(index);

                for(var key in data) {
                    row.data[key] = data[key];
                }

                row.reload();
                initColumnRows("reload", row);

                return row;
            }

            this.moveRow = function(index, targetIndex) {
                if(index == targetIndex) return;

                var rows = this.getRowAll(index),
                    row = rows[0],
                    data = _.clone(row.data);

                if(rows.length > 1) {
                    for(var i = 0; i < rows.length; i++) {
                        var index = iParser.changeIndex(rows[i].index, targetIndex, rows[0].index);
                        this.insertRow(index, rows[i].data);
                    }
                } else {
                    this.insertRow(targetIndex, data);
                }

                this.removeRow(row.index);
            }

            this.removeRow = function(index) {
                var row = this.getRow(index);

                if(!iParser.isIndexDepth(index)) {
                    row.destroy();

                    initColumnRows("remove", rows[index]);
                    rows.splice(index, 1);
                    reloadRows(index);
                } else {
                    row.destroy();
                }

                toggleRowNone();
            }

            this.openRow = function(index) {
                this.getRow(index).open();
                folds[index] = false;

                for(var key in folds) {
                    if(folds[key] !== false) {
                        var foldRow = this.getRow(folds[key]);
                        if(foldRow != null) foldRow.fold();
                    }
                }
            }

            this.openRowAll = function() {
                var tmpRows = this.getRowAll();

                for(var i = 0; i < tmpRows.length; i++) {
                    if(!tmpRows[i].isLeaf()) {
                        tmpRows[i].open();
                        folds[tmpRows[i].index] = false;
                    }
                }
            }

            this.foldRow = function(index) {
                this.getRow(index).fold();
                folds[index] = index;
            }

            this.foldRowAll = function() {
                var tmpRows = this.getRowAll();

                for(var i = 0; i < tmpRows.length; i++) {
                    if(!tmpRows[i].isLeaf()) {
                        tmpRows[i].fold();
                        folds[tmpRows[i].index] = tmpRows[i].index;
                    }
                }
            }

            this.removeRows = function() {
                rows = [];

                if(!toggleRowNone()) {
                    $obj.tbody.html("");
                }

                initColumnRows();
            }

            this.sortRows = function(name, isDesc) {
                var qs = _.sort(rows);

                if(isDesc) {
                    qs.setCompare(function(a, b) {
                        return (getValue(a) > getValue(b)) ? true : false;
                    });
                } else {
                    qs.setCompare(function(a, b) {
                        return (getValue(a) < getValue(b)) ? true : false;
                    });
                }

                qs.run();
                $obj.tbody.html("");

                reloadRows(function(i) {
                    $obj.tbody.append(rows[i].element);
                });

                function getValue(row) {
                    var value = row.data[name];

                    if(typeof(value) == "string") {
                        return value.toLowerCase();
                    } else {
                        if(!isNaN(value) && value != null) {
                            return value;
                        }
                    }

                    return "";
                }
            }

            this.appendColumn = function(tplType, dataList) {
                var columLength = columns.length,
                    $columnRows = __WEBPACK_IMPORTED_MODULE_0_jquery___default()($tpl[tplType]({ rows: dataList }));
                var $theadTrList = $columnRows.filter("thead").find("tr");

                $theadTrList.each(function(i) {
                    var $tr = $obj.thead.find("tr").eq(i);

                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).find("th").each(function(j) {
                        $tr.append(this);

                        if($theadTrList.size() - 1 == i) {
                            columns.push({ element: this, list: [] });
                        }
                    });
                });

                for(var k = 0; k < rows.length; k++) {
                    $columnRows.filter("tbody").find("tr").eq(k).find("td").each(function(i) {
                        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(rows[k].element).append(this);

                        columns[columLength + i].list.push(this);
                        rows[k].list.push(this);

                        __WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend(rows[k].data, dataList[k]);
                    });
                }
            }

            this.removeColumn = function(index) {
                for(var i = 0; i < columns[index].list.length; i++) {
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(columns[index].element).remove();
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(columns[index].list[i]).remove();
                }

                for(var j = 0; j < rows.length; j++) {
                    rows[j].list.splice(index, 1);
                }

                columns.splice(index, 1);
            }

            this.hideColumn = function(index) {
                if(columns[index].type == "hide") return;

                var rows = this.getRowAll();
                for(var i = 0; i < rows.length; i++) {
                    rows[i].hideCell(index);
                }

                columns[index].hide();
            }

            this.showColumn = function(index) {
                if(columns[index].type == "show") return;

                var rows = this.getRowAll();
                for(var i = 0; i < rows.length; i++) {
                    rows[i].showCell(index);
                }

                columns[index].show();
            }

            this.getColumnCount = function() {
                return columns.length;
            }

            this.getRowCount = function() {
                return rows.length;
            }

            this.getColumn = function(index) {
                if(index == null) return columns;
                else return columns[index];
            }

            this.getRow = function(index) {
                if(index == null) {
                    return rows;
                } else {
                    var row = getIndexToRow(index);

                    if(!row) {
                        var keys = iParser.getIndexList(index),
                            row = getIndexToRow(keys[0]);

                        for(var i = 1, len = keys.length; i < len; i++) {
                            if(!row) break;
                            row = row.children[keys[i]];
                        }

                        return row;
                    } else {
                        return row;
                    }
                }
            }

            this.getRowAll = function(index) {
                var dataList = [],
                    tmpRows = (index == null) ? rows : [ this.getRow(index) ];

                for(var i = 0; i < tmpRows.length; i++) {
                    if(tmpRows[i]) {
                        dataList.push(tmpRows[i]);

                        if(tmpRows[i].children.length > 0) {
                            setRowChildAll(dataList, tmpRows[i]);
                        }
                    }
                }

                return dataList;
            }

            this.getRowParent = function(index) {
                if(!iParser.isIndexDepth(index)) return null;
                return this.getRow(iParser.getParentIndex(index));
            }

            this.setColumn = function(index, column) {
                columns[index] = column;
            }

            this.setRow = function(index, row) {
                rows[index] = row;
            }

            this.printInfo = function() {
                console.log(columns);
                console.log(rows);
            }

            init();
        }

        return Base;
    }
});

/***/ }),
/* 386 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__main_js__ = __webpack_require__(31);



/* harmony default export */ __webpack_exports__["a"] = ({
    name: "grid.column",
    component: function () {
        var Column = function(index) {
            /** @property {HTMLElement} [element=null] TH element of a specified column */
            this.element = null;

            /** @property {"asc"/"desc"/null} [order=null] Column sort state */
            this.order = null;

            /** @property {Integer} [name=null] Column name */
            this.name = null;

            /** @property {Array} data Data from all rows belonging for a specified column */
            this.data = [];

            /** @property {Array} list TD element of all rows belonging to a specified column */
            this.list = [];

            /** @property {Integer} index Column index */
            this.index = index;

            /** @property {"show"/"hide"/"resize"} [type="show"] The current column state */
            this.type = "show";

            /** @property {Integer} [width=null] Column width */
            this.width = null;

            this.hide = function() {
                this.type = "hide";
                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.element).hide();
            }

            this.show = function() {
                this.type = "show";
                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.element).show();
            }
        }

        return Column;
    }
});

/***/ }),
/* 387 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__main_js__ = __webpack_require__(31);



/* harmony default export */ __webpack_exports__["a"] = ({
    name: "grid.row",
    component: function () {
        const _ = __WEBPACK_IMPORTED_MODULE_1__main_js__["default"].include("util.base");

        var Base = function() {
            function setIndexChild(row) {
                var clist = row.children;

                for(var i = 0; i < clist.length; i++) {
                    clist[i].setIndex(i);
                    clist[i].reload();

                    if(!clist[i].isLeaf()) {
                        setIndexChild(clist[i]);
                    }
                }
            }

            function setElementCells(self) {
                self.list = [];

                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(self.element).find("td").each(function(i) {
                    self.list[i] = this;

                    if(self.hidden[i]) {
                        this.style.display = "none";
                    }
                });
            }

            function getElement(self, xssFilter) {
                if(!self.tpl) return self.element;

                // 로우 데이터 XSS 필터링
                if(xssFilter != null) {
                    replaceXssFilteredData(self, xssFilter);
                }

                var element = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(self.tpl(
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({
                        row: {
                            type: self.type,
                            index: self.index,
                            seq: self.seq,
                            data: self.data,
                            depth: self.depth,
                            children: self.children
                        }
                    }, self.data))
                ).get(0);

                return element;
            }

            function removeChildAll(row) {
                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(row.element).remove();

                for(var i = 0; i < row.children.length; i++) {
                    var c_row = row.children[i];

                    if(!c_row.isLeaf()) {
                        removeChildAll(c_row);
                    } else {
                        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(c_row.element).remove();
                    }
                }
            }

            function reloadChildAll(children) {
                for(var i = 0; i < children.length; i++) {
                    children[i].setIndex(i);
                    children[i].reload();
                }
            }

            function replaceXssFilteredData(self, xssFilter) {
                for(var key in self.data) {
                    if(xssFilter[key]) {
                        if(_.typeCheck("string", self.data[key])) {
                            self.data[key] = self.data[key].replace(/</g, "&lt;").replace(/>/g, "&gt;");
                        }
                    }
                }
            }

            this.setIndex = function(rownum) {
                this.rownum = (!isNaN(rownum)) ? rownum : this.rownum;
                this.seq = this.rownum + 1;

                if(!this.parent) {
                    this.index = "" + this.rownum;
                } else {
                    this.index = this.parent.index + "." + this.rownum;
                }

                if(this.parent && typeof(this.index) == "string") {
                    this.depth = this.index.split(".").length - 1;
                }

                if(!this.isLeaf()) {
                    setIndexChild(this);
                }
            }

            this.reload = function(columns, seq, xssFilter) {
                if(this.element != null) {
                    var newElem = getElement(this, xssFilter),
                        clsValue = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.element).attr("class");

                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(newElem).addClass(clsValue).insertAfter(this.element);
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.element).remove();

                    this.element = newElem;
                } else {
                    this.element = getElement(this, xssFilter);
                }

                if(columns != null) {
                    for(var i = 0; i < columns.length; i++) {
                        if(columns[i].type == "hide") {
                            this.hideCell(i);
                        } else {
                            this.showCell(i);
                        }
                    }
                }

                if(seq != null) {
                    this.seq = seq;
                }

                setElementCells(this);
            }

            this.destroy = function() {
                if(this.parent != null) {
                    this.parent.removeChild(this.index);
                } else {
                    removeChildAll(this);
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.element).remove();
                }
            }

            this.isLeaf = function() {
                return (this.children.length == 0) ? true : false;
            }

            this.fold = function() {
                this.type = "fold";

                for(var i = 0; i < this.children.length; i++) {
                    var c_row = this.children[i];
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(c_row.element).hide();

                    if(!c_row.isLeaf()) c_row.fold();
                }
            }

            this.open = function() {
                this.type = "open";

                for(var i = 0; i < this.children.length; i++) {
                    var c_row = this.children[i];
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(c_row.element).show();

                    if(!c_row.isLeaf()) c_row.open();
                }
            }

            this.appendChild = function(row) {
                var lastElem = (this.isLeaf()) ? this.element : this.lastChildLeaf().element;
                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(row.element).insertAfter(lastElem);

                this.children.push(row);
            }

            this.insertChild = function(rownum, row, isReload) {
                var lastElem = this.element;

                if(rownum > 0) {
                    var cRow = this.children[rownum - 1];

                    if(!cRow.isLeaf() || this.children.length == rownum + 1) {
                        lastElem = cRow.lastChildLeaf().element;
                    } else {
                        lastElem = cRow.element;
                    }

                }

                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(row.element).insertAfter(lastElem);

                var preRows = this.children.splice(0, rownum);
                preRows.push(row);

                this.children = preRows.concat(this.children);
                reloadChildAll(this.children);
            }

            this.removeChild = function(index) {
                for(var i = 0; i < this.children.length; i++) {
                    var row = this.children[i];

                    if(row.index == index) {
                        this.children.splice(i, 1); // �迭���� ����
                        removeChildAll(row);
                    }
                }

                reloadChildAll(this.children);
            }

            this.lastChild = function() {
                if(!this.isLeaf())
                    return this.children[this.children.length - 1];

                return null;
            }

            this.lastChildLeaf = function(lastRow) {
                var row = (!lastRow) ? this.lastChild() : lastRow;

                if(row.isLeaf()) return row;
                else {
                    return this.lastChildLeaf(row.lastChild());
                }
            }

            this.showCell = function(index) {
                this.hidden[index] = false;
                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.list[index]).show();
            }

            this.hideCell = function(index) {
                this.hidden[index] = true;
                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.list[index]).hide();
            }
        }

        /**
         * @class grid.row
         *
         * Grid's Row Class
         *
         * @alias Table Row
         * @requires jquery
         */
        var Row = function() {
            /** @property {Array} data Data of a specifiedrow. */
            this.data = null;

            /** @property {Integer} seq Data of a sequence. */
            this.seq = 0;

            /** @property {Integer} [rownum=null] The unique number of a child row under the specified parent row if a parent row exists. */
            this.rownum = null;

            /** @property {String/Integer} [index=null] Index of a specified row. In the case of a tree structure, a depth is given. */
            this.index = null;

            /** @property {HTMLElement} [element=null] TR element of a specified row. */
            this.element = null;

            /** @property {Array} list List of TD elements of a specified row. */
            this.list = [];

            /** @property {Object} list List of hidden TD element. */
            this.hidden = {};

            /** @property {uix.table.row} parent Variable that refers to the parent row. */
            this.parent = null;

            /** @property {Array} children List of child rows. */
            this.children = [];

            /** @property {Integer} [depth=0] The depth of the current row in the case of a tree structure. */
            this.depth = 0;

            /** @property {"open"/"fold"} [type="fold"] State value that indicates whether a child row is shown or hidden. */
            this.type = "fold";

            /** @property {Function} [type="null"] State value that indicates whether a child row is shown or hidden. */
            this.tpl = null;

            this.init = function(data, tplFunc, pRow) {
                this.data = data;
                this.tpl = tplFunc;
                this.parent = pRow;
            }
        }

        Row.prototype = new Base;

        return Row;
    }
});

/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _baseWidget = __webpack_require__(6);

var _baseWidget2 = _interopRequireDefault(_baseWidget);

__webpack_require__(389);

var _juijsUi = __webpack_require__(8);

var _juijsUi2 = _interopRequireDefault(_juijsUi);

var _slider = __webpack_require__(390);

var _slider2 = _interopRequireDefault(_slider);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Source: listbox.js
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by ji_sung.park on 2018-12-11
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


_juijsUi2.default.use(_slider2.default);

var initState = {
    min: 0,
    max: 10,
    values: [0, 10], // rangeSlider 일때 길이 2인 배열 아닐때 길이 1인 배열
    rangeSlider: true,
    mode: 'default', // 'default' || 'fixed'
    step: 1,
    tooltip: false,
    width: '200px'
};

function validateInputOption(options) {
    var msg = function () {
        try {
            if (!options.values) {
                return '"values" option is required.';
            }
            if (!Array.isArray(options.values)) {
                return '"values" option should be Array type.';
            }
            if (options.rangeSlider && options.values.length !== 2 || !options.rangeSlider && options.values.length !== 1) {
                return 'values\'s length, rangeSlider option mismatch.';
            }
            if (options.min > options.max) {
                return 'max should be bigger than min.';
            }
        } catch (e) {
            return 'Invalid option is specified in Slider';
        }
    }();
    if (msg) throw new Error(msg);
}

/**
 *  Slider Widget
 *
 *  --- create ---
 *  <div class="slider-add-position"></div>
 *
 *  var $slider = $('.slider-add-position');
 *  var slider = brtcWidget.slider($slider, {
 *      min: 0, // number
 *      max: 10, // number
 *      values: [0], // rangeSlider 일때 길이 2인 배열 아닐때 길이 1인 배열
 *      rangeSlider: false, // boolean
 *      mode: 'default', // 'default' || 'fixed'
 *      step: 1, // number
 *  });
 *
 *
 *  --- method ---
 *  setValue: set value
 *
 *
 *  --- event ---
 *  change
 *
 *
 */

var Slider = function (_Base) {
    _inherits(Slider, _Base);

    function Slider($el, options) {
        _classCallCheck(this, Slider);

        return _possibleConstructorReturn(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).call(this, $el, options));
    }

    _createClass(Slider, [{
        key: '_setRangeSlider',
        value: function _setRangeSlider(value) {
            this.applyOpt.type = value ? 'double' : 'single';
        }
    }, {
        key: '_setValues',
        value: function _setValues(value) {
            if (value.length === 1) {
                this.applyOpt.from = value[0];
            } else if (value.length === 2) {
                this.applyOpt.from = value[0];
                this.applyOpt.to = value[1];
            }
        }
    }, {
        key: '_setMin',
        value: function _setMin(value) {
            this.applyOpt.min = value;
        }
    }, {
        key: '_setMax',
        value: function _setMax(value) {
            this.applyOpt.max = value;
        }
    }, {
        key: '_setMode',
        value: function _setMode(value) {
            if (value === 'default') {
                this.applyOpt.step = 1;
            }
        }
    }, {
        key: '_setStep',
        value: function _setStep(value) {
            this.applyOpt.step = value;
        }
    }, {
        key: '_setTooltip',
        value: function _setTooltip(value) {
            this.applyOpt.tooltip = value;
        }
    }, {
        key: '_setWidth',
        value: function _setWidth(value) {
            this.$elem.css('width', value);
        }
    }, {
        key: '_getPropertyList',
        value: function _getPropertyList(attrNm) {
            var setters = {
                rangeSlider: this._setRangeSlider,
                values: this._setValues,
                min: this._setMin,
                max: this._setMax,
                mode: this._setMode,
                step: this._setStep,
                tooltip: this._setTooltip,
                width: this._setWidth
            };
            return setters[attrNm];
        }
    }, {
        key: '_setOnChange',
        value: function _setOnChange(callbackfn) {
            var _this3 = this;

            if (typeof callbackfn === 'function') {
                this.slider.on('change', function (value) {
                    _this3.changeSlide = true;
                    callbackfn([value.from, value.to]);
                });
            }
        }
    }, {
        key: '_setOnChangeFin',
        value: function _setOnChangeFin(callbackfn) {
            if (typeof callbackfn === 'function') {
                var _this = this;
                this.$elem.on('mouseup', function () {
                    if (_this.changeSlide) {
                        _this.changeSlide = false;
                        callbackfn([_this.slider.getFromValue(), _this.slider.getToValue()]);
                    }
                });
            }
        }
    }, {
        key: '_getEventList',
        value: function _getEventList(name) {
            return {
                change: this._setOnChange,
                changeFin: this._setOnChangeFin
            }[name];
        }
    }, {
        key: '_setValue',
        value: function _setValue(value) {
            if (value.length === 1) {
                this.slider.setFromValue(value[0]);
            } else if (value.length === 2) {
                this.slider.setFromValue(value[0]);
                this.slider.setToValue(value[1]);
            }
        }
    }, {
        key: '_destroy',
        value: function _destroy() {
            this.slider.destroy();
            if (this.$elem) this.$elem.remove();
        }
    }, {
        key: '_getMethodList',
        value: function _getMethodList(name) {
            return {
                setValue: this._setValue,
                destroy: this._destroy
            }[name];
        }
    }, {
        key: 'create',
        value: function create($el, opt) {
            if (!opt.values) throw new Error('"values" option is required.');
            validateInputOption(opt);

            // defaultValue를 초기 대입.
            this.lazyExecuteList = [];
            this.$elem = Slider.getTemplate();

            var applyOpt = $.extend(true, {}, initState, opt);
            this.setOption(applyOpt);
            $el.append(this.$elem);
        }
    }, {
        key: '_applyOption',
        value: function _applyOption(opts) {
            this.slider = _juijsUi2.default.create('ui.slider', this.$elem, opts);
        }
    }], [{
        key: 'getTemplate',
        value: function getTemplate() {
            var $template = $('<div class="brtc-widget-slider slider"></div>');
            return $template;
        }
    }]);

    return Slider;
}(_baseWidget2.default);

exports.default = Slider;

/***/ }),
/* 389 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 390 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__main_js__ = __webpack_require__(8);



/* harmony default export */ __webpack_exports__["default"] = ({
    name: "ui.slider",
    extend: "event",
    component: function () {
        var _ = __WEBPACK_IMPORTED_MODULE_1__main_js__["default"].include("util.base");
        var math = __WEBPACK_IMPORTED_MODULE_1__main_js__["default"].include("util.math");

        var UI = function() {
            var self, isVertical, preFromValue, preToValue;
            var $root, $track, $handle, $toHandle, $tooltipTrack, $progress;
            var $tooltip, $tooltipMessage, $tooltip2, $tooltipMessage2;

            function min() {
                return self.options.min;
            }

            function max() {
                return self.options.max;
            }

            function step() {
                return self.options.step;
            }

            function type() {
                return self.options.type;
            }

            function isDouble() {
                return type() == 'double';
            }

            function isSingle() {
                return type() == 'single';
            }

            function isShowProgress() {

                return $root.data('progress') == false ? false : self.options.progress;
            }

            function isShowTooltip() {
                return $root.data('tooltip') == false ? false : self.options.tooltip;
            }

            function getTooltip(type) {
                return (type == 'from') ? $tooltip : $tooltip2;
            }

            function getTooltipMessage(type) {
                return (type == 'from') ? $tooltipMessage : $tooltipMessage2;
            }

            function getHandle(type) {
                if (type == 'to') {
                    return $toHandle;
                }

                return $handle;
            }

            function pos(e) {
                if (_.isTouch) {
                    return e.originalEvent.touches[0];
                }

                return e;
            }

            function getStyleValue($node, key) {
                return $node[0].style[key];
            }

            function setProgressBar() {
                if (isSingle()) {
                    if (isVertical) {
                        $progress.height(getStyleValue($handle, 'bottom')).css({ bottom : 0 });
                    } else {
                        $progress.width(getStyleValue($handle, 'left'));
                    }
                } else {
                    if (isVertical) {
                        var toDist = parseFloat(getStyleValue($toHandle, 'bottom').replace('%', ''));
                        var fromDist = parseFloat(getStyleValue($handle, 'bottom').replace('%', ''));

                        $progress.height((toDist - fromDist) + '%').css({
                            bottom : fromDist + '%'
                        });
                    } else {
                        var toDist = parseFloat(getStyleValue($toHandle, 'left').replace('%', ''));
                        var fromDist = parseFloat(getStyleValue($handle, 'left').replace('%', ''));

                        $progress.width((toDist - fromDist) + '%').css({
                            left : fromDist + '%'
                        });
                    }
                }
            }

            function checkMaxFromTo(dist, type) {
                if (isDouble()) {
                    if (type == 'from') {
                        if (isVertical) {
                            var toDist = parseFloat(getStyleValue($toHandle, 'bottom').replace('%', ''));
                            if (dist >=  toDist) {
                                dist = toDist;
                            }
                        } else {
                            var toDist = parseFloat(getStyleValue($toHandle, 'left').replace('%', ''));
                            if (dist >=  toDist) {
                                dist = toDist;
                            }
                        }
                    } else if (type == 'to') {
                        if (isVertical) {
                            var fromDist = parseFloat(getStyleValue($handle, 'bottom').replace('%', ''));
                            if (dist <=  fromDist) {
                                dist = fromDist;
                            }
                        } else {
                            var fromDist = parseFloat(getStyleValue($handle, 'left').replace('%', ''));
                            if (dist <=  fromDist) {
                                dist = fromDist;
                            }
                        }
                    }
                }

                return dist;
            }

            function setViewStatus(dist, type) {
                var value = getValue(dist/100);

                if (value < min()) value = min();
                if (value > max()) value = max();

                dist = (value - min()) / (max() - min()) * 100;
                dist = checkMaxFromTo(dist, type);

                // redefine value
                value = getValue(dist/100);

                var percent = dist + '%';
                var $handle = getHandle(type)

                if (isVertical) {
                    $handle.css({ bottom : percent });
                } else {
                    $handle.css({ left : percent });
                }

                setProgressBar();

                if (isShowTooltip()) {
                    var $tooltip = getTooltip(type);
                    var $tooltipMessage = getTooltipMessage(type);

                    if (_.typeCheck("function", self.options.format)) {
                        value = self.options.format.call(self, value);
                    }

                    $tooltipMessage.html(value);

                    if (isVertical) {
                        $tooltip.css({
                            bottom : $track.height() * (dist / 100),
                            'margin-bottom' : -1 * ($tooltip.height()/2)
                        });

                    } else {
                        $tooltip.css({
                            left : percent,
                            "margin-left" : -1 * ($tooltip.width()/2)
                        });

                        var xPos = $track.width() * ( dist/100);
                        var lastPos =  xPos + $tooltip.width()/2;
                        var firstPos =  xPos - $tooltip.width()/2;

                        if (lastPos >= $track.width() ) {
                            $tooltip.css({
                                left : $track.width() - $tooltip.width() + $handle.width()/2,
                                'margin-left' : 0
                            }).addClass('last');
                        } else if (firstPos <= 0 ) {
                            $tooltip.css({
                                'left' : -$handle.width()/2,
                                'margin-left' : 0
                            }).addClass('first');
                        } else {
                            $tooltip.removeClass('first last');
                        }
                    }

                    $tooltip.show();
                }

                if (type == 'from') {
                    if (preFromValue != value) {
                        self.emit("change", [ { type: type, from: value, to: self.getToValue() } ]);
                        preFromValue = value;
                    }
                } else if (type == 'to') {
                    if (preToValue != value) {
                        self.emit("change", [ { type: type, from: self.getFromValue(), to: value } ]);
                        preToValue = value;
                    }
                }

            }

            function setHandlePosition(e, type) {
                var min, max, current;
                var dist = undefined;

                if (self.options.orient == 'vertical') {
                    min = $track.offset().top - __WEBPACK_IMPORTED_MODULE_0_jquery___default()("body").scrollTop();
                    max = min + $track.height();
                    current = pos(e).clientY;

                    if (current <= min) {
                        dist = 100;
                    } else if (current >= max) {
                        dist = 0;
                    } else {
                        dist = (max - current) / (max - min) * 100;
                    }
                } else {
                    min = $track.offset().left;
                    max = min + $track.width();
                    current = pos(e).clientX;

                    if (current < min) {
                        dist = 0;
                    } else if (current > max) {
                        dist = 100;
                    } else {
                        dist = (current - min) / (max - min) * 100;
                    }
                }

                setViewStatus(dist, type);
            }

            function getValue(dist) {
                if (typeof dist == 'undefined') {

                    if (isVertical) {
                        dist = parseFloat($handle.css('bottom'))/$track.height();
                    } else {
                        dist = parseFloat($handle.css('left'))/$track.width();
                    }
                }

                var minValue = min();
                var maxValue = max();

                var value = (minValue + (maxValue - minValue) * dist);

                var stepValue = step();
                var temp = math.remain(value, stepValue);

                value = math.minus(value, temp);

                if (temp > math.div(stepValue, 2)) {
                    value = math.plus(value, stepValue);
                }

                return value;
            }

            function initElement() {
                $root.addClass(self.options.orient);

                $track = __WEBPACK_IMPORTED_MODULE_0_jquery___default()("<div class='track' />");
                $tooltipTrack = __WEBPACK_IMPORTED_MODULE_0_jquery___default()("<div class='tooltip-track' />");
                $progress = __WEBPACK_IMPORTED_MODULE_0_jquery___default()("<div class='progress' />");

                if (!isShowProgress()) {
                    $progress.hide();
                }

                $handle = __WEBPACK_IMPORTED_MODULE_0_jquery___default()("<div class='handle from' />");
                $track.html($progress);
                $track.append($handle);

                if (isDouble()) {
                    $toHandle = __WEBPACK_IMPORTED_MODULE_0_jquery___default()("<div class='handle to' />");
                    $track.append($toHandle);
                }

                var tooltip_orient = isVertical ? 'right': 'top';

                $tooltip = __WEBPACK_IMPORTED_MODULE_0_jquery___default()('<div class="tooltip '+tooltip_orient+'"><div class="message" /></div>').hide();
                $tooltipMessage = $tooltip.find(".message");

                $tooltip2 = __WEBPACK_IMPORTED_MODULE_0_jquery___default()('<div class="tooltip '+tooltip_orient+'"><div class="message" /></div>').hide();
                $tooltipMessage2 = $tooltip2.find(".message");

                $tooltipTrack.html($tooltip);
                $tooltipTrack.append($tooltip2);

                $root.html($track);
                $root.append($tooltipTrack);

                if (isShowTooltip()) {
                    $root.addClass('has-tooltip');
                }
            }

            function initEvent() {
                self.addEvent($handle, 'mousedown', function(e) {
                    $handle.data('select', true);
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()("body").addClass("slider-cursor");
                });

                if (isDouble()) {
                    self.addEvent($toHandle, 'mousedown', function(e) {
                        $toHandle.data('select', true);
                        __WEBPACK_IMPORTED_MODULE_0_jquery___default()("body").addClass("slider-cursor");
                    });
                }

                self.addEvent($track, 'mousedown', function(e) {
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()("body").addClass("slider-cursor");

                    if (self.options.type == 'single') {
                        $handle.data('select', true);
                        setHandlePosition(e, 'from');
                    } else {
                        //TODO: if type is double, check position
                    }
                });

                self.addEvent('body', 'mouseup', function(e) {
                    $handle.data('select', false);
                    if (self.options.type == 'double') {
                        $toHandle.data('select', false);
                    }

                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()("body").removeClass("slider-cursor");
                });

                self.addEvent('body', 'mousemove', function(e) {
                    if ($handle.data('select')) {
                        setHandlePosition(e, 'from');
                    } else if (self.options.type == 'double' && $toHandle.data('select')) {
                        setHandlePosition(e, 'to');
                    }
                });
            }

            this.init = function() {
                self = this;
                $root = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root);

                isVertical = (this.options.orient == 'vertical');
                initElement();
                initEvent();

                this.setFromValue();
                this.setToValue();
            }

            /**
             * @method setFromValue
             * set FromHandle's value
             *
             * @param {Number}
             */
            this.setFromValue = function(value) {
                var from = value || $root.data("from") || this.options.from,
                    dist = (from - min()) / (max() - min()) * 100;

                setViewStatus(dist, "from");
            }

            /**
             * @method setToValue
             * set ToHandle's value
             *
             * @param {Number}
             */
            this.setToValue = function(value) {
                if (isDouble()) {
                    var to = value || $root.data("to") || this.options.to,
                        dist = (to - min()) / (max() - min()) * 100;

                    setViewStatus(dist, "to");
                }
            }

            /**
             * @method getFromValue
             * get FromHandle's value
             *
             * @return {Number} value
             */
            this.getFromValue = function() {
                return getValue();
            }

            /**
             * @method getToValue
             * get ToHandle's value
             *
             * @return {Number} value
             */
            this.getToValue = function () {
                var dist;

                if(isDouble()) {
                    if (isVertical) {
                        dist = parseFloat($toHandle.css("bottom")) / $track.height();
                    } else {
                        dist = parseFloat($toHandle.css("left")) / $track.width();
                    }

                    return getValue(dist);
                }

                return getValue();
            }
        }

        UI.setup = function() {
            return {
                type : "single", // or double
                orient : "horizontal", // or vertical,
                min : 0,
                max : 10,
                step : 1,
                from : 0,
                to : 10,
                tooltip : true,
                format : null,
                progress : true

            }
        }

        /**
         * @event change
         * Event that occurs when dragging on a slider
         *
         * @param {Object} data Data of current from
         * @param {jQueryEvent} e The event object
         */

        return UI;
    }
});

/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _baseWidget = __webpack_require__(6);

var _baseWidget2 = _interopRequireDefault(_baseWidget);

__webpack_require__(392);

var _juijsUi = __webpack_require__(8);

var _juijsUi2 = _interopRequireDefault(_juijsUi);

var _window = __webpack_require__(393);

var _window2 = _interopRequireDefault(_window);

var _modal = __webpack_require__(394);

var _modal2 = _interopRequireDefault(_modal);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

_juijsUi2.default.use(_modal2.default);
_juijsUi2.default.use(_window2.default);

var emptyFunction = function emptyFunction() {};

/**
 *  Window Widget
 *
 *  --- create ---
 *  <div class="brtc-window">
 *      <div class="brtc-window-header">Sample title</div>
 *      <div class="brtc-window-body">Sample body</div>
 *  </div>'
 *
 *  var $window = $('.brtc-window');
 *  var window = brtcWidget.tabs($window, {
 *      modal: false, // boolean
 *      width: 400, // number
 *      height: 300, // number
 *      left: 'auto', // number | 'auto'
 *      top: 'auto', // number | 'auto'
 *      move: true, // boolean
 *      resize: false, // boolean
 *      initContent: emptyFunction, // function
 *  });
 *
 *
 *  --- method ---
 *  open: window open at input position,
 *  focus: window open,
 *  hide: window hide,
 *  close: window close
 *
 *
 *  --- event ---
 *  close
 *
 *
 */

var Window = function (_Base) {
    _inherits(Window, _Base);

    function Window($el, options) {
        _classCallCheck(this, Window);

        var _this = _possibleConstructorReturn(this, (Window.__proto__ || Object.getPrototypeOf(Window)).call(this, $el, options));

        _this.open = false;
        return _this;
    }

    _createClass(Window, [{
        key: '_setModal',
        value: function _setModal(value) {
            this.applyOpt.modal = value;
        }
    }, {
        key: '_setWidth',
        value: function _setWidth(value) {
            this.applyOpt.width = value;
        }
    }, {
        key: '_setHeight',
        value: function _setHeight(value) {
            this.applyOpt.height = value;
        }
    }, {
        key: '_setLeft',
        value: function _setLeft(value) {
            this.applyOpt.left = value;
        }
    }, {
        key: '_setTop',
        value: function _setTop(value) {
            this.applyOpt.top = value;
        }
    }, {
        key: '_setMove',
        value: function _setMove(value) {
            this.applyOpt.move = value;
        }
    }, {
        key: '_setResize',
        value: function _setResize(value) {
            this.applyOpt.resize = value;
        }
    }, {
        key: '_setInitContent',
        value: function _setInitContent(value) {
            if (typeof value === 'function') {
                value();
            }
        }
    }, {
        key: '_getPropertyList',
        value: function _getPropertyList(attrNm) {
            var setters = {
                modal: this._setModal,
                width: this._setWidth,
                height: this._setHeight,
                left: this._setLeft,
                top: this._setTop,
                move: this._setMove,
                resize: this._setResize,
                initContent: this._setInitContent
            };
            return setters[attrNm];
        }
    }, {
        key: '_getEventList',
        value: function _getEventList(name) {
            return {
                close: this._closeEvent
            }[name];
        }
    }, {
        key: '_getMethodList',
        value: function _getMethodList(name) {
            return {
                open: this._open,
                focus: this._focus,
                hide: this._hide,
                close: this._closeMethod
            }[name];
        }

        // Event`s prototype

    }, {
        key: '_closeEvent',
        value: function _closeEvent(callbackfn) {
            if (typeof callbackfn === 'function') {
                this.window.on('hide', callbackfn);
            }
        }
    }, {
        key: 'create',
        value: function create($el, opt) {
            // defaultValue를 초기 대입.
            var state = {
                modal: false,
                width: 400,
                height: 300,
                left: 'auto',
                top: 'auto',
                move: true,
                resize: false,
                initContent: emptyFunction
            };
            this.lazyExecuteList = [];
            this.$elem = $el;
            var applyOpt = $.extend(true, {}, state, opt);
            this.setOption(applyOpt);
        }
    }, {
        key: 'setWindowStyle',
        value: function setWindowStyle() {
            this.$elem.addClass('jui');
            this.$elem.addClass('window');
            this.$elem.find('.brtc-window-header').addClass('head');
            var headerHtml = $('<div class="left"></div>');
            headerHtml.append(this.$elem.find('.brtc-window-header').html());
            this.$elem.find('.brtc-window-header').empty();
            this.$elem.find('.brtc-window-header').append(headerHtml);
            this.$elem.find('.brtc-window-header').append('<div class="right"><a href="#" class="close"></a></div>');
            this.$elem.find('.brtc-window-body').addClass('body');
        }
    }, {
        key: '_applyOption',
        value: function _applyOption(opts) {
            this.setWindowStyle();
            this.window = _juijsUi2.default.create('ui.window', this.$elem, opts);
        }
    }, {
        key: '_open',
        value: function _open(x, y) {
            this.window.show(x, y);
        }
    }, {
        key: '_focus',
        value: function _focus() {
            this.window.show();
        }
    }, {
        key: '_hide',
        value: function _hide() {
            if (this.window && this.window.type === 'show') {
                this.window.hide();
            }
        }
    }, {
        key: '_closeMethod',
        value: function _closeMethod() {
            this._hide();
            this.$elem.remove();
        }
    }]);

    return Window;
}(_baseWidget2.default);

exports.default = Window;

/***/ }),
/* 392 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 393 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__main_js__ = __webpack_require__(8);



/* harmony default export */ __webpack_exports__["default"] = ({
    name: "ui.window",
    extend: "event",
    component: function () {
        var _ = __WEBPACK_IMPORTED_MODULE_1__main_js__["default"].include("util.base");
        var modal = __WEBPACK_IMPORTED_MODULE_1__main_js__["default"].include("ui.modal");

        var UI = function() {
            var z_index = null,
                target = null,
                move = {},
                resize = {},
                info = {},
                ui_modal = null;

            function setBodyResize() {
                var bottom = (info.$foot.length < 1) ? 5 : info.$foot.outerHeight();
                info.$body.outerHeight(info.$root.outerHeight() - info.$head.outerHeight() - bottom);
            }

            this.init = function() {
                var self = this, opts = this.options;

                var $win_root = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root),
                    $win_head = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root).children(".head"),
                    $win_body = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root).children(".body"),
                    $win_foot = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root).children(".foot");

                // 옵션 예외 처리
                if(opts.modal) {
                    opts.move = false;
                    opts.resize = false;
                }

                // z-index 설정
                z_index = opts.layerIndex;

                // UI 객체 추가
                info = { $root: $win_root, $head: $win_head, $body: $win_body, $foot: $win_foot };

                // 기본 스타일 & Modal 스타일 & Body로 강제 이동
                $win_root.css(__WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({ position: "absolute" }, opts)).appendTo(__WEBPACK_IMPORTED_MODULE_0_jquery___default()("body"));

                // 윈도우 이동
                if(opts.move) {
                    this.addEvent($win_head, "mousedown", function(e) {
                        target = $win_root;

                        move.check = true;
                        move.disX = e.pageX - target.offset().left;
                        move.disY = e.pageY - target.offset().top;
                    });
                }

                // 윈도우 리사이징
                if(opts.resize) {
                    $win_root.append("<i class='icon-resize resize'></i>");

                    this.addEvent($win_root.children(".resize"), "mousedown", function(e) {
                        target = $win_root;

                        resize.check = true;
                        resize.disX = target.width() + target.offset().left;
                        resize.disWidth = target.width();
                        resize.disY = target.height() + target.offset().top;
                        resize.disHeight = target.height();

                        return false;
                    });
                }

                // 윈도우 포커스
                if(!opts.modal) {
                    self.addEvent($win_root, "mousedown", function(e) {
                        $win_root.css("z-index", ++z_index);
                        e.stopPropagation();
                    });
                }

                // 윈도우 숨기기
                this.addEvent($win_head.find(".close"), "click", function(e) {
                    self.hide();
                    return false;
                });

                this.addEvent("body", "mousemove", function(e) {
                    // 윈도우 이동
                    if(move.check) {
                        var x = e.pageX - move.disX;
                        var y = e.pageY - move.disY;

                        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(target).css({ left: x + "px", top: y + "px" });
                    }

                    // 윈도우 리사이징
                    if(resize.check) {
                        var resizeX = e.pageX - resize.disX,
                            resizeY = e.pageY - resize.disY;

                        target.width(resize.disWidth + resizeX);
                        target.height(resize.disHeight + resizeY);

                        setBodyResize();
                    }
                });

                this.addEvent("body", "mouseup", function(e) {
                    if(move.check) self.emit("move", e);
                    if(resize.check) self.emit("resize", e);

                    move.check = false;
                    resize.check = false;
                });

                // 기본 타입 설정
                this.type = "hide";
                $win_root.hide();

                // 모달 컴포넌트 설정
                if(opts.modal) {
                    var modalOpts = (opts.modalIndex > 0) ? { index: opts.modalIndex } : {};
                    ui_modal = modal(self.root, __WEBPACK_IMPORTED_MODULE_0_jquery___default.a.extend({ autoHide: false }, modalOpts));
                }
            }

            /**
             * @method hide
             * Hides a window
             */
            this.hide = function() {
                if(ui_modal) ui_modal.hide();
                else info.$root.hide();

                this.emit("hide");
                this.type = "hide";
            }

            /**
             * @method show
             * Shows a window at specified coordinates
             *
             * @param {Integer} x
             * @param {Integer} y
             */
            this.show = function(x, y) {
                if(ui_modal) ui_modal.show();
                else info.$root.show();

                if(x || y) this.move(x, y);

                this.emit("show");
                this.type = "show";

                setBodyResize();
            }

            /**
             * @method move
             * Moves a window at specified coordinates
             *
             * @param {Integer} x
             * @param {Integer} y
             */
            this.move = function(x, y) {
                info.$root.css("left", x);
                info.$root.css("top", y);
            }

            /**
             * @method update
             * Changes the markup in the body area of a window
             *
             * @param {String} html
             */
            this.update = function(html) {
                info.$body.empty().html(html);
            }

            /**
             * @method setTitle
             * Changes the markup of the title tag in the head area of a window
             *
             * @param {String} title
             */
            this.setTitle = function(html) {
                info.$head.find(".title").empty().html(html);
            }

            /**
             * @method setSize
             * Changes the horizontal/vertical size of a window
             *
             * @param {Integer} width
             * @param {Integer} height
             */
            this.setSize = function(w, h) {
                info.$root.width(w);
                info.$root.height(h);

                setBodyResize();
            }

            /**
             * @method resize
             * Designates a scroll area if there is a lot of content in the window body area
             */
            this.resize = function() {
                setBodyResize();
            }

            /**
             * @method resizeModal
             * Re-adjust the location of a modal window
             */
            this.resizeModal = function() {
                if(!ui_modal) return;

                ui_modal.resize();
            }
        }

        UI.setup = function() {
            return {
                /**
                 * @cfg {Integer} [width=400]
                 * Determines the horizontal size of a window
                 */
                width: 400,

                /**
                 * @cfg {Integer} [height=300]
                 * Determines the height of a window
                 */
                height: 300,

                /**
                 * @cfg {String/Integer} [left="auto"]
                 * Determines the X coordinate of a window
                 */
                left: "auto",

                /**
                 * @cfg {String/Integer} [top="auto"]
                 * Determines the Y coordinate of a window
                 */
                top: "auto",

                /**
                 * @cfg {String/Integer} [right="auto"]
                 * Determines the X coordinate based on the right side of a window
                 */
                right: "auto",

                /**
                 * @cfg {String/Integer} [bottom="auto"]
                 * Determines the Y coordinate based on the bottom side of a window
                 */
                bottom: "auto",

                /**
                 * @cfg {Boolean} [modal=false]
                 * Applies a modal UI to a window
                 */
                modal: false,

                /**
                 * @cfg {Boolean} [move=true]
                 * It is possible to move a window
                 */
                move: true,

                /**
                 * @cfg {Boolean} [resize=true]
                 * It is possible to resize a window
                 */
                resize: true,

                /**
                 * @cfg {Integer} [modalIndex=0]
                 * Determines the z-index property of a modal UI
                 */
                modalIndex: 0,

                /**
                 * @cfg {Integer} [layerIndex=2000]
                 * Determines the z-index property of a modal UI
                 */
                layerIndex: 2000,

                /**
                 * @cfg {Boolean} [animate=false]
                 * Determines whether to use the animation effect of a UI
                 *
                 * @deprecated
                 */
                animate: false
            }
        }

        /**
         * @event show
         * Event that occurs when a window is shown
         */

        /**
         * @event hide
         * Event that occurs when a window is hidden
         */

        /**
         * @event move
         * Event that occurs when a window is moved
         *
         * @param {EventObject} e The event object
         */

        /**
         * @event resize
         * Event that occurs when a window is resized
         *
         * @param {EventObject} e The event object
         */

        return UI;
    }
});

/***/ }),
/* 394 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__main_js__ = __webpack_require__(8);



/* harmony default export */ __webpack_exports__["default"] = ({
    name: "ui.modal",
    extend: "event",
    component: function () {
        var _ = __WEBPACK_IMPORTED_MODULE_1__main_js__["default"].include("util.base");

        var win_width = 0;
        var win_height = 0;

        _.resize(function() {
            if(win_width == __WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).width() && win_height == __WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).height()) return;

            var call_list = __WEBPACK_IMPORTED_MODULE_1__main_js__["default"].get("ui.modal");
            for(var i = 0; i < call_list.length; i++) {
                var ui_list = call_list[i];

                for(var j = 0; j < ui_list.length; j++) {
                    if(ui_list[j].type == "show") {
                        ui_list[j].resize();
                    }
                }
            }

            win_width = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).width();
            win_height = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).height();
        }, 300);

        var UI = function() {
            var $modal = {}, $clone = null;
            var uiObj = null, uiTarget = null;
            var z_index = 5000;

            function setPrevStatus(self) {
                uiObj = {
                    "position": __WEBPACK_IMPORTED_MODULE_0_jquery___default()(self.root).css("position"),
                    "left": __WEBPACK_IMPORTED_MODULE_0_jquery___default()(self.root).css("left"),
                    "top": __WEBPACK_IMPORTED_MODULE_0_jquery___default()(self.root).css("top"),
                    "z-index": __WEBPACK_IMPORTED_MODULE_0_jquery___default()(self.root).css("z-index"),
                    "display": __WEBPACK_IMPORTED_MODULE_0_jquery___default()(self.root).css("display")
                };

                uiTarget = {
                    "position": __WEBPACK_IMPORTED_MODULE_0_jquery___default()(self.options.target).css("position")
                };
            }

            function getInnerModalPosition(target) {
                if(target == "body") {
                    return null;
                } else {
                    if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(target).hasClass("msgbox") || __WEBPACK_IMPORTED_MODULE_0_jquery___default()(target).hasClass("window")) {
                        return "absolute";
                    } else {
                        return "relative";
                    }
                }
            }

            function getModalInfo(self) {
                var target = self.options.target,
                    hTarget = (target == "body") ? window : target,
                    pos = (target == "body") ? "fixed" : "absolute",
                    tPos = getInnerModalPosition(target),
                    sLeft = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(target).scrollLeft();

                var x = ((__WEBPACK_IMPORTED_MODULE_0_jquery___default()(hTarget).width() / 2) - (__WEBPACK_IMPORTED_MODULE_0_jquery___default()(self.root).width() / 2)) + __WEBPACK_IMPORTED_MODULE_0_jquery___default()(target).scrollLeft(),
                    y = (__WEBPACK_IMPORTED_MODULE_0_jquery___default()(hTarget).height() / 2) - (__WEBPACK_IMPORTED_MODULE_0_jquery___default()(self.root).height() / 2);

                var w = (sLeft > 0) ? __WEBPACK_IMPORTED_MODULE_0_jquery___default()(target).outerWidth() + sLeft : "100%",
                    h = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(target).outerHeight();

                // inner modal일 경우
                if(tPos != null) {
                    var sh = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(hTarget)[0].scrollHeight;

                    h = (sh > h) ? sh : h;
                    y = y + __WEBPACK_IMPORTED_MODULE_0_jquery___default()(hTarget).scrollTop();

                    // global modal일 경우
                } else {
                    var sh = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(window).outerHeight();

                    h = (h > sh) ? h : sh;
                }

                return {
                    x: x, y: y, pos: pos, tPos: tPos, w: w, h: h
                }
            }

            function createModal(self, w, h) {
                var opts = self.options,
                    mi = self.timestamp,
                    parent = opts.parent != null ? opts.parent : opts.target;

                if($modal[mi] != null) return;

                $modal[mi] = __WEBPACK_IMPORTED_MODULE_0_jquery___default()("<div id='MODAL_" + self.timestamp + "'></div>").css({
                    position: "absolute",
                    width: w,
                    height: h,
                    left: 0,
                    top: 0,
                    opacity: self.options.opacity,
                    "background-color": self.options.color,
                    "z-index": (z_index + self.options.index) - 1
                });

                // 모달 추가
                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(parent).append($modal[mi]);

                // 루트 모달 옆으로 이동
                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(self.root).insertAfter($modal[mi]);

                // 모달 닫기 이벤트 걸기
                self.addEvent($modal[mi], "click", function(e) {
                    if(self.options.autoHide) {
                        self.hide();
                    }

                    return false;
                });
            }

            this.init = function() {
                setPrevStatus(this); // 이전 상태 저장

                // 대상의 기본 상태는 숨기기
                if(!this.options.clone) {
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root).hide();
                }

                // 타입 프로퍼티 설정
                this.type = "hide";
            }

            /**
             * @method hide
             * Hides a modal
             */
            this.hide = function() {
                var opts = this.options,
                    mi = this.timestamp;

                // 모달 대상 객체가 숨겨진 상태가 아닐 경우..
                if(opts.clone) {
                    $clone.remove();
                    $clone = null;
                }

                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(opts.target).css("position", uiTarget.position);
                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root).css(uiObj);

                if($modal[mi]) {
                    $modal[mi].remove();
                    delete $modal[mi];
                }

                this.type = "hide";
            }

            /**
             * @method show
             * Shows a modal
             */
            this.show = function() {
                var opts = this.options,
                    info = getModalInfo(this);

                // 모달 대상 객체가 숨겨진 상태가 아닐 경우..
                if(opts.clone) {
                    $clone = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root).clone();
                    $clone.insertAfter(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root));
                }

                // 위치 재조정
                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root).appendTo(opts.target);
                this.resize();

                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(opts.target).css("position", info.tPos);
                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root).show();

                createModal(this, info.w, info.h);
                this.type = "show";
            }

            /**
             * @method resize
             * Re-adjust the location of a modal
             */
            this.resize = function() {
                var info = getModalInfo(this),
                    mi = this.timestamp;

                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root).css({
                    "position": info.pos,
                    "left": info.x,
                    "top": info.y,
                    "z-index": (z_index + this.options.index)
                });

                if($modal[mi] != null) {
                    $modal[mi].height(info.h);
                }
            }
        }

        UI.setup = function() {
            return {
                /**
                 * @cfg {"black"/"gray"} [color="black"]
                 * Determines the color of a modal
                 */
                color: "black",

                /**
                 * @cfg {Float} [opacity=0.4]
                 * Sets the transparency of a modal
                 */
                opacity: 0.4,

                /**
                 * @cfg {String/DOMElement} [target="body"]
                 * Sets a selector on which a modal is shown
                 */
                target: "body",

                /**
                 * @cfg {String/DOMElement} [target="body"]
                 * Sets a selector on which a modal is shown
                 */
                parent: null,

                /**
                 * @cfg {Integer} [index=0]
                 * Determines the sequence (index) of a modal
                 */
                index: 0,

                /**
                 * @cfg {Boolean} [clone=false]
                 * Copies an existing modal and shows it
                 */
                clone: false,

                /**
                 * @cfg {Boolean} [autoHide=true]
                 * Automatically hides a modal when clicking on it
                 */
                autoHide: true
            }
        }

        return UI;
    }
});

/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _baseWidget = __webpack_require__(6);

var _baseWidget2 = _interopRequireDefault(_baseWidget);

__webpack_require__(396);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var defaultNotificationContainerClass = 'brtc-widget-notification__default-container';
var notificationWrapperClass = 'brtc-widget-notification__notification-wrapper';
var iconWrapperClass = 'brtc-widget-notification__icon-wrapper';
var messageWrapperClass = 'brtc-widget-notification__notification-message-wrapper';
var closeWrapperClass = 'brtc-widget-notification__close-wrapper';
var tickPerSec = 40;

function getDefaultContainer() {
    var x = $(document.body).find('.' + defaultNotificationContainerClass).length;
    if (x === 0) {
        var defaultContainer = $('<div class="' + defaultNotificationContainerClass + '"/>');
        $(document.body).append(defaultContainer);
    }
    return $(document.body).find('.' + defaultNotificationContainerClass);
}

function getDefaultRenderer() {
    var defaultRenderer = function defaultRenderer(msg, type) {
        var faClass = {
            info: 'fa-info-circle',
            warning: 'fa-exclamation-circle',
            success: 'fa-check-circle',
            error: 'fa-times-circle'
        }[type];

        var $x = $('<table class="' + notificationWrapperClass + '">\n            <tr>\n                <td class="' + iconWrapperClass + '"><i class="fa ' + faClass + '"/></td>\n                <td class="' + messageWrapperClass + '">' + msg + '<td/>\n                <td class="' + closeWrapperClass + '"><i class="fa fa-times"/></td>\n            </tr>\n        </table>');

        return $x;
    };

    return defaultRenderer;
}

function getDefaultOpacityFunction() {
    var defaultOpacityFunction = function defaultOpacityFunction(ms) {
        if (ms > 4200) return -1;
        if (ms < 400) return ms / 400 * 0.9;
        if (ms > 3400) return (1 - (ms - 3400) / 800) * 0.9;
        return 0.9;
    };
    return defaultOpacityFunction;
}

/**
 *  Notification Widget
 *
 *  --- create ---
 *  <div class="notification-wrapper"></div>
 *
 *  var $notification = $('.notification-wrapper');
 *  var notification = brtcWidget.notification($notification, {
 *      autoOpen: false, // boolean
 *      type: 'info', // string
 *      message: undefined, // string | undefined
 *      width: '100%', // string | number
 *      height: 'auto', // string | number
 *      container: $container || getDefaultContainer(), // dom | function
 *      renderer: getDefaultRenderer(), // function
 *      opacityFunction: getDefaultOpacityFunction(), // function
 *  });
 *
 *
 *  --- method ---
 *  open: notification open
 *  setMessage: set message
 *  destroy: destory widget
 *  onClick: set onclick event
 *  setType: set type
 *
 *
 *  --- event ---
 *  - none -
 *
 *
 */

var Notification = function (_Base) {
    _inherits(Notification, _Base);

    function Notification($el, options) {
        _classCallCheck(this, Notification);

        return _possibleConstructorReturn(this, (Notification.__proto__ || Object.getPrototypeOf(Notification)).call(this, $el, options));
    }

    _createClass(Notification, [{
        key: '_getEventList',
        value: function _getEventList(name) {
            return {
                click: this._setOnClick
            }[name];
        }
    }, {
        key: '_getMethodList',
        value: function _getMethodList(name) {
            return {
                open: this._open,
                setMessage: this._setMessage,
                destroy: this._destroy,
                setType: this._setType
            }[name];
        }
    }, {
        key: '_destroy',
        value: function _destroy() {
            if (this.$elem) {
                this.$elem.remove();
            }
        }
    }, {
        key: '_setOnClick',
        value: function _setOnClick(callbackfn) {
            if (typeof callbackfn === 'function') {
                this.listeners.click.push(callbackfn);
            }
        }
    }, {
        key: 'create',
        value: function create($container, opt) {
            var initOptions = {
                autoOpen: false,
                type: 'info',
                message: undefined,
                width: '100%',
                height: 'auto',
                container: $container || getDefaultContainer(),
                renderer: getDefaultRenderer(),
                opacityFunction: getDefaultOpacityFunction()
            };

            this.listeners = {
                click: []
            };

            var newOption = Object.assign({}, initOptions, opt);
            this.option = newOption;

            if (this.option.autoOpen) {
                this._open();
            }
        }
    }, {
        key: '_open',
        value: function _open() {
            var _this2 = this;

            if (this.$elem) this.$elem.remove();
            this._id = Date.now();

            this.$elem = this.option.renderer(this.option.message, this.option.type);
            this.$elem.find('.' + closeWrapperClass).click(function () {
                if (_this2.$elem) _this2.$elem.remove();
            });

            this.option.container.append(this.$elem);

            this.$elem.click(function (e) {
                _this2.listeners.click.forEach(function (fn) {
                    return fn(e);
                });
            });

            if (this.option.width) this.$elem.css('width', this.option.width);
            if (this.option.height) this.$elem.css('height', this.option.height);

            var delta = 1000 / tickPerSec;

            var f = function f(ms, id) {
                if (_this2._id !== id) return;
                var v = _this2.option.opacityFunction(ms);
                if (v < 0) {
                    _this2.$elem.remove();
                    return;
                }
                _this2.$elem.css('opacity', v);
                setTimeout(function () {
                    return f(ms + delta, id);
                }, delta);
            };

            f(0, this._id);
        }
    }, {
        key: '_setMessage',
        value: function _setMessage(message) {
            if (message) {
                var $contents = this.$elem.find('.' + messageWrapperClass);
                $contents.html(message);
                this.option.message = message;
            }
        }
    }, {
        key: 'setOption',
        value: function setOption(obj) {
            var messageChanged = this.option.message !== obj.message;
            Object.assign(this.option, obj);
            if (messageChanged) {
                this._setMessage(obj.message);
            }
        }
    }, {
        key: '_setType',
        value: function _setType(type) {
            this.setOption({
                type: type
            });
        }
    }]);

    return Notification;
}(_baseWidget2.default);

exports.default = Notification;

/***/ }),
/* 396 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _baseWidget = __webpack_require__(6);

var _baseWidget2 = _interopRequireDefault(_baseWidget);

__webpack_require__(398);

var _juijsUi = __webpack_require__(8);

var _juijsUi2 = _interopRequireDefault(_juijsUi);

var _colorpicker = __webpack_require__(399);

var _colorpicker2 = _interopRequireDefault(_colorpicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

_juijsUi2.default.use(_colorpicker2.default);

/**
 *  ColorPicker Widget
 *
 *  --- create ---
 *  <div class="color-picker-wrapper"></div>
 *
 *  var $colorPicker = $('.color-picker-wrapper');
 *  var colorPicker = brtcWidget.colorPicker($colorPicker, {
 *  });
 *
 *
 *  --- method ---
 *  setColor : color select
 *  getColor : selected color return
 *
 *
 *  --- event ---
 *  colorChange
 *
 *
 */

var ColorPicker = function (_Base) {
    _inherits(ColorPicker, _Base);

    function ColorPicker($el, options) {
        _classCallCheck(this, ColorPicker);

        return _possibleConstructorReturn(this, (ColorPicker.__proto__ || Object.getPrototypeOf(ColorPicker)).call(this, $el, options));
    }

    _createClass(ColorPicker, [{
        key: '_getPropertyList',
        value: function _getPropertyList(attrNm) {
            var setters = {};
            return setters[attrNm];
        }
    }, {
        key: '_getEventList',
        value: function _getEventList(name) {
            return {
                colorChange: this._onColorChange
            }[name];
        }
    }, {
        key: '_onColorChange',
        value: function _onColorChange(callbackfn) {
            this.cp.on('change', callbackfn);
        }
    }, {
        key: '_setColor',
        value: function _setColor() {
            var _cp;

            (_cp = this.cp).setColor.apply(_cp, arguments);
            var hueContainer_width = 157;
            var $hueContainer = this.$elem.find('.hue > .container');

            var getDist = function getDist($container) {
                var min = -6; // $container.offset().left;
                var max = min + hueContainer_width;
                var current = parseFloat($container.find('.drag-bar').css('left') || 0);
                if (current < min) {
                    return 0;
                } else if (current > max) {
                    return 100;
                } else {
                    return (current - min) / (max - min) * 100;
                }
            };
            var dist = getDist($hueContainer);

            var hslToRgb = function hslToRgb(h, s, l) {
                var r = void 0;
                var g = void 0;
                var b = void 0;

                if (s === 0) {
                    r = l;
                    g = l;
                    b = l; // achromatic
                } else {
                    var hue2rgb = function hue2rgb(p, q, _t) {
                        var t = _t;
                        if (t < 0) t += 1;else if (t > 1) t -= 1;else if (t < 1 / 6) return p + (q - p) * 6 * t;else if (t < 1 / 2) return q;else if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;else return p;
                    };
                    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
                    var p = 2 * l - q;

                    r = hue2rgb(p, q, h + 1 / 3);
                    g = hue2rgb(p, q, h);
                    b = hue2rgb(p, q, h - 1 / 3);
                }
                return [r * 255, g * 255, b * 255];
            };

            var _hslToRgb = hslToRgb(dist / 100, 1, 1 / 2),
                _hslToRgb2 = _slicedToArray(_hslToRgb, 3),
                r = _hslToRgb2[0],
                g = _hslToRgb2[1],
                b = _hslToRgb2[2];

            var hueColor = 'rgb(' + r + ',' + g + ',' + b + ')';
            this.$elem.find('.color').first().css('background-color', hueColor || 'rgb(255, 0, 0)');
        }
    }, {
        key: '_getColor',
        value: function _getColor() {
            var hexOrRgba = $(this.$elem.find('input')[1]).val();
            return hexOrRgba;
        }
    }, {
        key: '_getMethodList',
        value: function _getMethodList(name) {
            return {
                setColor: this._setColor,
                getColor: this._getColor
            }[name];
        }
    }, {
        key: 'create',
        value: function create($el) {
            var opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

            var state = {};
            this.$elem = ColorPicker.getTemplate();
            var applyOpt = $.extend(true, {}, state, opt);
            this.setOption(applyOpt);

            $el.append(this.$elem);
        }
    }, {
        key: '_applyOption',
        value: function _applyOption(opts) {
            this.cp = _juijsUi2.default.create('ui.colorpicker', this.$elem, opts);
        }
    }], [{
        key: 'getTemplate',
        value: function getTemplate() {
            var $template = $('<div class="bos-color-picker-control colorpicker jui"></div>');
            return $template;
        }
    }]);

    return ColorPicker;
}(_baseWidget2.default);

exports.default = ColorPicker;

/***/ }),
/* 398 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 399 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__main_js__ = __webpack_require__(8);



/* harmony default export */ __webpack_exports__["default"] = ({
    name: "ui.colorpicker",
    extend: "event",
    component: function () {
        var _ = __WEBPACK_IMPORTED_MODULE_1__main_js__["default"].include("util.base");
        var color = __WEBPACK_IMPORTED_MODULE_1__main_js__["default"].include("util.color");

        var UI = function() {
            var self, opts, dist;
            var hue_color = [
                { rgb : '#ff0000', start : .0 },
                { rgb : '#ffff00', start : .17 },
                { rgb : '#00ff00', start : .33 },
                { rgb : '#00ffff', start : .50 },
                { rgb : '#0000ff', start : .67 },
                { rgb : '#ff00ff', start : .83 },
                { rgb : '#ff0000', start : 1 }
            ];

            // TODO: 차후에 컬러픽커 사이즈 변경 고려!!!
            var size = {
                color_width: 226,
                color_height: 145,
                hue_width: 157,
                opacity_width: 119,
                dragBar_width: 12,
                hueContainer_width: 157,
                opacityDragBar_width: 12
            };

            var $root, $hue, $color, $value, $saturation, $drag_pointer, $drag_bar,
                $control, $controlPattern, $controlColor, $hueContainer, $opacity, $opacityContainer,
                $opacityInput, $opacity_drag_bar, $information, $informationTitle1, $informationTitle2,
                $informationTitle3, $informationTitle4, $informationInput1, $informationInput2,
                $informationInput3, $informationInput4;

            function setInputColor(evtType) {
                var rgb = null;

                if (evtType == 'hex') {
                    rgb = color.rgb($informationInput1.val());

                    $informationInput2.val(rgb.r);
                    $informationInput3.val(rgb.g);
                    $informationInput4.val(rgb.b);

                } else if (evtType == 'rgb') {
                    $informationInput1.val(color.format({
                        r : parseInt($informationInput2.val(), 10),
                        g : parseInt($informationInput3.val(), 10),
                        b : parseInt($informationInput4.val(), 10)
                    }, 'hex'));

                    rgb = color.rgb($informationInput1.val());

                } else {
                    var str = self.getColor('hex');

                    $informationInput1.val(str);

                    rgb = color.rgb($informationInput1.val());
                    $informationInput2.val(rgb.r);
                    $informationInput3.val(rgb.g);
                    $informationInput4.val(rgb.b);
                }

                // set alpha
                rgb.a = caculateOpacity();

                // set background
                $controlColor.css("background-color", color.format(rgb, 'hex'));
                $opacityInput.val(Math.floor(rgb.a * 100) + "%");

                // emit change
                self.emit("change", [ color.format(rgb, 'hex' ), rgb ]);
            }

            function setMainColor(e) {
                var offset = $color.offset();
                var w = size.color_width;
                var h = size.color_height;

                var x = e.clientX - offset.left;
                var y = e.clientY - offset.top;

                if (x < 0) x = 0;
                else if (x > w) x = w;

                if (y < 0) y = 0;
                else if (y > h) y = h;

                $drag_pointer.css({
                    left: x - 5,
                    top: y - 5
                }).data('pos', { x: x, y : y});

                setInputColor();
            }

            function checkHueColor(p) {
                var startColor, endColor;

                for(var i = 0; i < hue_color.length;i++) {
                    if (hue_color[i].start >= p) {
                        startColor = hue_color[i-1];
                        endColor = hue_color[i];
                        break;
                    }
                }

                if (startColor && endColor) {
                    var scale = color.scale().domain(startColor.rgb, endColor.rgb);

                    return scale((p - startColor.start)/(endColor.start - startColor.start), 'hex');
                }

                return null;
            }

            function setHueColor(e) {
                var min = $hueContainer.offset().left;
                var max = min + size.hueContainer_width;
                var current = pos(e).clientX;

                if (current < min) {
                    dist = 0;
                } else if (current > max) {
                    dist = 100;
                } else {
                    dist = (current - min) / (max - min) * 100;
                }

                var x = (size.hue_width * (dist/100));

                $drag_bar.css({
                    left: (x -Math.ceil(size.dragBar_width/2)) + 'px'
                }).data('pos', { x : x});

                var hueColor = checkHueColor(dist/100);
                $color.css("background-color", hueColor);

                setInputColor();
            }

            function setOpacity(e) {
                var min = $opacity.offset().left;
                var max = min + size.opacity_width;
                var current = pos(e).clientX;

                if (current < min) {
                    dist = 0;
                } else if (current > max) {
                    dist = 100;
                } else {
                    dist = (current - min) / (max - min) * 100;
                }

                var x = (size.opacity_width * (dist/100));

                $opacity_drag_bar.css({
                    left: (x -Math.ceil(size.opacityDragBar_width/2)) + 'px'
                }).data('pos', { x : x});

                setInputColor();
            }

            function caculateOpacity() {
                var opacityPos = $opacity_drag_bar.data('pos') || { x : 0 };
                var a = Math.round((opacityPos.x / size.opacity_width) * 100) / 100;

                return a;
            }

            function calculateColor() {
                var pos = $drag_pointer.data('pos') || { x : 0, y : 0 };
                var huePos = $drag_bar.data('pos') || { x : 0 };

                var width = size.color_width;
                var height = size.color_height;

                var h = (huePos.x / size.hue_width) * 360;
                var s = (pos.x / width);
                var v = ((height - pos.y) / height);

                var rgb = color.HSVtoRGB(h, s, v);
                rgb.a = caculateOpacity();

                return rgb;
            }

            function selectDom(tag, attr) {
                var tag = !tag ? "div" : tag,
                    $dom = __WEBPACK_IMPORTED_MODULE_0_jquery___default()("<" + tag + " />");

                if(typeof(attr) == "object") {
                    $dom.attr(attr);
                }

                return $dom;
            };

            function pos(e) {
                if (_.isTouch) {
                    return e.originalEvent.touches[0];
                }

                return e;
            }

            function checkNumberKey(e) {
                var code = e.which,
                    isExcept = false;

                if(code == 37 || code == 39 || code == 8 || code == 46 || code == 9)
                    isExcept = true;

                if(!isExcept && (code < 48 || code > 57))
                    return false;

                return true;
            }

            function setRGBtoHexColor(e) {
                var r = $informationInput2.val(),
                    g = $informationInput3.val(),
                    b = $informationInput4.val();

                if(r == "" || g == "" || b == "") return;

                if(parseInt(r) > 255) $informationInput2.val(255);
                else $informationInput2.val(parseInt(r));

                if(parseInt(g) > 255) $informationInput3.val(255);
                else $informationInput3.val(parseInt(g));

                if(parseInt(b) > 255) $informationInput4.val(255);
                else $informationInput4.val(parseInt(b));

                initColor(color.format({
                    r: parseInt($informationInput2.val()),
                    g: parseInt($informationInput3.val()),
                    b: parseInt($informationInput4.val())
                }, "hex"), "rgb");
            }

            function initColor(newColor, evtType) {
                var c = newColor || self.options.color,
                    rgb = color.rgb(c);

                $color.css("background-color", c);

                var hsv = color.RGBtoHSV(rgb.r, rgb.g, rgb.b),
                    x = size.color_width * hsv.s,
                    y = size.color_height * (1-hsv.v);

                $drag_pointer.css({
                    left : x - 5,
                    top : y - 5
                }).data('pos', { x  : x, y : y });

                var hueX = size.hue_width * (hsv.h / 360);

                $drag_bar.css({
                    left : hueX - 7.5
                }).data('pos', { x : hueX });

                var opacityX = size.opacity_width * (rgb.a || 0);

                $opacity_drag_bar.css({
                    left : opacityX - 7.5
                }).data('pos', { x : opacityX });

                setInputColor(evtType);
            }

            function initEvent() {
                self.addEvent($color, 'mousedown', function(e) {
                    $color.data('isDown', true);
                    setMainColor(e);
                });

                self.addEvent($color, 'mouseup', function(e) {
                    $color.data('isDown', false);
                });

                self.addEvent($drag_bar, 'mousedown', function(e) {
                    e.preventDefault();
                    $hue.data('isDown', true);
                });

                self.addEvent($opacity_drag_bar, 'mousedown', function(e) {
                    e.preventDefault();
                    $opacity.data('isDown', true);
                });

                self.addEvent($hueContainer, 'mousedown', function(e) {
                    $hue.data('isDown', true);
                    setHueColor(e);
                });

                self.addEvent($opacityContainer, 'mousedown', function(e) {
                    $opacity.data('isDown', true);
                    setOpacity(e);
                });

                self.addEvent($informationInput1, 'keydown', function(e) {
                    if(e.which < 65 || e.which > 70) {
                        return checkNumberKey(e);
                    }
                });
                self.addEvent($informationInput1, 'keyup', function(e) {
                    var code = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).val();

                    if(e.which == 13) {
                        if (code.charAt(0) == '#' && (code.length == 7 || code.length == 4)) {
                            initColor(code, 'hex');
                            self.emit('enter', [ code, color.rgb(code) ]);
                        }
                    }
                });

                self.addEvent($informationInput2, 'keydown', checkNumberKey);
                self.addEvent($informationInput2, 'keyup', setRGBtoHexColor);
                self.addEvent($informationInput3, 'keydown', checkNumberKey);
                self.addEvent($informationInput3, 'keyup', setRGBtoHexColor);
                self.addEvent($informationInput4, 'keydown', checkNumberKey);
                self.addEvent($informationInput4, 'keyup', setRGBtoHexColor);

                self.addEvent(document, 'mouseup', function (e) {
                    $color.data('isDown', false);
                    $hue.data('isDown', false);
                    $opacity.data('isDown', false);
                });

                self.addEvent(document, 'mousemove', function (e) {
                    if ($color.data('isDown')) {
                        setMainColor(e);
                    }

                    if ($hue.data('isDown')) {
                        setHueColor(e);
                    }

                    if ($opacity.data('isDown')) {
                        setOpacity(e);
                    }
                });
            }

            this.init = function() {
                self = this, opts = this.options;

                $root = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root);
                $color = selectDom('div', { 'class': 'color' });
                $drag_pointer = selectDom('div', { 'class': 'drag-pointer' });
                $value = selectDom('div', { 'class': 'value' });
                $saturation = selectDom('div', { 'class': 'saturation' });

                $control = selectDom('div', { 'class': 'control' });
                $controlPattern = selectDom('div', { 'class': 'empty' });
                $controlColor = selectDom('div', { 'class': 'color' });
                $hue = selectDom('div', { 'class': 'hue' });
                $hueContainer = selectDom('div', { 'class': 'container' });
                $drag_bar = selectDom('div', { 'class': 'drag-bar' });
                $opacity = selectDom('div', { 'class': 'opacity' });
                $opacityContainer = selectDom('div', { 'class': 'container' });
                $opacityInput = selectDom('input', { 'class': 'input', 'type': 'text', 'disabled': true });
                $opacity_drag_bar = selectDom('div', { 'class': 'drag-bar2' });

                $information = selectDom('div', { 'class': 'information' });
                $informationTitle1 = selectDom('div', { 'class': 'title' }).html("HEX");
                $informationTitle2 = selectDom('div', { 'class': 'title' }).html("R");
                $informationTitle3 = selectDom('div', { 'class': 'title' }).html("G");
                $informationTitle4 = selectDom('div', { 'class': 'title' }).html("B");
                $informationInput1 = selectDom('input', { 'class': 'input', 'type': 'text', 'maxlength': 7 });
                $informationInput2 = selectDom('input', { 'class': 'input', 'type': 'text', 'maxlength': 3  });
                $informationInput3 = selectDom('input', { 'class': 'input', 'type': 'text', 'maxlength': 3  });
                $informationInput4 = selectDom('input', { 'class': 'input', 'type': 'text', 'maxlength': 3  });

                $value.html($drag_pointer);
                $saturation.html($value);
                $color.html($saturation);

                $hueContainer.html($drag_bar);
                $hue.html($hueContainer);

                $opacityContainer.html($opacity_drag_bar);
                $opacity.html($opacityContainer);

                $control.append($hue);
                $control.append($opacity);
                $control.append($opacityInput);
                $control.append($controlPattern);
                $control.append($controlColor);

                $information.append($informationInput1);
                $information.append($informationInput2);
                $information.append($informationInput3);
                $information.append($informationInput4);
                $information.append($informationTitle1);
                $information.append($informationTitle2);
                $information.append($informationTitle3);
                $information.append($informationTitle4);

                $root.html($color);
                $root.append($control);
                $root.append($information);

                initEvent();
                initColor();
            }

            this.setColor = function(value) {
                if(typeof(value) == "object") {
                    if(!value.r || !value.g || !value.b)
                        return;

                    initColor(color.format(value, "hex"));
                } else if(typeof(value) == "string") {
                    if(value.charAt(0) != "#")
                        return;

                    initColor(value);
                }
            }

            this.getColor = function(type) {
                var rgb = calculateColor();

                if (type) {
                    if (type == 'hex') {
                        if (rgb.a < 1) {
                            type = 'rgb';
                        }
                    }
                    return color.format(rgb, type);
                }

                return rgb;
            }
        }

        UI.setup = function() {
            return {
                type : 'full',
                color : '#FF0000'
            }
        }

        return UI;
    }
});

/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _splitter = __webpack_require__(401);

Object.defineProperty(exports, 'default', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_splitter).default;
  }
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _baseWidget = __webpack_require__(6);

var _baseWidget2 = _interopRequireDefault(_baseWidget);

__webpack_require__(402);

var _juijsUi = __webpack_require__(8);

var _juijsUi2 = _interopRequireDefault(_juijsUi);

var _splitter = __webpack_require__(403);

var _splitter2 = _interopRequireDefault(_splitter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

_juijsUi2.default.use(_splitter2.default);

/**
 *  Splitter Widget
 *
 *  --- create ---
 *  <div class="splitter-wrapper"></div>
 *
 *  var $splitter = $('.splitter-wrapper');
 *  var splitter = brtcWidget.splitter($splitter, {
 *      isMade: false, // boolean
 *      direction: 'horizontal', // 'horizontal' | 'vertical' 
 *      items: ['.first', '.second'], // array(['first-split-class', 'second-split-class'])
 *      initSize: '50%', // string(%)
 *  });
 *
 *
 *  --- method ---
 *  first: return first split
 *  second: return second split
 *  refresh: refresh widget
 *  destroy: destory widget
 *
 *
 *  --- event ---
 *  resize
 *
 *
 */

var Splitter = function (_Base) {
    _inherits(Splitter, _Base);

    function Splitter($el, options) {
        _classCallCheck(this, Splitter);

        return _possibleConstructorReturn(this, (Splitter.__proto__ || Object.getPrototypeOf(Splitter)).call(this, $el, options));
    }

    _createClass(Splitter, [{
        key: '_doSetLayoutId',
        value: function _doSetLayoutId(value) {
            this.$elem.attr('id', value);
        }
    }, {
        key: '_setTheme',
        value: function _setTheme(value) {
            this.applyOpt.theme = value;
        }
    }, {
        key: '_setHeight',
        value: function _setHeight(value) {
            this.applyOpt.height = value;
        }
    }, {
        key: '_setWidth',
        value: function _setWidth(value) {
            this.applyOpt.width = value;
        }
    }, {
        key: '_setResizable',
        value: function _setResizable(value) {
            this.applyOpt.resizable = value;
        }
    }, {
        key: '_setOrientation',
        value: function _setOrientation(value) {
            this.applyOpt.orientation = value;
        }
    }, {
        key: '_setPanels',
        value: function _setPanels(value) {
            this.applyOpt.panels = value;
        }
    }, {
        key: '_setDirection',
        value: function _setDirection(value) {
            this.applyOpt.direction = value;
            this.direction = value;
        }
    }, {
        key: '_setItems',
        value: function _setItems(value) {
            this.applyOpt.items = value;
            this.$elem.find(value[0]).addClass('first');
            this.$elem.find(value[1]).addClass('second');
            this.items = value;
        }
    }, {
        key: '_setInitSize',
        value: function _setInitSize(value) {
            this.applyOpt.initSize = value;
            this.initSize = value;
        }
    }, {
        key: '_setSplitterClass',
        value: function _setSplitterClass(value) {
            this.applyOpt.splitterClass = value;
        }
    }, {
        key: '_getPropertyList',
        value: function _getPropertyList(attrNm) {
            var setters = {
                isMade: function isMade() {},
                direction: this._setDirection,
                items: this._setItems,
                initSize: this._setInitSize,
                splitterClass: this._setSplitterClass,
                id: this._doSetLayoutId
            };
            return setters[attrNm];
        }
    }, {
        key: '_onResize',
        value: function _onResize(callbackfn) {
            if (typeof callbackfn === 'function') {
                this.$elem.find('.' + this.splitterClass).bind('mouseup', callbackfn);
            }
        }
    }, {
        key: '_getEventList',
        value: function _getEventList(name) {
            return {
                resize: this._onResize
            }[name];
        }
    }, {
        key: 'getOption',
        value: function getOption(name) {
            if (name === 'orientation') {
                return this.direction;
            } else if (name === 'panels') {
                return this.items;
            } else if (name === 'splitterId') {
                return this.$elem.attr('id');
            } else if (name === 'ratio') {
                return this.initSize;
            } else {
                return undefined;
            }
        }
    }, {
        key: '_getMethodList',
        value: function _getMethodList(name) {
            return {
                first: this._getFirst,
                second: this._getSecond,
                refresh: this._refresh,
                destroy: this._destroy,
                ratio: this._setInitSize
            }[name];
        }
    }, {
        key: '_getFirst',
        value: function _getFirst() {
            return $(this.$elem.children().children('.first')[0]);
        }
    }, {
        key: '_getSecond',
        value: function _getSecond() {
            return $(this.$elem.children().children('.second')[0]);
        }
    }, {
        key: '_refresh',
        value: function _refresh() {
            this.splitter.setInitSize(this.splitter.options.initSize);
        }
    }, {
        key: '_destroy',
        value: function _destroy() {
            this.splitter.destroy();
            this.$elem.remove();
        }
    }, {
        key: 'create',
        value: function create($el, opt) {
            // defaultValue를 초기 대입.
            var state = {
                direction: 'horizontal',
                items: ['.first', '.second'],
                initSize: '50%'
            };
            // this.$elem = Splitter.getTemplate();
            // $el.append(this.$elem);
            if (opt.isMade) {
                this.$elem = $el;
            } else {
                this.$elem = Splitter.getTemplate();
                $el.append(this.$elem);
                // opt.initSize = this._calInitSize(opt.initSize, opt.direction, $el);
            }
            opt.splitterClass = this._initSplitterClass(opt.direction);
            var applyOpt = $.extend(true, {}, state, opt);
            this.setOption(applyOpt);
        }
    }, {
        key: '_calInitSize',
        value: function _calInitSize(initSize, direction, $el) {
            this.initSize = initSize;
            if (initSize && (typeof initSize === 'undefined' ? 'undefined' : _typeof(initSize))) {
                var ratio = parseInt(initSize) / 100;
                if (direction === 'vertical') {
                    return $el.width() * ratio;
                } else {
                    return $el.height() * ratio;
                }
            } else {
                return initSize;
            }
        }
    }, {
        key: '_initSplitterClass',
        value: function _initSplitterClass(direction) {
            if (direction) {
                this.splitterClass = 'ui-splitter-' + direction;
            } else {
                this.splitterClass = 'ui-splitter-' + 'horizontal';
            }
            return this.splitterClass;
        }
    }, {
        key: '_applyOption',
        value: function _applyOption(opts) {
            this.splitter = _juijsUi2.default.create('ui.splitter', this.$elem.children(), opts);
        }
    }], [{
        key: 'getTemplate',
        value: function getTemplate(layoutId) {
            var $template = $('\n        <div class="brtc-layout-splitter-container">\n            <div class="brtc-layout-splitter bcharts-layout-splitter">\n                <div class="brtc-layout-composite bcharts-layout-composite first">\n                </div>\n                <div class="brtc-layout-composite bcharts-layout-composite second">\n                </div>\n            </div>\n        </div>\n    ');
            return $template;
        }
    }]);

    return Splitter;
}(_baseWidget2.default);

exports.default = Splitter;

/***/ }),
/* 402 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 403 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__main_js__ = __webpack_require__(8);



/* harmony default export */ __webpack_exports__["default"] = ({
    name: "ui.splitter",
    extend: "event",
    component: function () {
        var Splitter = function () {
            var self, $el, $splitter, $items, barSize, caculateBarSize, minSize;
            var $list = [];
            var maxSize, direction, initSize, fixed;

            this.init = function () {
                self = this;
                $el = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this.root);
                barSize = this.options.barSize;
                direction = this.options.direction;
                initSize = this.options.initSize;
                minSize = this.options.minSize;
                fixed = this.options.fixed;

                if (typeof minSize == 'number') {
                    minSize = [minSize, minSize];
                }

                var temp = [];
                for(var i = 0, len = this.options.items.length; i < len; i++) {
                    $list[i] = $el.find(this.options.items[i]);
                    $list[i].css({
                        position: 'absolute',
                        width : 'auto',
                        height: 'auto',
                        top : 0,
                        right: 0,
                        bottom: 0,
                        left: 0
                    });
                    temp[i] = $list[i][0];
                }

                $items = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(temp);

                this.initElement();
                this.initEvent();
            }

            function is_vertical() {
                return direction == 'vertical';
            }

            this.initElement = function () {

                $el.css({
                    position: 'absolute',
                    width: '100%',
                    height: '100%',
                    overflow: 'hidden'
                });

                if ($splitter && $splitter.length) $splitter.remove();

                if (is_vertical()) {
                    $splitter = __WEBPACK_IMPORTED_MODULE_0_jquery___default()("<div  />").css({
                        'position':'absolute',
                        'top':'0px',
                        'width': barSize,
                        'bottom':'0px',
                        'cursor':'ew-resize'
                    });

                } else {
                    $splitter = __WEBPACK_IMPORTED_MODULE_0_jquery___default()("<div />").css({
                        'position':'absolute',
                        'left':'0px',
                        'height': barSize,
                        'right':'0px',
                        'cursor':'ns-resize'
                    });

                }

                $splitter.addClass(this.options.splitterClass);
                $splitter.css(this.options.barStyle);

                caculateBarSize = (is_vertical()) ? $splitter.outerWidth() : $splitter.outerHeight();

                $el.append($splitter);

                this.initResize();
            }

            this.getSize = function (size, maxSize) {
                if (typeof size == 'string' && size.indexOf('%') > -1) {
                    return maxSize * (parseFloat(size.replace('%','')) /100);
                }

                return size;
            }

            this.getShowList = function () {
                var list = [];
                for(var i = 0, len = $items.length; i < len; i++) {
                    var $it = __WEBPACK_IMPORTED_MODULE_0_jquery___default()($items[i]);
                    if ($it.hasClass(self.options.hideClass)) {
                        continue;
                    }
                    list.push($items[i]);

                }

                return __WEBPACK_IMPORTED_MODULE_0_jquery___default()(list);
            }

            this.caculateMinSize = function (centerPos) {
                if (is_vertical()) {
                    if (centerPos < caculateBarSize + minSize[0]) {
                        centerPos = caculateBarSize + minSize[0];
                    } else if (centerPos > maxSize - caculateBarSize - minSize[1]) {
                        centerPos = maxSize - caculateBarSize  - minSize[1];
                    }
                } else {
                    if (centerPos < caculateBarSize + minSize[0]) {
                        centerPos = caculateBarSize + minSize[0];
                    } else if (centerPos > maxSize - caculateBarSize - minSize[1]) {
                        centerPos = maxSize - caculateBarSize - minSize[1];
                    }
                }

                return centerPos;
            }

            this.initResize = function () {

                var $showList = this.getShowList();

                if ($showList.length == 1)
                {
                    $showList.css({ 'left': '0px', width: 'auto', height: 'auto', right: 0, top : 0, bottom : 0 });
                    $splitter.hide();
                } else {
                    if (is_vertical()) {
                        var maxWidth = $el.width();
                        var centerPos = this.caculateMinSize(this.getSize(initSize, maxWidth));

                        $list[0].css({ 'left': '0px', 'width' : centerPos + 'px', top : 0, bottom : 0 });
                        $list[1].css({ 'left': (centerPos + caculateBarSize) + 'px', 'right' : '0px', width: 'auto', top : 0, bottom : 0  });
                        $splitter.css({ 'left': centerPos + 'px' });
                    } else {
                        var maxHeight = $el.height();
                        var centerPos = this.caculateMinSize(this.getSize(initSize, maxHeight));

                        $list[0].css({ 'top': '0px', 'height' :  centerPos + 'px', width: 'auto', left : 0, right : 0, 'bottom' : 'auto' });
                        $list[1].css({ 'top': (centerPos + caculateBarSize) + 'px', 'bottom' : '0px', width: 'auto', left : 0, right : 0  });
                        $splitter.css({ 'top': centerPos + 'px' });
                    }
                    $splitter.show();
                }
            }

            function mouseMove(e) {

                if (is_vertical()) {
                    var distX = e.clientX - $splitter.data('prevClientX');
                    var posX = parseFloat($splitter.css('left')) + distX;;


                    posX = self.caculateMinSize(posX);

                    $splitter.css('left' , posX + 'px');
                    $list[1].css('left' , (posX + caculateBarSize) + 'px');
                    $list[0].css('width',  posX + 'px');

                    initSize = posX;
                    $splitter.data('prevClientX', e.clientX);

                } else {
                    var distY = e.clientY - $splitter.data('prevClientY');
                    var posY = parseFloat($splitter.css('top')) + distY;

                    posY = self.caculateMinSize(posY);


                    $splitter.css('top' , posY + 'px');
                    $list[1].css('top' , (posY + caculateBarSize) + 'px');
                    $list[0].css('height', posY + 'px');
                    initSize = posY;

                    $splitter.data('prevClientY', e.clientY);
                }

            }

            function mouseUp() {
                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(document).off('mousemove', mouseMove);
                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(document).off('mouseup', mouseUp);

                $items.css('user-select', '');
                $items.find('iframe').css('pointer-events', 'auto');

                self.emit('move.done', [$splitter]);
            }

            this.initEvent = function () {

                // if fixed is true , it don't set splitter bar event
                if (fixed === true) {
                    return;
                }

                $el.on('mousedown', '> .' + this.options.splitterClass,  function (e) {

                    $items.css('user-select', 'none');
                    $items.find('iframe').css('pointer-events', 'none');

                    if (is_vertical()) {
                        maxSize = $el.width();
                        $splitter.data('prevClientX', e.clientX);
                    } else {
                        maxSize = $el.height();
                        $splitter.data('prevClientY', e.clientY);
                    }

                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(document).on('mousemove', mouseMove);
                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(document).on('mouseup', mouseUp);

                });
            }

            this.setDirection = function (d) {
                direction = d;

                this.initElement();
            }

            this.setInitSize = function (size) {
                initSize = size;

                this.initResize();
            }

            this.setHide = function (index) {
                __WEBPACK_IMPORTED_MODULE_0_jquery___default()($items[index]).hide().addClass(self.options.hideClass);

                this.initResize();
            }

            this.setShow = function (index) {
                __WEBPACK_IMPORTED_MODULE_0_jquery___default()($items[index]).show().removeClass(self.options.hideClass);

                this.initResize();
            }

            this.toggle = function (index) {
                if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()($items[index]).hasClass(self.options.hideClass)) {
                    this.setShow(index);
                } else {
                    this.setHide(index);
                }
            }

        }

        Splitter.setup = function () {
            return {
                /**
                 * @cfg {String} [splitterClass='ui-splitter']
                 * set splitter's class for design
                 */
                splitterClass : 'ui-splitter',

                /**
                 * @cfg {String} [hideClass='hide']
                 * set splitter's hide class for design
                 */
                hideClass: 'hide',

                /**
                 * @cfg {Number} [barSize=4]
                 * set splitter's bar size
                 */
                barSize : 4,

                /**
                 * @cfg {Object} [barSize={}]
                 * set custom splitter bar style
                 */
                barStyle : {
                    'background-color': '#f6f6f6',
                    'border-right': '1px solid #e4e4e4'
                },

                /**
                 * @cfg {"vertical"/"horizontal"} [direction='vertical']
                 * set bar's direction
                 */
                direction : 'vertical',

                /**
                 * @cfg {String/Number} [initSize='50%']
                 * set first panel's default width or height
                 */
                initSize : '50%',

                /**
                 * @cfg {Number/Array} [minSize=30]
                 * set panel's minimum width or height
                 *
                 * if minSize is number , minSize is conver to array
                 *
                 * minSize[0] is first panel's minimum size
                 * minSize[1] is second panel's minimum size
                 *
                 */
                minSize : 30,

                /**
                 * @cfg {String} [items=[]]
                 *
                 * set items  to placed in vertical or horizontal
                 *
                 * support max two times
                 *
                 */
                items : [],

                /**
                 * @cfg {Boolean} [fixed=false]
                 *
                 * if fixed is true, panels can not resize.
                 *
                 */
                fixed : false
            }
        };

        return Splitter;
    }
});

/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _tree = __webpack_require__(405);

Object.defineProperty(exports, 'default', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_tree).default;
  }
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _baseWidget = __webpack_require__(6);

var _baseWidget2 = _interopRequireDefault(_baseWidget);

__webpack_require__(406);

var _rxjs = __webpack_require__(32);

var _operators = __webpack_require__(40);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var itemWrapperClass = 'brtc-widget-tree__item-wrapper';
var itemWrapperSelectedClass = itemWrapperClass + '--selected';
var childrenContainerClass = 'brtc-widget-tree__children-container';
var subtreeWrapperClass = 'brtc-widget-tree__subtree-wrapper';
var itemHiddenClass = 'brtc-widget-tree__item--hidden';
var arrowClass = 'brtc-widget-tree__arrow';
var emptyClass = 'brtc-widget-tree__empty';
var itemClass = 'brtc-widget-tree__item';

var ACTION = {
    toggle: function toggle(id) {
        return { type: 'toggle', id: id };
    },
    expand: function expand(id) {
        return { type: 'expand', id: id };
    },
    collapse: function collapse(id) {
        return { type: 'collapse', id: id };
    },
    select: function select(id) {
        return { type: 'select', id: id };
    },
    collapseAll: function collapseAll() {
        return { type: 'collapseAll' };
    },
    expandAll: function expandAll() {
        return { type: 'expandAll' };
    },
    addTo: function addTo(id, item) {
        return { type: 'addTo', id: id, item: item };
    },
    addAfter: function addAfter(id, item) {
        return { type: 'addAfter', id: id, item: item };
    },
    addBefore: function addBefore(id, item) {
        return { type: 'addBefore', id: id, item: item };
    },
    remove: function remove(id) {
        return { type: 'remove', id: id };
    },
    setOption: function setOption(opts) {
        return { type: 'setOption', value: opts };
    }
};

function matchesId(a) {
    return function (b) {
        return String(a) === String(b);
    };
}

function defaultRenderer(item) {
    if (item.id === null || typeof item.id === 'undefined') {
        throw new Error('id attribute is needed.');
    }

    return $('<div class=' + itemClass + ' id="' + item.id + '">' + item.value + '</div>');
}

function _render(r, selected) {
    var renderer = r.renderer || defaultRenderer;

    var icon = r.children ? '<i\n            target="' + r.id + '"\n            class="' + arrowClass + ' fa ' + (r.expanded ? 'fa-caret-down' : 'fa-caret-right') + '"\n          />' : '<i class="fa ' + emptyClass + '">&nbsp;</i>';

    var $wrapper = $('<div class="' + subtreeWrapperClass + '">' + icon + '</div>');

    var wrap = function wrap($e, el) {
        var cls = itemWrapperClass + ' ' + (selected === el.id ? itemWrapperSelectedClass : '');
        var $r = $('<div class="' + cls + '" item-id="' + el.id + '"/>');
        $r.append($e);
        return $r;
    };

    var $el = wrap(renderer(r), r);
    $wrapper.append($el);

    if (r.children) {
        var $ul = $('<ul class="' + childrenContainerClass + '" target="' + r.id + '"/>');
        $ul.toggleClass('brtc-widget-tree__item--hidden', !r.expanded);
        $ul.append(r.children.map(function (ch) {
            return _render(ch, selected);
        }));
        $wrapper.append($ul);
    }

    return $wrapper;
}

function render(r) {
    return r.root.map(function (el) {
        return _render(el, r.selectedId);
    });
}

function _mapTraverse(node, visitor) {
    var ret = visitor(node);
    var children = ret.children ? ret.children.map(function (el) {
        return _mapTraverse(el, visitor);
    }) : null;
    if (children) {
        Object.assign(ret, {
            children: children
        });
    }

    return ret;
}

function mapTraverse(nodes, visitor) {
    return nodes.map(function (node) {
        return _mapTraverse(node, visitor);
    });
}

function _findTraverse(node, pred) {
    if (pred(node)) return node;
    if (!node.children) return null;
    for (var i = 0; i < node.children.length; ++i) {
        var f = _findTraverse(node.children[i], pred);
        if (f) return f;
    }
    return null;
}

function findTraverse(nodes, pred) {
    for (var i = 0; i < nodes.length; ++i) {
        var f = _findTraverse(nodes[i], pred);
        if (f) return f;
    }
    return null;
}

function matchRenderer($el, listeners) {
    return function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2),
            action = _ref2[0],
            state = _ref2[1];

        var tmp = null;
        var getById = function getById(id) {
            return findTraverse(state.root, function (node) {
                return String(node.id) === String(id);
            });
        };
        switch (action.type) {
            case 'toggle':
                $el.find('ul[target=' + action.id + ']').toggleClass('brtc-widget-tree__item--hidden');
                $el.find('i[target=' + action.id + ']').toggleClass('fa-caret-right').toggleClass('fa-caret-down');
                tmp = getById(action.id);
                if (tmp) {
                    (tmp.expanded ? listeners.expand : listeners.collapse).forEach(function (fn) {
                        return fn(tmp);
                    });
                }
                break;
            case 'expand':
                $el.find('ul[target=' + action.id + ']').toggleClass(itemHiddenClass, false);
                $el.find('i[target=' + action.id + ']').toggleClass('fa-caret-right', false).toggleClass('fa-caret-down', true);
                break;
            case 'collapse':
                $el.find('ul[target=' + action.id + ']').toggleClass(itemHiddenClass, true);
                $el.find('i[target=' + action.id + ']').toggleClass('fa-caret-right', true).toggleClass('fa-caret-down', false);
                break;
            case 'expandAll':
                $el.find('.' + childrenContainerClass).toggleClass(itemHiddenClass, false);
                $el.find('.' + arrowClass).toggleClass('fa-caret-right', false).toggleClass('fa-caret-down', true);
                break;
            case 'collapseAll':
                $el.find('.' + childrenContainerClass).toggleClass(itemHiddenClass, true);
                $el.find('.' + arrowClass).toggleClass('fa-caret-right', true).toggleClass('fa-caret-down', false);
                break;
            case 'select':
                $el.find('.' + itemWrapperClass).toggleClass(itemWrapperSelectedClass, false);
                $el.find('.' + itemWrapperClass + '[item-id=' + action.id + ']').toggleClass(itemWrapperSelectedClass, true);
                tmp = getById(action.id);
                if (tmp) {
                    listeners.select.forEach(function (fn) {
                        return fn(tmp);
                    });
                }
                break;
            case 'addAfter':
                $el.find('.' + itemWrapperClass + '[item-id=' + action.id + ']').parent().after(_render(action.item));
                break;
            case 'addBefore':
                $el.find('.' + itemWrapperClass + '[item-id=' + action.id + ']').parent().before(_render(action.item));
                break;
            case 'addTo':
                $el.find('ul[target=' + action.id + ']').append(_render(action.item));
                break;
            case 'remove':
                $el.find('.' + itemWrapperClass + '[item-id=' + action.id + ']').parent().remove();
                break;
            default:
                $el.empty();
                $el.append(render(state));
        }

        if (state.width) {
            $el.css('width', state.width);
        }
        if (state.height) {
            $el.css('height', state.height);
        }
    };
}

function accumulateAction() {
    return function (_ref3, action) {
        var _ref4 = _slicedToArray(_ref3, 2),
            prevAction = _ref4[0],
            prevState = _ref4[1];

        switch (action.type) {
            case 'toggle':
                return [action, Object.assign({}, prevState, {
                    root: mapTraverse(prevState.root, function (node) {
                        var ret = Object.assign({}, node);
                        if (String(node.id) === String(action.id)) {
                            Object.assign(ret, {
                                expanded: !ret.expanded
                            });
                        }
                        return ret;
                    })
                })];
            case 'collapseAll':
                return [action, Object.assign({}, prevState, {
                    root: mapTraverse(prevState.root, function (node) {
                        return Object.assign({}, node, {
                            expanded: false
                        });
                    })
                })];
            case 'expandAll':
                return [action, Object.assign({}, prevState, {
                    root: mapTraverse(prevState.root, function (node) {
                        return Object.assign({}, node, {
                            expanded: true
                        });
                    })
                })];
            case 'expand':
                return [action, Object.assign({}, prevState, {
                    root: mapTraverse(prevState.root, function (node) {
                        var ret = Object.assign({}, node);
                        if (String(node.id) === String(action.id)) {
                            Object.assign(ret, {
                                expanded: true
                            });
                        }
                        return ret;
                    })
                })];
            case 'collapse':
                return [action, Object.assign({}, prevState, {
                    root: mapTraverse(prevState.root, function (node) {
                        var ret = Object.assign({}, node);
                        if (String(node.id) === String(action.id)) {
                            Object.assign(ret, {
                                expanded: false
                            });
                        }
                        return ret;
                    })
                })];
            case 'select':
                return [action, Object.assign({}, prevState, {
                    selectedId: action.id
                })];
            case 'addTo':
                return [action, Object.assign({}, prevState, {
                    root: mapTraverse(prevState.root, function (node) {
                        if (String(node.id) !== String(action.id)) return node;
                        return Object.assign({}, node, {
                            children: node.children.slice().concat(action.item)
                        });
                    })
                })];
            case 'addBefore':
                return [action, Object.assign({}, prevState, {
                    root: mapTraverse(prevState.root, function (node) {
                        if (node.children) {
                            var idx = node.children.findIndex(function (_ref5) {
                                var id = _ref5.id;
                                return matchesId(action.id)(id);
                            });
                            if (idx >= 0) {
                                return Object.assign({}, node, {
                                    children: [].concat(_toConsumableArray(node.children.slice(0, idx)), [action.item], _toConsumableArray(node.children.slice(idx)))
                                });
                            }
                        }
                        return node;
                    })
                })];
            case 'addAfter':
                return [action, Object.assign({}, prevState, {
                    root: mapTraverse(prevState.root, function (node) {
                        if (node.children) {
                            var idx = node.children.findIndex(function (_ref6) {
                                var id = _ref6.id;
                                return matchesId(action.id)(id);
                            });
                            if (idx >= 0) {
                                return Object.assign({}, node, {
                                    children: [].concat(_toConsumableArray(node.children.slice(0, idx + 1)), [action.item], _toConsumableArray(node.children.slice(idx + 1)))
                                });
                            }
                        }
                        return node;
                    })
                })];
            case 'remove':
                return [action, Object.assign({}, prevState, {
                    root: mapTraverse(prevState.root, function (node) {
                        if (node.children) {
                            return Object.assign({}, node, {
                                children: node.children.filter(function (_ref7) {
                                    var id = _ref7.id;
                                    return !matchesId(action.id)(id);
                                })
                            });
                        }
                        return node;
                    })
                })];
            case 'setOption':
                return [action, Object.assign({}, prevState, action.value)];
            default:
                return [action, prevState];
        }
    };
}

/**
 *  Tree Widget
 *
 *  --- create ---
 *  <div class="tree-wrapper"></div>
 *
 *  var $tree = $('.tree-wrapper');
 *  var tree = brtcWidget.tree($tree, {
 *      root: [], // array
 *      height: '100px' // string
 *  });
 *
 *
 *  --- method ---
 *  addBefore: 
 *  addAfter: 
 *  addTo: 
 *  remove: 
 *  collapseAll: 
 *  expandAll: 
 *  collapse: 
 *  expand: 
 *
 *
 *  --- event ---
 *  select
 *  collapse
 *  expend
 *
 *
 */

var Tree = function (_Base) {
    _inherits(Tree, _Base);

    function Tree($el, options) {
        _classCallCheck(this, Tree);

        return _possibleConstructorReturn(this, (Tree.__proto__ || Object.getPrototypeOf(Tree)).call(this, $el, options));
    }

    _createClass(Tree, [{
        key: 'setOption',
        value: function setOption(opts) {
            this.actionSource$.next(ACTION.setOption(opts));
        }
    }, {
        key: '_getEventList',
        value: function _getEventList(name) {
            return {
                select: this._setOnSelect,
                collapse: this._setOnCollapse,
                expand: this._setOnExpand
            }[name];
        }
    }, {
        key: 'getOption',
        value: function getOption(name) {
            return this.state[name];
        }
    }, {
        key: '_getMethodList',
        value: function _getMethodList(name) {
            return {
                addBefore: this._addBefore,
                addAfter: this._addAfter,
                addTo: this._addTo,
                remove: this._remove,
                collapseAll: this._collapseAll,
                expandAll: this._expandAll,
                collapse: this._collapse,
                expand: this._expand
            }[name];
        }
    }, {
        key: 'create',
        value: function create($el, opt) {
            var _this2 = this;

            // defaultValue를 초기 대입.
            this.listeners = {
                collapse: [],
                expand: [],
                select: []
            };

            this.$elem = Tree.getTemplate();

            $el.append(this.$elem);

            var initState = Object.assign({}, opt);

            this.actionSource$ = new _rxjs.BehaviorSubject(initState);

            var renderer = matchRenderer(this.$elem, this.listeners);

            this.state = initState;

            this.actionSource$.pipe((0, _operators.scan)(accumulateAction(), [null, Object.assign({}, opt)])).subscribe(function (_ref8) {
                var _ref9 = _slicedToArray(_ref8, 2),
                    action = _ref9[0],
                    state = _ref9[1];

                _this2.state = state;
                renderer([action, state]);
            });

            var clickItem$ = (0, _rxjs.fromEvent)($el, 'click');

            clickItem$.pipe((0, _operators.pluck)('originalEvent', 'target'), (0, _operators.filter)(function (el) {
                return el.tagName === 'I';
            }), (0, _operators.map)(function (el) {
                return ACTION.toggle(el.getAttribute('target'));
            })).subscribe(this.actionSource$);

            clickItem$.pipe((0, _operators.pluck)('originalEvent', 'target'), (0, _operators.map)(function (el) {
                var e = el;
                while (e) {
                    if (e.classList.contains(itemWrapperClass)) return e.getAttribute('item-id');
                    e = e.parentElement;
                }
                return null;
            }), (0, _operators.filter)(function (e) {
                return e !== null;
            }), (0, _operators.map)(function (e) {
                return ACTION.select(e);
            })).subscribe(this.actionSource$);
        }
    }, {
        key: '_setOnSelect',
        value: function _setOnSelect(fn) {
            this.listeners.select.push(fn);
        }
    }, {
        key: '_setOnExpand',
        value: function _setOnExpand(fn) {
            this.listeners.expand.push(fn);
        }
    }, {
        key: '_setOnCollapse',
        value: function _setOnCollapse(fn) {
            this.listeners.collapse.push(fn);
        }
    }, {
        key: '_expandAll',
        value: function _expandAll() {
            this.actionSource$.next(ACTION.expandAll());
        }
    }, {
        key: '_collapseAll',
        value: function _collapseAll() {
            this.actionSource$.next(ACTION.collapseAll());
        }
    }, {
        key: '_collapse',
        value: function _collapse(id) {
            this.actionSource$.next(ACTION.collapse(id));
        }
    }, {
        key: '_expand',
        value: function _expand(id) {
            this.actionSource$.next(ACTION.expand(id));
        }
    }, {
        key: '_addTo',
        value: function _addTo(id, item) {
            this.actionSource$.next(ACTION.addTo(id, item));
        }
    }, {
        key: '_addAfter',
        value: function _addAfter(id, item) {
            this.actionSource$.next(ACTION.addAfter(id, item));
        }
    }, {
        key: '_addBefore',
        value: function _addBefore(id, item) {
            this.actionSource$.next(ACTION.addBefore(id, item));
        }
    }, {
        key: '_remove',
        value: function _remove(id) {
            this.actionSource$.next(ACTION.remove(id));
        }
    }], [{
        key: 'getTemplate',
        value: function getTemplate() {
            var $template = $('<div class="brtc-widget-tree"></div>');
            return $template;
        }
    }]);

    return Tree;
}(_baseWidget2.default);

exports.default = Tree;

/***/ }),
/* 406 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _baseWidget = __webpack_require__(6);

var _baseWidget2 = _interopRequireDefault(_baseWidget);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/* global Handsontable */

var Table = function (_Base) {
    _inherits(Table, _Base);

    function Table($el, options) {
        _classCallCheck(this, Table);

        return _possibleConstructorReturn(this, (Table.__proto__ || Object.getPrototypeOf(Table)).call(this, $el, options));
    }

    _createClass(Table, [{
        key: '_setWidth',
        value: function _setWidth(value) {
            this.applyOpt.width = value;
        }
    }, {
        key: '_setHeight',
        value: function _setHeight(value) {
            this.applyOpt.height = value;
        }
    }, {
        key: '_setReadOnly',
        value: function _setReadOnly(value) {
            this.applyOpt.readOnly = value;
        }
    }, {
        key: '_setRowHeaders',
        value: function _setRowHeaders(value) {
            this.applyOpt.rowHeaders = value;
        }
    }, {
        key: '_setFilters',
        value: function _setFilters(value) {
            this.applyOpt.filters = value;
        }
    }, {
        key: '_setManualColumnResize',
        value: function _setManualColumnResize(value) {
            this.applyOpt.manualColumnResize = value;
        }
    }, {
        key: '_setColumnSorting',
        value: function _setColumnSorting(value) {
            this.applyOpt.columnSorting = value;
        }
    }, {
        key: '_setColHeaders',
        value: function _setColHeaders(value) {
            this.applyOpt.colHeaders = value;
        }
    }, {
        key: '_setColumns',
        value: function _setColumns(value) {
            this.applyOpt.columns = value;
        }
    }, {
        key: '_setData',
        value: function _setData(value) {
            this.applyOpt.data = value;
        }
    }, {
        key: '_setEditor',
        value: function _setEditor(value) {
            this.applyOpt.editor = value;
        }
    }, {
        key: '_setRowHeights',
        value: function _setRowHeights(value) {
            this.applyOpt.rowHeights = value;
        }
    }, {
        key: '_setColWidths',
        value: function _setColWidths(value) {
            this.applyOpt.colWidths = value;
        }
    }, {
        key: '_getPropertyList',
        value: function _getPropertyList(attrNm) {
            var setters = {
                width: this._setWidth,
                height: this._setHeight,
                readOnly: this._setReadOnly,
                rowHeaders: this._setRowHeaders,
                filters: this._setFilters,
                manualColumnResize: this._setManualColumnResize,
                columnSorting: this._setColumnSorting,
                colHeaders: this._setColHeaders,
                columns: this._setColumns,
                data: this._setData,
                rowHeights: this._setRowHeights
            };
            return setters[attrNm];
        }
    }, {
        key: '_getEventList',
        value: function _getEventList(name) {
            return {
                close: this._close
            }[name];
        }
    }, {
        key: '_getMethodList',
        value: function _getMethodList(name) {
            return {
                destroy: this._destroy
            }[name];
        }

        // expect String HTML tags

    }, {
        key: '_destroy',
        value: function _destroy() {
            this.table.destroy();
            this.$elem.remove();
        }

        // Event`s prototype

    }, {
        key: '_close',
        value: function _close(callbackfn) {
            if (typeof callbackfn === 'function') {
                this.closeEvent = callbackfn;
                this.$elem.on('close', callbackfn);
            }
        }
    }, {
        key: 'create',
        value: function create($el, opt) {
            // defaultValue를 초기 대입.
            var state = {
                readOnly: true,
                rowHeaders: false,
                colHeaders: true,
                filters: false,
                manualColumnResize: false,
                columnSorting: false,
                columns: undefined,
                width: undefined,
                height: undefined,
                rowHeights: 25
            };
            this.lazyExecuteList = [];
            this.$elem = Table.getTemplate();
            var applyOpt = $.extend(true, {}, state, opt);
            this.setOption(applyOpt);
            $el.append(this.$elem);
        }
    }, {
        key: '_applyOption',
        value: function _applyOption(opts) {
            this.table = new Handsontable(this.$elem[0], opts);
        }
    }, {
        key: '_closeMethod',
        value: function _closeMethod() {
            if (typeof this.closeEvent === 'function') {
                this.closeEvent();
            }
            this._destroy();
        }
    }], [{
        key: 'getTemplate',
        value: function getTemplate() {
            var $template = $('<div class="brtc-table"></div>');
            return $template;
        }
    }]);

    return Table;
}(_baseWidget2.default);

exports.default = Table;

/***/ })
/******/ ]);

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.wordCloud = exports.radar = exports.imageGrid = exports.donut = exports.map = exports.treemap = exports.table = exports.scatter = exports.roccurve = exports.qqplot = exports.pie = exports.pairwiseScatter = exports.network = exports.line = exports.histogram = exports.heatmapMatrix = exports.heatmap = exports.dendrogram = exports.decisiontree = exports.complex = exports.columnStacked100 = exports.columnStacked = exports.column = exports.card = exports.bubble = exports.boxplot = exports.biplot = exports.barStacked100 = exports.barStacked = exports.bar = exports.areaStacked100 = exports.areaStacked = exports.area = undefined;

var _bchartArea = __webpack_require__(131);

var _bchartArea2 = _interopRequireDefault(_bchartArea);

var _bchartAreaStacked = __webpack_require__(273);

var _bchartAreaStacked2 = _interopRequireDefault(_bchartAreaStacked);

var _bchartAreaStacked3 = __webpack_require__(553);

var _bchartAreaStacked4 = _interopRequireDefault(_bchartAreaStacked3);

var _bchartBar = __webpack_require__(274);

var _bchartBar2 = _interopRequireDefault(_bchartBar);

var _bchartBarStacked = __webpack_require__(275);

var _bchartBarStacked2 = _interopRequireDefault(_bchartBarStacked);

var _bchartBarStacked3 = __webpack_require__(554);

var _bchartBarStacked4 = _interopRequireDefault(_bchartBarStacked3);

var _bchartBiplot = __webpack_require__(555);

var _bchartBiplot2 = _interopRequireDefault(_bchartBiplot);

var _bchartBoxplot = __webpack_require__(556);

var _bchartBoxplot2 = _interopRequireDefault(_bchartBoxplot);

var _bchartBubble = __webpack_require__(557);

var _bchartBubble2 = _interopRequireDefault(_bchartBubble);

var _bchartCard = __webpack_require__(558);

var _bchartCard2 = _interopRequireDefault(_bchartCard);

var _bchartColumn = __webpack_require__(122);

var _bchartColumn2 = _interopRequireDefault(_bchartColumn);

var _bchartColumnStacked = __webpack_require__(276);

var _bchartColumnStacked2 = _interopRequireDefault(_bchartColumnStacked);

var _bchartColumnStacked3 = __webpack_require__(559);

var _bchartColumnStacked4 = _interopRequireDefault(_bchartColumnStacked3);

var _bchartComplex = __webpack_require__(560);

var _bchartComplex2 = _interopRequireDefault(_bchartComplex);

var _bchartDecisiontree = __webpack_require__(561);

var _bchartDecisiontree2 = _interopRequireDefault(_bchartDecisiontree);

var _bchartDendrogram = __webpack_require__(562);

var _bchartDendrogram2 = _interopRequireDefault(_bchartDendrogram);

var _bchartHeatmap = __webpack_require__(277);

var _bchartHeatmap2 = _interopRequireDefault(_bchartHeatmap);

var _bchartHeatmapMatrix = __webpack_require__(563);

var _bchartHeatmapMatrix2 = _interopRequireDefault(_bchartHeatmapMatrix);

var _bchartHistogram = __webpack_require__(564);

var _bchartHistogram2 = _interopRequireDefault(_bchartHistogram);

var _bchartLine = __webpack_require__(565);

var _bchartLine2 = _interopRequireDefault(_bchartLine);

var _bchartNetwork = __webpack_require__(566);

var _bchartNetwork2 = _interopRequireDefault(_bchartNetwork);

var _bchartPairwiseScatter = __webpack_require__(567);

var _bchartPairwiseScatter2 = _interopRequireDefault(_bchartPairwiseScatter);

var _bchartPie = __webpack_require__(278);

var _bchartPie2 = _interopRequireDefault(_bchartPie);

var _bchartQqplot = __webpack_require__(568);

var _bchartQqplot2 = _interopRequireDefault(_bchartQqplot);

var _bchartRadar = __webpack_require__(569);

var _bchartRadar2 = _interopRequireDefault(_bchartRadar);

var _bchartRoccurve = __webpack_require__(570);

var _bchartRoccurve2 = _interopRequireDefault(_bchartRoccurve);

var _bchartScatter = __webpack_require__(571);

var _bchartScatter2 = _interopRequireDefault(_bchartScatter);

var _bchartScattermap = __webpack_require__(572);

var _bchartScattermap2 = _interopRequireDefault(_bchartScattermap);

var _bchartTable = __webpack_require__(573);

var _bchartTable2 = _interopRequireDefault(_bchartTable);

var _bchartTreemap = __webpack_require__(574);

var _bchartTreemap2 = _interopRequireDefault(_bchartTreemap);

var _bchartMap = __webpack_require__(575);

var _bchartMap2 = _interopRequireDefault(_bchartMap);

var _bchartDonut = __webpack_require__(576);

var _bchartDonut2 = _interopRequireDefault(_bchartDonut);

var _bchartImageGrid = __webpack_require__(577);

var _bchartImageGrid2 = _interopRequireDefault(_bchartImageGrid);

var _bchartWordcloud = __webpack_require__(578);

var _bchartWordcloud2 = _interopRequireDefault(_bchartWordcloud);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Created by sds on 2018-03-14.
 */

exports.area = _bchartArea2.default;
exports.areaStacked = _bchartAreaStacked2.default;
exports.areaStacked100 = _bchartAreaStacked4.default;
exports.bar = _bchartBar2.default;
exports.barStacked = _bchartBarStacked2.default;
exports.barStacked100 = _bchartBarStacked4.default;
exports.biplot = _bchartBiplot2.default;
exports.boxplot = _bchartBoxplot2.default;
exports.bubble = _bchartBubble2.default;
exports.card = _bchartCard2.default;
exports.column = _bchartColumn2.default;
exports.columnStacked = _bchartColumnStacked2.default;
exports.columnStacked100 = _bchartColumnStacked4.default;
exports.complex = _bchartComplex2.default;
exports.decisiontree = _bchartDecisiontree2.default;
exports.dendrogram = _bchartDendrogram2.default;
exports.heatmap = _bchartHeatmap2.default;
exports.heatmapMatrix = _bchartHeatmapMatrix2.default;
exports.histogram = _bchartHistogram2.default;
exports.line = _bchartLine2.default;
exports.network = _bchartNetwork2.default;
exports.pairwiseScatter = _bchartPairwiseScatter2.default;
exports.pie = _bchartPie2.default;
exports.qqplot = _bchartQqplot2.default;
exports.roccurve = _bchartRoccurve2.default;
exports.scatter = _bchartScatter2.default;
exports.table = _bchartTable2.default;
exports.treemap = _bchartTreemap2.default;
exports.map = _bchartMap2.default;
exports.donut = _bchartDonut2.default;
exports.imageGrid = _bchartImageGrid2.default;
exports.radar = _bchartRadar2.default;
exports.wordCloud = _bchartWordcloud2.default;

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/**
 * Created by SDS on 2017-05-10.
 */
exports.default = {
    selectableColumnType: ['string', 'number', 'date'],
    selectableColumnInternalType: ['string', 'boolean', 'double', 'integer', 'long'],
    Problems: {
        'datasource-001': {
            message: 'There is no datasource.'
        },
        'datasource-002': {
            message: 'There is no chart data.'
        },
        'datasource-002-01': {
            message: 'There is no chart data [{0}].'
        },
        'datasource-003': {
            message: 'There is no column.'
        },
        'datasource-003-01': {
            message: 'There is no column [{0}].'
        },
        'axis-001': {
            message: '{0} Column is required.'
        },
        // 'axis-002': {
        //     message: '{0} Column does not allow number type.'
        // },
        // 'axis-003': {
        //     message: '{0} Column allows only number type.'
        // },
        'axis-004': {
            message: '{0} : {1} Column does not exist!'
        },
        'axis-005': {
            message: '{0} Column allows only [{1}] type.'
        },
        'value-001': {
            message: '{0}: [{1}] must be less than [{2}].'
        },
        'value-002': {
            message: '{0}: [{1}] must be greater than [{2}].'
        },
        'value-003': {
            message: '{0}: [{1}] must be less than or equal to [{2}].'
        },
        'value-004': {
            message: '{0}: [{1}] must be greater than or equal to [{2}].'
        },
        'value-005': {
            message: '{0} is required.'
        },
        'radar-view-range-001': {
            message: 'Axis View Range: [Min, Max] are required.'
        }
    }
};

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _echartsLine = __webpack_require__(62);

var _echartsLine2 = _interopRequireDefault(_echartsLine);

var _echartsAreaOptionBuilder = __webpack_require__(216);

var _echartsAreaOptionBuilder2 = _interopRequireDefault(_echartsAreaOptionBuilder);

var _echartsAreaCalculatedOptionBuilder = __webpack_require__(94);

var _echartsAreaCalculatedOptionBuilder2 = _interopRequireDefault(_echartsAreaCalculatedOptionBuilder);

var _echartsAreaComplexOptionBuilder = __webpack_require__(217);

var _echartsAreaComplexOptionBuilder2 = _interopRequireDefault(_echartsAreaComplexOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * EChartsArea
 * @param parentId
 * @param options
 * @constructor
 */
function EChartsArea(parentId, options) {
    _echartsWrapper2.default.call(this, parentId, options);
} /**
   * Source: echarts-area.js
   * Created by daewon.park on 2017-03-23.
   */


EChartsArea.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsArea.prototype.constructor = EChartsArea;

EChartsArea.prototype.render = function () {
    this.seriesHelper = this.getSeriesHelper();
    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._setEChartOption(opt);
};

EChartsArea.prototype.getLegendData = function () {
    return _echartsWrapper2.default.prototype.getLegendData.call(this);
};

EChartsArea.prototype.getSeriesHelper = function () {
    if (this.isComplex) {
        return new _echartsAreaComplexOptionBuilder2.default();
    } else if (this.options.source.localData[0].dataType === 'chartdata') {
        return new _echartsAreaCalculatedOptionBuilder2.default();
    } else {
        return new _echartsAreaOptionBuilder2.default();
    }
};

exports.default = EChartsArea;

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeOptionBuilder = __webpack_require__(19);

var _echartsAxisTypeOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeOptionBuilder);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsLineOptionBuilder() {
    _echartsAxisTypeOptionBuilder2.default.call(this);
}

EChartsLineOptionBuilder.prototype = Object.create(_echartsAxisTypeOptionBuilder2.default.prototype);
EChartsLineOptionBuilder.prototype.constructor = EChartsLineOptionBuilder;

EChartsLineOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['markPoint', 'markLine', 'smooth', 'smoothMonotone', 'step'];
    this._registerDecorator('axisType');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('tooltipTriggerAxis');
    this._registerDecorator('tooltip');
    this._registerDecorator('marker');
    this._registerDecorator('lineStyle');
    this._registerDecorator('showSymbol');
    this._registerDecorator('plotOptions');
    this._registerDecorator('lineBy');
    this._registerDecorator('axisRange');
    this._setSeriesDataSortRule();
    this._registerDecorator('brush');
    this.setSeriesSubKeyColumns(this.plotOptions.lineBy[0].selected);
    this.setSeriesKeyColumns(this.bOptions.colorBy[0].selected);
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
    this._registerDecorator('trendline');
};

EChartsLineOptionBuilder.prototype.getTooltipKeyColumns = function (dataIndex) {
    return this.getSeriesKeyColumns(dataIndex).concat(this.getSeriesSubKeyColumns(dataIndex));
};

EChartsLineOptionBuilder.prototype.setSeriesSubKeyColumns = function (columns, dataIndex) {
    dataIndex = dataIndex || 0;
    columns = this.filterNullColumn(columns);
    this._seriesSubKeyColumsList = this._seriesSubKeyColumsList || [];
    this._seriesSubKeyColumsList[dataIndex] = this._seriesSubKeyColumsList[dataIndex] || [];
    this._seriesSubKeyColumsList[dataIndex] = this._seriesSubKeyColumsList[dataIndex].concat(columns);
};

EChartsLineOptionBuilder.prototype.getSeriesSubKeyColumns = function (dataIndex) {
    dataIndex = dataIndex || 0;
    this._seriesSubKeyColumsList = this._seriesSubKeyColumsList || [];
    return this._seriesSubKeyColumsList[dataIndex] || [];
};

EChartsLineOptionBuilder.prototype.getSeriesSubKeyColumnIndexes = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    var localData = this.getLocalData(dataIndex);
    var keyColumns = this.getSeriesSubKeyColumns(dataIndex);
    return this.getColumnIndexes(keyColumns, localData.columns);
};

EChartsLineOptionBuilder.prototype._buildSeries = function () {
    var series = {};
    var localData = this.getLocalData();
    var keyIndexes = this.getSeriesKeyColumnIndexes();
    var subKeyIndexes = this.getSeriesSubKeyColumnIndexes();
    var allKeyIndexes = keyIndexes.concat(subKeyIndexes);
    var yAxisSelected = this.filterNullColumn(this.bOptions.yAxis[0].selected);
    var xAxisName = _optionUtils2.default.getColumnLabel(this.bOptions.xAxis[0].selected[0]);
    var isMultiAxis = yAxisSelected.length > 1 ? true : false;

    var i, row, seriesName, seriesItem, yAxisIndex, seriesNameList, seriesKey, seriesKeyList, yAxisName, multiSeriesMap;

    for (i in localData.data) {
        row = localData.data[i];
        multiSeriesMap = {};

        for (yAxisIndex = 0; yAxisIndex < yAxisSelected.length; yAxisIndex++) {
            yAxisName = _optionUtils2.default.getColumnLabel(yAxisSelected[yAxisIndex]);
            if (isMultiAxis) {
                seriesNameList = this.getCellText(row, keyIndexes, yAxisName);
                seriesKeyList = this.getCellText(row, allKeyIndexes, yAxisName);
            } else {
                seriesNameList = this.getCellText(row, keyIndexes);
                seriesKeyList = this.getCellText(row, allKeyIndexes);
            }

            if (multiSeriesMap[yAxisName]) continue;

            seriesName = seriesNameList.join(' ');
            seriesKey = seriesKeyList.join(' ');
            seriesItem = this._getSeriesItem(series, seriesKey);
            series[seriesKey] = seriesItem;

            if (!seriesItem.extractor) {
                seriesItem.extractor = this._newSeriesExtractor({
                    yAxisIndex: yAxisIndex
                });
                seriesItem.extractor.keys = seriesKeyList;
                seriesItem.name = seriesName;
                seriesItem.keys = seriesItem.extractor.keys;

                seriesItem.tooltipHeaders = [xAxisName, yAxisName];
            }
            seriesItem.extractor.push(row, i);
            multiSeriesMap[yAxisName] = true;
        }
    }

    this._setSeries(series);
    this._buildSeriesData();
    this.eOptions.series = this.series;
};

exports.default = EChartsLineOptionBuilder;

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsExtractor = __webpack_require__(45);

var _echartsExtractor2 = _interopRequireDefault(_echartsExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PointByRowIndexDataExtractor() {
    _echartsExtractor2.default.call(this);
    this._points = [];
}

PointByRowIndexDataExtractor.prototype = Object.create(_echartsExtractor2.default.prototype);
PointByRowIndexDataExtractor.prototype.constructor = PointByRowIndexDataExtractor;

PointByRowIndexDataExtractor.prototype.push = function (row, rowIndex) {
    rowIndex = parseInt(rowIndex);
    var columnIndices = this._columnIndices[0].filter(function (columnIdx) {
        return columnIdx != -1;
    });

    for (var i = 0; i < columnIndices.length; i++) {
        var pointData = {
            value: [],
            categoryIndex: columnIndices[i],
            dataIndexes: [rowIndex]
        };

        pointData.value = [rowIndex, row[columnIndices[i]]];
        this._points.push(pointData);
    }
};

PointByRowIndexDataExtractor.prototype.extract = function () {
    return this._points;
};

exports.default = PointByRowIndexDataExtractor;

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ComplexScatterLineExtractor() {
    _echartsPointExtractor2.default.call(this);
} /**
   * Created by sds on 2019-08-20.
   * 막 만든겁니다.
   */

ComplexScatterLineExtractor.prototype = Object.create(_echartsPointExtractor2.default.prototype);
ComplexScatterLineExtractor.prototype.constructor = ComplexScatterLineExtractor;

ComplexScatterLineExtractor.prototype._extract = function (pointObject) {
    if (this._extractOperator) {
        return this._extractOperator(pointObject);
    } else if (pointObject.point.length === 1) {
        return { value: [pointObject.point[0][0] + '', pointObject.point[0][1]], dataIndexes: pointObject.indexList };
    } else {
        return { value: pointObject.point, dataIndexes: pointObject.indexList };
    }
};

exports.default = ComplexScatterLineExtractor;

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeOptionBuilder = __webpack_require__(19);

var _echartsAxisTypeOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeOptionBuilder);

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

var _echartsPointWithCategorykeyExtractor = __webpack_require__(25);

var _echartsPointWithCategorykeyExtractor2 = _interopRequireDefault(_echartsPointWithCategorykeyExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsAxisTypeWithCategoryKeyOptionBuilder() {
    _echartsAxisTypeOptionBuilder2.default.call(this);
}

EChartsAxisTypeWithCategoryKeyOptionBuilder.prototype = Object.create(_echartsAxisTypeOptionBuilder2.default.prototype);
EChartsAxisTypeWithCategoryKeyOptionBuilder.prototype.constructor = EChartsAxisTypeWithCategoryKeyOptionBuilder;

EChartsAxisTypeWithCategoryKeyOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData();
    var dataColumns = this.getSeriesDataColumns();
    var aggregation = dataColumns[1].aggregation;
    var hasAggregation = aggregation && aggregation !== 'none';
    var xIndexes = this.getColumnIndexes(this.bOptions.xAxis[0].selected, localData.columns);
    var yIndexes = this.getColumnIndexes(this.bOptions.yAxis[0].selected, localData.columns);

    var extractor = new _echartsPointWithCategorykeyExtractor2.default();

    extractor.setTarget({
        index: xIndexes,
        type: 'category',
        isKey: true
    });

    extractor.setTarget({
        index: yIndexes,
        type: 'value',
        isKey: false
    });

    if (hasAggregation) {
        extractor.setExtractOperator(function (pointObject) {
            var operator = new _aggregationOperator2.default(pointObject.value);
            for (var i = 0; i < pointObject.indexList.length; i++) {
                operator.add(pointObject.indexList[i], pointObject.point[i][1]);
            }
            return [{ value: pointObject.value.concat(operator.calc(aggregation)), dataIndexes: pointObject.indexList }];
        });
    }
    return extractor;
};
exports.default = EChartsAxisTypeWithCategoryKeyOptionBuilder;

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeWithCategorykeyCalculatedOptionBuilder = __webpack_require__(358);

var _echartsAxisTypeWithCategorykeyCalculatedOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeWithCategorykeyCalculatedOptionBuilder);

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsAreaCalculatedOptionBuilder() {
    _echartsAxisTypeWithCategorykeyCalculatedOptionBuilder2.default.call(this);
}

EChartsAreaCalculatedOptionBuilder.prototype = Object.create(_echartsAxisTypeWithCategorykeyCalculatedOptionBuilder2.default.prototype);
EChartsAreaCalculatedOptionBuilder.prototype.constructor = EChartsAreaCalculatedOptionBuilder;

EChartsAreaCalculatedOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['markPoint', 'markLine', 'areaStyle', 'sampling', 'smooth', 'smoothMonotone', 'step'];
    this._registerDecorator('axisTypeWithCategoryX');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('xAxisBoundaryGapFalse');
    this._registerDecorator('fillXCategoryValues');
    this._registerDecorator('stripline');
    this._registerDecorator('tooltipTriggerAxis');
    this._registerDecorator('tooltipAxisCalculated');
    this._registerDecorator('marker');
    this._registerDecorator('showSymbol');
    this._registerDecorator('plotOptions');
    this._setSeriesDataSortRule();
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
};

EChartsAreaCalculatedOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.type = 'line';
    seriesItem.areaStyle = {
        normal: {}
    };
    return seriesItem;
};

EChartsAreaCalculatedOptionBuilder.prototype.getSeriesKeyColumns = function () {
    var keyColumns = this.filterNullColumn(this.bOptions.colorBy[0].selected);
    if (keyColumns.length > 0) {
        return [{ name: 'colorBy' }];
    } else {
        return [];
    }
};

exports.default = EChartsAreaCalculatedOptionBuilder;

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsArea = __webpack_require__(89);

var _echartsArea2 = _interopRequireDefault(_echartsArea);

var _echartsAreaStackedOptionBuilder = __webpack_require__(218);

var _echartsAreaStackedOptionBuilder2 = _interopRequireDefault(_echartsAreaStackedOptionBuilder);

var _echartsAreaCalculatedStackedOptionBuilder = __webpack_require__(360);

var _echartsAreaCalculatedStackedOptionBuilder2 = _interopRequireDefault(_echartsAreaCalculatedStackedOptionBuilder);

var _echartsAreaStackedComplexOptionBuilder = __webpack_require__(219);

var _echartsAreaStackedComplexOptionBuilder2 = _interopRequireDefault(_echartsAreaStackedComplexOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: echarts-area-stacked.js
 * Created by daewon.park on 2017-04-12.
 */

function EChartsAreaStacked(parentId, options) {
    _echartsArea2.default.call(this, parentId, options);
}

EChartsAreaStacked.prototype = Object.create(_echartsArea2.default.prototype);
EChartsAreaStacked.prototype.constructor = EChartsAreaStacked;

EChartsAreaStacked.prototype.render = function () {
    this.seriesHelper = this.getSeriesHelper();
    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._setEChartOption(opt);
};

EChartsAreaStacked.prototype.getSeriesHelper = function () {
    if (this.isComplex) {
        return new _echartsAreaStackedComplexOptionBuilder2.default();
    } else if (this.options.source.localData[0].dataType == 'chartdata') {
        return new _echartsAreaCalculatedStackedOptionBuilder2.default();
    } else {
        return new _echartsAreaStackedOptionBuilder2.default();
    }
};

exports.default = EChartsAreaStacked;

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsPointWithCategorykeyExtractor = __webpack_require__(25);

var _echartsPointWithCategorykeyExtractor2 = _interopRequireDefault(_echartsPointWithCategorykeyExtractor);

var _echartsAxisTypeCalculatedOptionBuilder = __webpack_require__(32);

var _echartsAxisTypeCalculatedOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeCalculatedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsBarCalculatedOptionBuilder() {
    _echartsAxisTypeCalculatedOptionBuilder2.default.call(this);
}

EChartsBarCalculatedOptionBuilder.prototype = Object.create(_echartsAxisTypeCalculatedOptionBuilder2.default.prototype);
EChartsBarCalculatedOptionBuilder.prototype.constructor = EChartsBarCalculatedOptionBuilder;

EChartsBarCalculatedOptionBuilder.prototype._setUpOptions = function () {
    this._setAxisColumnSortRule();
    this._registerDecorator('axisTypeWithCategoryY');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('tooltipItemCalculated');
    this._registerDecorator('marker');
    this._registerDecorator('brush');
    this._registerDecorator('axisLineOnZeroTrue');
    this._registerDecorator('xAxisMin0', { aggr: ['count'] });
    this._registerDecorator('emphasis');
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
};

EChartsBarCalculatedOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData();
    var xIndexes = this.getColumnIndexes([{ name: 'yAxis' }], localData.chartColumns);
    var yIndexes = this.getColumnIndexes([{ name: 'xAxis' }], localData.chartColumns);

    var extractor = new _echartsPointWithCategorykeyExtractor2.default();

    extractor.setTarget({
        index: xIndexes,
        type: 'value',
        isKey: false
    });

    extractor.setTarget({
        index: yIndexes,
        type: 'category',
        isKey: true
    });

    return extractor;
};

EChartsBarCalculatedOptionBuilder.prototype.getSeriesKeyColumns = function () {
    var keyColumns = this.filterNullColumn(this.bOptions.colorBy[0].selected);
    if (keyColumns.length > 0) {
        return [{ name: 'colorBy' }];
    } else {
        return [];
    }
};

EChartsBarCalculatedOptionBuilder.prototype._setAxisColumnSortRule = function () {
    this._axisSortRule = this.bOptions.plotOptions.bar.axisSort;
};

exports.default = EChartsBarCalculatedOptionBuilder;

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeCalculatedOptionBuilder = __webpack_require__(32);

var _echartsAxisTypeCalculatedOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeCalculatedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsScatterCalculatedOptionBuilder() {
    _echartsAxisTypeCalculatedOptionBuilder2.default.call(this);
}

EChartsScatterCalculatedOptionBuilder.prototype = Object.create(_echartsAxisTypeCalculatedOptionBuilder2.default.prototype);
EChartsScatterCalculatedOptionBuilder.prototype.constructor = EChartsScatterCalculatedOptionBuilder;

EChartsScatterCalculatedOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['markPoint', 'markLine'];
    this._registerDecorator('axisType');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('tooltipItemCalculated');
    this._registerDecorator('marker');
    this._registerDecorator('plotOptions');
    this._registerDecorator('brush');
    this._registerDecorator('emphasis');
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
    this._registerDecorator('trendline');
};

EChartsScatterCalculatedOptionBuilder.prototype.getSeriesKeyColumns = function () {
    var keyColumns = this.filterNullColumn(this.bOptions.colorBy[0].selected);
    if (keyColumns.length > 0 || this.bOptions.yAxis[0].selected.length > 1) {
        return [{ name: 'colorBy' }];
    } else {
        return [];
    }
};

exports.default = EChartsScatterCalculatedOptionBuilder;

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsColumn = __webpack_require__(65);

var _echartsColumn2 = _interopRequireDefault(_echartsColumn);

var _echartsColumnStackedOptionBuilder = __webpack_require__(231);

var _echartsColumnStackedOptionBuilder2 = _interopRequireDefault(_echartsColumnStackedOptionBuilder);

var _echartsColumnCalculatedStackedOptionBuilder = __webpack_require__(380);

var _echartsColumnCalculatedStackedOptionBuilder2 = _interopRequireDefault(_echartsColumnCalculatedStackedOptionBuilder);

var _echartsColumnStackedComplexOptionBuilder = __webpack_require__(232);

var _echartsColumnStackedComplexOptionBuilder2 = _interopRequireDefault(_echartsColumnStackedComplexOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: echarts-column-stacked.js
 * Created by daewon.park on 2017-03-29.
 */

function EChartsColumnStacked(parentId, options) {
    _echartsColumn2.default.call(this, parentId, options);
}

EChartsColumnStacked.prototype = Object.create(_echartsColumn2.default.prototype);
EChartsColumnStacked.prototype.constructor = EChartsColumnStacked;

EChartsColumnStacked.prototype.render = function () {
    this.seriesHelper = this.getSeriesHelper();
    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._doDataValidation(opt);
    this._setEChartOption(opt);
};

EChartsColumnStacked.prototype.getSeriesHelper = function () {
    if (this.isComplex) {
        return new _echartsColumnStackedComplexOptionBuilder2.default();
    } else if (this.options.source.localData[0].dataType == 'chartdata') {
        return new _echartsColumnCalculatedStackedOptionBuilder2.default();
    } else {
        return new _echartsColumnStackedOptionBuilder2.default();
    }
};

exports.default = EChartsColumnStacked;

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _echartsScatterOptionBuilder = __webpack_require__(234);

var _echartsScatterOptionBuilder2 = _interopRequireDefault(_echartsScatterOptionBuilder);

var _echartsScatterBycolumnnamesOptionBuilder = __webpack_require__(235);

var _echartsScatterBycolumnnamesOptionBuilder2 = _interopRequireDefault(_echartsScatterBycolumnnamesOptionBuilder);

var _echartsScatterByrowindexOptionBuilder = __webpack_require__(85);

var _echartsScatterByrowindexOptionBuilder2 = _interopRequireDefault(_echartsScatterByrowindexOptionBuilder);

var _echartsScatterCalculatedOptionBuilder = __webpack_require__(97);

var _echartsScatterCalculatedOptionBuilder2 = _interopRequireDefault(_echartsScatterCalculatedOptionBuilder);

var _echartsScatterComplexOptionBuilder = __webpack_require__(236);

var _echartsScatterComplexOptionBuilder2 = _interopRequireDefault(_echartsScatterComplexOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * EChartsScatter
 * @param parentId
 * @param options
 * @constructor
 */
function EChartsScatter(parentId, options) {
    _echartsWrapper2.default.call(this, parentId, options);
} /**
   * Source: echarts-scatter.js
   * Created by daewon.park on 2017-03-23.
   */


EChartsScatter.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsScatter.prototype.constructor = EChartsScatter;

EChartsScatter.prototype.render = function () {

    this.seriesHelper = this.getSeriesHelper();

    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._setEChartOption(opt);
    this._backupItemStyles();
};

EChartsScatter.prototype._getSelectionFromArea = function (batchArea) {
    var _this = this;
    var xAxis = this._getEChartOption().xAxis[0];
    if (xAxis.axisType === 'byColumnNames') {
        var selection = [];
        var yAxis = this._getEChartOption().yAxis[0];
        for (var columnIdx = batchArea.coordRange[0][0]; columnIdx < batchArea.coordRange[0][1] + 1; columnIdx++) {
            var columnName = xAxis.data[columnIdx];
            var selectionItem = {};
            selectionItem[columnName] = _this._convertToSelection(yAxis, columnName, batchArea.coordRange[1]);
            selection.push(selectionItem);
        }
        return selection;
    } else {
        return _echartsWrapper2.default.prototype._getSelectionFromArea.call(this, batchArea);
    }
};

EChartsScatter.prototype.getSeriesHelper = function () {
    if (this.isComplex) {
        return new _echartsScatterComplexOptionBuilder2.default();
    } else if (this.options.source.localData[0].dataType == 'chartdata') {
        return new _echartsScatterCalculatedOptionBuilder2.default();
    }

    var xAxisType = _optionUtils2.default.getXAxisType(this.options);
    if (xAxisType === 'byColumnNames') {
        return new _echartsScatterBycolumnnamesOptionBuilder2.default();
    } else if (xAxisType === 'byRowIndex') {
        return new _echartsScatterByrowindexOptionBuilder2.default();
    } else {
        return new _echartsScatterOptionBuilder2.default();
    }
};

exports.default = EChartsScatter;

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _d3SeriesExtractor = __webpack_require__(239);

var _d3SeriesExtractor2 = _interopRequireDefault(_d3SeriesExtractor);

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Created by sds on 2018-03-19.
 */
/**
 * X 축의 값이 value, Y 축의 값이 aggregation 된 형태의 Series Data 를 생성
 * @param columnIndexes
 * @constructor
 */

function AggregationDataExtractor(columnIndexes) {
    _d3SeriesExtractor2.default.call(this, columnIndexes);
    this.operators = {};
    this.categories = [];
}

AggregationDataExtractor.prototype = Object.create(_d3SeriesExtractor2.default.prototype);
AggregationDataExtractor.prototype.constructor = AggregationDataExtractor;

AggregationDataExtractor.prototype.push = function (row, rowIndex) {
    var x = row[this.columnIndexes[0]];
    var y = row[this.columnIndexes[1]];
    var operator = this.operators[x];
    if (!operator) {
        operator = new _aggregationOperator2.default(x);
        this.operators[x] = operator;
        this.categories.push(x);
    }
    operator.add(rowIndex, y);
};

AggregationDataExtractor.prototype.getCategories = function () {
    return this.categories;
};

AggregationDataExtractor.prototype.extract = function (operator) {
    var answer = [];
    for (var i in this.operators) {
        var pointData = {
            value: [this.operators[i].x, this.operators[i].calc(operator)],
            dataIndexes: this.operators[i].dataIndexes // point 에 해당하는 원본 데이터 인덱스
        };
        answer.push(pointData);
    }
    return answer;
};

exports.default = AggregationDataExtractor;

/***/ }),
/* 101 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__internal_Observable__ = __webpack_require__(12);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Observable", function() { return __WEBPACK_IMPORTED_MODULE_0__internal_Observable__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__internal_observable_ConnectableObservable__ = __webpack_require__(247);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "ConnectableObservable", function() { return __WEBPACK_IMPORTED_MODULE_1__internal_observable_ConnectableObservable__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__internal_operators_groupBy__ = __webpack_require__(249);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "GroupedObservable", function() { return __WEBPACK_IMPORTED_MODULE_2__internal_operators_groupBy__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__internal_symbol_observable__ = __webpack_require__(47);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "observable", function() { return __WEBPACK_IMPORTED_MODULE_3__internal_symbol_observable__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__internal_Subject__ = __webpack_require__(27);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Subject", function() { return __WEBPACK_IMPORTED_MODULE_4__internal_Subject__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__internal_BehaviorSubject__ = __webpack_require__(250);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "BehaviorSubject", function() { return __WEBPACK_IMPORTED_MODULE_5__internal_BehaviorSubject__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__internal_ReplaySubject__ = __webpack_require__(108);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "ReplaySubject", function() { return __WEBPACK_IMPORTED_MODULE_6__internal_ReplaySubject__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__internal_AsyncSubject__ = __webpack_require__(70);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncSubject", function() { return __WEBPACK_IMPORTED_MODULE_7__internal_AsyncSubject__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__internal_scheduler_asap__ = __webpack_require__(255);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "asap", function() { return __WEBPACK_IMPORTED_MODULE_8__internal_scheduler_asap__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "asapScheduler", function() { return __WEBPACK_IMPORTED_MODULE_8__internal_scheduler_asap__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__internal_scheduler_async__ = __webpack_require__(29);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "async", function() { return __WEBPACK_IMPORTED_MODULE_9__internal_scheduler_async__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "asyncScheduler", function() { return __WEBPACK_IMPORTED_MODULE_9__internal_scheduler_async__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__internal_scheduler_queue__ = __webpack_require__(251);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "queue", function() { return __WEBPACK_IMPORTED_MODULE_10__internal_scheduler_queue__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "queueScheduler", function() { return __WEBPACK_IMPORTED_MODULE_10__internal_scheduler_queue__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__internal_scheduler_animationFrame__ = __webpack_require__(439);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "animationFrame", function() { return __WEBPACK_IMPORTED_MODULE_11__internal_scheduler_animationFrame__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "animationFrameScheduler", function() { return __WEBPACK_IMPORTED_MODULE_11__internal_scheduler_animationFrame__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__internal_scheduler_VirtualTimeScheduler__ = __webpack_require__(442);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "VirtualTimeScheduler", function() { return __WEBPACK_IMPORTED_MODULE_12__internal_scheduler_VirtualTimeScheduler__["b"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "VirtualAction", function() { return __WEBPACK_IMPORTED_MODULE_12__internal_scheduler_VirtualTimeScheduler__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__internal_Scheduler__ = __webpack_require__(252);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Scheduler", function() { return __WEBPACK_IMPORTED_MODULE_13__internal_Scheduler__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__internal_Subscription__ = __webpack_require__(23);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Subscription", function() { return __WEBPACK_IMPORTED_MODULE_14__internal_Subscription__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__internal_Subscriber__ = __webpack_require__(4);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Subscriber", function() { return __WEBPACK_IMPORTED_MODULE_15__internal_Subscriber__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__internal_Notification__ = __webpack_require__(68);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Notification", function() { return __WEBPACK_IMPORTED_MODULE_16__internal_Notification__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "NotificationKind", function() { return __WEBPACK_IMPORTED_MODULE_16__internal_Notification__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__internal_util_pipe__ = __webpack_require__(106);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "pipe", function() { return __WEBPACK_IMPORTED_MODULE_17__internal_util_pipe__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__internal_util_noop__ = __webpack_require__(111);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "noop", function() { return __WEBPACK_IMPORTED_MODULE_18__internal_util_noop__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__internal_util_identity__ = __webpack_require__(43);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return __WEBPACK_IMPORTED_MODULE_19__internal_util_identity__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__internal_util_isObservable__ = __webpack_require__(443);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "isObservable", function() { return __WEBPACK_IMPORTED_MODULE_20__internal_util_isObservable__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__internal_util_ArgumentOutOfRangeError__ = __webpack_require__(57);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "ArgumentOutOfRangeError", function() { return __WEBPACK_IMPORTED_MODULE_21__internal_util_ArgumentOutOfRangeError__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__internal_util_EmptyError__ = __webpack_require__(58);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "EmptyError", function() { return __WEBPACK_IMPORTED_MODULE_22__internal_util_EmptyError__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__internal_util_ObjectUnsubscribedError__ = __webpack_require__(67);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "ObjectUnsubscribedError", function() { return __WEBPACK_IMPORTED_MODULE_23__internal_util_ObjectUnsubscribedError__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__internal_util_UnsubscriptionError__ = __webpack_require__(246);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "UnsubscriptionError", function() { return __WEBPACK_IMPORTED_MODULE_24__internal_util_UnsubscriptionError__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__internal_util_TimeoutError__ = __webpack_require__(256);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "TimeoutError", function() { return __WEBPACK_IMPORTED_MODULE_25__internal_util_TimeoutError__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__internal_observable_bindCallback__ = __webpack_require__(444);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "bindCallback", function() { return __WEBPACK_IMPORTED_MODULE_26__internal_observable_bindCallback__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__internal_observable_bindNodeCallback__ = __webpack_require__(445);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "bindNodeCallback", function() { return __WEBPACK_IMPORTED_MODULE_27__internal_observable_bindNodeCallback__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__internal_observable_combineLatest__ = __webpack_require__(112);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "combineLatest", function() { return __WEBPACK_IMPORTED_MODULE_28__internal_observable_combineLatest__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__internal_observable_concat__ = __webpack_require__(71);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return __WEBPACK_IMPORTED_MODULE_29__internal_observable_concat__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__internal_observable_defer__ = __webpack_require__(115);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "defer", function() { return __WEBPACK_IMPORTED_MODULE_30__internal_observable_defer__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__internal_observable_empty__ = __webpack_require__(37);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "empty", function() { return __WEBPACK_IMPORTED_MODULE_31__internal_observable_empty__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__internal_observable_forkJoin__ = __webpack_require__(454);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "forkJoin", function() { return __WEBPACK_IMPORTED_MODULE_32__internal_observable_forkJoin__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__internal_observable_from__ = __webpack_require__(39);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "from", function() { return __WEBPACK_IMPORTED_MODULE_33__internal_observable_from__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__internal_observable_fromEvent__ = __webpack_require__(455);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "fromEvent", function() { return __WEBPACK_IMPORTED_MODULE_34__internal_observable_fromEvent__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__internal_observable_fromEventPattern__ = __webpack_require__(456);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "fromEventPattern", function() { return __WEBPACK_IMPORTED_MODULE_35__internal_observable_fromEventPattern__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__internal_observable_generate__ = __webpack_require__(457);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "generate", function() { return __WEBPACK_IMPORTED_MODULE_36__internal_observable_generate__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__internal_observable_iif__ = __webpack_require__(458);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "iif", function() { return __WEBPACK_IMPORTED_MODULE_37__internal_observable_iif__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__internal_observable_interval__ = __webpack_require__(459);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "interval", function() { return __WEBPACK_IMPORTED_MODULE_38__internal_observable_interval__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__internal_observable_merge__ = __webpack_require__(261);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return __WEBPACK_IMPORTED_MODULE_39__internal_observable_merge__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__internal_observable_never__ = __webpack_require__(262);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "never", function() { return __WEBPACK_IMPORTED_MODULE_40__internal_observable_never__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__internal_observable_of__ = __webpack_require__(69);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "of", function() { return __WEBPACK_IMPORTED_MODULE_41__internal_observable_of__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__internal_observable_onErrorResumeNext__ = __webpack_require__(460);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNext", function() { return __WEBPACK_IMPORTED_MODULE_42__internal_observable_onErrorResumeNext__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__internal_observable_pairs__ = __webpack_require__(461);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "pairs", function() { return __WEBPACK_IMPORTED_MODULE_43__internal_observable_pairs__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__internal_observable_partition__ = __webpack_require__(462);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return __WEBPACK_IMPORTED_MODULE_44__internal_observable_partition__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__internal_observable_race__ = __webpack_require__(264);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "race", function() { return __WEBPACK_IMPORTED_MODULE_45__internal_observable_race__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__internal_observable_range__ = __webpack_require__(463);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "range", function() { return __WEBPACK_IMPORTED_MODULE_46__internal_observable_range__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__internal_observable_throwError__ = __webpack_require__(110);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "throwError", function() { return __WEBPACK_IMPORTED_MODULE_47__internal_observable_throwError__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__internal_observable_timer__ = __webpack_require__(265);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "timer", function() { return __WEBPACK_IMPORTED_MODULE_48__internal_observable_timer__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__internal_observable_using__ = __webpack_require__(464);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "using", function() { return __WEBPACK_IMPORTED_MODULE_49__internal_observable_using__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__internal_observable_zip__ = __webpack_require__(116);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return __WEBPACK_IMPORTED_MODULE_50__internal_observable_zip__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__internal_scheduled_scheduled__ = __webpack_require__(260);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "scheduled", function() { return __WEBPACK_IMPORTED_MODULE_51__internal_scheduled_scheduled__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "EMPTY", function() { return __WEBPACK_IMPORTED_MODULE_31__internal_observable_empty__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "NEVER", function() { return __WEBPACK_IMPORTED_MODULE_40__internal_observable_never__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__internal_config__ = __webpack_require__(66);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "config", function() { return __WEBPACK_IMPORTED_MODULE_52__internal_config__["a"]; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */























































//# sourceMappingURL=index.js.map


/***/ }),
/* 102 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = canReportError;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */

function canReportError(observer) {
    while (observer) {
        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;
        if (closed_1 || isStopped) {
            return false;
        }
        else if (destination && destination instanceof __WEBPACK_IMPORTED_MODULE_0__Subscriber__["a" /* Subscriber */]) {
            observer = destination;
        }
        else {
            observer = null;
        }
    }
    return true;
}
//# sourceMappingURL=canReportError.js.map


/***/ }),
/* 103 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = hostReportError;
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function hostReportError(err) {
    setTimeout(function () { throw err; }, 0);
}
//# sourceMappingURL=hostReportError.js.map


/***/ }),
/* 104 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isObject;
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isObject(x) {
    return x !== null && typeof x === 'object';
}
//# sourceMappingURL=isObject.js.map


/***/ }),
/* 105 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return rxSubscriber; });
/* unused harmony export $$rxSubscriber */
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var rxSubscriber = /*@__PURE__*/ (function () {
    return typeof Symbol === 'function'
        ? /*@__PURE__*/ Symbol('rxSubscriber')
        : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();
})();
var $$rxSubscriber = rxSubscriber;
//# sourceMappingURL=rxSubscriber.js.map


/***/ }),
/* 106 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = pipe;
/* harmony export (immutable) */ __webpack_exports__["b"] = pipeFromArray;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__identity__ = __webpack_require__(43);
/** PURE_IMPORTS_START _identity PURE_IMPORTS_END */

function pipe() {
    var fns = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        fns[_i] = arguments[_i];
    }
    return pipeFromArray(fns);
}
function pipeFromArray(fns) {
    if (fns.length === 0) {
        return __WEBPACK_IMPORTED_MODULE_0__identity__["a" /* identity */];
    }
    if (fns.length === 1) {
        return fns[0];
    }
    return function piped(input) {
        return fns.reduce(function (prev, fn) { return fn(prev); }, input);
    };
}
//# sourceMappingURL=pipe.js.map


/***/ }),
/* 107 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = refCount;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function refCount() {
    return function refCountOperatorFunction(source) {
        return source.lift(new RefCountOperator(source));
    };
}
var RefCountOperator = /*@__PURE__*/ (function () {
    function RefCountOperator(connectable) {
        this.connectable = connectable;
    }
    RefCountOperator.prototype.call = function (subscriber, source) {
        var connectable = this.connectable;
        connectable._refCount++;
        var refCounter = new RefCountSubscriber(subscriber, connectable);
        var subscription = source.subscribe(refCounter);
        if (!refCounter.closed) {
            refCounter.connection = connectable.connect();
        }
        return subscription;
    };
    return RefCountOperator;
}());
var RefCountSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](RefCountSubscriber, _super);
    function RefCountSubscriber(destination, connectable) {
        var _this = _super.call(this, destination) || this;
        _this.connectable = connectable;
        return _this;
    }
    RefCountSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (!connectable) {
            this.connection = null;
            return;
        }
        this.connectable = null;
        var refCount = connectable._refCount;
        if (refCount <= 0) {
            this.connection = null;
            return;
        }
        connectable._refCount = refCount - 1;
        if (refCount > 1) {
            this.connection = null;
            return;
        }
        var connection = this.connection;
        var sharedConnection = connectable._connection;
        this.connection = null;
        if (sharedConnection && (!connection || sharedConnection === connection)) {
            sharedConnection.unsubscribe();
        }
    };
    return RefCountSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=refCount.js.map


/***/ }),
/* 108 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ReplaySubject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subject__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scheduler_queue__ = __webpack_require__(251);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Subscription__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__operators_observeOn__ = __webpack_require__(253);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_ObjectUnsubscribedError__ = __webpack_require__(67);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__SubjectSubscription__ = __webpack_require__(248);
/** PURE_IMPORTS_START tslib,_Subject,_scheduler_queue,_Subscription,_operators_observeOn,_util_ObjectUnsubscribedError,_SubjectSubscription PURE_IMPORTS_END */







var ReplaySubject = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ReplaySubject, _super);
    function ReplaySubject(bufferSize, windowTime, scheduler) {
        if (bufferSize === void 0) {
            bufferSize = Number.POSITIVE_INFINITY;
        }
        if (windowTime === void 0) {
            windowTime = Number.POSITIVE_INFINITY;
        }
        var _this = _super.call(this) || this;
        _this.scheduler = scheduler;
        _this._events = [];
        _this._infiniteTimeWindow = false;
        _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;
        _this._windowTime = windowTime < 1 ? 1 : windowTime;
        if (windowTime === Number.POSITIVE_INFINITY) {
            _this._infiniteTimeWindow = true;
            _this.next = _this.nextInfiniteTimeWindow;
        }
        else {
            _this.next = _this.nextTimeWindow;
        }
        return _this;
    }
    ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {
        var _events = this._events;
        _events.push(value);
        if (_events.length > this._bufferSize) {
            _events.shift();
        }
        _super.prototype.next.call(this, value);
    };
    ReplaySubject.prototype.nextTimeWindow = function (value) {
        this._events.push(new ReplayEvent(this._getNow(), value));
        this._trimBufferThenGetEvents();
        _super.prototype.next.call(this, value);
    };
    ReplaySubject.prototype._subscribe = function (subscriber) {
        var _infiniteTimeWindow = this._infiniteTimeWindow;
        var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();
        var scheduler = this.scheduler;
        var len = _events.length;
        var subscription;
        if (this.closed) {
            throw new __WEBPACK_IMPORTED_MODULE_5__util_ObjectUnsubscribedError__["a" /* ObjectUnsubscribedError */]();
        }
        else if (this.isStopped || this.hasError) {
            subscription = __WEBPACK_IMPORTED_MODULE_3__Subscription__["a" /* Subscription */].EMPTY;
        }
        else {
            this.observers.push(subscriber);
            subscription = new __WEBPACK_IMPORTED_MODULE_6__SubjectSubscription__["a" /* SubjectSubscription */](this, subscriber);
        }
        if (scheduler) {
            subscriber.add(subscriber = new __WEBPACK_IMPORTED_MODULE_4__operators_observeOn__["a" /* ObserveOnSubscriber */](subscriber, scheduler));
        }
        if (_infiniteTimeWindow) {
            for (var i = 0; i < len && !subscriber.closed; i++) {
                subscriber.next(_events[i]);
            }
        }
        else {
            for (var i = 0; i < len && !subscriber.closed; i++) {
                subscriber.next(_events[i].value);
            }
        }
        if (this.hasError) {
            subscriber.error(this.thrownError);
        }
        else if (this.isStopped) {
            subscriber.complete();
        }
        return subscription;
    };
    ReplaySubject.prototype._getNow = function () {
        return (this.scheduler || __WEBPACK_IMPORTED_MODULE_2__scheduler_queue__["a" /* queue */]).now();
    };
    ReplaySubject.prototype._trimBufferThenGetEvents = function () {
        var now = this._getNow();
        var _bufferSize = this._bufferSize;
        var _windowTime = this._windowTime;
        var _events = this._events;
        var eventsCount = _events.length;
        var spliceCount = 0;
        while (spliceCount < eventsCount) {
            if ((now - _events[spliceCount].time) < _windowTime) {
                break;
            }
            spliceCount++;
        }
        if (eventsCount > _bufferSize) {
            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);
        }
        if (spliceCount > 0) {
            _events.splice(0, spliceCount);
        }
        return _events;
    };
    return ReplaySubject;
}(__WEBPACK_IMPORTED_MODULE_1__Subject__["a" /* Subject */]));

var ReplayEvent = /*@__PURE__*/ (function () {
    function ReplayEvent(time, value) {
        this.time = time;
        this.value = value;
    }
    return ReplayEvent;
}());
//# sourceMappingURL=ReplaySubject.js.map


/***/ }),
/* 109 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = scheduleArray;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscription__ = __webpack_require__(23);
/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */


function scheduleArray(input, scheduler) {
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var sub = new __WEBPACK_IMPORTED_MODULE_1__Subscription__["a" /* Subscription */]();
        var i = 0;
        sub.add(scheduler.schedule(function () {
            if (i === input.length) {
                subscriber.complete();
                return;
            }
            subscriber.next(input[i++]);
            if (!subscriber.closed) {
                sub.add(this.schedule());
            }
        }));
        return sub;
    });
}
//# sourceMappingURL=scheduleArray.js.map


/***/ }),
/* 110 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = throwError;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

function throwError(error, scheduler) {
    if (!scheduler) {
        return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) { return subscriber.error(error); });
    }
    else {
        return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });
    }
}
function dispatch(_a) {
    var error = _a.error, subscriber = _a.subscriber;
    subscriber.error(error);
}
//# sourceMappingURL=throwError.js.map


/***/ }),
/* 111 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = noop;
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function noop() { }
//# sourceMappingURL=noop.js.map


/***/ }),
/* 112 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["b"] = combineLatest;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CombineLatestOperator; });
/* unused harmony export CombineLatestSubscriber */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_isScheduler__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isArray__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__fromArray__ = __webpack_require__(56);
/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */






var NONE = {};
function combineLatest() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var resultSelector = null;
    var scheduler = null;
    if (Object(__WEBPACK_IMPORTED_MODULE_1__util_isScheduler__["a" /* isScheduler */])(observables[observables.length - 1])) {
        scheduler = observables.pop();
    }
    if (typeof observables[observables.length - 1] === 'function') {
        resultSelector = observables.pop();
    }
    if (observables.length === 1 && Object(__WEBPACK_IMPORTED_MODULE_2__util_isArray__["a" /* isArray */])(observables[0])) {
        observables = observables[0];
    }
    return Object(__WEBPACK_IMPORTED_MODULE_5__fromArray__["a" /* fromArray */])(observables, scheduler).lift(new CombineLatestOperator(resultSelector));
}
var CombineLatestOperator = /*@__PURE__*/ (function () {
    function CombineLatestOperator(resultSelector) {
        this.resultSelector = resultSelector;
    }
    CombineLatestOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));
    };
    return CombineLatestOperator;
}());

var CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](CombineLatestSubscriber, _super);
    function CombineLatestSubscriber(destination, resultSelector) {
        var _this = _super.call(this, destination) || this;
        _this.resultSelector = resultSelector;
        _this.active = 0;
        _this.values = [];
        _this.observables = [];
        return _this;
    }
    CombineLatestSubscriber.prototype._next = function (observable) {
        this.values.push(NONE);
        this.observables.push(observable);
    };
    CombineLatestSubscriber.prototype._complete = function () {
        var observables = this.observables;
        var len = observables.length;
        if (len === 0) {
            this.destination.complete();
        }
        else {
            this.active = len;
            this.toRespond = len;
            for (var i = 0; i < len; i++) {
                var observable = observables[i];
                this.add(Object(__WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__["a" /* subscribeToResult */])(this, observable, observable, i));
            }
        }
    };
    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {
        if ((this.active -= 1) === 0) {
            this.destination.complete();
        }
    };
    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var values = this.values;
        var oldVal = values[outerIndex];
        var toRespond = !this.toRespond
            ? 0
            : oldVal === NONE ? --this.toRespond : this.toRespond;
        values[outerIndex] = innerValue;
        if (toRespond === 0) {
            if (this.resultSelector) {
                this._tryResultSelector(values);
            }
            else {
                this.destination.next(values.slice());
            }
        }
    };
    CombineLatestSubscriber.prototype._tryResultSelector = function (values) {
        var result;
        try {
            result = this.resultSelector.apply(this, values);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return CombineLatestSubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__["a" /* OuterSubscriber */]));

//# sourceMappingURL=combineLatest.js.map


/***/ }),
/* 113 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return subscribeTo; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__subscribeToArray__ = __webpack_require__(254);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__subscribeToPromise__ = __webpack_require__(446);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__subscribeToIterable__ = __webpack_require__(447);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__subscribeToObservable__ = __webpack_require__(448);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__isArrayLike__ = __webpack_require__(257);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__isPromise__ = __webpack_require__(258);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__isObject__ = __webpack_require__(104);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__symbol_iterator__ = __webpack_require__(59);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__symbol_observable__ = __webpack_require__(47);
/** PURE_IMPORTS_START _subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */









var subscribeTo = function (result) {
    if (!!result && typeof result[__WEBPACK_IMPORTED_MODULE_8__symbol_observable__["a" /* observable */]] === 'function') {
        return Object(__WEBPACK_IMPORTED_MODULE_3__subscribeToObservable__["a" /* subscribeToObservable */])(result);
    }
    else if (Object(__WEBPACK_IMPORTED_MODULE_4__isArrayLike__["a" /* isArrayLike */])(result)) {
        return Object(__WEBPACK_IMPORTED_MODULE_0__subscribeToArray__["a" /* subscribeToArray */])(result);
    }
    else if (Object(__WEBPACK_IMPORTED_MODULE_5__isPromise__["a" /* isPromise */])(result)) {
        return Object(__WEBPACK_IMPORTED_MODULE_1__subscribeToPromise__["a" /* subscribeToPromise */])(result);
    }
    else if (!!result && typeof result[__WEBPACK_IMPORTED_MODULE_7__symbol_iterator__["a" /* iterator */]] === 'function') {
        return Object(__WEBPACK_IMPORTED_MODULE_2__subscribeToIterable__["a" /* subscribeToIterable */])(result);
    }
    else {
        var value = Object(__WEBPACK_IMPORTED_MODULE_6__isObject__["a" /* isObject */])(result) ? 'an invalid object' : "'" + result + "'";
        var msg = "You provided " + value + " where a stream was expected."
            + ' You can provide an Observable, Promise, Array, or Iterable.';
        throw new TypeError(msg);
    }
};
//# sourceMappingURL=subscribeTo.js.map


/***/ }),
/* 114 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = mergeAll;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mergeMap__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_identity__ = __webpack_require__(43);
/** PURE_IMPORTS_START _mergeMap,_util_identity PURE_IMPORTS_END */


function mergeAll(concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    return Object(__WEBPACK_IMPORTED_MODULE_0__mergeMap__["b" /* mergeMap */])(__WEBPACK_IMPORTED_MODULE_1__util_identity__["a" /* identity */], concurrent);
}
//# sourceMappingURL=mergeAll.js.map


/***/ }),
/* 115 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = defer;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__from__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__empty__ = __webpack_require__(37);
/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */



function defer(observableFactory) {
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var input;
        try {
            input = observableFactory();
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        var source = input ? Object(__WEBPACK_IMPORTED_MODULE_1__from__["a" /* from */])(input) : Object(__WEBPACK_IMPORTED_MODULE_2__empty__["b" /* empty */])();
        return source.subscribe(subscriber);
    });
}
//# sourceMappingURL=defer.js.map


/***/ }),
/* 116 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["b"] = zip;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ZipOperator; });
/* unused harmony export ZipSubscriber */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__fromArray__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isArray__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_subscribeToResult__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__internal_symbol_iterator__ = __webpack_require__(59);
/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_OuterSubscriber,_util_subscribeToResult,_.._internal_symbol_iterator PURE_IMPORTS_END */







function zip() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var resultSelector = observables[observables.length - 1];
    if (typeof resultSelector === 'function') {
        observables.pop();
    }
    return Object(__WEBPACK_IMPORTED_MODULE_1__fromArray__["a" /* fromArray */])(observables, undefined).lift(new ZipOperator(resultSelector));
}
var ZipOperator = /*@__PURE__*/ (function () {
    function ZipOperator(resultSelector) {
        this.resultSelector = resultSelector;
    }
    ZipOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));
    };
    return ZipOperator;
}());

var ZipSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ZipSubscriber, _super);
    function ZipSubscriber(destination, resultSelector, values) {
        if (values === void 0) {
            values = Object.create(null);
        }
        var _this = _super.call(this, destination) || this;
        _this.iterators = [];
        _this.active = 0;
        _this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;
        _this.values = values;
        return _this;
    }
    ZipSubscriber.prototype._next = function (value) {
        var iterators = this.iterators;
        if (Object(__WEBPACK_IMPORTED_MODULE_2__util_isArray__["a" /* isArray */])(value)) {
            iterators.push(new StaticArrayIterator(value));
        }
        else if (typeof value[__WEBPACK_IMPORTED_MODULE_6__internal_symbol_iterator__["a" /* iterator */]] === 'function') {
            iterators.push(new StaticIterator(value[__WEBPACK_IMPORTED_MODULE_6__internal_symbol_iterator__["a" /* iterator */]]()));
        }
        else {
            iterators.push(new ZipBufferIterator(this.destination, this, value));
        }
    };
    ZipSubscriber.prototype._complete = function () {
        var iterators = this.iterators;
        var len = iterators.length;
        this.unsubscribe();
        if (len === 0) {
            this.destination.complete();
            return;
        }
        this.active = len;
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            if (iterator.stillUnsubscribed) {
                var destination = this.destination;
                destination.add(iterator.subscribe(iterator, i));
            }
            else {
                this.active--;
            }
        }
    };
    ZipSubscriber.prototype.notifyInactive = function () {
        this.active--;
        if (this.active === 0) {
            this.destination.complete();
        }
    };
    ZipSubscriber.prototype.checkIterators = function () {
        var iterators = this.iterators;
        var len = iterators.length;
        var destination = this.destination;
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {
                return;
            }
        }
        var shouldComplete = false;
        var args = [];
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            var result = iterator.next();
            if (iterator.hasCompleted()) {
                shouldComplete = true;
            }
            if (result.done) {
                destination.complete();
                return;
            }
            args.push(result.value);
        }
        if (this.resultSelector) {
            this._tryresultSelector(args);
        }
        else {
            destination.next(args);
        }
        if (shouldComplete) {
            destination.complete();
        }
    };
    ZipSubscriber.prototype._tryresultSelector = function (args) {
        var result;
        try {
            result = this.resultSelector.apply(this, args);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return ZipSubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__Subscriber__["a" /* Subscriber */]));

var StaticIterator = /*@__PURE__*/ (function () {
    function StaticIterator(iterator) {
        this.iterator = iterator;
        this.nextResult = iterator.next();
    }
    StaticIterator.prototype.hasValue = function () {
        return true;
    };
    StaticIterator.prototype.next = function () {
        var result = this.nextResult;
        this.nextResult = this.iterator.next();
        return result;
    };
    StaticIterator.prototype.hasCompleted = function () {
        var nextResult = this.nextResult;
        return nextResult && nextResult.done;
    };
    return StaticIterator;
}());
var StaticArrayIterator = /*@__PURE__*/ (function () {
    function StaticArrayIterator(array) {
        this.array = array;
        this.index = 0;
        this.length = 0;
        this.length = array.length;
    }
    StaticArrayIterator.prototype[__WEBPACK_IMPORTED_MODULE_6__internal_symbol_iterator__["a" /* iterator */]] = function () {
        return this;
    };
    StaticArrayIterator.prototype.next = function (value) {
        var i = this.index++;
        var array = this.array;
        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };
    };
    StaticArrayIterator.prototype.hasValue = function () {
        return this.array.length > this.index;
    };
    StaticArrayIterator.prototype.hasCompleted = function () {
        return this.array.length === this.index;
    };
    return StaticArrayIterator;
}());
var ZipBufferIterator = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ZipBufferIterator, _super);
    function ZipBufferIterator(destination, parent, observable) {
        var _this = _super.call(this, destination) || this;
        _this.parent = parent;
        _this.observable = observable;
        _this.stillUnsubscribed = true;
        _this.buffer = [];
        _this.isComplete = false;
        return _this;
    }
    ZipBufferIterator.prototype[__WEBPACK_IMPORTED_MODULE_6__internal_symbol_iterator__["a" /* iterator */]] = function () {
        return this;
    };
    ZipBufferIterator.prototype.next = function () {
        var buffer = this.buffer;
        if (buffer.length === 0 && this.isComplete) {
            return { value: null, done: true };
        }
        else {
            return { value: buffer.shift(), done: false };
        }
    };
    ZipBufferIterator.prototype.hasValue = function () {
        return this.buffer.length > 0;
    };
    ZipBufferIterator.prototype.hasCompleted = function () {
        return this.buffer.length === 0 && this.isComplete;
    };
    ZipBufferIterator.prototype.notifyComplete = function () {
        if (this.buffer.length > 0) {
            this.isComplete = true;
            this.parent.notifyInactive();
        }
        else {
            this.destination.complete();
        }
    };
    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.buffer.push(innerValue);
        this.parent.checkIterators();
    };
    ZipBufferIterator.prototype.subscribe = function (value, index) {
        return Object(__WEBPACK_IMPORTED_MODULE_5__util_subscribeToResult__["a" /* subscribeToResult */])(this, this.observable, this, index);
    };
    return ZipBufferIterator;
}(__WEBPACK_IMPORTED_MODULE_4__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=zip.js.map


/***/ }),
/* 117 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__internal_operators_audit__ = __webpack_require__(266);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "audit", function() { return __WEBPACK_IMPORTED_MODULE_0__internal_operators_audit__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__internal_operators_auditTime__ = __webpack_require__(465);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "auditTime", function() { return __WEBPACK_IMPORTED_MODULE_1__internal_operators_auditTime__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__internal_operators_buffer__ = __webpack_require__(466);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "buffer", function() { return __WEBPACK_IMPORTED_MODULE_2__internal_operators_buffer__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__internal_operators_bufferCount__ = __webpack_require__(467);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "bufferCount", function() { return __WEBPACK_IMPORTED_MODULE_3__internal_operators_bufferCount__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__internal_operators_bufferTime__ = __webpack_require__(468);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "bufferTime", function() { return __WEBPACK_IMPORTED_MODULE_4__internal_operators_bufferTime__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__internal_operators_bufferToggle__ = __webpack_require__(469);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "bufferToggle", function() { return __WEBPACK_IMPORTED_MODULE_5__internal_operators_bufferToggle__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__internal_operators_bufferWhen__ = __webpack_require__(470);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "bufferWhen", function() { return __WEBPACK_IMPORTED_MODULE_6__internal_operators_bufferWhen__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__internal_operators_catchError__ = __webpack_require__(471);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "catchError", function() { return __WEBPACK_IMPORTED_MODULE_7__internal_operators_catchError__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__internal_operators_combineAll__ = __webpack_require__(472);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "combineAll", function() { return __WEBPACK_IMPORTED_MODULE_8__internal_operators_combineAll__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__internal_operators_combineLatest__ = __webpack_require__(473);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "combineLatest", function() { return __WEBPACK_IMPORTED_MODULE_9__internal_operators_combineLatest__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__internal_operators_concat__ = __webpack_require__(474);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return __WEBPACK_IMPORTED_MODULE_10__internal_operators_concat__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__internal_operators_concatAll__ = __webpack_require__(259);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "concatAll", function() { return __WEBPACK_IMPORTED_MODULE_11__internal_operators_concatAll__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__internal_operators_concatMap__ = __webpack_require__(267);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "concatMap", function() { return __WEBPACK_IMPORTED_MODULE_12__internal_operators_concatMap__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__internal_operators_concatMapTo__ = __webpack_require__(475);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "concatMapTo", function() { return __WEBPACK_IMPORTED_MODULE_13__internal_operators_concatMapTo__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__internal_operators_count__ = __webpack_require__(476);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "count", function() { return __WEBPACK_IMPORTED_MODULE_14__internal_operators_count__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__internal_operators_debounce__ = __webpack_require__(477);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return __WEBPACK_IMPORTED_MODULE_15__internal_operators_debounce__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__internal_operators_debounceTime__ = __webpack_require__(478);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "debounceTime", function() { return __WEBPACK_IMPORTED_MODULE_16__internal_operators_debounceTime__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__internal_operators_defaultIfEmpty__ = __webpack_require__(60);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "defaultIfEmpty", function() { return __WEBPACK_IMPORTED_MODULE_17__internal_operators_defaultIfEmpty__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__internal_operators_delay__ = __webpack_require__(479);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "delay", function() { return __WEBPACK_IMPORTED_MODULE_18__internal_operators_delay__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__internal_operators_delayWhen__ = __webpack_require__(480);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "delayWhen", function() { return __WEBPACK_IMPORTED_MODULE_19__internal_operators_delayWhen__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__internal_operators_dematerialize__ = __webpack_require__(481);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "dematerialize", function() { return __WEBPACK_IMPORTED_MODULE_20__internal_operators_dematerialize__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__internal_operators_distinct__ = __webpack_require__(482);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "distinct", function() { return __WEBPACK_IMPORTED_MODULE_21__internal_operators_distinct__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__internal_operators_distinctUntilChanged__ = __webpack_require__(269);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "distinctUntilChanged", function() { return __WEBPACK_IMPORTED_MODULE_22__internal_operators_distinctUntilChanged__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__internal_operators_distinctUntilKeyChanged__ = __webpack_require__(483);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "distinctUntilKeyChanged", function() { return __WEBPACK_IMPORTED_MODULE_23__internal_operators_distinctUntilKeyChanged__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__internal_operators_elementAt__ = __webpack_require__(484);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "elementAt", function() { return __WEBPACK_IMPORTED_MODULE_24__internal_operators_elementAt__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__internal_operators_endWith__ = __webpack_require__(485);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "endWith", function() { return __WEBPACK_IMPORTED_MODULE_25__internal_operators_endWith__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__internal_operators_every__ = __webpack_require__(486);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "every", function() { return __WEBPACK_IMPORTED_MODULE_26__internal_operators_every__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__internal_operators_exhaust__ = __webpack_require__(487);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "exhaust", function() { return __WEBPACK_IMPORTED_MODULE_27__internal_operators_exhaust__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__internal_operators_exhaustMap__ = __webpack_require__(488);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "exhaustMap", function() { return __WEBPACK_IMPORTED_MODULE_28__internal_operators_exhaustMap__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__internal_operators_expand__ = __webpack_require__(489);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "expand", function() { return __WEBPACK_IMPORTED_MODULE_29__internal_operators_expand__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__internal_operators_filter__ = __webpack_require__(48);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return __WEBPACK_IMPORTED_MODULE_30__internal_operators_filter__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__internal_operators_finalize__ = __webpack_require__(490);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "finalize", function() { return __WEBPACK_IMPORTED_MODULE_31__internal_operators_finalize__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__internal_operators_find__ = __webpack_require__(270);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "find", function() { return __WEBPACK_IMPORTED_MODULE_32__internal_operators_find__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__internal_operators_findIndex__ = __webpack_require__(491);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "findIndex", function() { return __WEBPACK_IMPORTED_MODULE_33__internal_operators_findIndex__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__internal_operators_first__ = __webpack_require__(492);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "first", function() { return __WEBPACK_IMPORTED_MODULE_34__internal_operators_first__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__internal_operators_groupBy__ = __webpack_require__(249);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "groupBy", function() { return __WEBPACK_IMPORTED_MODULE_35__internal_operators_groupBy__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__internal_operators_ignoreElements__ = __webpack_require__(493);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "ignoreElements", function() { return __WEBPACK_IMPORTED_MODULE_36__internal_operators_ignoreElements__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__internal_operators_isEmpty__ = __webpack_require__(494);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "isEmpty", function() { return __WEBPACK_IMPORTED_MODULE_37__internal_operators_isEmpty__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__internal_operators_last__ = __webpack_require__(495);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "last", function() { return __WEBPACK_IMPORTED_MODULE_38__internal_operators_last__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__internal_operators_map__ = __webpack_require__(33);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return __WEBPACK_IMPORTED_MODULE_39__internal_operators_map__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__internal_operators_mapTo__ = __webpack_require__(496);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "mapTo", function() { return __WEBPACK_IMPORTED_MODULE_40__internal_operators_mapTo__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__internal_operators_materialize__ = __webpack_require__(497);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "materialize", function() { return __WEBPACK_IMPORTED_MODULE_41__internal_operators_materialize__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__internal_operators_max__ = __webpack_require__(498);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return __WEBPACK_IMPORTED_MODULE_42__internal_operators_max__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__internal_operators_merge__ = __webpack_require__(499);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return __WEBPACK_IMPORTED_MODULE_43__internal_operators_merge__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__internal_operators_mergeAll__ = __webpack_require__(114);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "mergeAll", function() { return __WEBPACK_IMPORTED_MODULE_44__internal_operators_mergeAll__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__internal_operators_mergeMap__ = __webpack_require__(72);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "mergeMap", function() { return __WEBPACK_IMPORTED_MODULE_45__internal_operators_mergeMap__["b"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "flatMap", function() { return __WEBPACK_IMPORTED_MODULE_45__internal_operators_mergeMap__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__internal_operators_mergeMapTo__ = __webpack_require__(500);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "mergeMapTo", function() { return __WEBPACK_IMPORTED_MODULE_46__internal_operators_mergeMapTo__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__internal_operators_mergeScan__ = __webpack_require__(501);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "mergeScan", function() { return __WEBPACK_IMPORTED_MODULE_47__internal_operators_mergeScan__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__internal_operators_min__ = __webpack_require__(502);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return __WEBPACK_IMPORTED_MODULE_48__internal_operators_min__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__internal_operators_multicast__ = __webpack_require__(49);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "multicast", function() { return __WEBPACK_IMPORTED_MODULE_49__internal_operators_multicast__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__internal_operators_observeOn__ = __webpack_require__(253);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "observeOn", function() { return __WEBPACK_IMPORTED_MODULE_50__internal_operators_observeOn__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__internal_operators_onErrorResumeNext__ = __webpack_require__(503);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNext", function() { return __WEBPACK_IMPORTED_MODULE_51__internal_operators_onErrorResumeNext__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__internal_operators_pairwise__ = __webpack_require__(504);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "pairwise", function() { return __WEBPACK_IMPORTED_MODULE_52__internal_operators_pairwise__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_53__internal_operators_partition__ = __webpack_require__(505);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return __WEBPACK_IMPORTED_MODULE_53__internal_operators_partition__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_54__internal_operators_pluck__ = __webpack_require__(506);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "pluck", function() { return __WEBPACK_IMPORTED_MODULE_54__internal_operators_pluck__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_55__internal_operators_publish__ = __webpack_require__(507);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "publish", function() { return __WEBPACK_IMPORTED_MODULE_55__internal_operators_publish__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_56__internal_operators_publishBehavior__ = __webpack_require__(508);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "publishBehavior", function() { return __WEBPACK_IMPORTED_MODULE_56__internal_operators_publishBehavior__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_57__internal_operators_publishLast__ = __webpack_require__(509);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "publishLast", function() { return __WEBPACK_IMPORTED_MODULE_57__internal_operators_publishLast__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_58__internal_operators_publishReplay__ = __webpack_require__(510);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "publishReplay", function() { return __WEBPACK_IMPORTED_MODULE_58__internal_operators_publishReplay__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_59__internal_operators_race__ = __webpack_require__(511);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "race", function() { return __WEBPACK_IMPORTED_MODULE_59__internal_operators_race__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_60__internal_operators_reduce__ = __webpack_require__(75);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "reduce", function() { return __WEBPACK_IMPORTED_MODULE_60__internal_operators_reduce__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_61__internal_operators_repeat__ = __webpack_require__(512);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "repeat", function() { return __WEBPACK_IMPORTED_MODULE_61__internal_operators_repeat__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_62__internal_operators_repeatWhen__ = __webpack_require__(513);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "repeatWhen", function() { return __WEBPACK_IMPORTED_MODULE_62__internal_operators_repeatWhen__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_63__internal_operators_retry__ = __webpack_require__(514);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "retry", function() { return __WEBPACK_IMPORTED_MODULE_63__internal_operators_retry__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_64__internal_operators_retryWhen__ = __webpack_require__(515);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "retryWhen", function() { return __WEBPACK_IMPORTED_MODULE_64__internal_operators_retryWhen__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_65__internal_operators_refCount__ = __webpack_require__(107);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "refCount", function() { return __WEBPACK_IMPORTED_MODULE_65__internal_operators_refCount__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_66__internal_operators_sample__ = __webpack_require__(516);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "sample", function() { return __WEBPACK_IMPORTED_MODULE_66__internal_operators_sample__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_67__internal_operators_sampleTime__ = __webpack_require__(517);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "sampleTime", function() { return __WEBPACK_IMPORTED_MODULE_67__internal_operators_sampleTime__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_68__internal_operators_scan__ = __webpack_require__(120);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "scan", function() { return __WEBPACK_IMPORTED_MODULE_68__internal_operators_scan__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_69__internal_operators_sequenceEqual__ = __webpack_require__(518);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "sequenceEqual", function() { return __WEBPACK_IMPORTED_MODULE_69__internal_operators_sequenceEqual__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_70__internal_operators_share__ = __webpack_require__(519);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "share", function() { return __WEBPACK_IMPORTED_MODULE_70__internal_operators_share__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_71__internal_operators_shareReplay__ = __webpack_require__(520);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "shareReplay", function() { return __WEBPACK_IMPORTED_MODULE_71__internal_operators_shareReplay__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_72__internal_operators_single__ = __webpack_require__(521);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "single", function() { return __WEBPACK_IMPORTED_MODULE_72__internal_operators_single__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_73__internal_operators_skip__ = __webpack_require__(522);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "skip", function() { return __WEBPACK_IMPORTED_MODULE_73__internal_operators_skip__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_74__internal_operators_skipLast__ = __webpack_require__(523);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "skipLast", function() { return __WEBPACK_IMPORTED_MODULE_74__internal_operators_skipLast__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_75__internal_operators_skipUntil__ = __webpack_require__(524);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "skipUntil", function() { return __WEBPACK_IMPORTED_MODULE_75__internal_operators_skipUntil__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_76__internal_operators_skipWhile__ = __webpack_require__(525);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "skipWhile", function() { return __WEBPACK_IMPORTED_MODULE_76__internal_operators_skipWhile__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_77__internal_operators_startWith__ = __webpack_require__(526);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "startWith", function() { return __WEBPACK_IMPORTED_MODULE_77__internal_operators_startWith__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_78__internal_operators_subscribeOn__ = __webpack_require__(527);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeOn", function() { return __WEBPACK_IMPORTED_MODULE_78__internal_operators_subscribeOn__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_79__internal_operators_switchAll__ = __webpack_require__(529);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "switchAll", function() { return __WEBPACK_IMPORTED_MODULE_79__internal_operators_switchAll__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_80__internal_operators_switchMap__ = __webpack_require__(121);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "switchMap", function() { return __WEBPACK_IMPORTED_MODULE_80__internal_operators_switchMap__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_81__internal_operators_switchMapTo__ = __webpack_require__(530);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "switchMapTo", function() { return __WEBPACK_IMPORTED_MODULE_81__internal_operators_switchMapTo__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_82__internal_operators_take__ = __webpack_require__(118);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "take", function() { return __WEBPACK_IMPORTED_MODULE_82__internal_operators_take__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_83__internal_operators_takeLast__ = __webpack_require__(119);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "takeLast", function() { return __WEBPACK_IMPORTED_MODULE_83__internal_operators_takeLast__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_84__internal_operators_takeUntil__ = __webpack_require__(531);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "takeUntil", function() { return __WEBPACK_IMPORTED_MODULE_84__internal_operators_takeUntil__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_85__internal_operators_takeWhile__ = __webpack_require__(532);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "takeWhile", function() { return __WEBPACK_IMPORTED_MODULE_85__internal_operators_takeWhile__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_86__internal_operators_tap__ = __webpack_require__(533);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "tap", function() { return __WEBPACK_IMPORTED_MODULE_86__internal_operators_tap__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_87__internal_operators_throttle__ = __webpack_require__(271);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "throttle", function() { return __WEBPACK_IMPORTED_MODULE_87__internal_operators_throttle__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_88__internal_operators_throttleTime__ = __webpack_require__(534);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "throttleTime", function() { return __WEBPACK_IMPORTED_MODULE_88__internal_operators_throttleTime__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_89__internal_operators_throwIfEmpty__ = __webpack_require__(74);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "throwIfEmpty", function() { return __WEBPACK_IMPORTED_MODULE_89__internal_operators_throwIfEmpty__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_90__internal_operators_timeInterval__ = __webpack_require__(535);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return __WEBPACK_IMPORTED_MODULE_90__internal_operators_timeInterval__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_91__internal_operators_timeout__ = __webpack_require__(536);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "timeout", function() { return __WEBPACK_IMPORTED_MODULE_91__internal_operators_timeout__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_92__internal_operators_timeoutWith__ = __webpack_require__(272);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "timeoutWith", function() { return __WEBPACK_IMPORTED_MODULE_92__internal_operators_timeoutWith__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_93__internal_operators_timestamp__ = __webpack_require__(537);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "timestamp", function() { return __WEBPACK_IMPORTED_MODULE_93__internal_operators_timestamp__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_94__internal_operators_toArray__ = __webpack_require__(538);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "toArray", function() { return __WEBPACK_IMPORTED_MODULE_94__internal_operators_toArray__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_95__internal_operators_window__ = __webpack_require__(539);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "window", function() { return __WEBPACK_IMPORTED_MODULE_95__internal_operators_window__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_96__internal_operators_windowCount__ = __webpack_require__(540);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "windowCount", function() { return __WEBPACK_IMPORTED_MODULE_96__internal_operators_windowCount__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_97__internal_operators_windowTime__ = __webpack_require__(541);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "windowTime", function() { return __WEBPACK_IMPORTED_MODULE_97__internal_operators_windowTime__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_98__internal_operators_windowToggle__ = __webpack_require__(542);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "windowToggle", function() { return __WEBPACK_IMPORTED_MODULE_98__internal_operators_windowToggle__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_99__internal_operators_windowWhen__ = __webpack_require__(543);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "windowWhen", function() { return __WEBPACK_IMPORTED_MODULE_99__internal_operators_windowWhen__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_100__internal_operators_withLatestFrom__ = __webpack_require__(544);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "withLatestFrom", function() { return __WEBPACK_IMPORTED_MODULE_100__internal_operators_withLatestFrom__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_101__internal_operators_zip__ = __webpack_require__(545);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return __WEBPACK_IMPORTED_MODULE_101__internal_operators_zip__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_102__internal_operators_zipAll__ = __webpack_require__(546);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "zipAll", function() { return __WEBPACK_IMPORTED_MODULE_102__internal_operators_zipAll__["a"]; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */







































































































//# sourceMappingURL=index.js.map


/***/ }),
/* 118 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = take;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_ArgumentOutOfRangeError__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__observable_empty__ = __webpack_require__(37);
/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */




function take(count) {
    return function (source) {
        if (count === 0) {
            return Object(__WEBPACK_IMPORTED_MODULE_3__observable_empty__["b" /* empty */])();
        }
        else {
            return source.lift(new TakeOperator(count));
        }
    };
}
var TakeOperator = /*@__PURE__*/ (function () {
    function TakeOperator(total) {
        this.total = total;
        if (this.total < 0) {
            throw new __WEBPACK_IMPORTED_MODULE_2__util_ArgumentOutOfRangeError__["a" /* ArgumentOutOfRangeError */];
        }
    }
    TakeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeSubscriber(subscriber, this.total));
    };
    return TakeOperator;
}());
var TakeSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](TakeSubscriber, _super);
    function TakeSubscriber(destination, total) {
        var _this = _super.call(this, destination) || this;
        _this.total = total;
        _this.count = 0;
        return _this;
    }
    TakeSubscriber.prototype._next = function (value) {
        var total = this.total;
        var count = ++this.count;
        if (count <= total) {
            this.destination.next(value);
            if (count === total) {
                this.destination.complete();
                this.unsubscribe();
            }
        }
    };
    return TakeSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=take.js.map


/***/ }),
/* 119 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = takeLast;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_ArgumentOutOfRangeError__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__observable_empty__ = __webpack_require__(37);
/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */




function takeLast(count) {
    return function takeLastOperatorFunction(source) {
        if (count === 0) {
            return Object(__WEBPACK_IMPORTED_MODULE_3__observable_empty__["b" /* empty */])();
        }
        else {
            return source.lift(new TakeLastOperator(count));
        }
    };
}
var TakeLastOperator = /*@__PURE__*/ (function () {
    function TakeLastOperator(total) {
        this.total = total;
        if (this.total < 0) {
            throw new __WEBPACK_IMPORTED_MODULE_2__util_ArgumentOutOfRangeError__["a" /* ArgumentOutOfRangeError */];
        }
    }
    TakeLastOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));
    };
    return TakeLastOperator;
}());
var TakeLastSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](TakeLastSubscriber, _super);
    function TakeLastSubscriber(destination, total) {
        var _this = _super.call(this, destination) || this;
        _this.total = total;
        _this.ring = new Array();
        _this.count = 0;
        return _this;
    }
    TakeLastSubscriber.prototype._next = function (value) {
        var ring = this.ring;
        var total = this.total;
        var count = this.count++;
        if (ring.length < total) {
            ring.push(value);
        }
        else {
            var index = count % total;
            ring[index] = value;
        }
    };
    TakeLastSubscriber.prototype._complete = function () {
        var destination = this.destination;
        var count = this.count;
        if (count > 0) {
            var total = this.count >= this.total ? this.total : this.count;
            var ring = this.ring;
            for (var i = 0; i < total; i++) {
                var idx = (count++) % total;
                destination.next(ring[idx]);
            }
        }
        destination.complete();
    };
    return TakeLastSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=takeLast.js.map


/***/ }),
/* 120 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = scan;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function scan(accumulator, seed) {
    var hasSeed = false;
    if (arguments.length >= 2) {
        hasSeed = true;
    }
    return function scanOperatorFunction(source) {
        return source.lift(new ScanOperator(accumulator, seed, hasSeed));
    };
}
var ScanOperator = /*@__PURE__*/ (function () {
    function ScanOperator(accumulator, seed, hasSeed) {
        if (hasSeed === void 0) {
            hasSeed = false;
        }
        this.accumulator = accumulator;
        this.seed = seed;
        this.hasSeed = hasSeed;
    }
    ScanOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));
    };
    return ScanOperator;
}());
var ScanSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ScanSubscriber, _super);
    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {
        var _this = _super.call(this, destination) || this;
        _this.accumulator = accumulator;
        _this._seed = _seed;
        _this.hasSeed = hasSeed;
        _this.index = 0;
        return _this;
    }
    Object.defineProperty(ScanSubscriber.prototype, "seed", {
        get: function () {
            return this._seed;
        },
        set: function (value) {
            this.hasSeed = true;
            this._seed = value;
        },
        enumerable: true,
        configurable: true
    });
    ScanSubscriber.prototype._next = function (value) {
        if (!this.hasSeed) {
            this.seed = value;
            this.destination.next(value);
        }
        else {
            return this._tryNext(value);
        }
    };
    ScanSubscriber.prototype._tryNext = function (value) {
        var index = this.index++;
        var result;
        try {
            result = this.accumulator(this.seed, value, index);
        }
        catch (err) {
            this.destination.error(err);
        }
        this.seed = result;
        this.destination.next(result);
    };
    return ScanSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=scan.js.map


/***/ }),
/* 121 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = switchMap;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__InnerSubscriber__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__map__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__observable_from__ = __webpack_require__(39);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */






function switchMap(project, resultSelector) {
    if (typeof resultSelector === 'function') {
        return function (source) { return source.pipe(switchMap(function (a, i) { return Object(__WEBPACK_IMPORTED_MODULE_5__observable_from__["a" /* from */])(project(a, i)).pipe(Object(__WEBPACK_IMPORTED_MODULE_4__map__["a" /* map */])(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };
    }
    return function (source) { return source.lift(new SwitchMapOperator(project)); };
}
var SwitchMapOperator = /*@__PURE__*/ (function () {
    function SwitchMapOperator(project) {
        this.project = project;
    }
    SwitchMapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));
    };
    return SwitchMapOperator;
}());
var SwitchMapSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SwitchMapSubscriber, _super);
    function SwitchMapSubscriber(destination, project) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.index = 0;
        return _this;
    }
    SwitchMapSubscriber.prototype._next = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (error) {
            this.destination.error(error);
            return;
        }
        this._innerSub(result, value, index);
    };
    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {
        var innerSubscription = this.innerSubscription;
        if (innerSubscription) {
            innerSubscription.unsubscribe();
        }
        var innerSubscriber = new __WEBPACK_IMPORTED_MODULE_2__InnerSubscriber__["a" /* InnerSubscriber */](this, value, index);
        var destination = this.destination;
        destination.add(innerSubscriber);
        this.innerSubscription = Object(__WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__["a" /* subscribeToResult */])(this, result, undefined, undefined, innerSubscriber);
        if (this.innerSubscription !== innerSubscriber) {
            destination.add(this.innerSubscription);
        }
    };
    SwitchMapSubscriber.prototype._complete = function () {
        var innerSubscription = this.innerSubscription;
        if (!innerSubscription || innerSubscription.closed) {
            _super.prototype._complete.call(this);
        }
        this.unsubscribe();
    };
    SwitchMapSubscriber.prototype._unsubscribe = function () {
        this.innerSubscription = null;
    };
    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {
        var destination = this.destination;
        destination.remove(innerSub);
        this.innerSubscription = null;
        if (this.isStopped) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    return SwitchMapSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=switchMap.js.map


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-column.js
 * Created by daewon.park on 2017-03-29.
 */
function BColumnCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
}

BColumnCharts.prototype = Object.create(_bchartBase2.default.prototype);
BColumnCharts.prototype.constructor = BColumnCharts;

BColumnCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BColumnCharts.Attr.Key, this.$parent, this.options);
};

//todo: 2017 pvr zoom 라이브러리 버그(filter mode)로 인한 줌기능 제거
BColumnCharts.Attr = {
    Key: 'column',
    Label: 'Column',
    Order: 10,
    ColumnConf: {
        xAxis: {
            label: 'X-axis',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            mandatory: true
        },
        yAxis: {
            label: 'Y-axis',
            aggregationEnabled: true,
            aggregationMap: {
                number: _const2.default.extendAggregation(['SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
            },
            columnType: ['string', 'number'],
            mandatory: true
        },
        colorBy: {
            label: 'Color By',
            aggregationEnabled: false,
            multiple: true,
            columnType: ['string', 'number']
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        toolbar: {
            show: true,
            menu: {
                brush: {},
                zoom: { zoomAxis: 'xAxis' // zoomAxis : all || xAxis || yAxis
                } }
        },
        plotOptions: {
            column: {
                stripLine: _defaultOptions2.default.StripLine,
                trendLine: _defaultOptions2.default.TrendLine,
                tooltip: { trigger: 'item' },
                axisSort: { sort: true, rule: 'asc', type: 'axis' },
                marker: $.extend(true, {}, _defaultOptions2.default.Marker, {
                    leng: [{
                        selected: "0"
                    }],
                    numberFormat: { use: '' },
                    label: {
                        normal: {
                            show: false,
                            position: 'top',
                            formatter: function formatter(params) {
                                return params.value;
                            }
                        }

                    }
                }),
                emphasis: {
                    max: { use: false, controlLimit: { use: false, value: null }, color: '#313695' },
                    min: { use: false, controlLimit: { use: false, value: null }, color: '#313695' }
                }
            }
        }
    })
};

exports.default = BColumnCharts;

/***/ }),
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartRegister = __webpack_require__(40);

var ChartRegistry = _interopRequireWildcard(_bchartRegister);

var _chartUtils = __webpack_require__(24);

var _chartUtils2 = _interopRequireDefault(_chartUtils);

var _widget = __webpack_require__(31);

var _widget2 = _interopRequireDefault(_widget);

__webpack_require__(579);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

/**
 * Source: bcharts.js
 * Created by daewon.park on 2017-03-22.
 */

function BCharts(parentId, options) {
    //if chart type is not registered in Brightics.Chart.Registry, set 'table' chart.
    options.chart.type = ChartRegistry.getChartAttr(options.chart.type) ? options.chart.type : 'table';

    var optionsClone = $.extend(true, {}, options);

    optionsClone = _chartUtils2.default.extendChartOptionsWithDefaultOptions(optionsClone, ChartRegistry.getChartAttr(options.chart.type).DefaultOptions);

    _widget2.default.call(this, parentId, optionsClone);

    this._registerAPI();
    this._createBrushSelectedHandler();
    this._createParentBrushSelectedHandler();
}

BCharts.prototype = Object.create(_widget2.default.prototype);
BCharts.prototype.constructor = BCharts;

BCharts.prototype.destroy = function () {
    this.disconnect();

    if (this.chart) {
        this.chart.destroy();
    }
};

BCharts.prototype._createContents = function ($parent) {
    var _this = this;
    this.$mainControl = $('<div class="bcharts-container"></div>');
    $parent.append(this.$mainControl);

    _this._bcharts_instance = 'bc_' + Date.now();
    this.$mainControl.attr('_bcharts_instance_', _this._bcharts_instance);

    this._applyChartStyle();

    this.$mainControl.bind('brushSelected', function (eventType, eventData) {
        if (_this.group) {
            eventData._bcharts_instance = _this._bcharts_instance;
            $('body').trigger('bcharts-group:brushSelected[group=' + _this.group + ']', eventData);
        }
    });

    this.chart = new ChartRegistry.createChart(this.options.chart.type, this.$mainControl, this.options);
};

BCharts.prototype._applyChartStyle = function () {
    var styles = ['background', 'border', 'padding', 'width', 'height', 'borderRadius'];
    for (var i in styles) {
        if (typeof this.options.chart[styles[i]] !== 'undefined') this.$mainControl.css(styles[i], this.options.chart[styles[i]]);
    }
};

BCharts.prototype.getOptions = function () {
    return this.options;
};

BCharts.prototype.setOptions = function (options) {
    if (options.chart && options.chart.type && options.chart.type !== this.options.chart.type) {
        var filter = this.chart.getFilter();
        this.chart.destroy();
        this.$mainControl.empty();
        $.extend(true, this.options, options);
        this.options = _chartUtils2.default.extendChartOptionsWithDefaultOptions(this.options, ChartRegistry.getChartAttr(options.chart.type).DefaultOptions);
        this.chart = new ChartRegistry.createChart(this.options.chart.type, this.$mainControl, this.options);
        this.chart.setFilter(filter);
    } else {
        var optionsClone = $.extend(true, {}, options);
        optionsClone = _chartUtils2.default.deleteNullOrUndefinedOptions(optionsClone, ChartRegistry.getChartAttr(this.options.chart.type).DefaultOptions);
        this.chart.setOptions(optionsClone);
    }
    this._applyChartStyle();
};

BCharts.prototype.reloadColumnConf = function (options) {
    this.chart._reloadColumnConf();
};

BCharts.prototype.render = function (reload) {
    if (this.chart) {
        this.chart.render(reload);
    }
};

BCharts.prototype.getDataURL = function (options) {
    if (this.chart && typeof this.chart.getDataURL === 'function') {
        return this.chart.getDataURL(options);
    }
};

BCharts.prototype.setFinished = function (callback) {
    if (this.chart && typeof this.chart.setFinished === 'function') {
        this.chart.setFinished(callback);
    }
};

BCharts.prototype.getGroup = function () {
    return this.group;
};

BCharts.prototype.setGroup = function (group) {
    this.group = group;
};

BCharts.prototype.connect = function (group) {
    this.disconnect();
    this.group = group;

    $('body').bind('bcharts-group:brushSelected[group=' + this.group + ']', this._brushSelectedHandler);

    var idx = this.group.lastIndexOf('/');
    if (idx > -1) {
        var parentGroup = this.group.substring(0, idx);
        $('body').bind('bcharts-group:brushSelected[group=' + parentGroup + ']', this._parentBrushSelectedHandler);
        this.chart.initFilter([]);
    }
};

BCharts.prototype.getSelectedRange = function () {
    if (this.chart) {
        return this.chart.getSelectedRange() || [];
    }
};

BCharts.prototype._createBrushSelectedHandler = function () {
    this._brushSelectedHandler = function (eventType, eventData) {
        if (eventData._bcharts_instance !== this._bcharts_instance) {
            if (this.chart) {
                this.chart.selectRange(eventData);
            }
        }
    }.bind(this);
};
BCharts.prototype._createParentBrushSelectedHandler = function () {
    this._parentBrushSelectedHandler = function (eventType, eventData) {
        if (eventData._bcharts_instance !== this._bcharts_instance) {
            if (this.chart) {
                var selected = eventData.selected || [];
                this.chart.setFilter(selected);
            }
        }
    }.bind(this);
};

BCharts.prototype.disconnect = function () {
    if (this.group) {
        $('body').unbind('bcharts-group:brushSelected[group=' + this.group + ']', this._brushSelectedHandler);

        var idx = this.group.lastIndexOf('/');
        if (idx > -1) {
            var parentGroup = this.group.substring(0, idx);
            $('body').unbind('bcharts-group:brushSelected[group=' + parentGroup + ']', this._parentBrushSelectedHandler);
        }

        this.group = null;
    }
};

BCharts.prototype.getFilter = function () {
    if (this.chart) {
        return this.chart.getFilter();
    }
};

BCharts.prototype.setFilter = function (filter) {
    if (this.chart) {
        this.chart.setFilter(filter);
    }
};

BCharts.prototype.setSelectedRangeWithArea = function (areas) {
    if (this.chart) {
        var action = {
            type: 'brush',
            areas: areas
        };
        this.dispatchAction(action);
    }
};

BCharts.prototype._registerAPI = function () {
    if (this.chart) {
        this.setBrushType = this.chart.setBrushType;
        this.zoom = this.chart.zoom;
        this.resetZoom = this.chart.resetZoom;
        this.dispatchAction = this.chart.dispatchAction;
        this.setBrushStyle = this.chart.setBrushStyle;
        this.onBrush = this.chart.onBrush;
        this.offBrush = this.chart.offBrush;
        this.onBrushSelected = this.chart.onBrushSelected;
        this.offBrushSelected = this.chart.offBrushSelected;
        this.onCellPointClick = this.chart.onCellPointClick;
        this.offCellPointClick = this.chart.offCellPointClick;
        this.setFinished = this.chart.setFinished;
        this.setSelectedRangeGetter = this.chart.setSelectedRangeGetter;
        this.clearBrushSelected = this.chart.clearBrushSelected;
    }
};

exports.default = BCharts;

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-area.js
 * Created by daewon.park on 2017-03-28.
 */

function BAreaCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
}

BAreaCharts.prototype = Object.create(_bchartBase2.default.prototype);
BAreaCharts.prototype.constructor = BAreaCharts;

BAreaCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BAreaCharts.Attr.Key, this.$parent, this.options);
};

BAreaCharts.Attr = {
    Key: 'area',
    Label: 'Area',
    Order: 30,
    ColumnConf: {
        xAxis: {
            label: 'X-axis',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            mandatory: true
        },
        yAxis: {
            label: 'Y-axis',
            aggregationEnabled: true,
            aggregationMap: {
                number: _const2.default.extendAggregation(['SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
            },
            columnType: ['string', 'number'],
            mandatory: true
        },
        colorBy: {
            label: 'Color By',
            aggregationEnabled: false,
            multiple: true,
            columnType: ['string', 'number']
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        // toolbar 추가함
        toolbar: {
            show: true,
            menu: {
                // brush: {},
                zoom: { zoomAxis: 'xAxis' // zoomAxis : all || xAxis || yAxis
                } }
        },
        plotOptions: {
            area: {
                smooth: true,
                marker: $.extend(true, {}, _defaultOptions2.default.Marker, {
                    leng: [{
                        selected: "0"
                    }],
                    numberFormat: { use: '' },
                    label: {
                        normal: {
                            show: false,
                            position: 'top',
                            formatter: function formatter(params) {
                                return params.value;
                            }
                        }

                    }
                }),
                stripLine: _defaultOptions2.default.StripLine,
                trendLine: _defaultOptions2.default.TrendLine,
                tooltip: { trigger: 'axis' },
                showSymbol: { all: 'auto' }
            }
        }
    })
};

exports.default = BAreaCharts;

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/**
 * Created by sds on 2018-03-05.
 */
// import Error;

var _super = Error;

function BaseError(message) {
    _super.constructor.call(this);
    // this.name = 'BaseError';
    this.message = message || '';
    this.stack = _super.stack;
}

BaseError.prototype = Object.create(_super);
BaseError.prototype.constructor = BaseError;

exports.default = BaseError;

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

var _chartValidatorRegister = __webpack_require__(135);

var ChartValidatorRegister = _interopRequireWildcard(_chartValidatorRegister);

var _bchartRegister = __webpack_require__(40);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ChartValidator(options) {
    if ((0, _bchartRegister.isRegisteredChart)(options.chart.type)) {
        this.chartValidator = ChartValidatorRegister.createChartValidator(options.chart.type, options);
    } else {
        console.warn('[' + options.chart.type + '] validator is not yet developed');
        this.chartValidator = new _chartValidatorBase2.default(options);
    }
} /**
   * Created by SDS on 2017-05-10.
   */


ChartValidator.prototype.doValidate = function () {
    this.chartValidator.validate();
    return this.chartValidator.problemList;
};

ChartValidator.prototype.getWarning = function () {
    return this.chartValidator.warningList;
};

exports.default = ChartValidator;

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartRegister = __webpack_require__(40);

var ChartRegister = _interopRequireWildcard(_bchartRegister);

var _chartUtils = __webpack_require__(24);

var _chartUtils2 = _interopRequireDefault(_chartUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

/**
 * options = {
     *      type: 'scatter'
     *  }
 * @param options
 * @constructor
 */
/**
 * Source: column-helper.js
 * Created by ng.kim on 2017-06-07.
 */
function ColumnHelper(options) {
    this.options = options;
}

ColumnHelper.prototype.getColumnConf = function () {
    var chartType = this.options.type;
    if (this.options.columnConf && this.options.columnConf[chartType]) {
        var defaultColumnConf = $.extend(true, {}, ChartRegister.getChartAttr(chartType).ColumnConf);
        _chartUtils2.default.assignArray(defaultColumnConf, this.options.columnConf[chartType]);
        return defaultColumnConf;
    } else {
        return ChartRegister.getChartAttr(chartType).ColumnConf;
    }
};

exports.default = ColumnHelper;

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.registerChartValidator = registerChartValidator;
exports.getChartValidator = getChartValidator;
exports.createChartValidator = createChartValidator;

var _bchartIndex = __webpack_require__(87);

var Charts = _interopRequireWildcard(_bchartIndex);

var _chartValidatorIndex = __webpack_require__(320);

var Validator = _interopRequireWildcard(_chartValidatorIndex);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

/**
 * Created by sds on 2017-12-19.
 */

var chartValidator = {};

//private
function _init() {
    var chartTypeList = Object.keys(Charts);
    chartTypeList.forEach(function (chartType) {
        chartValidator[Charts[chartType].Attr.Key] = Validator[chartType];
    });
}

exports.default = chartValidator;
function registerChartValidator(option) {
    if ($.isEmptyObject(chartValidator)) {
        console.log('chart validator register is empty.');
        _init();
    }
    chartValidator[option.Key] = option.Func;
}

function getChartValidator(chartType) {
    return chartValidator[chartType];
}

function createChartValidator(chartType, options) {
    if ($.isEmptyObject(chartValidator)) {
        _init();
    }
    if (!chartValidator[chartType] || !options) {
        throw new Error('Cannot create chart validator. ' + chartType);
    }
    return new chartValidator[chartType](options);
}

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function AreaStackedChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


AreaStackedChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
AreaStackedChartValidator.prototype.constructor = AreaStackedChartValidator;

AreaStackedChartValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'xAxis'
    }, {
        key: 'yAxis'
    }, {
        key: 'stackBy'
    }];
};

AreaStackedChartValidator.prototype.validateStripLineType = function (dataIdx) {
    this._createWarning('axis-001', ['X-axis'], {
        target: 'xAxis'
    });
};

exports.default = AreaStackedChartValidator;

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BarStackedChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


BarStackedChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
BarStackedChartValidator.prototype.constructor = BarStackedChartValidator;

BarStackedChartValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'xAxis'
    }, {
        key: 'yAxis'
    }, {
        key: 'stackBy'
    }];
};

BarStackedChartValidator.prototype.validateStripLineType = function (dataIdx) {
    this._createWarning('axis-001', ['Y-axis'], {
        target: 'yAxis'
    });
};

BarStackedChartValidator.prototype.validateScale = function (dataIdx) {
    this._createWarning('axis-002', ['Y-axis'], {
        target: 'yaxis'
    });
};

exports.default = BarStackedChartValidator;

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ColumnStackedChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


ColumnStackedChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
ColumnStackedChartValidator.prototype.constructor = ColumnStackedChartValidator;

ColumnStackedChartValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'xAxis'
    }, {
        key: 'yAxis'
    }, {
        key: 'stackBy'
    }];
};
ColumnStackedChartValidator.prototype.validateStripLineType = function (dataIdx) {
    this._createWarning('axis-001', ['X-axis'], {
        target: 'xAxis'
    });
};

ColumnStackedChartValidator.prototype.validateScale = function (dataIdx) {
    this._createWarning('axis-002', ['X-axis'], {
        target: 'xaxis'
    });
};

exports.default = ColumnStackedChartValidator;

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Title = undefined;

var _widget = __webpack_require__(31);

var _widget2 = _interopRequireDefault(_widget);

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

var _chartUtils = __webpack_require__(24);

var _chartUtils2 = _interopRequireDefault(_chartUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 *
 * @param parentId
 * @param options {  }
 * @constructor
 */
function Title(parentId, options) {
    _widget2.default.call(this, parentId, options);
} /**
   * Source: title.js
   * Created by daewon.park on 2017-04-07.
   */


Title.prototype = Object.create(_widget2.default.prototype);
Title.prototype.constructor = Title;

Title.prototype.destroy = function () {
    if (this.resizeHandler) {
        $(window).off('resize', this.resizeHandler);
        this.resizeHandler = null;
    }
};

Title.prototype._createContents = function ($parent) {
    this.$mainControl = $('<div class="bcharts-title"></div>');
    $parent.append(this.$mainControl);

    var _this = this;
    this.resizeHandler = function () {
        _this.redrawLayout();
    };
    $(window).resize(this.resizeHandler);
};

Title.prototype.redrawLayout = function () {
    var _this = this;

    clearTimeout(this._redrawLayoutJob);
    this._redrawLayoutJob = setTimeout(function () {
        _this._adjustLayout();
    }, 300);
};

Title.prototype._getDataValue = function (valueIndex, localData) {
    if (typeof this.getOptions().value === 'undefined' || valueIndex >= this.getOptions().value.size) {
        return 'null';
    }
    var expr = this.getOptions().value[valueIndex];
    // ex) expr = { selected: [{name: 'SepalWidth', aggregation: 'sum', format: '0.000' }] }
    if (expr.selected && expr.selected.length > 0) {
        var columnIndex = -1;
        for (var c = 0; c < localData.columns.length; c++) {
            if (localData.columns[c].name == expr.selected[0].name) {
                columnIndex = c;
                break;
            }
        }
        var operator = new _aggregationOperator2.default(expr.selected[0].name);
        for (var r = 0; r < localData.data.length; r++) {
            operator.add(r, localData.data[r][columnIndex]);
        }
        var val = operator.calc(expr.selected[0].aggregation);
        return expr.selected[0].format ? numeral(val).format(expr.selected[0].format) : val;
    }
    return 'null';
};

Title.prototype._substitute = function (text, localData) {
    // ex) text = 'Sum: ${value[1]}, Avg: ${value[0]}'
    var message = text;
    var matches = message.match(/\$\{value\[(\d)\]\}/g);
    if (localData && matches && matches.length > 0) {
        var replacer = {};
        for (var m in matches) {
            // ex) match = '${value[0]}'
            var match = matches[m];
            if (typeof replacer[match] === 'undefined') {
                var valueIndex = match.match(/\d/);
                var value = this._getDataValue(valueIndex, localData[0]);
                replacer[match] = value;
            }
        }
        message = message.replace(/\$\{value\[(\d)\]\}/g, function (match) {
            return replacer[match];
        });
    }
    return message;
};

Title.prototype.render = function (text, localData) {
    var _this = this;

    var message = this._substitute(text || '', localData);
    this.$mainControl.empty();

    var $title = $('<div class="bcharts-text-overflow-hidden"></div>');
    $title.css('max-width', 'inherit');
    $title.css('max-height', 'inherit');

    $title.text(message);
    $title.attr('title', message);

    this.$mainControl.append($title);

    var styles = ['background', 'border'];
    for (var i in styles) {
        if (typeof this.getOptions()[styles[i]] !== 'undefined') this.$mainControl.css(styles[i], this.getOptions()[styles[i]]);
    }

    var renderTextFont = function renderTextFont(target) {
        var fontFamliy = target.textStyle ? target.textStyle.fontFamily ? target.textStyle.fontFamily + ',' : '' : '';
        target.textStyle.fontFamily = fontFamliy + 'Gulim,"Gulim"';

        fontFamliy = target.subtextStyle ? target.subtextStyle.fontFamily ? target.subtextStyle.fontFamily + ',' : '' : '';
        target.subtextStyle.fontFamily = fontFamliy + 'Gulim,"Gulim"';
    };
    renderTextFont(this.getOptions());

    if (this.getOptions().textStyle) {
        styles = ['color', 'fontFamily', 'fontSize', 'fontWeight', 'fontStyle', 'textDecoration'];
        for (var i in styles) {
            if (typeof this.getOptions().textStyle[styles[i]] !== 'undefined') this.$mainControl.find('.bcharts-text-overflow-hidden').css(styles[i], this.getOptions().textStyle[styles[i]]);
        }
    }

    if (this.getOptions().subtext) {
        var $subtext = $('<div class="bcharts-subtext-overflow-hidden"></div>');

        $subtext.text(this.getOptions().subtext);
        $subtext.attr('title', this.getOptions().subtext);

        //$subtext.css('width', '100%');
        $subtext.css('max-width', 'inherit');
        $subtext.css('max-height', 'inherit');

        this.$mainControl.append($subtext);

        if (this.getOptions().subtextStyle) {
            styles = ['color', 'fontFamily', 'fontSize', 'fontWeight', 'fontStyle', 'textDecoration'];
            for (var i in styles) {
                if (typeof this.getOptions().subtextStyle[styles[i]] !== 'undefined') this.$mainControl.find('.bcharts-subtext-overflow-hidden').css(styles[i], this.getOptions().subtextStyle[styles[i]]);
            }
        }
    }

    this._adjustLayout();

    if (this.getOptions().visible == false || this.getOptions().show == false) this.$mainControl.hide();else this.$mainControl.show();
};

Title.prototype._adjustLayout = function () {
    var _this = this;
    var chartContainerSize = _chartUtils2.default.getChartContainerSize(this.$mainControl);

    // TODO 회전 각도에 따라 max 값을 지정해야 하지만 일단 0도와 90도에 대해서만 처리함. by daewon.park
    if (this.getOptions().rotate == 0) {
        this.$mainControl.css('max-width', chartContainerSize.width - 10);
        this.$mainControl.css('max-height', chartContainerSize.height - 10);
    } else {
        // 90도 일 경우
        this.$mainControl.css('max-width', chartContainerSize.height - 10);
        this.$mainControl.css('max-height', chartContainerSize.width - 10);
    }

    if (this.getOptions().rotate < 0 || this.getOptions().rotate > 0) {
        var translateX = this.$mainControl.height() / 2 - this.$mainControl.width() / 2;
        this.$mainControl.css('transform', 'translateX(' + translateX + 'px) rotate(' + this.getOptions().rotate + 'deg)');
    } else {
        this.$mainControl.css('transform', 'rotate(0)');
    }

    if (typeof _this.getOptions().left !== 'undefined') {
        // FIXME: 제목 정렬에서는 꼭 필요한 로직인데, y2차트 축 제목 정렬에서 문제가 생기지 않는지 확인 후 수정 필요
        _this.$mainControl.css('left', _this._adjustPosition(_this.getOptions().left, _this.$mainControl.outerWidth()));
        if (this.getOptions().subtext) _this.$mainControl.find('.bcharts-subtext-overflow-hidden').css('left', _this._adjustPosition(_this.getOptions().left, _this.$mainControl.find('.bcharts-subtext-overflow-hidden').outerWidth()));
    }
    if (typeof _this.getOptions().right !== 'undefined') {
        if (this.getOptions().rotate == 0) {
            _this.$mainControl.css('right', _this._adjustPosition(_this.getOptions().right, _this.$mainControl.outerWidth()));
        } else {
            //90도일 경우
            _this.$mainControl.css('right', _this._adjustPosition(_this.getOptions().right, _this.$mainControl.outerWidth(), _this.$mainControl.outerHeight()));
        }
        if (this.getOptions().subtext) _this.$mainControl.find('.bcharts-subtext-overflow-hidden').css('right', _this._adjustPosition(_this.getOptions().right, _this.$mainControl.find('.bcharts-subtext-overflow-hidden').outerWidth()));
    }
    if (typeof _this.getOptions().bottom !== 'undefined') _this.$mainControl.css('bottom', _this._adjustPosition(_this.getOptions().bottom, _this.$mainControl.outerHeight()));
    if (typeof _this.getOptions().top !== 'undefined') _this.$mainControl.css('top', _this._adjustPosition(_this.getOptions().top, _this.$mainControl.outerHeight()));
};

Title.prototype._getRotationDegrees = function ($el) {
    var angle = 0;
    var matrix = $el.css("-webkit-transform") || $el.css("-moz-transform") || $el.css("-ms-transform") || $el.css("-o-transform") || $el.css("transform");
    if (matrix !== 'none') {
        var values = matrix.split('(')[1].split(')')[0].split(',');
        var a = values[0];
        var b = values[1];
        angle = Math.round(Math.atan2(b, a) * (180 / Math.PI));
    }
    return angle;
};

Title.prototype._adjustPosition = function (position, outerWidth, outerHeight) {
    if (outerHeight) {
        position = position.replace(/px/, '');
        if (Number.isNaN(Number(position)) === false) return Number(position - outerWidth + outerHeight);
        return position.replace(/(\d+%)/, 'calc($1 - ' + outerWidth / 2 + 'px)');
    } else {
        if (Number.isNaN(Number(position)) === false) return Number(position);
        if (position == null) return 'initial';
        return position.replace(/(\d+%)/, 'calc($1 - ' + outerWidth / 2 + 'px)');
    }
};

exports.Title = Title;

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Pagination = undefined;

var _widget = __webpack_require__(31);

var _widget2 = _interopRequireDefault(_widget);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Pagination(parentId, options) {
    _widget2.default.call(this, parentId, options);
} /**
   * Source: pagination.js
   * Created by daewon.park on 2017-05-14.
   */

Pagination.prototype = Object.create(_widget2.default.prototype);
Pagination.prototype.constructor = Pagination;

Pagination.prototype._init = function () {
    _widget2.default.prototype._init.call(this);
    this.pageInfo = $.extend(true, {
        pageNum: 1,
        pageSize: 1000,
        totalCount: -1,
        columnCount: -1,
        fixedPageSize: false
    }, this.getOptions());
};

Pagination.prototype.destroy = function () {
    this.pageSizeControl.execute('destroy');
    $(window).off('resize', this.resizeHandler);
};

Pagination.prototype._createContents = function ($parent) {
    this.$mainControl = $('' + '<div class="bcharts-pagination">' + '   <div class="bcharts-pagination-navigator">' + '       <div>Go to page:</div>' + '       <div class="bcharts-pagination-navigator-button" action="prev"><i class="fa fa-caret-left" aria-hidden="true"></i></div>' + '       <div class="bcharts-pagination-navigator-page"></div>' + '       <div class="bcharts-pagination-navigator-button" action="next"><i class="fa fa-caret-right" aria-hidden="true"></i></div>' + '   </div>' + '   <div class="bcharts-pagination-size">' + '       <div>Show rows:</div>' +
    // '       <div class="bcharts-pagination-size-input"></div>' +
    '   </div>' + '   <div class="bcharts-pagination-showing">' + '       <div>Showing Columns:</div>' + '       <div class="bcharts-pagination-showing-column">?</div>' + '       <div>/ Rows:</div>' + '       <div class="bcharts-pagination-showing-begin" type="detail">?</div>' + '       <div type="detail">~</div>' + '       <div class="bcharts-pagination-showing-end" type="detail">?</div>' + '       <div type="detail">of</div>' + '       <div class="bcharts-pagination-showing-total">?</div>' + '   </div>' + '</div>' + '');
    $parent.append(this.$mainControl);
    this._createNavigator(this.$mainControl);
    this._createPageSize(this.$mainControl);
    this.update(this.pageInfo);
};

Pagination.prototype._createNavigator = function ($parent) {
    var _this = this;

    $parent.find('.bcharts-pagination-navigator-button').click(function (event) {
        var pageNum = parseInt(_this.pageNumControl.getOption('value'));
        if ($(this).attr('action') === 'prev') {
            if (pageNum - 1 !== _this.pageInfo.pageNum) {
                _this.setPageNumber(pageNum - 1);
                _this._fireChanged();
            }
        } else if ($(this).attr('action') === 'next') {
            if (pageNum + 1 !== _this.pageInfo.pageNum) {
                _this.setPageNumber(pageNum + 1);
                _this._fireChanged();
            }
        }

        var begin = _this.pageInfo.pageSize * (_this.pageInfo.pageNum - 1) + 1;
        var uncountable = _this.pageInfo.totalCount < 0;
        var end = uncountable ? _this.pageInfo.pageSize * _this.pageInfo.pageNum : Math.min(_this.pageInfo.pageSize * _this.pageInfo.pageNum, _this.pageInfo.totalCount);

        _this.setPageRows(begin, end);
    });

    var $pageNumControl = $parent.find('.bcharts-pagination-navigator-page');
    this.pageNumControl = brtcWidget.numberInput($pageNumControl, {
        min: 1,
        width: 40,
        height: 24,
        type: 'int'
    });
    this.pageNumControl.subscribe('change', function (value) {
        var pageNum = value;
        if (pageNum !== _this.pageInfo.pageNum) {
            _this.setPageNumber(pageNum);
            _this._fireChanged();
        }
    });
    this.setPageNumber(this.pageInfo.pageNum);
};

Pagination.prototype._createPageSize = function ($parent) {
    var _this = this;

    var $target = $('<div>');
    $parent.find('.bcharts-pagination-size').append($target);

    this.pageSizeControl = brtcWidget.dropDownList($target, {
        source: ['1,000', '3,000', '5,000', '10,000', '30,000', '50,000'],
        value: numeral(_this.pageInfo.pageSize).format('0,0'),
        width: 80,
        height: 24
    });

    this.pageSizeControl.subscribe('change', function (label) {
        var pageSize = numeral(label);
        if (pageSize.value() !== _this.pageInfo.pageSize) {
            _this.pageInfo.pageSize = pageSize.value();
            _this.setPageNumber(_this.pageInfo.pageNum);
            _this._fireChanged();
        }
    });
};

Pagination.prototype._fireChanged = function () {
    if (typeof this.getOptions().changed === 'function') {
        this.getOptions().changed(this.pageInfo);
    }
};

Pagination.prototype._updateButtons = function () {
    if (this.pageInfo.totalCount < 1) {
        this.$mainControl.find('.bcharts-pagination-navigator-button').addClass('bcharts-non-editable');
        this.$mainControl.find('.bcharts-pagination-navigator-page').addClass('bcharts-non-editable');

        this.pageNumControl.setOption({ max: 1 });
    } else {
        var pageNumber = Number(this.pageInfo.pageNum);
        var hasPrevPage = pageNumber !== 1;
        var hasNextPage = pageNumber * this.pageInfo.pageSize < this.pageInfo.totalCount;

        var $prev = this.$mainControl.find('.bcharts-pagination-navigator-button[action="prev"]');
        hasPrevPage ? $prev.removeClass('bcharts-non-editable') : $prev.addClass('bcharts-non-editable');

        var $next = this.$mainControl.find('.bcharts-pagination-navigator-button[action="next"]');
        hasNextPage ? $next.removeClass('bcharts-non-editable') : $next.addClass('bcharts-non-editable');

        this.$mainControl.find('.bcharts-pagination-navigator-page').removeClass('bcharts-non-editable');

        var max = Math.ceil(this.pageInfo.totalCount / this.pageInfo.pageSize);
        this.pageNumControl.setOption({ max: max });
    }
};

Pagination.prototype.setPageNumber = function (num) {
    var min = 1;
    var max = this.pageInfo.totalCount > -1 ? Math.ceil(this.pageInfo.totalCount / this.pageInfo.pageSize) : Number.MAX_SAFE_INTEGER;

    if (num < min) {
        this.pageInfo.pageNum = min;
    } else if (num > max) {
        this.pageInfo.pageNum = max;
    } else {
        this.pageInfo.pageNum = num;
    }
    this.pageNumControl.setOption({
        max: max,
        value: this.pageInfo.pageNum
    });

    this._updateButtons();
};

Pagination.prototype.setPageRows = function (begin, end) {
    this.$mainControl.find('.bcharts-pagination-showing .bcharts-pagination-showing-begin').text(numeral(begin).format('0,0'));
    this.$mainControl.find('.bcharts-pagination-showing .bcharts-pagination-showing-end').text(numeral(end).format('0,0'));
};

Pagination.prototype.setFixedPageSize = function (fixedPageSize) {
    if (fixedPageSize) {
        this.pageSizeControl.setOption({ disabled: true });
        this.$mainControl.find('.bcharts-pagination-size').attr('title', 'Page size modification is restricted because the large size column[ex) image, sound] exists.');
    } else {
        this.pageSizeControl.setOption({ disabled: false });
        this.$mainControl.find('.bcharts-pagination-size').attr('title', '');
    }
};
Pagination.prototype.setTotalCount = function (total) {
    this.pageInfo.totalCount = total;
    var $total = this.$mainControl.find('.bcharts-pagination-showing .bcharts-pagination-showing-total');

    var uncountable = this.pageInfo.totalCount < 0;
    uncountable ? $total.text('?') : $total.text(numeral(this.pageInfo.totalCount).format('0,0'));
    this._updateButtons();
};

Pagination.prototype.setColumnCount = function (columnCount) {
    this.pageInfo.columnCount = columnCount;

    var $columns = this.$mainControl.find('.bcharts-pagination-showing .bcharts-pagination-showing-column');

    var uncountable = this.pageInfo.columnCount < 0;
    uncountable ? $columns.text('?') : $columns.text(numeral(this.pageInfo.columnCount).format('0,0'));

    this._updateButtons();
};

Pagination.prototype._showTotalCountOnly = function (total) {
    this.pageInfo.totalCount = total;
    if (this.pageInfo.totalCount < 0) {
        this.$mainControl.find('.bcharts-pagination-showing .bcharts-pagination-showing-total').text('unknown');
    } else {
        this.$mainControl.find('.bcharts-pagination-showing .bcharts-pagination-showing-total').text(numeral(this.pageInfo.totalCount).format('0,0'));
    }
};

Pagination.prototype.showOnlyCount = function () {
    this.$mainControl.show();
    this.$mainControl.find('.bcharts-pagination-showing div[type="detail"]').hide();
    this.$mainControl.find('.bcharts-pagination-navigator').hide();
    this.$mainControl.find('.bcharts-pagination-size').hide();
};

Pagination.prototype.show = function () {
    this.$mainControl.show();
    this.$mainControl.find('.bcharts-pagination-showing div[type="detail"]').show();
    this.$mainControl.find('.bcharts-pagination-navigator').show();
    this.$mainControl.find('.bcharts-pagination-size').show();
};

Pagination.prototype.update = function (pageInfo) {
    $.extend(true, this.pageInfo, pageInfo);
    this.setPageNumber(this.pageInfo.pageNum);
    this.setColumnCount(this.pageInfo.columnCount);
    this.setTotalCount(this.pageInfo.totalCount);
    this.setFixedPageSize(this.pageInfo.fixedPageSize);

    var begin = this.pageInfo.pageSize * (this.pageInfo.pageNum - 1) + 1;
    var uncountable = this.pageInfo.totalCount < 0;
    var end = uncountable ? this.pageInfo.pageSize * this.pageInfo.pageNum : Math.min(this.pageInfo.pageSize * this.pageInfo.pageNum, this.pageInfo.totalCount);

    this.setPageRows(begin, end);
};

Pagination.prototype.hide = function () {
    this.$mainControl.hide();
};

exports.Pagination = Pagination;

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getDecorator = getDecorator;
exports.createDecorator = createDecorator;

var _decoratorIndex = __webpack_require__(142);

var DecoratorFunc = _interopRequireWildcard(_decoratorIndex);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var Decorator = {};

//private
/**
 * Created by sds on 2018-03-14.
 */

function _registerDecorator(decoratorType) {
    if (!DecoratorFunc[decoratorType]) {
        console.warn('Cannot create decorator: ' + decoratorType);
        return false;
    }
    Decorator[decoratorType] = DecoratorFunc[decoratorType];
    return true;
}

function getDecorator(decoratorType) {
    return Decorator[decoratorType];
}

function createDecorator(decoratorType, builder, options) {
    if (_registerDecorator(decoratorType)) {
        return new Decorator[decoratorType](builder, options);
    }
}

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.pieLabelDecorator = exports.sortAxisInit = exports.sortLegendValue = exports.emphasis = exports.tooltipWordCloud = exports.tooltipWordCloudCalculated = exports.barMarker = exports.showSymbol = exports.TooltipTriggerForceItemDecorator = exports.tooltipBubbleCalculated = exports.trendline = exports.axisRange = exports.yAxisScaleFalse = exports.yAxisMin0Max100 = exports.yAxisMin0 = exports.xAxisScaleFalse = exports.xAxisRangeForHistogram = exports.xAxisMin0Max100 = exports.xAxisMin0 = exports.xAxisBoundaryGapFalse = exports.visualMap = exports.tooltipCard = exports.tooltipYAxisPercent = exports.tooltipYAxis = exports.tooltipXAxisPercent = exports.tooltipTriggerAxis = exports.tooltipMap = exports.tooltipTreemap = exports.tooltipQQPlot = exports.tooltipPie = exports.tooltipPieCalculated = exports.tooltipPairwiseScatter = exports.tooltipItemCalculated = exports.tooltipHistogram = exports.tooltipHeatmapMatrix = exports.tooltipHeatmap = exports.tooltipDendrogram = exports.tooltip = exports.tooltipComplex = exports.tooltipByRowIndex = exports.tooltipByColumnNames = exports.tooltipBubble = exports.tooltipBoxPlot = exports.tooltipBoxPlotByColumnNames = exports.tooltipAxisPointerShadow = exports.tooltipAxisPointerY = exports.tooltipAxisCalculated = exports.stripline = exports.seriesStacked = exports.seriesStacked100 = exports.seriesNameSet = exports.plotOptions = exports.pairwiseGrid = exports.pairwiseAxis = exports.mapStyle = exports.marker = exports.markerByType = exports.lineStyle = exports.lineBy = exports.itemOpacity7 = exports.dataZoom = exports.fillXCategoryValues = exports.xAxisFilterZoomMode = exports.bubbleSize = exports.brushRemoval = exports.brush = exports.boxPlotSeparateColorDecorator = exports.boxPlotByColumnNamesAxisDecorator = exports.axisLineOnZeroTrue = exports.axisLineOnZeroFalse = exports.axisTypeWithCategoryY = exports.axisTypeWithCategoryX = exports.axisTypeWithCategoryXY = exports.axisTypeValue = exports.axisTypeForDendrogram = exports.axisType = exports.axisTypeByRowIndex = exports.axisTypeByColumnNames = exports.axisRemoval = exports.axisLabelFormatter = exports.axisHidden = undefined;

var _axisHiddenDecorator = __webpack_require__(143);

var _axisHiddenDecorator2 = _interopRequireDefault(_axisHiddenDecorator);

var _axisLabelFormatterDecorator = __webpack_require__(144);

var _axisLabelFormatterDecorator2 = _interopRequireDefault(_axisLabelFormatterDecorator);

var _axisRemovalDecorator = __webpack_require__(145);

var _axisRemovalDecorator2 = _interopRequireDefault(_axisRemovalDecorator);

var _axisTypeBycolumnnamesDecorator = __webpack_require__(146);

var _axisTypeBycolumnnamesDecorator2 = _interopRequireDefault(_axisTypeBycolumnnamesDecorator);

var _axisTypeByrowindexDecorator = __webpack_require__(147);

var _axisTypeByrowindexDecorator2 = _interopRequireDefault(_axisTypeByrowindexDecorator);

var _axisTypeDecorator = __webpack_require__(44);

var _axisTypeDecorator2 = _interopRequireDefault(_axisTypeDecorator);

var _axisTypeForDendrogramDecorator = __webpack_require__(148);

var _axisTypeForDendrogramDecorator2 = _interopRequireDefault(_axisTypeForDendrogramDecorator);

var _axisTypeValueDecorator = __webpack_require__(149);

var _axisTypeValueDecorator2 = _interopRequireDefault(_axisTypeValueDecorator);

var _axisTypeWithCategoryDecorator = __webpack_require__(150);

var _axisTypeWithCategoryDecorator2 = _interopRequireDefault(_axisTypeWithCategoryDecorator);

var _axisTypeWithCategoryXDecorator = __webpack_require__(151);

var _axisTypeWithCategoryXDecorator2 = _interopRequireDefault(_axisTypeWithCategoryXDecorator);

var _axisTypeWithCategoryYDecorator = __webpack_require__(152);

var _axisTypeWithCategoryYDecorator2 = _interopRequireDefault(_axisTypeWithCategoryYDecorator);

var _axislineOnzeroFalseDecorator = __webpack_require__(153);

var _axislineOnzeroFalseDecorator2 = _interopRequireDefault(_axislineOnzeroFalseDecorator);

var _axislineOnzeroTrueDecorator = __webpack_require__(154);

var _axislineOnzeroTrueDecorator2 = _interopRequireDefault(_axislineOnzeroTrueDecorator);

var _boxplotBycolumnnamesAxisDecorator = __webpack_require__(155);

var _boxplotBycolumnnamesAxisDecorator2 = _interopRequireDefault(_boxplotBycolumnnamesAxisDecorator);

var _boxplotSeparateColorDecorator = __webpack_require__(156);

var _boxplotSeparateColorDecorator2 = _interopRequireDefault(_boxplotSeparateColorDecorator);

var _brushDecorator = __webpack_require__(157);

var _brushDecorator2 = _interopRequireDefault(_brushDecorator);

var _brushRemovalDecorator = __webpack_require__(158);

var _brushRemovalDecorator2 = _interopRequireDefault(_brushRemovalDecorator);

var _bubbleSizeDecorator = __webpack_require__(159);

var _bubbleSizeDecorator2 = _interopRequireDefault(_bubbleSizeDecorator);

var _complexDatazoomDecorator = __webpack_require__(160);

var _complexDatazoomDecorator2 = _interopRequireDefault(_complexDatazoomDecorator);

var _fillXCategoryValuesDecorator = __webpack_require__(161);

var _fillXCategoryValuesDecorator2 = _interopRequireDefault(_fillXCategoryValuesDecorator);

var _heatmapDatazoomDecorator = __webpack_require__(162);

var _heatmapDatazoomDecorator2 = _interopRequireDefault(_heatmapDatazoomDecorator);

var _itemOpacity = __webpack_require__(163);

var _itemOpacity2 = _interopRequireDefault(_itemOpacity);

var _lineByDecorator = __webpack_require__(164);

var _lineByDecorator2 = _interopRequireDefault(_lineByDecorator);

var _lineStyleDecorator = __webpack_require__(165);

var _lineStyleDecorator2 = _interopRequireDefault(_lineStyleDecorator);

var _markerByTypeDecorator = __webpack_require__(166);

var _markerByTypeDecorator2 = _interopRequireDefault(_markerByTypeDecorator);

var _markerDecorator = __webpack_require__(78);

var _markerDecorator2 = _interopRequireDefault(_markerDecorator);

var _barMarkerDecorator = __webpack_require__(167);

var _barMarkerDecorator2 = _interopRequireDefault(_barMarkerDecorator);

var _mapStyleDecorator = __webpack_require__(168);

var _mapStyleDecorator2 = _interopRequireDefault(_mapStyleDecorator);

var _pairwiseAxisDecorator = __webpack_require__(169);

var _pairwiseAxisDecorator2 = _interopRequireDefault(_pairwiseAxisDecorator);

var _pairwiseGridDecorator = __webpack_require__(170);

var _pairwiseGridDecorator2 = _interopRequireDefault(_pairwiseGridDecorator);

var _plotoptionsDecorator = __webpack_require__(171);

var _plotoptionsDecorator2 = _interopRequireDefault(_plotoptionsDecorator);

var _seriesNameSetDecorator = __webpack_require__(172);

var _seriesNameSetDecorator2 = _interopRequireDefault(_seriesNameSetDecorator);

var _seriesStacked100Decorator = __webpack_require__(173);

var _seriesStacked100Decorator2 = _interopRequireDefault(_seriesStacked100Decorator);

var _seriesStackedDecorator = __webpack_require__(174);

var _seriesStackedDecorator2 = _interopRequireDefault(_seriesStackedDecorator);

var _striplineDecorator = __webpack_require__(175);

var _striplineDecorator2 = _interopRequireDefault(_striplineDecorator);

var _tooltipAxisCalculatedDecorator = __webpack_require__(176);

var _tooltipAxisCalculatedDecorator2 = _interopRequireDefault(_tooltipAxisCalculatedDecorator);

var _tooltipAxisPointerYDecorator = __webpack_require__(177);

var _tooltipAxisPointerYDecorator2 = _interopRequireDefault(_tooltipAxisPointerYDecorator);

var _tooltipAxispointerShadowDecorator = __webpack_require__(178);

var _tooltipAxispointerShadowDecorator2 = _interopRequireDefault(_tooltipAxispointerShadowDecorator);

var _tooltipBoxplotBycolumnnamesDecorator = __webpack_require__(179);

var _tooltipBoxplotBycolumnnamesDecorator2 = _interopRequireDefault(_tooltipBoxplotBycolumnnamesDecorator);

var _tooltipBoxplotDecorator = __webpack_require__(180);

var _tooltipBoxplotDecorator2 = _interopRequireDefault(_tooltipBoxplotDecorator);

var _tooltipBubbleDecorator = __webpack_require__(181);

var _tooltipBubbleDecorator2 = _interopRequireDefault(_tooltipBubbleDecorator);

var _tooltipBycolumnnamesDecorator = __webpack_require__(182);

var _tooltipBycolumnnamesDecorator2 = _interopRequireDefault(_tooltipBycolumnnamesDecorator);

var _tooltipByrowindexDecorator = __webpack_require__(183);

var _tooltipByrowindexDecorator2 = _interopRequireDefault(_tooltipByrowindexDecorator);

var _tooltipComplexDecorator = __webpack_require__(184);

var _tooltipComplexDecorator2 = _interopRequireDefault(_tooltipComplexDecorator);

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

var _tooltipDendrogramDecorator = __webpack_require__(185);

var _tooltipDendrogramDecorator2 = _interopRequireDefault(_tooltipDendrogramDecorator);

var _tooltipHeatmapDecorator = __webpack_require__(186);

var _tooltipHeatmapDecorator2 = _interopRequireDefault(_tooltipHeatmapDecorator);

var _tooltipHeatmapMatrixDecorator = __webpack_require__(187);

var _tooltipHeatmapMatrixDecorator2 = _interopRequireDefault(_tooltipHeatmapMatrixDecorator);

var _tooltipHistogramDecorator = __webpack_require__(188);

var _tooltipHistogramDecorator2 = _interopRequireDefault(_tooltipHistogramDecorator);

var _tooltipItemCalculatedDecorator = __webpack_require__(79);

var _tooltipItemCalculatedDecorator2 = _interopRequireDefault(_tooltipItemCalculatedDecorator);

var _tooltipPairwiseScatterDecorator = __webpack_require__(189);

var _tooltipPairwiseScatterDecorator2 = _interopRequireDefault(_tooltipPairwiseScatterDecorator);

var _tooltipPieCalculatedDecorator = __webpack_require__(190);

var _tooltipPieCalculatedDecorator2 = _interopRequireDefault(_tooltipPieCalculatedDecorator);

var _tooltipPieDecorator = __webpack_require__(81);

var _tooltipPieDecorator2 = _interopRequireDefault(_tooltipPieDecorator);

var _tooltipQqplotDecorator = __webpack_require__(191);

var _tooltipQqplotDecorator2 = _interopRequireDefault(_tooltipQqplotDecorator);

var _tooltipTreemapDecorator = __webpack_require__(192);

var _tooltipTreemapDecorator2 = _interopRequireDefault(_tooltipTreemapDecorator);

var _tooltipMapDecorator = __webpack_require__(193);

var _tooltipMapDecorator2 = _interopRequireDefault(_tooltipMapDecorator);

var _tooltipTriggerAxisDecorator = __webpack_require__(80);

var _tooltipTriggerAxisDecorator2 = _interopRequireDefault(_tooltipTriggerAxisDecorator);

var _tooltipXaxisPercentDecorator = __webpack_require__(194);

var _tooltipXaxisPercentDecorator2 = _interopRequireDefault(_tooltipXaxisPercentDecorator);

var _tooltipYaxisDecorator = __webpack_require__(82);

var _tooltipYaxisDecorator2 = _interopRequireDefault(_tooltipYaxisDecorator);

var _tooltipYaxisPercentDecorator = __webpack_require__(195);

var _tooltipYaxisPercentDecorator2 = _interopRequireDefault(_tooltipYaxisPercentDecorator);

var _tooltipCardDecorator = __webpack_require__(196);

var _tooltipCardDecorator2 = _interopRequireDefault(_tooltipCardDecorator);

var _visualmapDecorator = __webpack_require__(197);

var _visualmapDecorator2 = _interopRequireDefault(_visualmapDecorator);

var _xaxisBoundarygapFalseDecorator = __webpack_require__(198);

var _xaxisBoundarygapFalseDecorator2 = _interopRequireDefault(_xaxisBoundarygapFalseDecorator);

var _xaxisMin0Decorator = __webpack_require__(199);

var _xaxisMin0Decorator2 = _interopRequireDefault(_xaxisMin0Decorator);

var _xaxisMin0Max100Decorator = __webpack_require__(200);

var _xaxisMin0Max100Decorator2 = _interopRequireDefault(_xaxisMin0Max100Decorator);

var _xaxisRangeForHistogramDecorator = __webpack_require__(201);

var _xaxisRangeForHistogramDecorator2 = _interopRequireDefault(_xaxisRangeForHistogramDecorator);

var _xaxisScaleFalseDecorator = __webpack_require__(202);

var _xaxisScaleFalseDecorator2 = _interopRequireDefault(_xaxisScaleFalseDecorator);

var _yaxisMin0Decorator = __webpack_require__(203);

var _yaxisMin0Decorator2 = _interopRequireDefault(_yaxisMin0Decorator);

var _yaxisMin0Max100Decorator = __webpack_require__(204);

var _yaxisMin0Max100Decorator2 = _interopRequireDefault(_yaxisMin0Max100Decorator);

var _yaxisScaleFalseDecorator = __webpack_require__(205);

var _yaxisScaleFalseDecorator2 = _interopRequireDefault(_yaxisScaleFalseDecorator);

var _axisRangeDecorator = __webpack_require__(83);

var _axisRangeDecorator2 = _interopRequireDefault(_axisRangeDecorator);

var _trendlineDecorator = __webpack_require__(206);

var _trendlineDecorator2 = _interopRequireDefault(_trendlineDecorator);

var _tooltipBubbleCalculatedDecorator = __webpack_require__(207);

var _tooltipBubbleCalculatedDecorator2 = _interopRequireDefault(_tooltipBubbleCalculatedDecorator);

var _tooltipTriggerForceItemDecorator = __webpack_require__(208);

var _tooltipTriggerForceItemDecorator2 = _interopRequireDefault(_tooltipTriggerForceItemDecorator);

var _showSymbolDecorator = __webpack_require__(209);

var _showSymbolDecorator2 = _interopRequireDefault(_showSymbolDecorator);

var _tooltipWordcloudCalculatedDecorator = __webpack_require__(210);

var _tooltipWordcloudCalculatedDecorator2 = _interopRequireDefault(_tooltipWordcloudCalculatedDecorator);

var _tooltipWordcloudDecorator = __webpack_require__(84);

var _tooltipWordcloudDecorator2 = _interopRequireDefault(_tooltipWordcloudDecorator);

var _emphasisDecorator = __webpack_require__(211);

var _emphasisDecorator2 = _interopRequireDefault(_emphasisDecorator);

var _sortLegendValueDecorator = __webpack_require__(212);

var _sortLegendValueDecorator2 = _interopRequireDefault(_sortLegendValueDecorator);

var _sortAxisInitDecorator = __webpack_require__(213);

var _sortAxisInitDecorator2 = _interopRequireDefault(_sortAxisInitDecorator);

var _pieLabelDecorator = __webpack_require__(214);

var _pieLabelDecorator2 = _interopRequireDefault(_pieLabelDecorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.axisHidden = _axisHiddenDecorator2.default;
exports.axisLabelFormatter = _axisLabelFormatterDecorator2.default;
exports.axisRemoval = _axisRemovalDecorator2.default;
exports.axisTypeByColumnNames = _axisTypeBycolumnnamesDecorator2.default;
exports.axisTypeByRowIndex = _axisTypeByrowindexDecorator2.default;
exports.axisType = _axisTypeDecorator2.default;
exports.axisTypeForDendrogram = _axisTypeForDendrogramDecorator2.default;
exports.axisTypeValue = _axisTypeValueDecorator2.default;
exports.axisTypeWithCategoryXY = _axisTypeWithCategoryDecorator2.default;
exports.axisTypeWithCategoryX = _axisTypeWithCategoryXDecorator2.default;
exports.axisTypeWithCategoryY = _axisTypeWithCategoryYDecorator2.default;
exports.axisLineOnZeroFalse = _axislineOnzeroFalseDecorator2.default;
exports.axisLineOnZeroTrue = _axislineOnzeroTrueDecorator2.default;
exports.boxPlotByColumnNamesAxisDecorator = _boxplotBycolumnnamesAxisDecorator2.default;
exports.boxPlotSeparateColorDecorator = _boxplotSeparateColorDecorator2.default;
exports.brush = _brushDecorator2.default;
exports.brushRemoval = _brushRemovalDecorator2.default;
exports.bubbleSize = _bubbleSizeDecorator2.default;
exports.xAxisFilterZoomMode = _complexDatazoomDecorator2.default;
exports.fillXCategoryValues = _fillXCategoryValuesDecorator2.default;
exports.dataZoom = _heatmapDatazoomDecorator2.default;
exports.itemOpacity7 = _itemOpacity2.default;
exports.lineBy = _lineByDecorator2.default;
exports.lineStyle = _lineStyleDecorator2.default;
exports.markerByType = _markerByTypeDecorator2.default;
exports.marker = _markerDecorator2.default;
exports.mapStyle = _mapStyleDecorator2.default;
exports.pairwiseAxis = _pairwiseAxisDecorator2.default;
exports.pairwiseGrid = _pairwiseGridDecorator2.default;
exports.plotOptions = _plotoptionsDecorator2.default;
exports.seriesNameSet = _seriesNameSetDecorator2.default;
exports.seriesStacked100 = _seriesStacked100Decorator2.default;
exports.seriesStacked = _seriesStackedDecorator2.default;
exports.stripline = _striplineDecorator2.default;
exports.tooltipAxisCalculated = _tooltipAxisCalculatedDecorator2.default;
exports.tooltipAxisPointerY = _tooltipAxisPointerYDecorator2.default;
exports.tooltipAxisPointerShadow = _tooltipAxispointerShadowDecorator2.default;
exports.tooltipBoxPlotByColumnNames = _tooltipBoxplotBycolumnnamesDecorator2.default;
exports.tooltipBoxPlot = _tooltipBoxplotDecorator2.default;
exports.tooltipBubble = _tooltipBubbleDecorator2.default;
exports.tooltipByColumnNames = _tooltipBycolumnnamesDecorator2.default;
exports.tooltipByRowIndex = _tooltipByrowindexDecorator2.default;
exports.tooltipComplex = _tooltipComplexDecorator2.default;
exports.tooltip = _tooltipDecorator2.default;
exports.tooltipDendrogram = _tooltipDendrogramDecorator2.default;
exports.tooltipHeatmap = _tooltipHeatmapDecorator2.default;
exports.tooltipHeatmapMatrix = _tooltipHeatmapMatrixDecorator2.default;
exports.tooltipHistogram = _tooltipHistogramDecorator2.default;
exports.tooltipItemCalculated = _tooltipItemCalculatedDecorator2.default;
exports.tooltipPairwiseScatter = _tooltipPairwiseScatterDecorator2.default;
exports.tooltipPieCalculated = _tooltipPieCalculatedDecorator2.default;
exports.tooltipPie = _tooltipPieDecorator2.default;
exports.tooltipQQPlot = _tooltipQqplotDecorator2.default;
exports.tooltipTreemap = _tooltipTreemapDecorator2.default;
exports.tooltipMap = _tooltipMapDecorator2.default;
exports.tooltipTriggerAxis = _tooltipTriggerAxisDecorator2.default;
exports.tooltipXAxisPercent = _tooltipXaxisPercentDecorator2.default;
exports.tooltipYAxis = _tooltipYaxisDecorator2.default;
exports.tooltipYAxisPercent = _tooltipYaxisPercentDecorator2.default;
exports.tooltipCard = _tooltipCardDecorator2.default;
exports.visualMap = _visualmapDecorator2.default;
exports.xAxisBoundaryGapFalse = _xaxisBoundarygapFalseDecorator2.default;
exports.xAxisMin0 = _xaxisMin0Decorator2.default;
exports.xAxisMin0Max100 = _xaxisMin0Max100Decorator2.default;
exports.xAxisRangeForHistogram = _xaxisRangeForHistogramDecorator2.default;
exports.xAxisScaleFalse = _xaxisScaleFalseDecorator2.default;
exports.yAxisMin0 = _yaxisMin0Decorator2.default;
exports.yAxisMin0Max100 = _yaxisMin0Max100Decorator2.default;
exports.yAxisScaleFalse = _yaxisScaleFalseDecorator2.default;
exports.axisRange = _axisRangeDecorator2.default;
exports.trendline = _trendlineDecorator2.default;
exports.tooltipBubbleCalculated = _tooltipBubbleCalculatedDecorator2.default;
exports.TooltipTriggerForceItemDecorator = _tooltipTriggerForceItemDecorator2.default;
exports.showSymbol = _showSymbolDecorator2.default;
exports.barMarker = _barMarkerDecorator2.default;
exports.tooltipWordCloudCalculated = _tooltipWordcloudCalculatedDecorator2.default;
exports.tooltipWordCloud = _tooltipWordcloudDecorator2.default;
exports.emphasis = _emphasisDecorator2.default;
exports.sortLegendValue = _sortLegendValueDecorator2.default;
exports.sortAxisInit = _sortAxisInitDecorator2.default;
exports.pieLabelDecorator = _pieLabelDecorator2.default; /**
                                                          * Created by sds on 2018-03-14.
                                                          */

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function AxisHiddenDecorator(builder) {
    _decorator2.default.call(this, builder);
} /**
   * Created by sds on 2018-03-26.
   */

AxisHiddenDecorator.prototype = Object.create(_decorator2.default.prototype);
AxisHiddenDecorator.prototype.constructor = AxisHiddenDecorator;

AxisHiddenDecorator.prototype.decorate = function () {
    var hiddenSpec = {
        splitLine: { show: false },
        axisTick: { show: false },
        axisLine: { show: false },
        axisLabel: { show: false },
        scale: false
    };
    if (this.eOptions.xAxis) {
        this.eOptions.xAxis.forEach(function (axisObj) {
            $.extend(true, axisObj, hiddenSpec);
        });
    }
    if (this.eOptions.yAxis) {
        this.eOptions.yAxis.forEach(function (axisObj) {
            $.extend(true, axisObj, hiddenSpec);
        });
    }
};

exports.default = AxisHiddenDecorator;

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Created by sds on 2018-04-11.
 */

function AxisLabelFormatterDecorator(builder) {
    _decorator2.default.call(this, builder);
}

AxisLabelFormatterDecorator.prototype = Object.create(_decorator2.default.prototype);
AxisLabelFormatterDecorator.prototype.constructor = AxisLabelFormatterDecorator;

AxisLabelFormatterDecorator.prototype.decorate = function () {
    this._setFmtFunc('xAxis');
    this._setFmtFunc('yAxis');
};

AxisLabelFormatterDecorator.prototype._setFmtFunc = function (axisNm) {
    if (this.eOptions[axisNm][0].axisLabel && this.eOptions[axisNm][0].axisLabel.formatter) {
        var fmtStr = this.eOptions[axisNm][0].axisLabel.formatter;
        this.eOptions[axisNm][0].axisLabel.formatter = _optionUtils2.default.formatLabel(fmtStr);
    }
};

exports.default = AxisLabelFormatterDecorator;

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function AxisRemovalDecorator(builder) {
    _tooltipDecorator2.default.call(this, builder);
}

AxisRemovalDecorator.prototype = Object.create(_tooltipDecorator2.default.prototype);
AxisRemovalDecorator.prototype.constructor = AxisRemovalDecorator;

AxisRemovalDecorator.prototype.decorate = function () {
    delete this.eOptions.xAxis;
    delete this.eOptions.yAxis;
};

exports.default = AxisRemovalDecorator;

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function AxisTypeByColumnNamesDecorator(builder) {
    _decorator2.default.call(this, builder);
}

AxisTypeByColumnNamesDecorator.prototype = Object.create(_decorator2.default.prototype);
AxisTypeByColumnNamesDecorator.prototype.constructor = AxisTypeByColumnNamesDecorator;

AxisTypeByColumnNamesDecorator.prototype.decorate = function () {
    this.eOptions.xAxis[0].type = 'category';

    this.eOptions.xAxis[0].data = this._getColumnNamesCategories();
};

exports.default = AxisTypeByColumnNamesDecorator;

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function AxisTypeByRowIndexDecorator(builder) {
    _decorator2.default.call(this, builder);
}

AxisTypeByRowIndexDecorator.prototype = Object.create(_decorator2.default.prototype);
AxisTypeByRowIndexDecorator.prototype.constructor = AxisTypeByRowIndexDecorator;

AxisTypeByRowIndexDecorator.prototype.decorate = function () {
    this.eOptions.xAxis[0].type = 'value';
};

exports.default = AxisTypeByRowIndexDecorator;

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function AxisTypeForDendrogram(builder) {
    _decorator2.default.call(this, builder);
}

AxisTypeForDendrogram.prototype = Object.create(_decorator2.default.prototype);
AxisTypeForDendrogram.prototype.constructor = AxisTypeForDendrogram;

AxisTypeForDendrogram.prototype.decorate = function () {
    this.eOptions.xAxis[0].type = 'category';
    this.eOptions.xAxis[0].data = this.builder.categoryList;
};

exports.default = AxisTypeForDendrogram;

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function AxisTypeValueDecorator(builder) {
    _decorator2.default.call(this, builder);
}

AxisTypeValueDecorator.prototype = Object.create(_decorator2.default.prototype);
AxisTypeValueDecorator.prototype.constructor = AxisTypeValueDecorator;

AxisTypeValueDecorator.prototype.decorate = function () {
    this.eOptions.xAxis[0].type = 'value';
    this.eOptions.yAxis[0].type = 'value';
};

exports.default = AxisTypeValueDecorator;

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _axisTypeDecorator = __webpack_require__(44);

var _axisTypeDecorator2 = _interopRequireDefault(_axisTypeDecorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function AxisTypeWithCategoryDecorator(builder) {
    _axisTypeDecorator2.default.call(this, builder);
}

AxisTypeWithCategoryDecorator.prototype = Object.create(_axisTypeDecorator2.default.prototype);
AxisTypeWithCategoryDecorator.prototype.constructor = AxisTypeWithCategoryDecorator;

// var sortRule = function (a, b) {
//     var xComp;
//     if (xAxisType === 'category') xComp = OptionUtils.stringSortRule(a.value[0], b.value[0]);
//     else if(xAxisType === 'time') xComp = OptionUtils.timeSortRule(a.value[0], b.value[0]);
//     else xComp = OptionUtils.numericSortRule(a.value[0], b.value[0]);
//
//     if (xComp === 0) {
//         var yComp;
//         if (yAxisType === 'category') yComp = OptionUtils.stringSortRule(a.value[1], b.value[1]);
//         else if(yAxisType === 'time') yComp = OptionUtils.timeSortRule(a.value[1], b.value[1]);
//         else yComp = OptionUtils.numericSortRule(a.value[1], b.value[1]);
//         return yComp;
//     } else {
//         return xComp;
//     }
// };

AxisTypeWithCategoryDecorator.prototype.decorate = function () {
    _axisTypeDecorator2.default.prototype.decorate.call(this);
    var builder = this.builder;
    var xAxisType = builder._getColumnDataType(builder.filterNullColumn(this.bOptions.xAxis[0].selected));
    var yAxisType = builder._getColumnDataType(builder.filterNullColumn(this.bOptions.yAxis[0].selected));

    var sortRuleX = function sortRuleX(a, b) {
        var comp;
        if (xAxisType === 'category') comp = _optionUtils2.default.stringSortRule(a, b);else if (xAxisType === 'time') comp = _optionUtils2.default.timeSortRule(a, b);else comp = _optionUtils2.default.numericSortRule(a * 1, b * 1);

        return comp;
    };

    var sortRuleY = function sortRuleY(a, b) {
        var comp;
        if (yAxisType === 'category') comp = _optionUtils2.default.stringSortRule(a, b);else if (yAxisType === 'time') comp = _optionUtils2.default.timeSortRule(a, b);else comp = _optionUtils2.default.numericSortRule(a * 1, b * 1);

        return comp;
    };

    this.eOptions.xAxis[0].data.sort(sortRuleX);
    this.eOptions.yAxis[0].data.sort(sortRuleY);
};

AxisTypeWithCategoryDecorator.prototype.setAxisType = function () {
    this.eOptions.xAxis[0].type = 'category';
    this.eOptions.yAxis[0].type = 'category';
};

exports.default = AxisTypeWithCategoryDecorator;

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _axisTypeDecorator = __webpack_require__(44);

var _axisTypeDecorator2 = _interopRequireDefault(_axisTypeDecorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function AxisTypeWithCategoryXDecorator(builder) {
    _axisTypeDecorator2.default.call(this, builder);
}

AxisTypeWithCategoryXDecorator.prototype = Object.create(_axisTypeDecorator2.default.prototype);
AxisTypeWithCategoryXDecorator.prototype.constructor = AxisTypeWithCategoryXDecorator;

AxisTypeWithCategoryXDecorator.prototype.decorate = function () {
    _axisTypeDecorator2.default.prototype.decorate.call(this);

    //axisSortRule = {sort: true, rule: "asc", type: "axis"}
    var builder = this.builder;
    var axisSortRule = builder._axisSortRule;
    var useSort = axisSortRule && axisSortRule.sort;
    var type = axisSortRule && axisSortRule.type;
    var rule = axisSortRule && axisSortRule.rule;
    if (useSort && type === 'value') {
        //Series Data Sort;
        var valueIndex = this.bOptions.chart.type === 'bar' ? 0 : 1;
        var series = this.eOptions.series;
        var axisData = [];
        var dataSortRule = function dataSortRule(a, b) {
            var comp;
            var first, second;
            if (rule === 'asc') {
                first = a;
                second = b;
            } else {
                first = b;
                second = a;
            }
            comp = _optionUtils2.default.numericSortRule(first.value[valueIndex] * 1, second.value[valueIndex] * 1);
            return comp;
        };
        for (var s in series) {
            var data = _.cloneDeep(series[s].data);
            data.sort(dataSortRule);
            data.map(function (item) {
                if (!axisData.includes(item.value[!valueIndex << 0])) {
                    axisData.push(item.value[!valueIndex << 0]);
                }
            });
        }
        this.eOptions.xAxis[0].data = axisData;
    } else {
        var sortRule = this._getSortRule(this.bOptions.xAxis[0].selected);
        this.eOptions.xAxis[0].data.sort(sortRule);
    }
};

AxisTypeWithCategoryXDecorator.prototype.setAxisType = function () {
    this.eOptions.xAxis[0].type = 'category';
    this.eOptions.yAxis[0].type = 'value';
};

exports.default = AxisTypeWithCategoryXDecorator;

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _axisTypeDecorator = __webpack_require__(44);

var _axisTypeDecorator2 = _interopRequireDefault(_axisTypeDecorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function AxisTypeWithCategoryYDecorator(builder) {
    _axisTypeDecorator2.default.call(this, builder);
}

AxisTypeWithCategoryYDecorator.prototype = Object.create(_axisTypeDecorator2.default.prototype);
AxisTypeWithCategoryYDecorator.prototype.constructor = AxisTypeWithCategoryYDecorator;

AxisTypeWithCategoryYDecorator.prototype.decorate = function () {
    _axisTypeDecorator2.default.prototype.decorate.call(this);

    //axisSortRule = {sort: true, rule: "asc", type: "axis"}
    var builder = this.builder;
    var axisSortRule = builder._axisSortRule;
    var useSort = axisSortRule && axisSortRule.sort;
    var type = axisSortRule && axisSortRule.type;
    var rule = axisSortRule && axisSortRule.rule;
    if (useSort && type === 'value') {
        //Series Data Sort;
        var valueIndex = this.bOptions.chart.type === 'bar' ? 0 : 1;
        var series = this.eOptions.series;
        var axisData = [];
        var dataSortRule = function dataSortRule(a, b) {
            var comp;
            var first, second;
            if (rule === 'asc') {
                first = a;
                second = b;
            } else {
                first = b;
                second = a;
            }
            comp = _optionUtils2.default.numericSortRule(first.value[valueIndex] * 1, second.value[valueIndex] * 1);
            return comp;
        };
        for (var s in series) {
            var data = _.cloneDeep(series[s].data);
            data.sort(dataSortRule);
            data.map(function (item) {
                if (!axisData.includes(item.value[!valueIndex << 0])) {
                    axisData.push(item.value[!valueIndex << 0]);
                }
            });
        }
        this.eOptions.yAxis[0].data = axisData;
    } else {
        var sortRule = this._getSortRule(this.bOptions.yAxis[0].selected);
        this.eOptions.yAxis[0].data.sort(sortRule);
    }

    // if (this.bOptions.yAxis[0].selected && this.bOptions.yAxis[0].selected.length > 0) {
    //     var sortRule = this._getSortRule(this.bOptions.yAxis[0].selected);
    //     this.eOptions.yAxis[0].data.sort(sortRule);
    // }
};

AxisTypeWithCategoryYDecorator.prototype.setAxisType = function () {
    this.eOptions.xAxis[0].type = 'value';
    this.eOptions.yAxis[0].type = 'category';
};

exports.default = AxisTypeWithCategoryYDecorator;

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function AxisLineOnZeroFalseDecorator(builder) {
    _decorator2.default.call(this, builder);
}

AxisLineOnZeroFalseDecorator.prototype = Object.create(_decorator2.default.prototype);
AxisLineOnZeroFalseDecorator.prototype.constructor = AxisLineOnZeroFalseDecorator;

AxisLineOnZeroFalseDecorator.prototype.decorate = function () {
    this.eOptions.xAxis[0].axisLine.onZero = false;
    this.eOptions.yAxis[0].axisLine.onZero = false;
};

exports.default = AxisLineOnZeroFalseDecorator;

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function AxisLineOnZeroTrueDecorator(builder) {
    _decorator2.default.call(this, builder);
}

AxisLineOnZeroTrueDecorator.prototype = Object.create(_decorator2.default.prototype);
AxisLineOnZeroTrueDecorator.prototype.constructor = AxisLineOnZeroTrueDecorator;

AxisLineOnZeroTrueDecorator.prototype.decorate = function () {
    this.eOptions.xAxis[0].axisLine.onZero = true;
    this.eOptions.yAxis[0].axisLine.onZero = true;
};

exports.default = AxisLineOnZeroTrueDecorator;

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BoxPlotByColumnNamesAxisDecorator(builder) {
    _decorator2.default.call(this, builder);
}

BoxPlotByColumnNamesAxisDecorator.prototype = Object.create(_decorator2.default.prototype);
BoxPlotByColumnNamesAxisDecorator.prototype.constructor = BoxPlotByColumnNamesAxisDecorator;

BoxPlotByColumnNamesAxisDecorator.prototype.decorate = function () {
    this.eOptions.xAxis[0].type = 'category';
    this.eOptions.xAxis[0].data = [];

    var localData = this.builder.getLocalData();
    var yIndexes = this.builder.getColumnIndexes(this.bOptions.yAxis[0].selected, localData.columns);

    for (var i = 0; i < yIndexes.length; i++) {
        if (localData.columns[yIndexes[i]]) {
            this.eOptions.xAxis[0].data.push(localData.columns[yIndexes[i]].name);
        }
    }
};

exports.default = BoxPlotByColumnNamesAxisDecorator;

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BoxPlotSeparateColorDecorator(builder) {
    _decorator2.default.call(this, builder);
}

BoxPlotSeparateColorDecorator.prototype = Object.create(_decorator2.default.prototype);
BoxPlotSeparateColorDecorator.prototype.constructor = BoxPlotSeparateColorDecorator;

BoxPlotSeparateColorDecorator.prototype.decorate = function () {
    var colorSet = {};
    var separateColor = this.plotOptions.separateColor;
    var categories = this.eOptions.xAxis[0].data;
    if (separateColor) {
        for (var c in categories) {
            colorSet[categories[c]] = this.eOptions.color[parseInt(c) % this.eOptions.color.length];
        }
    }
    for (var s in this.eOptions.series) {
        if (separateColor) {
            if (this.eOptions.series[s].type === 'boxplot') {
                this._separateBoxColor(this.eOptions.series[s], colorSet);
            } else {
                this._separateOutlierColor(this.eOptions.series[s], colorSet);
            }
        }
    }
};

BoxPlotSeparateColorDecorator.prototype._separateBoxColor = function (seriesItem, colorSet) {
    for (var d in seriesItem.data) {
        seriesItem.data[d].itemStyle = {
            normal: {
                borderColor: colorSet[seriesItem.data[d].name],
                color: '#fff'
            }
        };
    }
};

BoxPlotSeparateColorDecorator.prototype._separateOutlierColor = function (seriesItem, colorSet) {
    for (var d in seriesItem.data) {
        seriesItem.data[d].itemStyle = {
            normal: {
                color: colorSet[seriesItem.data[d].name]
            }
        };
    }
};

exports.default = BoxPlotSeparateColorDecorator;

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BrushDecorator(builder) {
    _decorator2.default.call(this, builder);
}

BrushDecorator.prototype = Object.create(_decorator2.default.prototype);
BrushDecorator.prototype.constructor = BrushDecorator;

BrushDecorator.prototype.decorate = function () {
    this.eOptions.brush = {
        xAxisIndex: 0
        // throttleType: 'debounce',
        // throttleDelay: 1000
    };

    if (this.bOptions.toolbar.type === 'custom') {
        $.extend(true, this.eOptions.brush, this.bOptions.toolbar.menu.brush);
    }
};

exports.default = BrushDecorator;

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BrushRemovalDecorator(builder) {
    _decorator2.default.call(this, builder);
}

BrushRemovalDecorator.prototype = Object.create(_decorator2.default.prototype);
BrushRemovalDecorator.prototype.constructor = BrushRemovalDecorator;

BrushRemovalDecorator.prototype.decorate = function () {
    delete this.eOptions.brush;
};

exports.default = BrushRemovalDecorator;

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BubbleSizeDecorator(builder) {
    _decorator2.default.call(this, builder);
}

BubbleSizeDecorator.prototype = Object.create(_decorator2.default.prototype);
BubbleSizeDecorator.prototype.constructor = BubbleSizeDecorator;

BubbleSizeDecorator.prototype.decorate = function () {
    var series = this.eOptions.series;

    var max = -Infinity;
    var min = Infinity;

    for (var s in series) {
        var seriesItem = series[s];
        if (seriesItem.type !== 'scatter') continue;
        for (var d in seriesItem.data) {
            var data = seriesItem.data[d];
            if (data.value.length <= 2) continue;
            var sizeData = data.value[2];
            min = Math.min(min, sizeData);
            max = Math.max(max, sizeData);
        }
    }

    var diff = Math.abs(max - min);
    var prop = max / min;

    for (var s in series) {
        series[s].symbolSize = function (data) {
            if (prop > 0 && prop < 4) {
                return Math.abs(data[2]) * (10 / min);
            }
            return (Math.abs(data[2]) - Math.abs(min)) * (30 / diff) + 10;
        };
    }
};

exports.default = BubbleSizeDecorator;

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ComplexDataZoomDecorator(builder, options) {
    _decorator2.default.call(this, builder, options);
}

ComplexDataZoomDecorator.prototype = Object.create(_decorator2.default.prototype);
ComplexDataZoomDecorator.prototype.constructor = ComplexDataZoomDecorator;

ComplexDataZoomDecorator.prototype.decorate = function () {
    this.eOptions.dataZoom = [{
        type: 'inside',
        filterMode: 'filter',
        xAxisIndex: [0],
        disabled: true
    }];
};

exports.default = ComplexDataZoomDecorator;

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function FillXCategoryValuesDecorator(builder) {
    _decorator2.default.call(this, builder);
}

FillXCategoryValuesDecorator.prototype = Object.create(_decorator2.default.prototype);
FillXCategoryValuesDecorator.prototype.constructor = FillXCategoryValuesDecorator;

FillXCategoryValuesDecorator.prototype.decorate = function () {
    var builder = this.builder;
    var axisSortRule = builder._axisSortRule;
    var rule = axisSortRule && axisSortRule.rule;
    for (var s in this.eOptions.series) {
        if (this.eOptions.series[s].virtualSeries) continue;
        var seriesData = this.eOptions.series[s].data;
        var categories = $.extend(true, [], this.eOptions.xAxis[0].data);
        for (var i in seriesData) {
            var data = seriesData[i];
            categories.splice(categories.indexOf(data.value[0]), 1);
        }
        for (var c in categories) {
            seriesData.push({ value: [categories[c], 0] });
        }
        var axisType = builder._getColumnDataType(builder.filterNullColumn(this.bOptions.xAxis[0].selected));
        var sortRule = function sortRule(a, b) {
            var comp, first, second;
            if (rule === 'desc') {
                first = b;
                second = a;
            } else {
                first = a;
                second = b;
            }
            if (axisType === 'category') comp = _optionUtils2.default.stringSortRule(first.value[0], second.value[0]);else if (axisType === 'time') comp = _optionUtils2.default.timeSortRule(first.value[0], second.value[0]);else comp = _optionUtils2.default.numericSortRule(first.value[0] * 1, second.value[0] * 1);

            return comp;
        };
        seriesData.sort(sortRule);
    }
};

exports.default = FillXCategoryValuesDecorator;

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function HeatmapDataZoomDecorator(builder) {
    _decorator2.default.call(this, builder);
} /**
   * Created by SDS on 2018-01-24.
   */

HeatmapDataZoomDecorator.prototype = Object.create(_decorator2.default.prototype);
HeatmapDataZoomDecorator.prototype.constructor = HeatmapDataZoomDecorator;

HeatmapDataZoomDecorator.prototype.decorate = function () {

    var defaultVisualMap = {
        inRange: {
            color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']
        }
    };

    for (var s in this.eOptions.series) {
        this.eOptions.series[s].dataZoom = $.extend(true, this.eOptions.series[s].dataZoom, { visualMap: { right: 0, top: 40, calculable: true } }, { visualMap: defaultVisualMap }, { visualMap: this.bOptions.visualMap });
    }
};

exports.default = HeatmapDataZoomDecorator;

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ItemOpacity7Decorator(builder) {
    _decorator2.default.call(this, builder);
}

ItemOpacity7Decorator.prototype = Object.create(_decorator2.default.prototype);
ItemOpacity7Decorator.prototype.constructor = ItemOpacity7Decorator;

ItemOpacity7Decorator.prototype.decorate = function () {
    for (var s in this.eOptions.series) {
        this.eOptions.series[s].itemStyle.normal.opacity = 0.7;
    }
};

exports.default = ItemOpacity7Decorator;

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function LineByDecorator(builder) {
    _decorator2.default.call(this, builder);
}

LineByDecorator.prototype = Object.create(_decorator2.default.prototype);
LineByDecorator.prototype.constructor = LineByDecorator;

LineByDecorator.prototype.decorate = function () {
    var builder = this.builder;
    var lineByOffset = this.plotOptions.lineBy ? this.plotOptions.lineBy[0].selected.length : 0;
    if (lineByOffset === 0 && !builder.complexKey) return;

    var colorByList = builder.getDistinctColorByList();
    var seriesNameIdx = builder.seriesNameIdx || 0;
    var seriesColor;

    var eOptionSeries = this.eOptions.series;
    for (var s in eOptionSeries) {
        if (eOptionSeries[s].virtualSeries) continue;
        var colorByKeyName = eOptionSeries[s].name;
        var colorIndex = colorByList.indexOf(colorByKeyName);
        if (colorIndex !== -1) {
            seriesColor = this.bOptions.colorSet[seriesNameIdx + colorIndex];
            eOptionSeries[s].itemStyle = $.extend(true, {}, eOptionSeries[s].itemStyle, { normal: { color: seriesColor } });
            eOptionSeries[s].lineStyle = $.extend(true, {}, eOptionSeries[s].lineStyle, { normal: { color: seriesColor } });
        }
    }
};

exports.default = LineByDecorator;

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function LineStyleDecorator(builder) {
    _decorator2.default.call(this, builder);
}

LineStyleDecorator.prototype = Object.create(_decorator2.default.prototype);
LineStyleDecorator.prototype.constructor = LineStyleDecorator;

LineStyleDecorator.prototype.decorate = function () {
    for (var s in this.eOptions.series) {
        var seriesItem = this.eOptions.series[s];
        if (seriesItem.virtualSeries || seriesItem.itemStyle) continue;
        seriesItem.lineStyle = { normal: { opacity: seriesItem.itemStyle.normal.opacity } };
    }
};

exports.default = LineStyleDecorator;

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function MarkerByTypeDecorator(builder, options) {
    _decorator2.default.call(this, builder, options);
} /**
   *
   * @param builder : OptionBuilder
   * @param options : { seriesType1 : plotOptionsType1, .... }
   * ex)
   *  {
       *      'scatter' : 'projection'
       *      'line' : 'component'
       *  }
   */


MarkerByTypeDecorator.prototype = Object.create(_decorator2.default.prototype);
MarkerByTypeDecorator.prototype.constructor = MarkerByTypeDecorator;

MarkerByTypeDecorator.prototype.decorate = function () {
    for (var s in this.eOptions.series) {
        var seriesItem = this.eOptions.series[s];
        if (seriesItem.virtualSeries) continue;
        var plotOptions = this.plotOptions;
        if (plotOptions && typeof plotOptions.marker !== 'undefined') {
            for (var attrName in plotOptions.marker) {
                seriesItem[attrName] = plotOptions.marker[attrName];
            }
        }
    }
};

exports.default = MarkerByTypeDecorator;

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _markerDecorator = __webpack_require__(78);

var _markerDecorator2 = _interopRequireDefault(_markerDecorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BarMarkerDecorator(builder, options) {
    _markerDecorator2.default.call(this, builder, options);
}

BarMarkerDecorator.prototype = Object.create(_markerDecorator2.default.prototype);
BarMarkerDecorator.prototype.constructor = BarMarkerDecorator;

BarMarkerDecorator.prototype._chartFormatter = function (formatter, length) {
    var numberFmtRgx = /{(0*[\,\.]0*[a-zA-Z]?)}|{(0*\,0*\.0*[a-zA-Z]?)}/g;

    if (!formatter) {
        return function (params) {
            if (isNaN(params.value[0])) return params.value[0];else return parseFloat(params.value[0]).toFixed(length);
        };
    } else {
        return function (params) {
            if (!isNaN(params.value[0]) && numberFmtRgx.test(formatter)) {
                var resultFmt = numberFmtRgx.exec(formatter) || numberFmtRgx.exec(formatter);
                return formatter.replace(numberFmtRgx, params.value[0] != null ? numeral(params.value[0]).format(resultFmt[1] || resultFmt[2]) : '');
            } else {
                if (formatter.indexOf('{value}') > -1) {
                    return formatter.replace('{value}', params.value[0] != null ? params.value[0] : '');
                } else {
                    return params.value[0];
                }
            }
        };
    }
};

exports.default = BarMarkerDecorator;

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function MapStyleDecorator(builder) {
    _decorator2.default.call(this, builder);
}

MapStyleDecorator.prototype = Object.create(_decorator2.default.prototype);
MapStyleDecorator.prototype.constructor = MapStyleDecorator;

MapStyleDecorator.prototype.decorate = function () {
    $.extend(true, this.eOptions.geo, this.builder.plotOptions.mapStyle);
};

exports.default = MapStyleDecorator;

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Created by SDS on 2018-01-24.
 */
function PairwiseAxisDecorator(builder) {
    _decorator2.default.call(this, builder);
}

PairwiseAxisDecorator.prototype = Object.create(_decorator2.default.prototype);
PairwiseAxisDecorator.prototype.constructor = PairwiseAxisDecorator;

PairwiseAxisDecorator.prototype.decorate = function () {
    var localData = this.builder.getLocalData();
    var axisIndexes = _optionUtils2.default.getColumnIndexes(this.builder.getSeriesDataColumns(), localData.columns);
    var i, secondAxisIndex;
    this.eOptions.xAxis;
    this.eOptions.xAxis;

    for (i = 0; i < axisIndexes.length * axisIndexes.length; i++) {
        this.eOptions.xAxis[i] = $.extend(true, {}, this.eOptions.xAxis[0]);
        this.eOptions.xAxis[i].gridIndex = i;
        this.eOptions.xAxis[i].splitNumber = 3;
        this.eOptions.xAxis[i].position = 'bottom';
        this.eOptions.xAxis[i].axisLine = {
            show: i % axisIndexes.length === axisIndexes.length - 1
        };
        this.eOptions.xAxis[i].axisLabel = {
            show: i % axisIndexes.length === axisIndexes.length - 1
        };
        this.eOptions.xAxis[i].splitLine = { show: true };
        this.eOptions.xAxis[i].axisTick = {
            show: i % axisIndexes.length === axisIndexes.length - 1,
            inside: true
        };

        this.eOptions.yAxis[i] = $.extend(true, {}, this.eOptions.yAxis[0]);
        this.eOptions.yAxis[i].gridIndex = i;
        this.eOptions.yAxis[i].splitNumber = 3;
        this.eOptions.yAxis[i].position = 'left';
        this.eOptions.yAxis[i].axisLine = {
            show: i < axisIndexes.length
        };
        this.eOptions.yAxis[i].axisLabel = {
            show: i < axisIndexes.length
        };
        this.eOptions.yAxis[i].splitLine = { show: true };
        this.eOptions.yAxis[i].axisTick = {
            show: i < axisIndexes.length,
            inside: true
        };
    }
};

exports.default = PairwiseAxisDecorator;

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Created by SDS on 2018-01-24.
 */
function PairwiseGridDecorator(builder) {
    _decorator2.default.call(this, builder);
}

PairwiseGridDecorator.prototype = Object.create(_decorator2.default.prototype);
PairwiseGridDecorator.prototype.constructor = PairwiseGridDecorator;

PairwiseGridDecorator.prototype.decorate = function () {
    var localData = this.builder.getLocalData();
    var axisIndexes = _optionUtils2.default.getColumnIndexes(this.builder.getSeriesDataColumns(), localData.columns);
    var firstAxisIndex, secondAxisIndex;
    var grid = this.bOptions.grid;
    var percentToNumber = function percentToNumber(percent) {
        if (String(percent).indexOf('%') < 0) return 5;
        return String(percent).replace('%', '') * 1;
    };
    this.eOptions.grid = [];

    var CATEGORY_DIM_COUNT = axisIndexes.length;
    var GAP = 2;
    var BASE_LEFT = percentToNumber(grid.left);
    var BASE_RIGHT = percentToNumber(grid.right);
    var BASE_TOP = percentToNumber(grid.top);
    var BASE_BOTTOM = percentToNumber(grid.bottom);
    var GRID_WIDTH = (100 - BASE_LEFT - BASE_RIGHT - GAP) / CATEGORY_DIM_COUNT - GAP;
    var GRID_HEIGHT = (100 - BASE_TOP - GAP - BASE_BOTTOM) / CATEGORY_DIM_COUNT - GAP;

    for (firstAxisIndex = 0; firstAxisIndex < axisIndexes.length; firstAxisIndex++) {
        for (secondAxisIndex = 0; secondAxisIndex < axisIndexes.length; secondAxisIndex++) {
            this.eOptions.grid.push({
                left: BASE_LEFT + firstAxisIndex * (GRID_WIDTH + GAP) + '%',
                top: BASE_TOP + secondAxisIndex * (GRID_HEIGHT + GAP) + '%',
                width: GRID_WIDTH + '%',
                height: GRID_HEIGHT + '%'
            });
        }
    }
};

exports.default = PairwiseGridDecorator;

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PlotOptionsDecorator(builder) {
    _decorator2.default.call(this, builder);
}

PlotOptionsDecorator.prototype = Object.create(_decorator2.default.prototype);
PlotOptionsDecorator.prototype.constructor = PlotOptionsDecorator;

PlotOptionsDecorator.prototype.decorate = function () {
    for (var s in this.eOptions.series) {
        var seriesItem = this.eOptions.series[s];
        if (seriesItem.virtualSeries) continue;
        var plotOptions = this.plotOptions;
        var plotOptionAttributes = this.builder.plotOptionAttributes;
        var tmp = {};
        for (var i in plotOptionAttributes) {
            var attr = plotOptionAttributes[i];
            if (typeof plotOptions[attr] !== 'undefined') {
                tmp[attr] = plotOptions[attr];
            }
        }
        $.extend(true, seriesItem, tmp);
    }
};

exports.default = PlotOptionsDecorator;

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function SeriesNameSetDecorator(builder) {
    _decorator2.default.call(this, builder);
} /**
   * Created by sds on 2018-01-30.
   */


SeriesNameSetDecorator.prototype = Object.create(_decorator2.default.prototype);
SeriesNameSetDecorator.prototype.constructor = SeriesNameSetDecorator;

SeriesNameSetDecorator.prototype.decorate = function () {

    var builder = this.builder;

    var eOptionSeries = builder.series;
    var seriesName = {};
    //FIXME: decorator 내에서 series loop 한번만 돌게 리펙토링 필요
    for (var s in eOptionSeries) {
        if (eOptionSeries[s].virtualSeries) continue;
        var colorByKeyName = eOptionSeries[s].name;
        seriesName[colorByKeyName] = null;
    }
    builder.seriesNameSet = Object.keys(seriesName);
};

exports.default = SeriesNameSetDecorator;

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function SeriesStacked100Decorator(builder, options) {
    _decorator2.default.call(this, builder, options);
}

SeriesStacked100Decorator.prototype = Object.create(_decorator2.default.prototype);
SeriesStacked100Decorator.prototype.constructor = SeriesStacked100Decorator;

SeriesStacked100Decorator.prototype.decorate = function () {
    var series = this.eOptions.series;
    // var categories = this.eOptions.xAxis[0].data;
    var categories = this.eOptions[this.options.column][0].data;
    var valueIndex = this.options.valueIndex;

    for (var categoryIdx = 0; categoryIdx < categories.length; categoryIdx++) {
        var categorySum = 0;

        for (var seriesIdx = 0; seriesIdx < series.length; seriesIdx++) {
            if (series[seriesIdx].virtualSeries) continue;
            categorySum += Math.abs(series[seriesIdx].data[categoryIdx].value[valueIndex]);
        }
        for (var seriesIdx = 0; seriesIdx < series.length; seriesIdx++) {
            if (series[seriesIdx].virtualSeries) continue;
            series[seriesIdx].data[categoryIdx].actualValue = series[seriesIdx].data[categoryIdx].value[valueIndex];
            if (categorySum == 0) {
                series[seriesIdx].data[categoryIdx].value[valueIndex] = 0;
            } else {
                series[seriesIdx].data[categoryIdx].value[valueIndex] = Math.abs(series[seriesIdx].data[categoryIdx].value[valueIndex] / categorySum * 100);
            }
        }
    }

    this.eOptions.series = series;
};

exports.default = SeriesStacked100Decorator;

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function SeriesStackedDecorator(builder, options) {
    _decorator2.default.call(this, builder, options);
}

SeriesStackedDecorator.prototype = Object.create(_decorator2.default.prototype);
SeriesStackedDecorator.prototype.constructor = SeriesStackedDecorator;

SeriesStackedDecorator.prototype.decorate = function () {
    var series = this.eOptions.series;
    var categoryTarget, categories, categoryValue;
    if (this.eOptions.xAxis[0].type === 'category') {
        categoryTarget = 0;
        categories = this.eOptions.xAxis[0].data;
    } else {
        categoryTarget = 1;
        categories = this.eOptions.yAxis[0].data;
    }

    for (var seriesIdx = 0; seriesIdx < series.length; seriesIdx++) {
        if (series[seriesIdx].virtualSeries) continue;

        var categoryMap = series[seriesIdx].extractor.getCategoryMap(categoryTarget);

        for (var categoryIdx = 0; categoryIdx < categories.length; categoryIdx++) {
            categoryValue = categories[categoryIdx];
            if (categoryMap[categoryValue]) continue;

            var data;
            if (categoryTarget === 0) {
                data = { value: [categoryValue, 0] };
            } else {
                data = { value: [0, categoryValue] };
            }
            series[seriesIdx].data.push(data);
        }

        series[seriesIdx].data.sort(function (dataA, dataB) {
            var a = dataA.value[categoryTarget],
                b = dataB.value[categoryTarget];
            if (typeof a !== 'string' || typeof b !== 'string') return typeof a !== 'string' ? 1 : -1;else if (a < b) return -1;else if (a == b) return 0;else return 1;
        });
    }

    this.eOptions.series = series;
};

exports.default = SeriesStackedDecorator;

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function StripLineDecorator(builder) {
    _decorator2.default.call(this, builder);
}

StripLineDecorator.prototype = Object.create(_decorator2.default.prototype);
StripLineDecorator.prototype.constructor = StripLineDecorator;

StripLineDecorator.prototype.decorate = function () {
    this._buildLineSeries('strip', this.plotOptions.stripLine);
    //this._buildLineSeries('trend', this.plotOptions.trendLine);
};

StripLineDecorator.prototype._buildLineSeries = function (type, lineObj) {
    if (!lineObj) {
        return;
    }
    var additionalLine = {
        virtualSeries: true,
        type: 'line',
        itemStyle: {
            normal: {}
        },
        data: []
    };

    if (!(lineObj && lineObj.data) || $.isEmptyObject(lineObj.data[0])) {
        this.eOptions.series.push(additionalLine);
        return;
    }

    var lineDataArr = [];
    var lineOption = $.extend(true, {}, lineObj);
    if (type === 'trend') {
        //trend line
        lineDataArr = lineObj.data;
    } else if (type === 'strip') {
        //strip line
        var tempDataObj;
        lineOption = $.extend(true, {}, lineObj);
        for (var axis in lineOption.data[0]) {
            if (this.eOptions[axis][0].type !== 'value' || this.eOptions[axis][0].axisType === 'byRowIndex') {
                continue;
            }
            var axisDataArr = lineOption.data[0][axis];
            for (var dataIdx = 0; dataIdx < axisDataArr.length; dataIdx++) {
                tempDataObj = {};
                tempDataObj[axis] = axisDataArr[dataIdx].value || 0;
                if (axisDataArr[dataIdx].lineStyle) {
                    tempDataObj.lineStyle = axisDataArr[dataIdx].lineStyle;
                }
                lineDataArr.push(tempDataObj);
            }
        }
    } else {
        console.log('line type is not specified.');
        return;
    }
    delete lineOption.data;

    additionalLine.markLine = $.extend(true, {
        animation: false,
        silent: true,
        symbol: 'circle',
        symbolSize: 0
    }, lineOption, { data: lineDataArr });

    this.eOptions.series.push(additionalLine);
};

exports.default = StripLineDecorator;

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _tooltipItemCalculatedDecorator = __webpack_require__(79);

var _tooltipItemCalculatedDecorator2 = _interopRequireDefault(_tooltipItemCalculatedDecorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipAxisCalculatedDecorator(builder) {
    _tooltipDecorator2.default.call(this, builder);
}

TooltipAxisCalculatedDecorator.prototype = Object.create(_tooltipDecorator2.default.prototype);
TooltipAxisCalculatedDecorator.prototype.constructor = TooltipAxisCalculatedDecorator;

TooltipAxisCalculatedDecorator.prototype._getAxisKeyTooltip = function (param, division, keyColumns) {
    var builder = this.builder;
    var keyItems = [];
    if (param.seriesName) {
        if (builder._internalOptions().series[param.seriesIndex]) {
            var extractor = builder._internalOptions().series[param.seriesIndex].extractor;
            if (extractor) {
                var keyColumnsNames = keyColumns.map(function (item) {
                    return item.name;
                });
                if (keyColumnsNames.length > 0) {
                    if (extractor.keys.join(',').split(" ").length > 1) {
                        keyItems.push(division(keyColumnsNames.join(',') + ' : ' + extractor.keys.join(',').split(" ")[1]));
                    } else {
                        keyItems.push(division(keyColumnsNames.join(',') + ' : ' + extractor.keys.join(',')));
                    }
                }
            }
        } else {
            keyItems.push(division(param.seriesName));
        }
    }

    return keyItems;
};

TooltipAxisCalculatedDecorator.prototype._getAxisValueTooltip = function (param, dataColumns, isMultiYAxis) {
    if (isMultiYAxis) {
        return param.seriesName.split(" ")[0] + ' : ' + param.value[1];
    } else {
        return _optionUtils2.default.getColumnLabel(dataColumns[1]) + ' : ' + param.value[1];
    }
};

TooltipAxisCalculatedDecorator.prototype._getItemKeyTooltip = function (params, keyColumns) {
    var keyItems = [];
    var extractor = this.builder._internalOptions().series[params.seriesIndex].extractor;
    var keyColumnNames = keyColumns.map(function (item) {
        return item.name;
    });
    if (extractor.keys.join(',').split(" ").length > 1) {
        keyItems.push(keyColumnNames.join(',') + ' : ' + extractor.keys.join(',').split(" ")[1]);
    } else {
        keyItems.push(keyColumnNames.join(',') + ' : ' + extractor.keys.join(','));
    }
    return keyItems;
};

TooltipAxisCalculatedDecorator.prototype._getItemYTooltip = function (params, dataColumns, isMultiYAxis) {
    if (isMultiYAxis) {
        return params.seriesName.split(" ")[0] + ' : ' + params.value[1];
    } else {
        return _optionUtils2.default.getColumnLabel(dataColumns[1]) + ' : ' + params.value[1];
    }
};

exports.default = TooltipAxisCalculatedDecorator;

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipAxisPointerYDecorator(builder) {
    _decorator2.default.call(this, builder);
}

TooltipAxisPointerYDecorator.prototype = Object.create(_decorator2.default.prototype);
TooltipAxisPointerYDecorator.prototype.constructor = TooltipAxisPointerYDecorator;

TooltipAxisPointerYDecorator.prototype.decorate = function () {
    if (this.plotOptions.hasOwnProperty('tooltip')) {
        if (!this.plotOptions.tooltip.hasOwnProperty('axisPointer')) {
            this.eOptions.tooltip.axisPointer = {
                axis: 'y'
            };
        }
    } else {
        this.eOptions.tooltip.axisPointer = {
            axis: 'y'
        };
    }
};

exports.default = TooltipAxisPointerYDecorator;

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipAxisPointerShadowDecorator(builder) {
    _decorator2.default.call(this, builder);
}

TooltipAxisPointerShadowDecorator.prototype = Object.create(_decorator2.default.prototype);
TooltipAxisPointerShadowDecorator.prototype.constructor = TooltipAxisPointerShadowDecorator;

TooltipAxisPointerShadowDecorator.prototype.decorate = function () {
    if (this.plotOptions.hasOwnProperty('tooltip')) {
        if (!this.plotOptions.tooltip.hasOwnProperty('axisPointer')) {
            this.eOptions.tooltip.axisPointer = {
                type: 'shadow'
            };
        }
    } else {
        this.eOptions.tooltip.axisPointer = {
            type: 'shadow'
        };
    }
};

exports.default = TooltipAxisPointerShadowDecorator;

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipBoxPlotByColumnNamesDecorator(builder) {
    _tooltipDecorator2.default.call(this, builder);
}

TooltipBoxPlotByColumnNamesDecorator.prototype = Object.create(_tooltipDecorator2.default.prototype);
TooltipBoxPlotByColumnNamesDecorator.prototype.constructor = TooltipBoxPlotByColumnNamesDecorator;

TooltipBoxPlotByColumnNamesDecorator.prototype.decorate = function () {
    var _this = this;
    var builder = this.builder;
    var dataColumns = builder.getSeriesDataColumns();
    this.eOptions.tooltip.formatter = function (params, ticket, callback) {
        if (params.seriesType === 'scatter') {
            return _this._getOutlierTooltip(params, dataColumns);
        } else if ($.isPlainObject(params.data)) {
            return _this._getCalculatedTooltip(dataColumns[0].name, params.name, params.data);
        } else {
            return _this._getCalculatedTooltip(dataColumns[0].name, params.name, params);
        }
    };
};

TooltipBoxPlotByColumnNamesDecorator.prototype._getOutlierTooltip = function (params, dataColumns) {
    return [dataColumns[params.data.value[0]].name + ': ' + params.data.value[1]].join('<br/>');
};

TooltipBoxPlotByColumnNamesDecorator.prototype._getCalculatedTooltip = function (colName, actualVal, calcValList) {
    return [actualVal, 'Maximum: ' + calcValList.value[5], 'Upper quartile: ' + calcValList.value[4], 'Median: ' + calcValList.value[3], 'Lower quartile: ' + calcValList.value[2], 'Minimum: ' + calcValList.value[1]].join('<br/>');
};

exports.default = TooltipBoxPlotByColumnNamesDecorator;

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipBoxPlotDecorator(builder) {
    _tooltipDecorator2.default.call(this, builder);
}

TooltipBoxPlotDecorator.prototype = Object.create(_tooltipDecorator2.default.prototype);
TooltipBoxPlotDecorator.prototype.constructor = TooltipBoxPlotDecorator;

TooltipBoxPlotDecorator.prototype.decorate = function () {
    var _this = this;
    var builder = this.builder;
    var dataColumns = builder.getSeriesDataColumns();
    this.eOptions.tooltip.formatter = function (params, ticket, callback) {
        if (params.seriesType === 'scatter') {
            return _this._getOutlierTooltip(params, dataColumns);
        } else if ($.isPlainObject(params.data)) {
            return _this._getCalculatedTooltip(dataColumns[0].name, params.name, params.data);
        } else {
            return _this._getCalculatedTooltip(dataColumns[0].name, params.name, params);
        }
    };
};

TooltipBoxPlotDecorator.prototype._getOutlierTooltip = function (params, dataColumns) {
    return [dataColumns[0].name + ': ' + (params.data.value ? params.data.value[0] : params.data[0]), dataColumns[1].name + ': ' + (params.data.value ? params.data.value[1] : params.data[1])].join('<br/>');
};

TooltipBoxPlotDecorator.prototype._getCalculatedTooltip = function (colName, actualVal, calcValList) {
    return [colName + ': ' + actualVal, 'Maximum: ' + calcValList.value[5], 'Upper quartile: ' + calcValList.value[4], 'Median: ' + calcValList.value[3], 'Lower quartile: ' + calcValList.value[2], 'Minimum: ' + calcValList.value[1]].join('<br/>');
};

exports.default = TooltipBoxPlotDecorator;

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipBubbleDecorator(builder) {
    _tooltipDecorator2.default.call(this, builder);
}

TooltipBubbleDecorator.prototype = Object.create(_tooltipDecorator2.default.prototype);
TooltipBubbleDecorator.prototype.constructor = TooltipBubbleDecorator;

TooltipBubbleDecorator.prototype._buildItemTooltip = function () {
    var builder = this.builder;
    var _this = this;

    var keyColumns = builder.getTooltipKeyColumns();
    var keyColumnIndexes = builder.getTooltipKeyColumnIndexes();
    var dataColumns = builder.getTooltipDataColumns();
    var dataColumnIndexes = builder.getTooltipDataColumnIndexes();
    this.eOptions.tooltip.formatter = function (params, ticket, callback) {
        var toolItems = [];

        if (params.seriesName) {
            toolItems.push(_this._getLegendItemTooltip(params));
            toolItems = toolItems.concat(_this._getItemKeyTooltip(params, keyColumns));
        }
        if (params.componentType === 'markLine' || params.componentType === 'markPoint') {
            toolItems.push(params.name + ' : ' + params.value);
        } else {
            toolItems.push(_this._getItemXTooltip(params, dataColumns));
            toolItems.push(_this._getItemYTooltip(params, dataColumns));
            toolItems.push(_this._getItemSizeByTooltip(params, dataColumns));
        }

        return function () {
            var result = [];
            for (var t in toolItems) {
                if (result.indexOf(toolItems[t]) === -1) {
                    result.push(toolItems[t]);
                }
            }
            return result;
        }().join('<br>');
    };
};

TooltipBubbleDecorator.prototype._getItemSizeByTooltip = function (params, dataColumns) {
    var columnName = dataColumns[2] ? _optionUtils2.default.getColumnLabel(dataColumns[2]) : 'Count';
    return columnName + ' : ' + params.value[2];
};

exports.default = TooltipBubbleDecorator;

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipByColumnNamesDecorator(builder) {
    _tooltipDecorator2.default.call(this, builder);
}

TooltipByColumnNamesDecorator.prototype = Object.create(_tooltipDecorator2.default.prototype);
TooltipByColumnNamesDecorator.prototype.constructor = TooltipByColumnNamesDecorator;

TooltipByColumnNamesDecorator.prototype._buildItemTooltip = function () {
    var builder = this.builder;
    var _this = this;

    var keyColumns = builder.getTooltipKeyColumns();
    var keyColumnIndexes = builder.getTooltipKeyColumnIndexes();
    var categories = this._getColumnNamesCategories();
    this.eOptions.tooltip.formatter = function (params, ticket, callback) {
        var toolItems = [];

        if (params.seriesName) {
            toolItems.push(_this._getLegendItemTooltip(params));
            var extractor = builder._internalOptions().series[params.seriesIndex].extractor;
            for (var k = 0; k < keyColumnIndexes.length; k++) {
                toolItems.push(keyColumns[k].name + ' : ' + extractor.keys[k]);
            }
        }
        toolItems.push(_this._getItemByColumnNamesTooltip(params, categories));

        return function () {
            var result = [];
            for (var t in toolItems) {
                if (result.indexOf(toolItems[t]) === -1) {
                    result.push(toolItems[t]);
                }
            }
            return result;
        }().join('<br>');
    };
};

TooltipByColumnNamesDecorator.prototype._getItemByColumnNamesTooltip = function (params, categories) {
    return categories[params.data.categoryIndex] + ' : ' + params.value[1];
};

TooltipByColumnNamesDecorator.prototype._buildAxisTooltip = function () {
    var builder = this.builder;
    var _this = this;

    var keyColumns = builder.getTooltipKeyColumns();
    var categories = this._getColumnNamesCategories();
    this.eOptions.tooltip.formatter = function (params, ticket, callback) {
        var toolItems = [];
        if (Array.isArray(params)) {
            var series = builder.series;
            for (var p in params) {
                if (builder._internalOptions().series[params[p].seriesIndex].virtualSeries) continue;

                var axisNameTooltip = 'Column Name : ' + params[p].name;
                if (!axisNameTooltip) continue;
                toolItems.push(axisNameTooltip);

                var division = function division(text) {
                    return '<div title="' + text + '">' + text + '</div>';
                };
                if (params[p].seriesName || params[p].seriesType === 'line') {
                    division = function division(text) {
                        return '<div title="' + text + '" style="color: ' + params[p].color + ';" series-name:"' + params[p].seriesName + '">' + text + '</div>';
                    };
                    toolItems.push(_this._getLegendAxisTooltip(params[p], division));
                    toolItems = toolItems.concat(_this._getAxisKeyTooltip(params[p], division, keyColumns));
                }
                toolItems.push(division(categories[params[p].value[0]] + ' : ' + params[p].value[1]));
            }
        } else {
            if (params.componentType === 'markLine' || params.componentType === 'markPoint') {
                toolItems.push(params.name + ' : ' + params.value);
            }
        }

        return function () {
            var result = [];
            for (var t in toolItems) {
                if (result.indexOf(toolItems[t]) === -1) {
                    result.push(toolItems[t]);
                }
            }
            return result;
        }().join('');
    };
};

exports.default = TooltipByColumnNamesDecorator;

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipByRowIndexDecorator(builder) {
    _tooltipDecorator2.default.call(this, builder);
}

TooltipByRowIndexDecorator.prototype = Object.create(_tooltipDecorator2.default.prototype);
TooltipByRowIndexDecorator.prototype.constructor = TooltipByRowIndexDecorator;

TooltipByRowIndexDecorator.prototype._buildItemTooltip = function () {
    var _this = this;
    var builder = this.builder;
    var columns = builder.getAllColumns();

    this.eOptions.tooltip.formatter = function (params, ticket, callback) {
        var toolItems = [];

        toolItems.push(_this._getLegendItemTooltip(params));
        toolItems.push('Row Index : ' + params.value[0]);
        toolItems.push(columns[params.data.categoryIndex].name + ' : ' + params.value[1]);

        return function () {
            var result = [];
            for (var t in toolItems) {
                if (result.indexOf(toolItems[t]) === -1) {
                    result.push(toolItems[t]);
                }
            }
            return result;
        }().join('<br>');
    };
};

TooltipByRowIndexDecorator.prototype._buildAxisTooltip = function () {
    var builder = this.builder;
    var _this = this;

    var keyColumns = builder.getTooltipKeyColumns();
    var dataColumns = builder.getTooltipDataColumns();
    var seriesIndex;
    this.eOptions.tooltip.formatter = function (params, ticket, callback) {
        var toolItems = [];
        if (Array.isArray(params)) {
            var series = builder.series;

            for (var p in params) {
                if (builder._internalOptions().series[params[p].seriesIndex].virtualSeries) continue;
                seriesIndex = params[p].seriesIndex;

                if (toolItems.length === 0) {
                    toolItems.push('Row Index : ' + params[p].value[0]);
                }

                var division = function division(text) {
                    return '<div title="' + text + '">' + text + '</div>';
                };
                if (params[p].seriesName) {
                    division = function division(text) {
                        return '<div title="' + text + '" style="color: ' + params[p].color + ';" series-name:"' + params[p].seriesName + '">' + text + '</div>';
                    };
                    toolItems.push(_this._getLegendAxisTooltip(params[p], division));
                    toolItems = toolItems.concat(_this._getAxisKeyTooltip(params[p], division, keyColumns));
                }
                seriesIndex = params[p].seriesIndex;
                if (_this._hasTooltipHeaders(series[seriesIndex])) {
                    toolItems.push(division(series[seriesIndex].tooltipHeaders[1] + ': ' + params[p].value[1]));
                } else {
                    toolItems.push(division(_this._getAxisValueTooltip(params[p], dataColumns)));
                }
            }
        } else {
            if (params.componentType === 'markLine' || params.componentType === 'markPoint') {
                toolItems.push(params.name + ' : ' + params.value);
            }
        }

        return function () {
            var result = [];
            for (var t in toolItems) {
                if (result.indexOf(toolItems[t]) === -1) {
                    result.push(toolItems[t]);
                }
            }
            return result;
        }().join('');
    };
};

TooltipByRowIndexDecorator.prototype._getAxisKeyTooltip = function (param, division, keyColumns) {
    var builder = this.builder;
    var keyItems = [];
    if (builder._internalOptions().series[param.seriesIndex]) {
        var extractor = builder._internalOptions().series[param.seriesIndex].extractor;
        if (extractor) {
            for (var k = 0; k < keyColumns.length; k++) {
                keyItems.push(division(keyColumns[k].name + ' : ' + extractor.keys[k + 1]));
            }
        }
    } else {
        keyItems.push(division(param.seriesName));
    }

    return keyItems;
};

exports.default = TooltipByRowIndexDecorator;

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipComplexDecorator(builder) {
    _tooltipDecorator2.default.call(this, builder);
}

TooltipComplexDecorator.prototype = Object.create(_tooltipDecorator2.default.prototype);
TooltipComplexDecorator.prototype.constructor = TooltipComplexDecorator;

exports.default = TooltipComplexDecorator;

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipDendrogramDecorator(builder) {
    _tooltipDecorator2.default.call(this, builder);
}

TooltipDendrogramDecorator.prototype = Object.create(_tooltipDecorator2.default.prototype);
TooltipDendrogramDecorator.prototype.constructor = TooltipDendrogramDecorator;

TooltipDendrogramDecorator.prototype._buildAxisTooltip = function () {
    var _this = this;
    this.eOptions.tooltip.formatter = function (params, ticket, callback) {

        var toolTipMap = {};
        var series, height;
        for (var i in params) {
            series = params[i];
            height = series.axisValue;
            var clusterGroup = series.seriesName;
            if (!toolTipMap[clusterGroup]) {
                toolTipMap[clusterGroup] = {
                    clusterGroup: clusterGroup,
                    childCluster: _this.builder.parentNodeMap[clusterGroup].join(', '),
                    seriesIndex: i
                };
            }
        }

        var toolItems = [];

        var division = function division(text) {
            return '<div title="' + text + '">' + text + '</div>';
        };
        var colorDivision = function colorDivision(text, seriesIndex) {
            return '<div title="' + text + '" style="color: ' + params[seriesIndex].color + ';">' + text + '</div>';
        };
        toolItems.push(division('Height : ' + height));

        for (var t in toolTipMap) {
            toolItems.push(colorDivision('Cluster Group : ' + t, toolTipMap[t].seriesIndex));
            toolItems.push(colorDivision('Child Cluster: ' + toolTipMap[t].childCluster, toolTipMap[t].seriesIndex));
        }

        return function () {
            var result = [];
            for (var t in toolItems) {
                if (result.indexOf(toolItems[t]) === -1) {
                    result.push(toolItems[t]);
                }
            }
            return result;
        }().join('');
    };
};

exports.default = TooltipDendrogramDecorator;

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipHeatmapDecorator(builder) {
    _tooltipDecorator2.default.call(this, builder);
}

TooltipHeatmapDecorator.prototype = Object.create(_tooltipDecorator2.default.prototype);
TooltipHeatmapDecorator.prototype.constructor = TooltipHeatmapDecorator;

TooltipHeatmapDecorator.prototype._buildItemTooltip = function () {
    var dataColumns = this.builder.getSeriesDataColumns();
    this.eOptions.tooltip.formatter = function (params, ticket, callback) {
        if (params.seriesType === 'heatmap') {
            return [_optionUtils2.default.getColumnLabel(dataColumns[0]) + ': ' + params.data.value[0], _optionUtils2.default.getColumnLabel(dataColumns[1]) + ': ' + params.data.value[1], _optionUtils2.default.getColumnLabel(dataColumns[2]) + ': ' + params.data.value[2]].join('<br/>');
        }
    };
};

exports.default = TooltipHeatmapDecorator;

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipHeatmapMatrixDecorator(builder) {
    _tooltipDecorator2.default.call(this, builder);
}

TooltipHeatmapMatrixDecorator.prototype = Object.create(_tooltipDecorator2.default.prototype);
TooltipHeatmapMatrixDecorator.prototype.constructor = TooltipHeatmapMatrixDecorator;

TooltipHeatmapMatrixDecorator.prototype._buildItemTooltip = function () {
    var xAxisCategories = this.builder._getCategories(this.bOptions.xAxis[0].selected);
    var yAxisCategories = this.eOptions.series[0].extractor.yCategories();
    this.eOptions.tooltip.formatter = function (params, ticket, callback) {
        if (params.seriesType === 'heatmap') {
            return ['X-Axis : ' + xAxisCategories[params.data[0]], 'Y-Axis : ' + yAxisCategories[params.data[1]], 'Value: ' + params.data[2]].join('<br/>');
        }
    };
};

exports.default = TooltipHeatmapMatrixDecorator;

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _tooltipTriggerAxisDecorator = __webpack_require__(80);

var _tooltipTriggerAxisDecorator2 = _interopRequireDefault(_tooltipTriggerAxisDecorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipHistogramDecorator(builder) {
    _tooltipDecorator2.default.call(this, builder);
}

TooltipHistogramDecorator.prototype = Object.create(_tooltipDecorator2.default.prototype);
TooltipHistogramDecorator.prototype.constructor = TooltipHistogramDecorator;

TooltipHistogramDecorator.prototype._getItemXTooltip = function (params, dataColumns) {
    return _optionUtils2.default.getColumnLabel(dataColumns[0]) + ' : ' + params.value[0] + ' ~ ' + params.value[1];
};

TooltipHistogramDecorator.prototype._getItemYTooltip = function (params, dataColumns) {
    return 'Count : ' + params.value[2];
};

exports.default = TooltipHistogramDecorator;

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipPairwiseScatterDecorator(builder) {
    _tooltipDecorator2.default.call(this, builder);
}

TooltipPairwiseScatterDecorator.prototype = Object.create(_tooltipDecorator2.default.prototype);
TooltipPairwiseScatterDecorator.prototype.constructor = TooltipPairwiseScatterDecorator;

TooltipPairwiseScatterDecorator.prototype._buildItemTooltip = function () {
    var builder = this.builder;
    var _this = this;

    var keyColumns = builder.getTooltipKeyColumns();
    _this.eOptions.tooltip.formatter = function (params, ticket, callback) {
        var toolItems = [];

        if (params.seriesName) {
            toolItems.push(_this._getLegendItemTooltip(params));
            toolItems = toolItems.concat(_this._getItemKeyTooltip(params, keyColumns));
        }

        toolItems = toolItems.concat(_this._getItemDataTooltip(params));

        return function () {
            var result = [];
            for (var t in toolItems) {
                if (result.indexOf(toolItems[t]) === -1) {
                    result.push(toolItems[t]);
                }
            }
            return result;
        }().join('<br>');
    };
};

TooltipPairwiseScatterDecorator.prototype._getItemDataTooltip = function (params) {
    var keyItems = [];

    var dataColumns = this.builder.getSeriesDataColumns();
    var series = this.builder._internalOptions().series[params.seriesIndex];

    keyItems.push(dataColumns[series.xAxisColumnIndex].name + ' : ' + params.value[0]);
    keyItems.push(dataColumns[series.yAxisColumnIndex].name + ' : ' + params.value[1]);
    return keyItems;
};

exports.default = TooltipPairwiseScatterDecorator;

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipPieDecorator = __webpack_require__(81);

var _tooltipPieDecorator2 = _interopRequireDefault(_tooltipPieDecorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipPieCalculatedDecorator(builder) {
    _tooltipPieDecorator2.default.call(this, builder);
}

TooltipPieCalculatedDecorator.prototype = Object.create(_tooltipPieDecorator2.default.prototype);
TooltipPieCalculatedDecorator.prototype.constructor = TooltipPieCalculatedDecorator;

TooltipPieCalculatedDecorator.prototype._getItemKeyTooltip = function (params, keyColumns) {
    var keyItems = [];
    var keyColumnNames = keyColumns.map(function (item) {
        return _optionUtils2.default.getColumnLabel(item);
    }).join(',');
    keyItems.push(keyColumnNames + ' : ' + params.data.keys.join(','));
    return keyItems;
};

exports.default = TooltipPieCalculatedDecorator;

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipQQPlotDecorator(builder) {
    _tooltipDecorator2.default.call(this, builder);
}

TooltipQQPlotDecorator.prototype = Object.create(_tooltipDecorator2.default.prototype);
TooltipQQPlotDecorator.prototype.constructor = TooltipQQPlotDecorator;

TooltipQQPlotDecorator.prototype._getItemXTooltip = function (params, dataColumns) {
    return 'Theoretical Quantile' + ' : ' + params.value[0];
};

TooltipQQPlotDecorator.prototype._getItemYTooltip = function (params, dataColumns) {
    return 'Sample Quantile : ' + params.value[1];
};

exports.default = TooltipQQPlotDecorator;

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipTreemapDecorator(builder) {
    _tooltipDecorator2.default.call(this, builder);
}

TooltipTreemapDecorator.prototype = Object.create(_tooltipDecorator2.default.prototype);
TooltipTreemapDecorator.prototype.constructor = TooltipTreemapDecorator;

TooltipTreemapDecorator.prototype._buildItemTooltip = function () {
    var dataColumn = this.builder.plotOptions.sizeBy[0].selected[0];
    this.eOptions.tooltip.formatter = function (params, ticket, callback) {
        if (params.seriesType === 'treemap') {
            var treePath = [];
            for (var i = 1; i < params.treePathInfo.length; i++) {
                treePath.push(params.treePathInfo[i].name);
            }
            return [treePath.join('&nbsp;<i class="fa fa-caret-right" aria-hidden="true"></i>&nbsp;'), _optionUtils2.default.getColumnLabel(dataColumn) + ': ' + params.value].join('<br/>');
        }
    };
};

exports.default = TooltipTreemapDecorator;

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipMapDecorator(builder) {
    _tooltipDecorator2.default.call(this, builder);
}

TooltipMapDecorator.prototype = Object.create(_tooltipDecorator2.default.prototype);
TooltipMapDecorator.prototype.constructor = TooltipMapDecorator;

TooltipMapDecorator.prototype._buildItemTooltip = function () {
    var builder = this.builder;
    var _this = this;

    var keyColumns = builder.getTooltipKeyColumns();
    var keyColumnIndexes = builder.getTooltipKeyColumnIndexes();
    var dataColumns = builder.getTooltipDataColumns();
    var dataColumnIndexes = builder.getTooltipDataColumnIndexes();
    this.eOptions.tooltip.formatter = function (params, ticket, callback) {
        var toolItems = [];

        toolItems.push(_this._getItemKeyTooltip(params, dataColumns));
        toolItems.push(_this._getItemSizeByTooltip(params, dataColumns));

        return function () {
            var result = [];
            for (var t in toolItems) {
                if ($.isArray(toolItems[t])) {
                    for (var tit in toolItems[t]) {
                        if (result.indexOf(toolItems[t][tit]) === -1) {
                            result.push(toolItems[t][tit]);
                        }
                    }
                } else {
                    if (result.indexOf(toolItems[t]) === -1) {
                        result.push(toolItems[t]);
                    }
                }
            }
            return result;
        }().join('<br>');
    };
};

TooltipMapDecorator.prototype._getItemKeyTooltip = function (params, keyColumns) {
    var keyItems = [];
    if (typeof params.data.value != 'undefined' && typeof params.seriesIndex != 'undefined') {
        var latitudeName = params.data.layer.latitude[0].selected[0].name;
        var longitudeName = params.data.layer.longitude[0].selected[0].name;
        keyItems.push(latitudeName + ' : ' + params.data.value[1]);
        keyItems.push(longitudeName + ' : ' + params.data.value[0]);
    }
    return keyItems;
};

TooltipMapDecorator.prototype._getItemSizeByTooltip = function (params, dataColumns) {
    if (typeof params.value == 'undefined' || typeof params.value[2] == 'undefined') return '';else var columnName = _optionUtils2.default.getColumnLabel(params.data.layer.sizeBy[0].selected[0]) || 'Size';
    return columnName + ' : ' + params.value[2];
};

exports.default = TooltipMapDecorator;

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipXAxisPercentDecorator(builder) {
    _tooltipDecorator2.default.call(this, builder);
}

TooltipXAxisPercentDecorator.prototype = Object.create(_tooltipDecorator2.default.prototype);
TooltipXAxisPercentDecorator.prototype.constructor = TooltipXAxisPercentDecorator;

TooltipXAxisPercentDecorator.prototype._getAxisValueTooltip = function (param, dataColumns) {
    return _optionUtils2.default.getColumnLabel(dataColumns[1]) + ' : ' + param.data.actualValue + ' (' + numeral(param.data.value[1]).format('0') + '%)';
};

exports.default = TooltipXAxisPercentDecorator;

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _tooltipYaxisDecorator = __webpack_require__(82);

var _tooltipYaxisDecorator2 = _interopRequireDefault(_tooltipYaxisDecorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipYAxisPercentDecorator(builder) {
    _tooltipYaxisDecorator2.default.call(this, builder);
}

TooltipYAxisPercentDecorator.prototype = Object.create(_tooltipYaxisDecorator2.default.prototype);
TooltipYAxisPercentDecorator.prototype.constructor = TooltipYAxisPercentDecorator;

TooltipYAxisPercentDecorator.prototype._getAxisValueTooltip = function (param, dataColumns) {
    return _optionUtils2.default.getColumnLabel(dataColumns[0]) + ' : ' + param.data.actualValue + ' (' + numeral(param.data.value[0]).format('0') + '%)';
};

exports.default = TooltipYAxisPercentDecorator;

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipCardDecorator(builder) {
    _decorator2.default.call(this, builder);
}

TooltipCardDecorator.prototype = Object.create(_decorator2.default.prototype);
TooltipCardDecorator.prototype.constructor = TooltipCardDecorator;

TooltipCardDecorator.prototype.decorate = function () {
    var _this = this;
    var builder = this.builder;
    var dataColumns = builder.getTooltipDataColumns();

    this.eOptions.tooltip.formatter = function (params, ticket, callback) {
        var toolItems = [];
        toolItems.push(_optionUtils2.default.getColumnLabel(dataColumns[0]) + ' : ' + params.value[2]);

        return function () {
            var result = [];
            for (var t in toolItems) {
                if (result.indexOf(toolItems[t]) === -1) {
                    result.push(toolItems[t]);
                }
            }
            return result;
        }().join('<br>');
    };
};

exports.default = TooltipCardDecorator;

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

var _chartUtils = __webpack_require__(24);

var _chartUtils2 = _interopRequireDefault(_chartUtils);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function VisualMapDecorator(builder) {
    _decorator2.default.call(this, builder);
} /**
   * Created by SDS on 2018-01-24.
   */


VisualMapDecorator.prototype = Object.create(_decorator2.default.prototype);
VisualMapDecorator.prototype.constructor = VisualMapDecorator;

VisualMapDecorator.prototype.decorate = function () {
    var builder = this.builder;
    var copyBOptVisualMap = this.bOptions.visualMap;

    var _this = this;
    var eOptColorArr = function () {
        var resultArr = [];
        if (copyBOptVisualMap.colorMap) {
            resultArr = _chartUtils2.default.genColorList(_this.eOptions.visualMap, copyBOptVisualMap.colorMap, copyBOptVisualMap.colorSet);
        }
        if (resultArr.length < 1) {
            resultArr = _this.bOptions.VisualMapColorSet || _defaultOptions2.default.VisualMapColorSet;
        }
        return resultArr;
    }();

    $.extend(true, this.eOptions, {
        visualMap: {
            calculable: true,
            inRange: {}
        }
    }, { visualMap: copyBOptVisualMap });
    this.eOptions.visualMap.inRange.color = eOptColorArr;
    delete this.eOptions.visualMap.colorMap;
};

exports.default = VisualMapDecorator;

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function XAxisBoundaryGapFalseDecorator(builder) {
    _decorator2.default.call(this, builder);
}

XAxisBoundaryGapFalseDecorator.prototype = Object.create(_decorator2.default.prototype);
XAxisBoundaryGapFalseDecorator.prototype.constructor = XAxisBoundaryGapFalseDecorator;

XAxisBoundaryGapFalseDecorator.prototype.decorate = function () {
    this.eOptions.xAxis[0].boundaryGap = false;
};

exports.default = XAxisBoundaryGapFalseDecorator;

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function XAxisMin0Decorator(builder, options) {
    _decorator2.default.call(this, builder, options);
} /**
   * Created by sds on 2018-04-12.
   */

XAxisMin0Decorator.prototype = Object.create(_decorator2.default.prototype);
XAxisMin0Decorator.prototype.constructor = XAxisMin0Decorator;

XAxisMin0Decorator.prototype.decorate = function () {

    for (var i in this.eOptions.xAxis) {
        if (!this.options || $.isArray(this.options.aggr) && this.options.aggr.includes(this.bOptions.xAxis[i].selected[0].aggregation)) {
            this.eOptions.xAxis[i].min = 0;
        }
    }
};

exports.default = XAxisMin0Decorator;

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function XAxisMin0Max100Decorator(builder) {
    _decorator2.default.call(this, builder);
}

XAxisMin0Max100Decorator.prototype = Object.create(_decorator2.default.prototype);
XAxisMin0Max100Decorator.prototype.constructor = XAxisMin0Max100Decorator;

XAxisMin0Max100Decorator.prototype.decorate = function () {
    for (var i in this.eOptions.xAxis) {
        this.eOptions.xAxis[i].min = 0;
        this.eOptions.xAxis[i].max = 100;
    }
};

exports.default = XAxisMin0Max100Decorator;

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function XAxisRangeForHistogramDecorator(builder) {
    _decorator2.default.call(this, builder);
}

XAxisRangeForHistogramDecorator.prototype = Object.create(_decorator2.default.prototype);
XAxisRangeForHistogramDecorator.prototype.constructor = XAxisRangeForHistogramDecorator;

XAxisRangeForHistogramDecorator.prototype.decorate = function () {
    var min = Infinity;
    var max = -Infinity;
    var interval;
    for (var b in this.eOptions.series[0].extractor.bins) {
        var bin = this.eOptions.series[0].extractor.bins[b];
        min = Math.min(min, bin.x0);
        max = Math.max(max, bin.x1);
        if (!interval) interval = bin.x1 - bin.x0;
    }
    this.eOptions.xAxis[0].min = min;
    this.eOptions.xAxis[0].max = max;
    this.eOptions.xAxis[0].interval = Number(interval.toFixed(14));
};

exports.default = XAxisRangeForHistogramDecorator;

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function XAxisScaleFalseDecorator(builder) {
    _decorator2.default.call(this, builder);
}

XAxisScaleFalseDecorator.prototype = Object.create(_decorator2.default.prototype);
XAxisScaleFalseDecorator.prototype.constructor = XAxisScaleFalseDecorator;

XAxisScaleFalseDecorator.prototype.decorate = function () {
    this.eOptions.xAxis[0].scale = false;
};

exports.default = XAxisScaleFalseDecorator;

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 *
 * @param builder
 * @param options = {
     *     aggr: ['count', 'sum'] //나열된 aggregation이 들어왔을때 axis min 0로 설정.
     * }
 */
function YAxisMin0Decorator(builder, options) {
    _decorator2.default.call(this, builder, options);
} /**
   * Created by sds on 2018-04-12.
   */


YAxisMin0Decorator.prototype = Object.create(_decorator2.default.prototype);
YAxisMin0Decorator.prototype.constructor = YAxisMin0Decorator;

YAxisMin0Decorator.prototype.decorate = function () {
    for (var i in this.eOptions.yAxis) {
        if (!this.options || $.isArray(this.options.aggr) && this.options.aggr.includes(this.bOptions.yAxis[i].selected[0].aggregation)) {
            this.eOptions.yAxis[i].min = 0;
        }
    }
};

exports.default = YAxisMin0Decorator;

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function YAxisMin0Max100Decorator(builder) {
    _decorator2.default.call(this, builder);
}

YAxisMin0Max100Decorator.prototype = Object.create(_decorator2.default.prototype);
YAxisMin0Max100Decorator.prototype.constructor = YAxisMin0Max100Decorator;

YAxisMin0Max100Decorator.prototype.decorate = function () {
    for (var i in this.eOptions.yAxis) {
        this.eOptions.yAxis[i].min = 0;
        this.eOptions.yAxis[i].max = 100;
    }
};

exports.default = YAxisMin0Max100Decorator;

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function YAxisScaleFalseDecorator(builder) {
    _decorator2.default.call(this, builder);
}

YAxisScaleFalseDecorator.prototype = Object.create(_decorator2.default.prototype);
YAxisScaleFalseDecorator.prototype.constructor = YAxisScaleFalseDecorator;

YAxisScaleFalseDecorator.prototype.decorate = function () {
    this.eOptions.yAxis[0].scale = false;
};

exports.default = YAxisScaleFalseDecorator;

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TrendLineDecorator(builder) {
    _decorator2.default.call(this, builder);
}

TrendLineDecorator.prototype = Object.create(_decorator2.default.prototype);
TrendLineDecorator.prototype.constructor = TrendLineDecorator;

TrendLineDecorator.prototype.decorate = function () {
    this._buildLineSeries('trend', this.plotOptions.trendLine);
};

TrendLineDecorator.prototype._buildLineSeries = function (type, lineObj) {
    if (!(lineObj && lineObj.data) || $.isEmptyObject(lineObj.data[0])) {
        return;
    }

    // trendLine 값 구하기 - 현재는 Line 만 가능        
    var data = [[], []];
    var builder = this.builder;
    var seriesList = builder.series;

    for (var series in seriesList) {
        if (seriesList[series].virtualSeries) continue;

        for (var i in seriesList[series].data) {
            data[0].push(seriesList[series].data[i].value[0]);
            data[1].push(seriesList[series].data[i].value[1]);
        }
    }
    var leastSquares = Brightics.Chart.Helper.OptionUtils.leastSquares(data[0], data[1]);
    var result = [[leastSquares[0], leastSquares[1]], [leastSquares[2], leastSquares[3]]];

    // trendLine 용 series 추가
    var lineDataArr = [];
    var lineOption = $.extend(true, {}, lineObj);
    var additionalLine;
    for (var axis in lineOption.data[0]) {
        var axisDataArr = lineOption.data[0][axis];
        for (var dataIdx = 0; dataIdx < axisDataArr.length; dataIdx++) {
            additionalLine = {
                virtualSeries: true,
                type: 'line',
                lineStyle: {
                    normal: {}
                },
                symbol: 'none',
                data: []
            };

            additionalLine.data = result;
            if (axisDataArr[dataIdx].lineStyle) {
                additionalLine.lineStyle = axisDataArr[dataIdx].lineStyle;
                this.eOptions.series.push(additionalLine);
            }
        }
    }
};

exports.default = TrendLineDecorator;

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipDecorator = __webpack_require__(8);

var _tooltipDecorator2 = _interopRequireDefault(_tooltipDecorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipBubbleCalculatedDecorator(builder) {
    _tooltipDecorator2.default.call(this, builder);
}

TooltipBubbleCalculatedDecorator.prototype = Object.create(_tooltipDecorator2.default.prototype);
TooltipBubbleCalculatedDecorator.prototype.constructor = TooltipBubbleCalculatedDecorator;

TooltipBubbleCalculatedDecorator.prototype._buildItemTooltip = function () {
    var builder = this.builder;
    var _this = this;

    var keyColumns = builder.getTooltipKeyColumns();
    var dataColumns = builder.getTooltipDataColumns();
    _this.eOptions.tooltip.formatter = function (params, ticket, callback) {
        var series = builder.series;
        var seriesIndex = params.seriesIndex;
        var toolItems = [];

        if (params.seriesName) {
            toolItems.push(_this._getLegendItemTooltip(params));
            toolItems = toolItems.concat(_this._getItemKeyTooltip(params, keyColumns));
        }
        if (params.componentType === 'markLine' || params.componentType === 'markPoint') {
            toolItems.push(params.name + ' : ' + params.value);
        } else if (_this._hasTooltipHeaders(series[seriesIndex])) {
            var tooltipHeaders = series[seriesIndex].tooltipHeaders;
            for (var i = 0; i < tooltipHeaders.length; i++) {
                toolItems.push(tooltipHeaders[i] + ' : ' + params.value[i]);
            }
        } else {
            toolItems.push(_this._getItemXTooltip(params, dataColumns));
            toolItems.push(_this._getItemYTooltip(params, dataColumns));
            toolItems.push(_this._getItemSizeByTooltip(params, dataColumns));
        }

        return function () {
            var result = [];
            for (var t in toolItems) {
                if (result.indexOf(toolItems[t]) === -1) {
                    result.push(toolItems[t]);
                }
            }
            return result;
        }().join('<br>');
    };
};

TooltipBubbleCalculatedDecorator.prototype._getItemKeyTooltip = function (params, keyColumns) {
    var keyItems = [];
    var extractor = this.builder._internalOptions().series[params.seriesIndex].extractor;
    var keyColumnNames = keyColumns.map(function (item) {
        return item.name;
    });
    keyItems.push(keyColumnNames.join(',') + ' : ' + extractor.keys.join(','));
    return keyItems;
};

TooltipBubbleCalculatedDecorator.prototype._getItemSizeByTooltip = function (params, dataColumns) {
    var columnName = dataColumns[2] ? _optionUtils2.default.getColumnLabel(dataColumns[2]) : 'Count';
    return columnName + ' : ' + params.value[2];
};

exports.default = TooltipBubbleCalculatedDecorator;

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipTriggerForceItemDecorator(builder) {
    _decorator2.default.call(this, builder);
}

TooltipTriggerForceItemDecorator.prototype = Object.create(_decorator2.default.prototype);
TooltipTriggerForceItemDecorator.prototype.constructor = TooltipTriggerForceItemDecorator;

TooltipTriggerForceItemDecorator.prototype.decorate = function () {
    this.eOptions.tooltip.trigger = 'item';
};

exports.default = TooltipTriggerForceItemDecorator;

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ShowSymbolDecorator(builder, options) {
    _decorator2.default.call(this, builder, options);
}

ShowSymbolDecorator.prototype = Object.create(_decorator2.default.prototype);
ShowSymbolDecorator.prototype.constructor = ShowSymbolDecorator;

ShowSymbolDecorator.prototype.decorate = function () {
    for (var s in this.eOptions.series) {
        var seriesItem = this.eOptions.series[s];
        if (seriesItem.virtualSeries) continue;
        var plotOptions = this.plotOptions;
        if (plotOptions && typeof plotOptions.showSymbol !== 'undefined') {
            switch (plotOptions.showSymbol.all) {
                case 'true':
                    seriesItem.showAllSymbol = true;
                    break;
                case 'false':
                    seriesItem.showAllSymbol = false;
                    break;
                default:
                    seriesItem.showAllSymbol = plotOptions.showSymbol.all;
                    break;
            }
        }
    }
};

exports.default = ShowSymbolDecorator;

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tooltipWordcloudDecorator = __webpack_require__(84);

var _tooltipWordcloudDecorator2 = _interopRequireDefault(_tooltipWordcloudDecorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TooltipWordCloudCalculatedDecorator(builder) {
    _tooltipWordcloudDecorator2.default.call(this, builder);
}

TooltipWordCloudCalculatedDecorator.prototype = Object.create(_tooltipWordcloudDecorator2.default.prototype);
TooltipWordCloudCalculatedDecorator.prototype.constructor = TooltipWordCloudCalculatedDecorator;

TooltipWordCloudCalculatedDecorator.prototype._getItemKeyTooltip = function (params, keyColumns) {
    var keyItems = [];
    var keyColumnNames = keyColumns.map(function (item) {
        return _optionUtils2.default.getColumnLabel(item);
    }).join(',');
    keyItems.push(keyColumnNames + ' : ' + params.data.keys.join(','));
    return keyItems;
};

exports.default = TooltipWordCloudCalculatedDecorator;

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

var _utils = __webpack_require__(52);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EmphasisDecorator(builder, options) {
    _decorator2.default.call(this, builder, options);
} /* -----------------------------------------------------
   *  emphasis-decorator.js
   *  Created by jhoon80.park@samsung.com on 2019-12-02.
   * ---------------------------------------------------- */

EmphasisDecorator.prototype = Object.create(_decorator2.default.prototype);
EmphasisDecorator.prototype.constructor = EmphasisDecorator;

EmphasisDecorator.prototype.setItemStyleMinOrMaxControlLimit = function (rowData, valueIdx, emphasis, type) {
    for (var rowIdx in rowData) {
        if (type === 'max') {
            if (rowData[rowIdx].value[valueIdx] >= emphasis.controlLimit.value) {
                rowData[rowIdx].itemStyle = { color: emphasis.color };
            }
        } else {
            if (rowData[rowIdx].value[valueIdx] <= emphasis.controlLimit.value) {
                rowData[rowIdx].itemStyle = { color: emphasis.color };
            }
        }
    }
};

EmphasisDecorator.prototype.setItemStyleMinOrMaxCondition = function (rowData, valueIdx, emphasis, type) {
    var minOrMax = type === 'max' ? -Infinity : Infinity;
    var minOrMaxItem = null;
    for (var rowIdx in rowData) {
        if (type === 'max') {
            if (rowData[rowIdx].value[valueIdx] > minOrMax) {
                minOrMaxItem = rowData[rowIdx];
                minOrMax = rowData[rowIdx].value[valueIdx];
            }
        } else {
            if (rowData[rowIdx].value[valueIdx] < minOrMax) {
                minOrMaxItem = rowData[rowIdx];
                minOrMax = rowData[rowIdx].value[valueIdx];
            }
        }
    }
    if (minOrMaxItem) minOrMaxItem.itemStyle = { color: emphasis.color };
};

EmphasisDecorator.prototype.setMinOrMax = function (emphasis, valueIdx, type) {
    if (emphasis.controlLimit.use && emphasis.controlLimit.value) {
        for (var clSeriesIdx in this.eOptions.series) {
            var clData = this.eOptions.series[clSeriesIdx].data;
            this.setItemStyleMinOrMaxControlLimit(clData, valueIdx, emphasis, type);
        }
    } else {
        for (var seriesIdx in this.eOptions.series) {
            var data = this.eOptions.series[seriesIdx].data;
            this.setItemStyleMinOrMaxCondition(data, valueIdx, emphasis, type);
        }
    }
};

EmphasisDecorator.prototype.decorate = function () {
    var builder = this.builder;
    var chartType = builder.bOptions.chart.type;
    var maxEmphasis = this.plotOptions.emphasis.max;
    var minEmphasis = this.plotOptions.emphasis.min;
    var valueIdx = chartType === 'bar' ? 0 : 1;
    if (maxEmphasis && maxEmphasis.use) {
        this.setMinOrMax(maxEmphasis, valueIdx, 'max');
    }
    if (minEmphasis && minEmphasis.use) {
        this.setMinOrMax(minEmphasis, valueIdx, 'min');
    }
};

exports.default = EmphasisDecorator;

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function SortLegendValueDecorator(builder, options) {
    _decorator2.default.call(this, builder, options);
}

SortLegendValueDecorator.prototype = Object.create(_decorator2.default.prototype);
SortLegendValueDecorator.prototype.constructor = SortLegendValueDecorator;

SortLegendValueDecorator.prototype.decorate = function () {
    var builder = this.builder;
    var axisSortRule = builder._axisSortRule;
    var useSort = axisSortRule && axisSortRule.sort;
    var type = axisSortRule && axisSortRule.type;
    var rule = axisSortRule && axisSortRule.rule;
    if (useSort) {
        //Series Data Sort;
        var series = this.eOptions.series;
        var sortRule = function sortRule(a, b) {
            var comp;
            var first, second;
            if (rule === 'asc') {
                first = a;
                second = b;
            } else {
                first = b;
                second = a;
            }
            if (type === 'value') {
                comp = _optionUtils2.default.numericSortRule(first.value * 1, second.value * 1);
            } else {
                if (Number(first.name) && Number(second.name)) {
                    comp = _optionUtils2.default.numericSortRule(Number(first.name), Number(second.name));
                } else {
                    comp = _optionUtils2.default.stringSortRule(first.name, second.name);
                }
            }
            return comp;
        };
        for (var s in series) {
            series[s].data.sort(sortRule);
        }
    }
};

exports.default = SortLegendValueDecorator;

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function SortAxisInitDecorator(builder) {
    _decorator2.default.call(this, builder);
}

SortAxisInitDecorator.prototype = Object.create(_decorator2.default.prototype);
SortAxisInitDecorator.prototype.constructor = SortAxisInitDecorator;

SortAxisInitDecorator.prototype.decorate = function () {
    this.builder._axisSortRule.type = 'axis';
};

exports.default = SortAxisInitDecorator;

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _decorator = __webpack_require__(2);

var _decorator2 = _interopRequireDefault(_decorator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PieLabelDecorator(builder) {
    _decorator2.default.call(this, builder);
} /**
   * Created by starup on 2019-12-28.
   */

PieLabelDecorator.prototype = Object.create(_decorator2.default.prototype);
PieLabelDecorator.prototype.constructor = PieLabelDecorator;

PieLabelDecorator.prototype.decorate = function () {
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {

        for (var _iterator = this.eOptions.series[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var series = _step.value;

            if (series.label && series.label.show && series.label.formatter) {
                (function () {
                    var formatter = series.label.formatter;
                    if (formatter.indexOf('{b}') === -1 && formatter.indexOf('{c}') === -1 && formatter.indexOf('{d}') === -1) {
                        var changeFormatter = function changeFormatter(params) {
                            var numberFmtRgx = /{(0*[\,\.]0*)}|{(0*\,0*\.0*)}/g;
                            var value = params.data.name;
                            if ((Number(value) === 0 || Boolean(Number(value))) && numberFmtRgx.test(formatter)) {
                                var resultFmt = numberFmtRgx.exec(formatter) || numberFmtRgx.exec(formatter);
                                return formatter.replace(numberFmtRgx, value != null ? numeral(value).format(resultFmt[1] || resultFmt[2]) : '');
                            } else {
                                return formatter.replace('{value}', value != null ? value : '');
                            }
                        };
                        series.label.formatter = changeFormatter;
                    }
                })();
            }
        }
    } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
    } finally {
        try {
            if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
            }
        } finally {
            if (_didIteratorError) {
                throw _iteratorError;
            }
        }
    }
};

exports.default = PieLabelDecorator;

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeCalculatedOptionBuilder = __webpack_require__(32);

var _echartsAxisTypeCalculatedOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeCalculatedOptionBuilder);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsLineCalculatedOptionBuilder() {
    _echartsAxisTypeCalculatedOptionBuilder2.default.call(this);
}

EChartsLineCalculatedOptionBuilder.prototype = Object.create(_echartsAxisTypeCalculatedOptionBuilder2.default.prototype);
EChartsLineCalculatedOptionBuilder.prototype.constructor = EChartsLineCalculatedOptionBuilder;

EChartsLineCalculatedOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['markPoint', 'markLine', 'smooth', 'smoothMonotone', 'step'];
    this._registerDecorator('axisType');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('tooltipTriggerAxis');
    this._registerDecorator('tooltipAxisCalculated');
    this._registerDecorator('marker');
    this._registerDecorator('lineStyle');
    this._registerDecorator('showSymbol');
    this._registerDecorator('plotOptions');
    this._registerDecorator('lineBy');
    this._setSeriesDataSortRule();
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
    this._registerDecorator('trendline');
};

EChartsLineCalculatedOptionBuilder.prototype.getSeriesKeyColumns = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    var keyColumns = [];
    if (this.bOptions.yAxis[0].selected.length > 1) {
        keyColumns = keyColumns.concat([{ name: 'colorBy' }]);
    } else if (this.bOptions.colorBy.length > 0) {
        var colorBy = this.filterNullColumn(this.bOptions.colorBy[dataIndex].selected);
        if (colorBy.length > 0) keyColumns = keyColumns.concat([{ name: 'colorBy' }]);
    }
    return keyColumns;
};

EChartsLineCalculatedOptionBuilder.prototype.getColorByColumnIndexes = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    var localData = this.getLocalData(dataIndex);
    return this.getColumnIndexes([{ name: 'colorBy' }], localData.chartColumns);
};

EChartsLineCalculatedOptionBuilder.prototype.getTooltipKeyColumns = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    var keyColumns = [];
    var columns = [];
    if (this.bOptions.colorBy.length > 0) {
        var colorBy = this.filterNullColumn(this.bOptions.colorBy[dataIndex].selected);
        for (var j in colorBy) {
            if (columns.indexOf(colorBy[j].name) === -1) {
                columns.push(colorBy[j].name);
                keyColumns.push(colorBy[j]);
            }
        }
    }
    if (this.bOptions.plotOptions.line && this.bOptions.plotOptions.line.lineBy && this.bOptions.plotOptions.line.lineBy.length > 0) {
        var lineBy = this.filterNullColumn(this.bOptions.plotOptions.line.lineBy[dataIndex].selected);
        for (var i in lineBy) {
            columns.push(lineBy[i].name);
        }keyColumns = keyColumns.concat(lineBy);
    }
    return keyColumns;
};

EChartsLineCalculatedOptionBuilder.prototype.getSeriesSubKeyColumnIndexes = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    var localData = this.getLocalData(dataIndex);
    return this.getColumnIndexes([{ name: 'lineBy' }], localData.chartColumns);
};

EChartsLineCalculatedOptionBuilder.prototype._buildSeries = function () {
    var series = {};
    var localData = this.getLocalData();
    var keyIndexes = this.getSeriesKeyColumnIndexes();
    var subKeyIndexes = this.getSeriesSubKeyColumnIndexes();
    var allKeyIndexes = [];
    allKeyIndexes = allKeyIndexes.concat(keyIndexes);
    for (var sk in subKeyIndexes) {
        if (subKeyIndexes[sk] !== -1) allKeyIndexes.push(subKeyIndexes[sk]);
    }
    var yAxisSelected = this.filterNullColumn(this.bOptions.yAxis[0].selected);
    var xAxisName = _optionUtils2.default.getColumnLabel(this.bOptions.xAxis[0].selected[0]);
    var isMultiAxis = yAxisSelected.length > 1 ? true : false;

    var i, row, seriesName, yAxisIndex, yAxisName, seriesKey, subSeriesKeyList, seriesItem, seriesNameList, seriesKeyList, multiSeriesMap;
    for (i in localData.data) {
        row = localData.data[i];
        multiSeriesMap = {};

        for (yAxisIndex = 0; yAxisIndex < yAxisSelected.length; yAxisIndex++) {
            yAxisName = _optionUtils2.default.getColumnLabel(yAxisSelected[yAxisIndex]);
            if (isMultiAxis) {
                seriesNameList = this.getCellText(row, keyIndexes);
                seriesKeyList = this.getCellText(row, allKeyIndexes, yAxisName);
            } else {
                seriesNameList = this.getCellText(row, keyIndexes);
                seriesKeyList = this.getCellText(row, allKeyIndexes);
            }

            if (multiSeriesMap[yAxisName]) continue;

            seriesName = seriesNameList.join(' ');
            seriesKey = seriesKeyList.join(' ');
            seriesItem = this._getSeriesItem(series, seriesKey);
            series[seriesKey] = seriesItem;
            if (!seriesItem.extractor) {
                seriesItem.extractor = this._newSeriesExtractor({
                    yAxisIndex: yAxisIndex
                });
                seriesItem.extractor.keys = seriesKeyList;
                seriesItem.name = seriesName;
                seriesItem.keys = seriesItem.extractor.keys;

                seriesItem.tooltipHeaders = [xAxisName, yAxisName];
            }
            seriesItem.extractor.push(row, i);
            multiSeriesMap[yAxisName] = true;
        }
    }

    this._setSeries(series);
    this._buildSeriesData();
    this.eOptions.series = this.series;
};

exports.default = EChartsLineCalculatedOptionBuilder;

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeWithCategorykeyOptionBuilder = __webpack_require__(93);

var _echartsAxisTypeWithCategorykeyOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeWithCategorykeyOptionBuilder);

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsAreaOptionBuilder() {
    _echartsAxisTypeWithCategorykeyOptionBuilder2.default.call(this);
}

EChartsAreaOptionBuilder.prototype = Object.create(_echartsAxisTypeWithCategorykeyOptionBuilder2.default.prototype);
EChartsAreaOptionBuilder.prototype.constructor = EChartsAreaOptionBuilder;

EChartsAreaOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['markPoint', 'markLine', 'areaStyle', 'sampling', 'smooth', 'smoothMonotone', 'step'];
    this._registerDecorator('axisTypeWithCategoryX');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('xAxisBoundaryGapFalse');
    this._registerDecorator('fillXCategoryValues');
    this._registerDecorator('tooltipTriggerAxis');
    this._registerDecorator('tooltip');
    this._registerDecorator('marker');
    this._registerDecorator('showSymbol');
    this._registerDecorator('plotOptions');
    this._setSeriesDataSortRule();
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
};

EChartsAreaOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.type = 'line';
    seriesItem.areaStyle = {
        normal: {}
    };

    return seriesItem;
};

exports.default = EChartsAreaOptionBuilder;

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

var _echartsAxisTypeWithCategorykeyComplexOptionBuilder = __webpack_require__(359);

var _echartsAxisTypeWithCategorykeyComplexOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeWithCategorykeyComplexOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsAreaComplexOptionBuilder() {
    _echartsAxisTypeWithCategorykeyComplexOptionBuilder2.default.call(this);
}

EChartsAreaComplexOptionBuilder.prototype = Object.create(_echartsAxisTypeWithCategorykeyComplexOptionBuilder2.default.prototype);
EChartsAreaComplexOptionBuilder.prototype.constructor = EChartsAreaComplexOptionBuilder;

EChartsAreaComplexOptionBuilder.prototype._setUpOptions = function () {
    _echartsAxisTypeWithCategorykeyComplexOptionBuilder2.default.prototype._setUpOptions.call(this);
    this.plotOptionAttributes = ['markPoint', 'markLine', 'areaStyle', 'sampling', 'smooth', 'smoothMonotone', 'step'];
    this._registerDecorator('axisTypeWithCategoryX');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('xAxisBoundaryGapFalse');
    this._registerDecorator('fillXCategoryValues');
    this._registerDecorator('tooltipTriggerAxis');
    this._registerDecorator('tooltip');
    this._registerDecorator('marker');
    this._registerDecorator('showSymbol');
    this._registerDecorator('plotOptions');
    this._registerDecorator('marker');
    this._setSeriesDataSortRule();
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
};

EChartsAreaComplexOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.type = 'line';
    seriesItem.areaStyle = {
        normal: {}
    };

    return seriesItem;
};

exports.default = EChartsAreaComplexOptionBuilder;

/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAreaOptionBuilder = __webpack_require__(216);

var _echartsAreaOptionBuilder2 = _interopRequireDefault(_echartsAreaOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsAreaStackedOptionBuilder() {
    _echartsAreaOptionBuilder2.default.call(this);
}

EChartsAreaStackedOptionBuilder.prototype = Object.create(_echartsAreaOptionBuilder2.default.prototype);
EChartsAreaStackedOptionBuilder.prototype.constructor = EChartsAreaStackedOptionBuilder;

EChartsAreaStackedOptionBuilder.prototype._setUpOptions = function () {
    _echartsAreaOptionBuilder2.default.prototype._setUpOptions.call(this);
    this.setSeriesKeyColumns(this.plotOptions.stackBy[0].selected);
};

EChartsAreaStackedOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsAreaOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.stack = 'stacked';
    return seriesItem;
};

EChartsAreaStackedOptionBuilder.prototype.getTooltipKeyColumns = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    return this.plotOptions.stackBy.length > 0 ? this.filterNullColumn(this.plotOptions.stackBy[dataIndex].selected) : [];
};

exports.default = EChartsAreaStackedOptionBuilder;

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAreaComplexOptionBuilder = __webpack_require__(217);

var _echartsAreaComplexOptionBuilder2 = _interopRequireDefault(_echartsAreaComplexOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsAreaStackedComplexOptionBuilder() {
    _echartsAreaComplexOptionBuilder2.default.call(this);
}

EChartsAreaStackedComplexOptionBuilder.prototype = Object.create(_echartsAreaComplexOptionBuilder2.default.prototype);
EChartsAreaStackedComplexOptionBuilder.prototype.constructor = EChartsAreaStackedComplexOptionBuilder;

EChartsAreaStackedComplexOptionBuilder.prototype._setUpOptions = function () {
    _echartsAreaComplexOptionBuilder2.default.prototype._setUpOptions.call(this);
    this.setSeriesKeyColumns(this.plotOptions.stackBy[0].selected);
};

EChartsAreaStackedComplexOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsAreaComplexOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.stack = 'stacked';
    return seriesItem;
};

EChartsAreaStackedComplexOptionBuilder.prototype.getTooltipKeyColumns = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    return this.plotOptions.stackBy.length > 0 ? this.filterNullColumn(this.plotOptions.stackBy[dataIndex].selected) : [];
};

exports.default = EChartsAreaStackedComplexOptionBuilder;

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAreaStacked = __webpack_require__(95);

var _echartsAreaStacked2 = _interopRequireDefault(_echartsAreaStacked);

var _echartsAreaStacked100OptionBuilder = __webpack_require__(361);

var _echartsAreaStacked100OptionBuilder2 = _interopRequireDefault(_echartsAreaStacked100OptionBuilder);

var _echartsAreaCalculatedStacked100OptionBuilder = __webpack_require__(362);

var _echartsAreaCalculatedStacked100OptionBuilder2 = _interopRequireDefault(_echartsAreaCalculatedStacked100OptionBuilder);

var _echartsAreaStacked100ComplexOptionBuilder = __webpack_require__(363);

var _echartsAreaStacked100ComplexOptionBuilder2 = _interopRequireDefault(_echartsAreaStacked100ComplexOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: echarts-area-stacked100.js
 * Created by daewon.park on 2017-04-19.
 */

function EChartsAreaStacked100(parentId, options) {
    _echartsAreaStacked2.default.call(this, parentId, options);
}

EChartsAreaStacked100.prototype = Object.create(_echartsAreaStacked2.default.prototype);
EChartsAreaStacked100.prototype.constructor = EChartsAreaStacked100;

EChartsAreaStacked100.prototype.render = function () {
    this.seriesHelper = this.getSeriesHelper();
    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._setEChartOption(opt);
};

EChartsAreaStacked100.prototype.getSeriesHelper = function () {
    if (this.isComplex) {
        return new _echartsAreaStacked100ComplexOptionBuilder2.default();
    } else if (this.options.source.localData[0].dataType == 'chartdata') {
        return new _echartsAreaCalculatedStacked100OptionBuilder2.default();
    } else {
        return new _echartsAreaStacked100OptionBuilder2.default();
    }
};

exports.default = EChartsAreaStacked100;

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _chartUtils = __webpack_require__(24);

var _chartUtils2 = _interopRequireDefault(_chartUtils);

var _echartsBarOptionBuilder = __webpack_require__(222);

var _echartsBarOptionBuilder2 = _interopRequireDefault(_echartsBarOptionBuilder);

var _echartsBarCalculatedOptionBuilder = __webpack_require__(96);

var _echartsBarCalculatedOptionBuilder2 = _interopRequireDefault(_echartsBarCalculatedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: echarts-bar.js
 * Created by daewon.park on 2017-04-16.
 */

function EChartsBar(parentId, options) {
    _echartsWrapper2.default.call(this, parentId, options);
}

EChartsBar.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsBar.prototype.constructor = EChartsBar;

EChartsBar.prototype.render = function () {

    this.seriesHelper = this.getSeriesHelper();
    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._doDataValidation(opt);
    this._setEChartOption(opt);
    this._backupItemStyles();
};

EChartsBar.prototype._doDataValidation = function (opt) {
    _chartUtils2.default.limitMaxSeriesSize(opt.series);
};

EChartsBar.prototype._createSelectedRange = function (eventData) {
    var _this = this;
    var keyColumns = _this.seriesHelper.getSeriesKeyColumns();
    var dataColumns = _this.seriesHelper.getSeriesDataColumns();
    var selectedRangeList = [];
    var series = this.seriesHelper.series;
    for (var b in eventData.batch) {
        var batch = eventData.batch[b];
        for (var s in batch.selected) {
            if (batch.selected[s].dataIndex.length === 0) continue;
            var seriesIndex = batch.selected[s].seriesIndex;
            var template = {};
            for (var k in keyColumns) {
                var seriesKey = keyColumns[k].name;
                var seriesValue = series[seriesIndex].keys[k];
                template[seriesKey] = seriesValue;
            }
            for (var d in batch.selected[s].dataIndex) {
                var idx = batch.selected[s].dataIndex[d];
                var col = dataColumns[1].name;
                var val = series[seriesIndex].data[idx].value[1];
                if (_this.seriesHelper.getColumnType(dataColumns[1]) === 'number') {
                    val = Number(val);
                }
                var item = {};
                item[col] = val;
                $.extend(true, item, template);
                selectedRangeList.push(item);
            }
        }
    }
    return selectedRangeList;
};

EChartsBar.prototype.getLegendData = function () {
    var legendData = _echartsWrapper2.default.prototype.getLegendData.call(this);
    for (var i in legendData) {
        legendData[i].symbol = 'square';
    }
    return legendData;
};

EChartsBar.prototype.getSeriesHelper = function () {
    if (this.options.source.localData[0].dataType == 'chartdata') {
        return new _echartsBarCalculatedOptionBuilder2.default();
    } else {
        return new _echartsBarOptionBuilder2.default();
    }
};

exports.default = EChartsBar;

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeWithCategorykeyOptionBuilder = __webpack_require__(93);

var _echartsAxisTypeWithCategorykeyOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeWithCategorykeyOptionBuilder);

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

var _echartsPointWithCategorykeyExtractor = __webpack_require__(25);

var _echartsPointWithCategorykeyExtractor2 = _interopRequireDefault(_echartsPointWithCategorykeyExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsBarOptionBuilder() {
    _echartsAxisTypeWithCategorykeyOptionBuilder2.default.call(this);
}

EChartsBarOptionBuilder.prototype = Object.create(_echartsAxisTypeWithCategorykeyOptionBuilder2.default.prototype);
EChartsBarOptionBuilder.prototype.constructor = EChartsBarOptionBuilder;

EChartsBarOptionBuilder.prototype._setUpOptions = function (exceptDecorators) {
    this._setAxisColumnSortRule();
    this._registerDecorator('axisTypeWithCategoryY');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('tooltip');
    this._registerDecorator('plotOptions');
    this._registerDecorator('brush');
    this._registerDecorator('axisLineOnZeroTrue');
    this._registerDecorator('xAxisMin0', { aggr: ['count'] });
    this._registerDecorator('barMarker');
    if (!exceptDecorators || exceptDecorators.indexOf('emphasis') === -1) {
        this._registerDecorator('emphasis');
    }
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
};

EChartsBarOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.type = 'bar';

    return seriesItem;
};

EChartsBarOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData();
    var dataColumns = this.getSeriesDataColumns();
    var aggregation = dataColumns[0].aggregation;
    var hasAggregation = aggregation && aggregation !== 'none';
    var xIndexes = this.getColumnIndexes(this.bOptions.xAxis[0].selected, localData.columns);
    var yIndexes = this.getColumnIndexes(this.bOptions.yAxis[0].selected, localData.columns);

    var extractor = new _echartsPointWithCategorykeyExtractor2.default();

    extractor.setTarget({
        index: xIndexes,
        type: 'value',
        isKey: false
    });

    extractor.setTarget({
        index: yIndexes,
        type: 'category',
        isKey: true
    });

    if (hasAggregation) {
        extractor.setExtractOperator(function (pointObject) {
            var operator = new _aggregationOperator2.default(pointObject.value);
            for (var i = 0; i < pointObject.indexList.length; i++) {
                operator.add(pointObject.indexList[i], pointObject.point[i][0]);
            }
            return [{ value: [operator.calc(aggregation)].concat(pointObject.value), dataIndexes: pointObject.indexList }];
        });
    }
    return extractor;
};

EChartsBarOptionBuilder.prototype._setAxisColumnSortRule = function () {
    this._axisSortRule = this.bOptions.plotOptions.bar.axisSort;
};

exports.default = EChartsBarOptionBuilder;

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsBar = __webpack_require__(221);

var _echartsBar2 = _interopRequireDefault(_echartsBar);

var _echartsBarStackedOptionBuilder = __webpack_require__(224);

var _echartsBarStackedOptionBuilder2 = _interopRequireDefault(_echartsBarStackedOptionBuilder);

var _echartsBarCalculatedStackedOptionBuilder = __webpack_require__(364);

var _echartsBarCalculatedStackedOptionBuilder2 = _interopRequireDefault(_echartsBarCalculatedStackedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsBarStacked(parentId, options) {
    _echartsBar2.default.call(this, parentId, options);
} /**
   * Source: echarts-bar-stacked.js
   * Created by daewon.park on 2017-04-16.
   */

EChartsBarStacked.prototype = Object.create(_echartsBar2.default.prototype);
EChartsBarStacked.prototype.constructor = EChartsBarStacked;

EChartsBarStacked.prototype.render = function () {
    this.seriesHelper = this.getSeriesHelper();
    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._doDataValidation(opt);
    this._setEChartOption(opt);
    this._backupItemStyles();
};

EChartsBarStacked.prototype.getSeriesHelper = function () {
    if (this.options.source.localData[0].dataType == 'chartdata') {
        return new _echartsBarCalculatedStackedOptionBuilder2.default();
    } else {
        return new _echartsBarStackedOptionBuilder2.default();
    }
};

exports.default = EChartsBarStacked;

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsBarOptionBuilder = __webpack_require__(222);

var _echartsBarOptionBuilder2 = _interopRequireDefault(_echartsBarOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsBarStackedOptionBuilder() {
    _echartsBarOptionBuilder2.default.call(this);
}

EChartsBarStackedOptionBuilder.prototype = Object.create(_echartsBarOptionBuilder2.default.prototype);
EChartsBarStackedOptionBuilder.prototype.constructor = EChartsBarStackedOptionBuilder;

EChartsBarStackedOptionBuilder.prototype._setUpOptions = function () {
    this._registerDecorator('sortAxisInit');
    this._registerDecorator('tooltipTriggerAxis');
    this._registerDecorator('tooltipYAxis');
    this._registerDecorator('tooltipAxisPointerShadow');
    this._registerDecorator('xAxisScaleFalse');
    _echartsBarOptionBuilder2.default.prototype._setUpOptions.call(this, ['emphasis']);
    this._registerDecorator('seriesStacked');
    this._registerDecorator('barMarker');
    this.setSeriesKeyColumns(this.plotOptions.stackBy[0].selected);
};

EChartsBarStackedOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsBarOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.stack = 'stacked';
    return seriesItem;
};

EChartsBarStackedOptionBuilder.prototype.getTooltipKeyColumns = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    return this.plotOptions.stackBy.length > 0 ? this.filterNullColumn(this.plotOptions.stackBy[dataIndex].selected) : [];
};

exports.default = EChartsBarStackedOptionBuilder;

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeOptionBuilder = __webpack_require__(19);

var _echartsAxisTypeOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeOptionBuilder);

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _boxplotOperator = __webpack_require__(226);

var _boxplotOperator2 = _interopRequireDefault(_boxplotOperator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsBoxPlotOptionBuilder() {
    _echartsAxisTypeOptionBuilder2.default.call(this);
}

EChartsBoxPlotOptionBuilder.prototype = Object.create(_echartsAxisTypeOptionBuilder2.default.prototype);
EChartsBoxPlotOptionBuilder.prototype.constructor = EChartsBoxPlotOptionBuilder;

EChartsBoxPlotOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['boxWidth'];
    this._registerDecorator('axisTypeWithCategoryX');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('tooltipBoxPlot');
    this._registerDecorator('plotOptions');
    this._registerDecorator('boxPlotSeparateColorDecorator');
    this._registerDecorator('brush');
    this.setSeriesKeyColumns([]);
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    // this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    // this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
};

EChartsBoxPlotOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData();
    var xIndexes = this.getColumnIndexes(this.bOptions.xAxis[0].selected, localData.columns);
    var yIndexes = this.getColumnIndexes(this.bOptions.yAxis[0].selected, localData.columns);

    var extractor = new _echartsPointExtractor2.default();

    extractor.setTarget({
        index: xIndexes,
        type: 'category',
        isKey: true
    });

    extractor.setTarget({
        index: yIndexes,
        type: 'value',
        isKey: false
    });

    extractor.setExtractOperator(function (pointObject) {
        var operator = new _boxplotOperator2.default(pointObject.value);
        for (var i = 0; i < pointObject.indexList.length; i++) {
            operator.add(pointObject.indexList[i], pointObject.point[i][1]);
        }
        return operator.calc();
    });

    return extractor;
};

EChartsBoxPlotOptionBuilder.prototype._buildSeriesData = function () {
    var outliers = [];

    for (var s in this.series) {
        var boxplotData = this.series[s].extractor.extract();

        var axisType = this._getColumnDataType(this.filterNullColumn(this.bOptions.xAxis[0].selected));
        var sortRule = function sortRule(a, b) {
            var comp;
            if (axisType === 'category') comp = _optionUtils2.default.stringSortRule(a.x, b.x);else if (axisType === 'time') comp = _optionUtils2.default.timeSortRule(a.x, b.x);else comp = _optionUtils2.default.numericSortRule(('' + a.x) * 1, ('' + b.x) * 1);

            return comp;
        };

        boxplotData.sort(sortRule);

        var seriesItemData = {
            boxData: [],
            outliers: []
        };

        for (var d in boxplotData) {
            var boxData = boxplotData[d].boxData;
            boxData.name = boxplotData[d].x;
            seriesItemData.boxData.push(boxData);

            var out = boxplotData[d].outliers;
            out = out.map(function (item) {
                return {
                    name: boxplotData[d].x,
                    value: item.value,
                    dataIndexes: item.dataIndexes
                };
            });
            seriesItemData.outliers = seriesItemData.outliers.concat(out);
        }

        // boxplot series data
        this.series[s].data = seriesItemData.boxData;

        // TODO 3.6.2 에서 series.data = [{ value: {...}, itemStyle: {} }, { value: {...}, itemStyle: {} }] 형태를 인식하지 못하는 bug 가 있음. by daewon.park
        this.series[s]._originalData = this.series[s].data;

        // outlier series data
        if (seriesItemData.outliers.length > 0) {
            var outlierSeriesItem = {
                name: this.series[s].name,
                type: 'scatter',
                data: seriesItemData.outliers
            };
            outliers.push(outlierSeriesItem);
        }
    }
    for (var o in outliers) {
        this.series.push(outliers[o]);
    }
};

exports.default = EChartsBoxPlotOptionBuilder;

/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/**
 * Source: aggregation-operator.js
 * Created by daewon.park on 2017-03-22.
 */

function BoxPlotOperator(x) {
    this.x = x;
    this.values = [];
}

BoxPlotOperator.prototype.add = function (index, value) {
    if (!Number.isFinite(value)) return;
    this.values.push({
        dataIndex: parseInt(index),
        value: value
    });
};

BoxPlotOperator.prototype.calc = function () {
    var boxPlotData = {
        x: this.x[0],
        boxData: {
            value: [],
            dataIndexes: []
        },
        outliers: []
    };
    if (this.values.length >= 2) {
        this.values.sort(function (a, b) {
            return a.value - b.value;
        });

        var q1 = this._calculatePercentile(this.values, 0.25);
        var median = this._calculatePercentile(this.values, 0.5);
        var q3 = this._calculatePercentile(this.values, 0.75);
        var interQuartileRange = q3 - q1;
        var lowerFence = q1 - 1.5 * interQuartileRange;
        var upperFence = q3 + 1.5 * interQuartileRange;
        var min = median;
        var max = median;
        for (var i = 0; i < this.values.length; i++) {
            if (this.values[i].value > lowerFence && this.values[i].value < upperFence) {
                min = Math.min(min, this.values[i].value);
                max = Math.max(max, this.values[i].value);
                boxPlotData.boxData.dataIndexes.push(this.values[i].dataIndex);
            } else {
                boxPlotData.outliers.push({
                    value: ['' + this.x, this.values[i].value],
                    dataIndexes: [this.values[i].dataIndex]
                });
            }
        }
        boxPlotData.boxData.value = [min, q1, median, q3, max];
    } else if (this.values.length === 1) {
        boxPlotData.boxData.value = [this.values[0].value, this.values[0].value, this.values[0].value, this.values[0].value, this.values[0].value];
    } else {
        boxPlotData.boxData.value = [0, 0, 0, 0, 0];
    }
    return boxPlotData;
};

BoxPlotOperator.prototype._calculatePercentile = function (values, percentile) {
    var offset = (values.length - 1) * percentile;
    var j = Math.floor(offset);
    var g = offset - j;

    return values[j].value * (1 - g) + values[j + 1].value * g;
};

exports.default = BoxPlotOperator;

/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _echartsBubbleOptionBuilder = __webpack_require__(374);

var _echartsBubbleOptionBuilder2 = _interopRequireDefault(_echartsBubbleOptionBuilder);

var _echartsBubbleCalculatedOptionBuilder = __webpack_require__(375);

var _echartsBubbleCalculatedOptionBuilder2 = _interopRequireDefault(_echartsBubbleCalculatedOptionBuilder);

var _echartsBubbleComplexOptionBuilder = __webpack_require__(376);

var _echartsBubbleComplexOptionBuilder2 = _interopRequireDefault(_echartsBubbleComplexOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * EChartsBubble
 * @param parentId
 * @param options
 * @constructor
 */
/**
 * Created by ji_sung.park on 2017-09-05.
 */

function EChartsBubble(parentId, options) {
    _echartsWrapper2.default.call(this, parentId, options);
}

EChartsBubble.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsBubble.prototype.constructor = EChartsBubble;

EChartsBubble.prototype.render = function () {
    this.seriesHelper = this.getSeriesHelper();

    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._setEChartOption(opt);
};

EChartsBubble.prototype.getSeriesHelper = function () {
    if (this.isComplex) {
        return new _echartsBubbleComplexOptionBuilder2.default();
    } else if (this.options.source.localData[0].dataType == 'chartdata') {
        return new _echartsBubbleCalculatedOptionBuilder2.default();
    } else {
        return new _echartsBubbleOptionBuilder2.default();
    }
};

exports.default = EChartsBubble;

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsCardOptionBuilder() {
    _echartsOptionBuilder2.default.call(this);
} /**
   * Created by sds on 2018-03-26.
   */


EChartsCardOptionBuilder.prototype = Object.create(_echartsOptionBuilder2.default.prototype);
EChartsCardOptionBuilder.prototype.constructor = EChartsCardOptionBuilder;

EChartsCardOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['label', 'symbolRepeat', 'symbolSize'];
    this._registerDecorator('plotOptions');
    this._registerDecorator('axisTypeWithCategoryY');
    this._registerDecorator('axisHidden');
    this._registerDecorator('brushRemoval');
    this._registerDecorator('tooltipCard');
    this.setSeriesKeyColumns([]);
    this.setSeriesDataColumns(this.bOptions.plotOptions.card.valueBy[0].selected);
    this.setTooltipDataColumns(this.bOptions.plotOptions.card.valueBy[0].selected);
};

EChartsCardOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsOptionBuilder2.default.prototype._newSeriesItem.call(this);

    var leng = this.getPlotOptions().leng[0].selected;
    var numberFormat = this.getPlotOptions().numberFormat.use;
    var chartFormatter = this._chartFormatter(numberFormat, leng);

    $.extend(true, seriesItem, {
        type: 'custom',
        renderItem: function renderItem(params, api) {
            return {
                type: 'text',
                style: {
                    text: chartFormatter(api.value(2)),
                    x: params.coordSys.x + params.coordSys.width / 2,
                    y: params.coordSys.y + params.coordSys.height / 2,
                    textAlign: 'center',
                    textVerticalAlign: 'center',
                    font: api.font(api.style()),
                    fill: api.style().textFill
                }
            };
        }
    });

    return seriesItem;
};

EChartsCardOptionBuilder.prototype._buildSeriesData = function () {
    var aggregation = this.getSeriesDataColumns(0)[0].aggregation;

    for (var s in this.series) {
        //series length is 1
        this.series[s].data = this.series[s].extractor.extract(function (pointMap) {
            if (aggregation === 'none') {
                return [[pointMap[0].point[0][0], 0, pointMap[0].point[0][0]]];
            } else {
                var operator = new _aggregationOperator2.default();
                for (var i in pointMap) {
                    if (pointMap[i].point[0].length > 1) {
                        console.warn('Not expected case');
                    }
                    operator.add(i, pointMap[i].point[0][0]);
                }
                return [[0, 0, operator.calc(aggregation)]];
            }
        });
    }
};

EChartsCardOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData(0);
    var dataColumns = this.getSeriesDataColumns(0);
    var aggregation = 'count';
    if (dataColumns[dataColumns.length - 1] !== null && dataColumns[dataColumns.length - 1].aggregation && dataColumns[dataColumns.length - 1].aggregation !== 'none') aggregation = dataColumns[dataColumns.length - 1].aggregation;
    var valueByIndexes = this.getColumnIndexes(this.bOptions.plotOptions.card.valueBy[0].selected, localData.columns);

    var extractor = new _echartsPointExtractor2.default();

    extractor.setTarget({
        index: valueByIndexes,
        type: 'value',
        isKey: false
    });

    return extractor;
};

EChartsCardOptionBuilder.prototype._chartFormatter = function (formatter, length) {
    var numberFmtRgx = /{(0*[\,\.]0*[a-zA-Z]?)}|{(0*\,0*\.0*[a-zA-Z]?)}/g;

    if (!formatter) {
        return function (value) {
            if (isNaN(value)) return value;else return parseFloat(value).toFixed(length);
        };
    } else {
        return function (value) {
            if (!isNaN(value) && numberFmtRgx.test(formatter)) {
                var resultFmt = numberFmtRgx.exec(formatter) || numberFmtRgx.exec(formatter);
                return formatter.replace(numberFmtRgx, value != null ? numeral(value).format(resultFmt[1] || resultFmt[2]) : '');
            } else {
                if (formatter.indexOf('{value}') > -1) {
                    return formatter.replace('{value}', value != null ? value : '');
                } else {
                    return value;
                }
            }
        };
    }
};

exports.default = EChartsCardOptionBuilder;

/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeWithCategorykeyOptionBuilder = __webpack_require__(93);

var _echartsAxisTypeWithCategorykeyOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeWithCategorykeyOptionBuilder);

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsColumnOptionBuilder() {
    _echartsAxisTypeWithCategorykeyOptionBuilder2.default.call(this);
}

EChartsColumnOptionBuilder.prototype = Object.create(_echartsAxisTypeWithCategorykeyOptionBuilder2.default.prototype);
EChartsColumnOptionBuilder.prototype.constructor = EChartsColumnOptionBuilder;

EChartsColumnOptionBuilder.prototype._setUpOptions = function (exceptDecorators) {
    this._setAxisColumnSortRule();
    this._registerDecorator('axisTypeWithCategoryX');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('tooltip');
    this._registerDecorator('plotOptions');
    this._registerDecorator('brush');
    this._registerDecorator('yAxisMin0', { aggr: ['count'] });
    this._registerDecorator('axisLineOnZeroTrue');
    this._registerDecorator('marker');
    if (!exceptDecorators || exceptDecorators.indexOf('emphasis') === -1) {
        this._registerDecorator('emphasis');
    }
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
};

EChartsColumnOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.type = 'bar';

    return seriesItem;
};

EChartsColumnOptionBuilder.prototype._setAxisColumnSortRule = function () {
    this._axisSortRule = this.bOptions.plotOptions.column.axisSort;
};

EChartsColumnOptionBuilder.prototype._setSeriesDataSortRule = function (sortRule) {
    this._seriesDataSortRule = sortRule;
};

exports.default = EChartsColumnOptionBuilder;

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeComplexOptionBuilder = __webpack_require__(46);

var _echartsAxisTypeComplexOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeComplexOptionBuilder);

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Created by sds on 2018-01-24.
 */

function EChartsColumnComplexOptionBuilder() {
    _echartsAxisTypeComplexOptionBuilder2.default.call(this);
}

EChartsColumnComplexOptionBuilder.prototype = Object.create(_echartsAxisTypeComplexOptionBuilder2.default.prototype);
EChartsColumnComplexOptionBuilder.prototype.constructor = EChartsColumnComplexOptionBuilder;

EChartsColumnComplexOptionBuilder.prototype._setUpOptions = function (exceptDecorators) {
    _echartsAxisTypeComplexOptionBuilder2.default.prototype._setUpOptions.call(this);
    this._registerDecorator('stripline');
    this._registerDecorator('plotOptions');
    this._registerDecorator('xAxisScaleFalse');
    this._registerDecorator('yAxisMin0', { aggr: ['count'] });
    this._registerDecorator('axisLineOnZeroTrue');
    this._registerDecorator('marker');
    if (!exceptDecorators || exceptDecorators.indexOf('emphasis') === -1) {
        this._registerDecorator('emphasis');
    }
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
};

EChartsColumnComplexOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.type = 'bar';
    return seriesItem;
};

exports.default = EChartsColumnComplexOptionBuilder;

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsColumnOptionBuilder = __webpack_require__(229);

var _echartsColumnOptionBuilder2 = _interopRequireDefault(_echartsColumnOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsColumnStackedOptionBuilder() {
    _echartsColumnOptionBuilder2.default.call(this);
}

EChartsColumnStackedOptionBuilder.prototype = Object.create(_echartsColumnOptionBuilder2.default.prototype);
EChartsColumnStackedOptionBuilder.prototype.constructor = EChartsColumnStackedOptionBuilder;

EChartsColumnStackedOptionBuilder.prototype._setUpOptions = function () {
    this._registerDecorator('sortAxisInit');
    this._registerDecorator('tooltipTriggerAxis');
    this._registerDecorator('tooltipAxisPointerShadow');
    _echartsColumnOptionBuilder2.default.prototype._setUpOptions.call(this, ['emphasis']);
    this._registerDecorator('yAxisScaleFalse');
    this._registerDecorator('seriesStacked');
    this._registerDecorator('axisLineOnZeroTrue');
    this._registerDecorator('marker');
    this.setSeriesKeyColumns(this.plotOptions.stackBy[0].selected);
};

EChartsColumnStackedOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsColumnOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.stack = 'stacked';
    return seriesItem;
};

EChartsColumnStackedOptionBuilder.prototype.getTooltipKeyColumns = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    return this.plotOptions.stackBy.length > 0 ? this.filterNullColumn(this.plotOptions.stackBy[dataIndex].selected) : [];
};

exports.default = EChartsColumnStackedOptionBuilder;

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsColumnComplexOptionBuilder = __webpack_require__(230);

var _echartsColumnComplexOptionBuilder2 = _interopRequireDefault(_echartsColumnComplexOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsColumnStackedComplexOptionBuilder() {
    _echartsColumnComplexOptionBuilder2.default.call(this);
}

EChartsColumnStackedComplexOptionBuilder.prototype = Object.create(_echartsColumnComplexOptionBuilder2.default.prototype);
EChartsColumnStackedComplexOptionBuilder.prototype.constructor = EChartsColumnStackedComplexOptionBuilder;

EChartsColumnStackedComplexOptionBuilder.prototype._setUpOptions = function () {
    //this._registerDecorator('tooltipTriggerAxis');
    //this._registerDecorator('tooltipAxisPointerShadow');
    //this._registerDecorator('axisTypeWithCategoryX');
    _echartsColumnComplexOptionBuilder2.default.prototype._setUpOptions.call(this, ['emphasis']);
    this._registerDecorator('yAxisScaleFalse');
    this._registerDecorator('seriesStacked');
    this._registerDecorator('axisLineOnZeroTrue');
    this.setSeriesKeyColumns(this.plotOptions.stackBy[0].selected);
};

EChartsColumnStackedComplexOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsColumnComplexOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.stack = 'stacked';
    return seriesItem;
};

EChartsColumnStackedComplexOptionBuilder.prototype.getTooltipKeyColumns = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    return this.plotOptions.stackBy.length > 0 ? this.filterNullColumn(this.plotOptions.stackBy[dataIndex].selected) : [];
};

exports.default = EChartsColumnStackedComplexOptionBuilder;

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsColumnStacked = __webpack_require__(98);

var _echartsColumnStacked2 = _interopRequireDefault(_echartsColumnStacked);

var _echartsColumnStacked100OptionBuilder = __webpack_require__(381);

var _echartsColumnStacked100OptionBuilder2 = _interopRequireDefault(_echartsColumnStacked100OptionBuilder);

var _echartsColumnCalculatedStacked100OptionBuilder = __webpack_require__(382);

var _echartsColumnCalculatedStacked100OptionBuilder2 = _interopRequireDefault(_echartsColumnCalculatedStacked100OptionBuilder);

var _echartsColumnStacked100ComplexOptionBuilder = __webpack_require__(383);

var _echartsColumnStacked100ComplexOptionBuilder2 = _interopRequireDefault(_echartsColumnStacked100ComplexOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: echarts-column-stacked100.js
 * Created by daewon.park on 2017-04-19.
 */

function EChartsColumnStacked100(parentId, options) {
    _echartsColumnStacked2.default.call(this, parentId, options);
}

EChartsColumnStacked100.prototype = Object.create(_echartsColumnStacked2.default.prototype);
EChartsColumnStacked100.prototype.constructor = EChartsColumnStacked100;

EChartsColumnStacked100.prototype.render = function () {
    this.seriesHelper = this.getSeriesHelper();
    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._doDataValidation(opt);
    this._setEChartOption(opt);
};

EChartsColumnStacked100.prototype.getSeriesHelper = function () {
    if (this.isComplex) {
        return new _echartsColumnStacked100ComplexOptionBuilder2.default();
    } else if (this.options.source.localData[0].dataType == 'chartdata') {
        return new _echartsColumnCalculatedStacked100OptionBuilder2.default();
    } else {
        return new _echartsColumnStacked100OptionBuilder2.default();
    }
};

exports.default = EChartsColumnStacked100;

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeOptionBuilder = __webpack_require__(19);

var _echartsAxisTypeOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeOptionBuilder);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsScatterOptionBuilder() {
    _echartsAxisTypeOptionBuilder2.default.call(this);
}

EChartsScatterOptionBuilder.prototype = Object.create(_echartsAxisTypeOptionBuilder2.default.prototype);
EChartsScatterOptionBuilder.prototype.constructor = EChartsScatterOptionBuilder;

EChartsScatterOptionBuilder.prototype._defaultOptions = function () {
    var opt = _echartsAxisTypeOptionBuilder2.default.prototype._defaultOptions.call(this);
    $.extend(true, opt, {
        dataZoom: [{
            id: 'insideZoomX',
            type: 'inside',
            filterMode: 'filter',
            xAxisIndex: [0],
            disabled: true
        }, {
            id: 'insideZoomY',
            type: 'inside',
            filterMode: 'filter',
            yAxisIndex: [0],
            disabled: true
        }]
    });
    return opt;
};

EChartsScatterOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['markPoint', 'markLine', 'trendLine'];
    this._registerDecorator('axisType');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('tooltip');
    this._registerDecorator('marker');
    this._registerDecorator('plotOptions');
    this._registerDecorator('brush');
    this._registerDecorator('axisRange');
    this._registerDecorator('emphasis');
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
    this._registerDecorator('trendline');
};

EChartsScatterOptionBuilder.prototype._buildSeries = function () {
    var series = {};
    var localData = this.getLocalData();
    var keyIndexes = this.getSeriesKeyColumnIndexes(0);
    var yAxisSelected = this.filterNullColumn(this.bOptions.yAxis[0].selected);
    var xAxisName = _optionUtils2.default.getColumnLabel(this.bOptions.xAxis[0].selected[0]);
    var isMultiAxis = yAxisSelected.length > 1 ? true : false;
    var i, row, seriesItem, yAxisIndex, seriesKey, seriesKeyList, yAxisName, multiSeriesMap;

    for (i in localData.data) {
        row = localData.data[i];
        multiSeriesMap = {};

        for (yAxisIndex = 0; yAxisIndex < yAxisSelected.length; yAxisIndex++) {
            seriesKeyList = [];
            yAxisName = _optionUtils2.default.getColumnLabel(yAxisSelected[yAxisIndex]);
            if (isMultiAxis) {
                seriesKeyList = this.getCellText(row, keyIndexes, yAxisName);
            } else {
                seriesKeyList = this.getCellText(row, keyIndexes);
            }

            if (multiSeriesMap[yAxisName]) continue;

            seriesKey = seriesKeyList.join(' ');
            seriesItem = this._getSeriesItem(series, seriesKey);
            series[seriesKey] = seriesItem;

            if (!seriesItem.extractor) {
                seriesItem.extractor = this._newSeriesExtractor({
                    yAxisIndex: yAxisIndex
                });
                seriesItem.extractor.keys = seriesKeyList;
                seriesItem.name = seriesKey;
                seriesItem.keys = seriesItem.extractor.keys;

                seriesItem.sortOrder = yAxisIndex;

                seriesItem.tooltipHeaders = [xAxisName, yAxisName];
            }
            seriesItem.extractor.push(row, i);
            multiSeriesMap[yAxisName] = true;
        }
    }

    this._setSeries(series);
    this._buildSeriesData();
    this.eOptions.series = this.series;
};

exports.default = EChartsScatterOptionBuilder;

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeOptionBuilder = __webpack_require__(19);

var _echartsAxisTypeOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeOptionBuilder);

var _echartsPointBycolumnnamesExtractor = __webpack_require__(64);

var _echartsPointBycolumnnamesExtractor2 = _interopRequireDefault(_echartsPointBycolumnnamesExtractor);

var _echartsScatterByrowindexOptionBuilder = __webpack_require__(85);

var _echartsScatterByrowindexOptionBuilder2 = _interopRequireDefault(_echartsScatterByrowindexOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsScatterByColumnNamesOptionBuilder() {
    _echartsAxisTypeOptionBuilder2.default.call(this);
}

EChartsScatterByColumnNamesOptionBuilder.prototype = Object.create(_echartsAxisTypeOptionBuilder2.default.prototype);
EChartsScatterByColumnNamesOptionBuilder.prototype.constructor = EChartsScatterByColumnNamesOptionBuilder;

EChartsScatterByColumnNamesOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['markPoint', 'markLine'];
    this._registerDecorator('axisTypeByColumnNames');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('tooltipByColumnNames');
    this._registerDecorator('marker');
    this._registerDecorator('plotOptions');
    this._registerDecorator('brush');
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this._registerDecorator('trendline');
};

EChartsScatterByColumnNamesOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData();
    var yIndexes = this.getColumnIndexes(this.bOptions.yAxis[0].selected, localData.columns);

    var extractor = new _echartsPointBycolumnnamesExtractor2.default();

    extractor.setTarget({
        index: yIndexes,
        type: 'value',
        isKey: false
    });

    return extractor;
};

exports.default = EChartsScatterByColumnNamesOptionBuilder;

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeComplexOptionBuilder = __webpack_require__(46);

var _echartsAxisTypeComplexOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeComplexOptionBuilder);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _echartsComplexScatterLineExtractor = __webpack_require__(92);

var _echartsComplexScatterLineExtractor2 = _interopRequireDefault(_echartsComplexScatterLineExtractor);

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsScatterComplexOptionBuilder() {
    _echartsAxisTypeComplexOptionBuilder2.default.call(this);
} /**
   * Created by sds on 2018-01-24.
   */


EChartsScatterComplexOptionBuilder.prototype = Object.create(_echartsAxisTypeComplexOptionBuilder2.default.prototype);
EChartsScatterComplexOptionBuilder.prototype.constructor = EChartsScatterComplexOptionBuilder;

EChartsScatterComplexOptionBuilder.prototype._setUpOptions = function () {
    _echartsAxisTypeComplexOptionBuilder2.default.prototype._setUpOptions.call(this);
    this._registerDecorator('marker');
    this._registerDecorator('emphasis');
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
    this._registerDecorator('trendline');
};

EChartsScatterComplexOptionBuilder.prototype._buildSeries = function () {
    var series = {};
    var localData = this.getLocalData();
    var keyIndexes = this.getSeriesKeyColumnIndexes(0);
    var yAxisSelected = this.filterNullColumn(this.bOptions.yAxis[0].selected);
    var xAxisName = _optionUtils2.default.getColumnLabel(this.bOptions.xAxis[0].selected[0]);
    var i, row, seriesItem, yAxisIndex, seriesKey, seriesKeyList, yAxisName, multiSeriesMap;

    for (i in localData.data) {
        row = localData.data[i];
        multiSeriesMap = {};

        for (yAxisIndex = 0; yAxisIndex < yAxisSelected.length; yAxisIndex++) {
            seriesKeyList = [];
            yAxisName = _optionUtils2.default.getColumnLabel(yAxisSelected[yAxisIndex]);
            seriesKeyList = this.getCellText(row, keyIndexes, yAxisName);

            if (multiSeriesMap[yAxisName]) continue;

            seriesKey = seriesKeyList.join(' ');
            seriesItem = this._getSeriesItem(series, seriesKey);
            series[seriesKey] = seriesItem;

            if (!seriesItem.extractor) {
                seriesItem.extractor = this._newSeriesExtractor({
                    yAxisIndex: yAxisIndex
                });
                seriesItem.extractor.keys = seriesKeyList;
                seriesItem.name = seriesKey;
                seriesItem.keys = seriesItem.extractor.keys;

                seriesItem.sortOrder = yAxisIndex;

                seriesItem.tooltipHeaders = [xAxisName, yAxisName];
            }
            seriesItem.extractor.push(row, i);
            multiSeriesMap[yAxisName] = true;
        }
    }

    this._setSeries(series);
    this._buildSeriesData();
    this.eOptions.series = this.series;
};

EChartsScatterComplexOptionBuilder.prototype._newSeriesExtractor = function (option) {
    option = option || {};
    var xAxisIndex = option.xAxisIndex || 0;
    var yAxisIndex = option.yAxisIndex || 0;

    var localData = this.getLocalData(0);
    var dataColumns = this.getSeriesDataColumns(0);
    var aggregation = dataColumns[1 + yAxisIndex].aggregation;
    var hasAggregation = aggregation && aggregation !== 'none';
    var xIndexes = this.getColumnIndexes(this.bOptions.xAxis[0].selected, localData.columns);
    var yIndexes = this.getColumnIndexes(this.bOptions.yAxis[0].selected, localData.columns);

    var isCategory = this._categoryKey;
    var extractor = isCategory ? new _echartsComplexScatterLineExtractor2.default() : new _echartsPointExtractor2.default();

    extractor.setTarget({
        index: [xIndexes[xAxisIndex]],
        type: isCategory ? 'category' : _optionUtils2.default.getAxisType(localData.columns[xIndexes[0]]),
        isKey: hasAggregation ? true : false
    });

    extractor.setTarget({
        index: [yIndexes[yAxisIndex]],
        type: aggregation ? 'value' : _optionUtils2.default.getAxisType(localData.columns[yIndexes[0]]),
        isKey: false
    });

    if (hasAggregation) {
        extractor.setExtractOperator(function (pointObject) {
            var operator = new _aggregationOperator2.default(pointObject.value);
            for (var i = 0; i < pointObject.indexList.length; i++) {
                operator.add(pointObject.indexList[i], pointObject.point[i][1]);
            }
            if (isCategory && pointObject.value.length === 1) {
                return [{ value: [pointObject.value[0] + '', operator.calc(aggregation)], dataIndexes: pointObject.indexList }];
            } else {
                return [{ value: pointObject.value.concat(operator.calc(aggregation)), dataIndexes: pointObject.indexList }];
            }
        });
    }
    return extractor;
};

exports.default = EChartsScatterComplexOptionBuilder;

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _d3Wrapper = __webpack_require__(386);

var _d3Wrapper2 = _interopRequireDefault(_d3Wrapper);

var _d3DecisiontreeOptionBuilder = __webpack_require__(238);

var _d3DecisiontreeOptionBuilder2 = _interopRequireDefault(_d3DecisiontreeOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function D3DecisionTree(parentId, options) {
    _d3Wrapper2.default.call(this, parentId, options);
} /**
   * Source: D3-network.js
   * Created by daewon.park on 2017-03-30.
   */


D3DecisionTree.prototype = Object.create(_d3Wrapper2.default.prototype);
D3DecisionTree.prototype.constructor = D3DecisionTree;

D3DecisionTree.prototype._init = function () {
    _d3Wrapper2.default.prototype._init.call(this);
    this.seriesHelper = new _d3DecisiontreeOptionBuilder2.default();
};

D3DecisionTree.prototype._chartInit = function ($parent) {

    var _this = this;

    var div_w = this.d3chart.getMainContainer().clientWidth;
    var div_h = this.d3chart.getMainContainer().clientHeight;
    //OPTION Margin top=40, right=10, bottom=40, left=20
    this.margin = { top: 100, right: 10, bottom: 40, left: 10 };
    var width = div_w - this.margin.right - this.margin.left,
        height = div_h - this.margin.top - this.margin.bottom;

    this.svg = this.d3chart.svg.attr("width", width + this.margin.right + this.margin.left).attr("viewBox", "0 0 " + div_w + " " + div_h).attr("height", height + this.margin.top + this.margin.bottom);

    // this.d3chart.nodeTooltip.html(function (d, l) {
    //     var nodeLabels = [];
    //
    //     for (var i in d.data.nodeLabel) {
    //         if (d.data.nodeLabel[i] != '')
    //             nodeLabels.push(d.data.nodeLabel[i])
    //     }
    //     var linkLabels = '', lastNodeLabel = '';
    //     if (d.parent.data.nodeLabel) {
    //         lastNodeLabel = d.parent.data.nodeLabel[d.parent.data.nodeLabel.length - 1] ? d.parent.data.nodeLabel[d.parent.data.nodeLabel.length - 1] : '';
    //     }
    //     if (lastNodeLabel != '') {
    //         if ($.inArray(d.data.id, d.parent.data.leaf) == 0) {
    //             if (d.parent.data.linkLabel)
    //                 linkLabels = lastNodeLabel + '<=' + d.parent.data.linkLabel;
    //         } else if ($.inArray(d.data.id, d.parent.data.leaf) == 1) {
    //             if (d.parent.data.linkLabel)
    //                 linkLabels = lastNodeLabel + '>' + d.parent.data.linkLabel;
    //         } else {
    //             linkLabels = ''
    //         }
    //     }
    //
    //     return "<span>Node Info : " + nodeLabels.join('<br/>') + "</span></br>" +
    //         "<span style='color: red '>Link Info : " + linkLabels + "</span>";
    // });

    // this.d3chart.linkTooltip.html(function (d, l) {
    //     var linkLabels = '';
    //     var lastNodeLabel = '';
    //     if (d.parent.data.nodeLabel) {
    //         lastNodeLabel = d.parent.data.nodeLabel[d.parent.data.nodeLabel.length - 1] ? d.parent.data.nodeLabel[d.parent.data.nodeLabel.length - 1] : '';
    //         ;
    //     }
    //     if (lastNodeLabel != '') {
    //         if ($.inArray(d.data.id, d.parent.data.leaf) == 0) {
    //             if (d.parent.data.linkLabel)
    //                 linkLabels = lastNodeLabel + '<=' + d.parent.data.linkLabel;
    //         } else if ($.inArray(d.data.id, d.parent.data.leaf) == 1) {
    //             if (d.parent.data.linkLabel)
    //                 linkLabels = lastNodeLabel + '>' + d.parent.data.linkLabel;
    //         } else {
    //
    //         }
    //     }
    //     return "<span>" + linkLabels + "</span>";
    // });

    this.svg = this.d3chart.svg.attr("width", width + this.margin.right + this.margin.left).attr("viewBox", "0 0 " + div_w + " " + div_h).attr("height", height + this.margin.top + this.margin.bottom);

    this.g = this.svg.append("g").attr("transform", "translate(" + this.margin.top + "," + this.margin.left + ")").call(this.d3chart.nodeTooltip);
    // .call(this.d3chart.linkTooltip);

    // Moving tooltips
    // this.d3chart.parent.append(this.d3chart.nodeTooltip);
    // this.d3chart.parent.append(this.d3chart.linkTooltip);
    // document.getElementById('outlineParent').appendChild(
    //     document.getElementById('d3-tip')
    // );
    // document.getElementById('outlineParent').appendChild(
    //     document.getElementById('d3-tip2')
    // );

    this.nodeFigure = {
        width: 50,
        height: 150,
        hDistance: 100,
        vDistance: 60
    };
    var nodeWidth = 50;
    var nodeHeight = 150;
    var horizontalSeparationBetweenNodes = 50;
    var verticalSeparationBetweenNodes = 60;

    this.decisionTree = d3.tree()
    // .size([width, height])
    .nodeSize([this.nodeFigure.width + this.nodeFigure.hDistance, this.nodeFigure.height + this.nodeFigure.vDistance]).separation(function (a, b) {
        return a.parent == b.parent ? 1.5 : 1;
    });
    this.d3chart.component = this.decisionTree;

    //OPTION LINK Arrow
    this.svg.append("svg:defs").selectAll("marker").data(["end"]) // Different link/path types can be defined here
    .enter().append("svg:marker") // This section adds in the arrows
    .attr("id", String).attr("viewBox", "0 -5 10 10").attr("refX", -10).attr("refY", 0).attr("markerWidth", 10).attr("markerHeight", 10).attr("orient", "auto").attr("stroke", "#000").attr("fill", "blue").append("svg:path").attr("d", "M0,-5L10,0L0,5").style("stroke-width", "0.3px").attr("transform", "rotate(180,5, 0)").attr("markerUnits", "strokeWidth");

    this.svg.on('click', function (e) {
        d3.event.stopImmediatePropagation();

        if ($(this).closest('.bcharts-ws-panel').hasClass('ui-selected')) {
            return;
        }
        if ($(this).closest('.brtc-va-editors-sheet-fnunitviewer')) {
            $(this).closest('.brtc-va-editors-sheet-fnunitviewer').find('.bcharts-ws-panel.ui-selected').removeClass('ui-selected');
        } else {
            $(this).closest('.bcharts-ws-panel.ui-selected').removeClass('ui-selected');
        }
        $(this).closest('.bcharts-ws-panel').addClass('ui-selected');

        $(this).closest('.bcharts-worksheet').trigger('selectPanel', [$(this).closest('.bcharts-ws-panel').data('chartPanel')]);
        $(this).closest('.brtc-va-visual-content-wrapper').trigger('mousedown', []);
        // $(this).closest('.bcharts-ws-panel').data('chartPanel')
        // alert('click')
    });

    this.svg.on('mousedown', function (e) {
        $(this).closest('.bcharts-ws-panel').trigger('mousedown', []);
    });
};

D3DecisionTree.prototype._wrap = function (text) {
    text.each(function () {
        var text = d3.select(this),
            words = text.text().split(','),
            lineNumber = 0,
            lineHeight = 1.1,
            // ems
        y = text.attr("y"),
            dy = parseFloat(text.attr("dy"));
        var tspan = text.text(null).append("tspan").attr("x", 0).attr("y", y).attr("dy", dy + "em");

        for (var i in words) {
            if (words[i] != '') {
                tspan = text.append("tspan").attr("x", 0).attr("y", y).attr("dy", lineNumber * lineHeight + dy + "em").text(words[i]);
                lineNumber++;
            }
        }
    });
};

D3DecisionTree.prototype.diagonal = function (s, d) {
    return "M " + s.x + " " + s.y + "C " + d.x + " " + d.y + "," + d.x + " " + d.y + "," + d.x + " " + d.y;
};

D3DecisionTree.prototype.updateScale = function (nodes) {

    var _this = this;

    if (!nodes) {
        nodes = this.nodes;
    }
    if (nodes.length == 0) return;
    var minX = d3.min(nodes, function (d) {
        return d.x;
    });
    var minY = d3.min(nodes, function (d) {
        return d.y;
    });

    var maxX = d3.max(nodes, function (d) {
        // return d.x + 100;
        return d.x + _this.nodeFigure.width + _this.nodeFigure.hDistance;
    });
    var maxY = d3.max(nodes, function (d) {
        return d.y + _this.nodeFigure.height + _this.nodeFigure.vDistance;
    });
    var maxDepth = d3.max(nodes, function (d) {
        return d.depth;
    });

    var xWidth = maxX - minX;
    var yHeight = maxY - minY;

    // var xScale = 1 / ((xWidth / (this.d3chart.getMainContainer().clientWidth - 10 - 10)) == 0 ? 1 : (xWidth / (this.d3chart.getMainContainer().clientWidth - 10 - 10)));
    var xScale = 1 / (xWidth / this.d3chart.getMainContainer().clientWidth == 0 ? 1 : xWidth / this.d3chart.getMainContainer().clientWidth);
    // var yScale = 1 / ((yHeight / (this.d3chart.getMainContainer().clientHeight - 100 - 40)) == 0 ? 1 : (yHeight / (this.d3chart.getMainContainer().clientHeight - 100 - 40)));
    var yScale = 1 / (yHeight / this.d3chart.getMainContainer().clientHeight == 0 ? 1 : yHeight / this.d3chart.getMainContainer().clientHeight);
    this.minScale = Math.min(xScale, yScale);
    if (this.minScale > 1) this.minScale = 1;
    // var nodeHeight = ((this.d3chart.getMainContainer().clientHeight - 100 - 40) / maxDepth) / yScale;
    var nodeHeight = this.d3chart.getMainContainer().clientHeight / maxDepth / yScale;

    // Normalize for fixed-depth.
    nodes.forEach(function (d) {
        if (minX < 0) {
            if (d.x == minX) {}
            d.x = d.x - minX;
        }
        if (d.depth == 1) {}
        return d.y = d.depth * nodeHeight;
    });

    this.zoom = d3.zoom().scaleExtent([this.minScale / 10, 5]).on("zoom", _this.redraw.bind(this));
    this.svg.call(this.zoom);
    this.zoom.scaleTo(this.svg, this.minScale);
    // this.zoom.translateBy(this.svg, -(parseInt(d3.zoomTransform(this.svg.node()).x) - 10) / this.minScale + (this.d3chart.getMainContainer().clientWidth / 2) * this.minScale, -(parseInt(d3.zoomTransform(this.svg.node()).y) - 20) / this.minScale);

    var svgTranslateX = parseInt(d3.zoomTransform(this.svg.node()).x);
    var svgTranslateY = parseInt(d3.zoomTransform(this.svg.node()).y);
    var mainContainerX = this.d3chart.getMainContainer().clientWidth / 2 - this.margin.left;
    var mainContainerY = (this.d3chart.getMainContainer().clientHeight + 50) / 2;
    var x = svgTranslateX / this.minScale - mainContainerX * this.minScale;
    var y = svgTranslateY / this.minScale;

    this.zoom.translateBy(this.svg, -x, -y);
    // this.zoom.translateTo(this.svg, x, y);
};

D3DecisionTree.prototype.getAllNodes = function (source) {
    var root = d3.hierarchy(source, function (d) {
        return d.children;
    });
    var treeData = this.decisionTree(root);
    var nodes = treeData.descendants();
    nodes = nodes.filter(function (d) {
        return d.depth != 0;
    });

    return nodes;
};

D3DecisionTree.prototype.computedGroupByTextLength = function (element, data) {
    if (data.depth == 1) {
        var text = d3.select(element);
        var words = text.text().split(',');
        var lineNumber = 0;
        var lineHeight = 1.1; // ems
        var y = text.attr("y");
        var dy = parseFloat(text.attr("dy"));
        var tspan = text.text(null).append("tspan").attr("x", 0).attr("y", y).attr("dy", dy + "em");
        var maxWidth = 0;
        for (var i in words) {
            if (words[i] != '') {
                tspan = text.append("tspan").attr("x", 0).attr("y", y).attr("dy", lineNumber * lineHeight + dy + "em").text(words[i]);
                maxWidth = Math.max(maxWidth, tspan.node().getComputedTextLength());
                lineNumber++;
            }
        }
        data.rectWidth = maxWidth + 20;
        data.rectHeight = text.node().getBBox().height;
    }
};

D3DecisionTree.prototype.update = function (options) {
    this.g.selectAll('*').remove();
    // this.svg.attr("viewBox", "0 0 " + this.d3chart.getMainContainer().clientWidth + " " + this.d3chart.getMainContainer().clientHeight)
    //     .attr("width", this.d3chart.getMainContainer().clientWidth)
    //     .attr("height", this.d3chart.getMainContainer().clientHeight);
    var _this = this;

    var i = 0;

    var nodeLabelTextStyle = this.options.plotOptions.decisionTree.label.normal.textStyle;
    var nodeFontFamily = nodeLabelTextStyle.fontFamily;
    var nodeFontColor = nodeLabelTextStyle.color;
    var nodeFontStyle = nodeLabelTextStyle.fontStyle;
    var nodeFontWeight = nodeLabelTextStyle.fontWeight;
    var nodeFontSize = nodeLabelTextStyle.fontSize;

    var linkLabelTextStyle = this.options.plotOptions.decisionTree.linkLabel.normal.textStyle;
    var linkFontFamily = linkLabelTextStyle.fontFamily;
    var linkFontColor = linkLabelTextStyle.color;
    var linkFontStyle = linkLabelTextStyle.fontStyle;
    var linkFontWeight = linkLabelTextStyle.fontWeight;
    var linkFontSize = linkLabelTextStyle.fontSize;

    var symbolSize = this.options.plotOptions.decisionTree.style.node.size;
    var symbolColor = this.options.plotOptions.decisionTree.style.node.color;
    var symbolOpacity = this.options.plotOptions.decisionTree.style.node.opacity;

    var linkWidth = this.options.plotOptions.decisionTree.style.link.width;
    var linkColor = this.options.plotOptions.decisionTree.style.link.color;
    var linkOpacity = this.options.plotOptions.decisionTree.style.link.opacity;
    this.d3chart.nodeTooltip.html(options.tooltip.formatter.bind(this));

    var source = options.series[0].data;

    var root = d3.hierarchy(source, function (d) {
        return d.children;
    });

    var treeData = this.decisionTree(root);
    this.nodes = treeData.descendants();
    var links = treeData.descendants().slice(1);
    // root.x0 = (parseInt(this.d3chart.getMainContainer().clientWidth) - 10 - 10) / 2;


    this.nodes = this.nodes.filter(function (d) {
        return d.depth != 0;
    });
    links = links.filter(function (d) {
        return d.depth != 1;
    });
    root.x0 = parseInt(this.d3chart.getMainContainer().clientWidth) / 2;
    root.y0 = 0;

    this.updateScale(this.nodes);

    // ****************** Nodes section ***************************
    // Update the nodes...
    var node = this.g.selectAll('g.node').data(this.nodes, function (d) {
        return d.id || (d.id = ++i);
    });

    // Enter any new modes at the parent's previous position.
    var nodeEnter = node.enter().append('g').attr('class', 'node').attr("transform", function (d) {
        if (d.depth == 1) return "translate(" + d.x + "," + d.y + ")";
        return "translate(" + d.x + "," + d.y + ")";
    });

    if (this.options.tooltip.triggerOn === 'mousemove') {
        nodeEnter.on('mouseover', this.d3chart.nodeTooltip.show).on('click', null).on('mouseout', this.d3chart.nodeTooltip.hide);
    } else {
        nodeEnter.on('click', this.d3chart.nodeTooltip.show).on('mouseover', null).on('mouseout', null);
    }

    // Add Circle for the nodes
    nodeEnter.append('circle').attr('class', 'node').attr('opacity', symbolOpacity ? symbolOpacity : 1)
    // .attr('r', 1e-6)
    .attr('r', function (d) {
        if (d.depth === 1) {
            return symbolSize * 10 + 50;
        }
        return symbolSize * 10;
    }).style("stroke-width", "0.3px").style('stroke', '#000').style("fill", function (d) {
        if (d.depth === 1) {
            return symbolColor ? symbolColor : "steelblue";
        }
        // return d.children ? "lightsteelblue" : "steelblue";
        return symbolColor ? symbolColor : "steelblue";
    });

    nodeEnter.append('rect').attr('class', 'rootNode').attr("width", 0).attr("height", 0).attr("y", 0).attr("x", 0).style("stroke-width", "0.3px").style('stroke', '#000').style("fill", '#FDF5E6');

    nodeEnter.append("text").attr('class', 'rootNode').attr("dy", ".35em").style("stroke-width", 1).attr("fill", nodeFontColor).attr("font-family", nodeFontFamily ? nodeFontFamily : "Arial, Helvetica, sans-serif").style("font-style", nodeFontStyle).style("font-size", nodeFontSize + 'px').style("font-weight", nodeFontWeight)
    // .style("font", "normal 20px consolas")
    .style("text-anchor", "middle").attr("y", function (d) {
        var y = -35;
        if (d.rectHeight) {
            y = y - d.rectHeight;
        }
        return d.children || d.children ? y : y;
    }).text(function (d) {
        if (d.depth == 1) {
            return d.data.groupByLabel.join(',');
        }
    }).each(function (d) {
        _this.computedGroupByTextLength(this, d);
    }).call(_this._wrap.bind(this));

    // Add labels for the nodes
    var text = nodeEnter.append('text').attr('class', 'nodeText').attr("dy", ".35em").attr("fill", nodeFontColor).attr("font-family", nodeFontFamily ? nodeFontFamily : "Arial, Helvetica, sans-serif").style("font-style", nodeFontStyle).style("font-size", nodeFontSize + 'px').style("font-weight", nodeFontWeight)
    //.attr("x", function(d) {
    //return d.children || d._children ? 18 : 13;
    //})
    .attr("y", function (d) {
        var y = 15;
        if (d.rectHeight) {
            y = d.rectHeight / 2;
        }
        return d.children || d.children ? -y : -y;
    }).attr("text-anchor", 'middle').text(function (d) {
        if (_this.options.plotOptions.decisionTree.label.normal.show) {
            var nodeLabel = [];
            for (var i in d.data.nodeLabel) {
                nodeLabel.push(d.data.nodeLabel[i]);
            }

            return nodeLabel.join(',');
        }
    }).call(_this._wrap.bind(this));

    // UPDATE
    var nodeUpdate = nodeEnter.merge(node);

    // Transition to the proper position for the node
    nodeUpdate.transition().attr("transform", function (d) {
        if (d.depth == 1) return "translate(" + d.x + "," + d.y + ")";
        return "translate(" + d.x + "," + d.y + ")";
    });

    if (this.options.tooltip.triggerOn === 'mousemove') {
        nodeUpdate.on('mouseover', this.d3chart.nodeTooltip.show).on('click', null).on('mouseout', this.d3chart.nodeTooltip.hide);
    } else {
        nodeUpdate.on('click', this.d3chart.nodeTooltip.show).on('mouseover', null).on('mouseout', null);
    }

    // Update the node attributes and style
    nodeUpdate.select('circle.node').attr('r', function (d) {
        if (d.depth === 1) {
            return symbolSize * 10 * 2;
        }
        return symbolSize * 10;
    }).attr('opacity', symbolOpacity ? symbolOpacity : 1).style("fill", function (d) {
        if (d.depth === 1) {
            return symbolColor ? symbolColor : "steelblue";
        }
        return symbolColor ? symbolColor : "steelblue";
    }).attr('cursor', 'pointer');

    nodeUpdate.select("text.nodeText").attr("fill", nodeFontColor).attr("font-family", nodeFontFamily ? nodeFontFamily : "Arial, Helvetica, sans-serif").style("font-style", nodeFontStyle).style("font-size", nodeFontSize + 'px').style("font-weight", nodeFontWeight).text(function (d) {
        if (_this.options.plotOptions.decisionTree.label.normal.show) {
            var nodeLabel = [];
            for (var i in d.data.nodeLabel) {
                nodeLabel.push(d.data.nodeLabel[i]);
            }

            return nodeLabel.join(',');
        }
    }).call(_this._wrap.bind(this));

    var root_text_element = nodeUpdate.select("text.nodeText");
    var root_textWidth = root_text_element.node() ? root_text_element.node().getComputedTextLength() + 10 : 0;

    nodeUpdate.select('rect.rootNode').attr("width", function (d, i) {
        if (_this.options.plotOptions.decisionTree.label.normal.show) {
            if (d.data.groupByLabel && d.data.groupByLabel.length == 0) return 0;
            // if (d.data.groupByLabel.length == 0) return 0;
            if (d.depth == 1) {
                return d.rectWidth;
                // return root_textWidth;
            }
        }
    }).attr("height", function (d, i) {
        if (_this.options.plotOptions.decisionTree.label.normal.show) {
            if (d.data.groupByLabel && d.data.groupByLabel.length == 0) return 0;
            // if (d.data.groupByLabel.length == 0) return 0;
            if (d.depth == 1) {
                return d.rectHeight;
                // return 20;
            }
        }
    }).attr("y", function (d, i) {
        if (_this.options.plotOptions.decisionTree.label.normal.show) {
            if (d.data.groupByLabel && d.data.groupByLabel.length == 0) return 0;
            // if (d.data.groupByLabel.length == 0) return 0;
            if (d.depth == 1) {
                return -(45 + d.rectHeight);
            }
        }
    }).attr("x", function (d, i) {
        if (_this.options.plotOptions.decisionTree.label.normal.show) {
            if (d.data.groupByLabel && d.data.groupByLabel.length == 0) return 0;
            // if (d.data.groupByLabel.length == 0) return 0;
            if (d.depth == 1) {
                return -(d.rectWidth / 2);
                // return -(root_textWidth / 2);
            }
        }
    });

    nodeUpdate.select("text.rootNode")
    // .attr('class', 'rootNode')
    .attr("dy", ".35em").style("stroke-width", 1).attr("fill", nodeFontColor).attr("font-family", nodeFontFamily ? nodeFontFamily : "Arial, Helvetica, sans-serif").style("font-style", nodeFontStyle).style("font-size", nodeFontSize + 'px').style("font-weight", nodeFontWeight).style("text-anchor", "middle").attr("y", function (d) {
        var y = -35;
        if (d.rectHeight) {
            y = y - d.rectHeight;
        }
        return d.children || d.children ? y : y;
    }).text(function (d) {
        if (d.depth == 1) {
            if (_this.options.plotOptions.decisionTree.label.normal.show) {
                return d.data.groupByLabel.join(',');
            }
        }
    }).call(_this._wrap.bind(this));
    // d3.tree().nodeSize([symbolSize * 10 * 2, symbolSize * 10 * 2])
    //     .separation(function (a, b) {
    //         return a.parent == b.parent ? 1.5 : 1;
    //     });
    node.exit().remove();
    // ****************** links section ***************************

    // Update the links...
    var link = this.g.selectAll('.link').data(links, function (d) {
        return d.id;
    });

    this.svg.selectAll("marker").attr('refX', -(symbolSize * 10 / linkWidth)).attr("fill", linkColor).attr("markerUnits", "strokeWidth").style('stroke', linkColor);

    // Enter any new links at the parent's previous position.
    var linkEnter = link.enter().insert('path', 'g').attr("class", "link").style("stroke-width", linkWidth + 'px').style('stroke', linkColor).attr('d', function (d) {
        var o = { y: d.y, x: d.x };
        if (d.depth == 1) {
            o.y = -180;
        }
        return _this.diagonal(o, o);
    }).attr("marker-start", "url(#end)");

    // UPDATE
    var linkUpdate = linkEnter.merge(link);

    // Transition back to the parent element position
    linkUpdate.transition().attr('d', function (d) {
        if (d.depth == 1) {
            d.parent.y = -180;
        }
        return _this.diagonal(d, d.parent);
    }).style("stroke-width", linkWidth + 'px').style('stroke', linkColor);

    // if (this.options.tooltip.triggerOn === 'mousemove') {
    //     linkUpdate
    //         .on('mouseover', this.d3chart.linkTooltip.show)
    //         .on('click', null)
    //         .on('mouseout', this.d3chart.linkTooltip.hide);
    // } else {
    //     linkUpdate
    //         .on('click', this.d3chart.linkTooltip.show)
    //         .on('mouseover', null)
    //         .on('mouseout', this.d3chart.linkTooltip.hide);
    // }
    link.exit().transition().remove();

    var linktext = this.g.selectAll('g.link').data(links, function (d) {
        return d.id;
    });

    linktext.enter().append("g").attr('class', 'linktext').attr("transform", function (d) {
        return "translate(" + (d.x + d.parent.x) / 2 + "," + (d.y + d.parent.y) / 2 + ")";
    }).attr('d', function (d) {
        var o = { y: d.y, x: d.x };
        if (d.depth == 1) {
            o.y = -180;
        }
        return _this.diagonal(o, o);
    }).attr("class", "link").append("text").attr("dy", ".35em").attr("text-anchor", "middle").attr("fill", linkFontColor).attr("font-family", linkFontFamily ? linkFontFamily : "Arial, Helvetica, sans-serif").style("font-style", linkFontStyle).style("font-size", linkFontSize + 'px').style("font-weight", linkFontWeight).text(function (d) {
        if (_this.options.plotOptions.decisionTree.linkLabel.normal.show) {
            if (d.parent.data.linkLabel && d.parent.data.linkLabel.length > 0) {
                if ($.inArray(d.data.id, d.parent.data.leaf) == 0) {
                    return '<=' + d.parent.data.linkLabel;
                }
                return '>' + d.parent.data.linkLabel;
            }
        }
    });
    linktext.transition().attr('d', function (d) {
        var o = { y: d.y, x: d.x };
        if (d.depth == 1) {
            o.y = -180;
        }
        return _this.diagonal(o, o);
    });

    linktext.transition().select('text').attr("fill", linkFontColor).attr("font-family", linkFontFamily ? linkFontFamily : "Arial, Helvetica, sans-serif").style("font-style", linkFontStyle).style("font-size", linkFontSize + 'px').style("font-weight", linkFontWeight).text(function (d) {
        if (_this.options.plotOptions.decisionTree.linkLabel.normal.show) {
            if (d.parent.data.linkLabel && d.parent.data.linkLabel.length > 0) {
                if ($.inArray(d.data.id, d.parent.data.leaf) == 0) {
                    return '<=' + d.parent.data.linkLabel;
                }
                return '>' + d.parent.data.linkLabel;
            }
        }
    });

    // if (this.options.tooltip.triggerOn === 'mousemove') {
    //     linktext.select('text')
    //         .on('mouseover', this.d3chart.linkTooltip.show)
    //         .on('click', null)
    //         .on('mouseout', this.d3chart.linkTooltip.hide);
    // } else {
    //     linktext.select('text')
    //         .on('click', this.d3chart.linkTooltip.show)
    //         .on('mouseover', null)
    //         .on('mouseout', this.d3chart.linkTooltip.hide);
    // }


    linktext.exit().transition().remove();

    this.nodes.forEach(function (d) {
        d.x0 = d.x;
        d.y0 = d.y;
    });
};

D3DecisionTree.prototype.redraw = function () {
    var currentTransform = d3.event.transform;
    this.g.attr("transform", currentTransform);
};

D3DecisionTree.prototype.render = function () {
    var opt = this.seriesHelper.buildOptions(this.options);

    opt.tooltip.formatter = function (params, ticket, callback) {
        var toolItems = [];
        var fromColLabel = _optionUtils2.default.getColumnLabel(this.seriesHelper.getFromColumn()[0]);
        toolItems.push(''.concat(fromColLabel, ' : ', params.data.from));
        if (params.parent.data.from) {
            toolItems.push(''.concat('Link', ' : ', params.parent.data.from, ' -> ', params.data.from));
        }
        for (var i in this.seriesHelper.getNodeLabelColumn()) {
            var nodeLabel = _optionUtils2.default.getColumnLabel(this.seriesHelper.getNodeLabelColumn()[i]);
            var nodeColor = this.options.plotOptions.decisionTree.style.node.color[0];
            toolItems.push(''.concat('<span style="color: ', nodeColor, '">', nodeLabel, ' : ', params.data.nodeLabel[i], '</span>'));
        }
        for (var i in this.seriesHelper.getLinkLabelColumn()) {
            var previousNodeLabel = '';
            if (params.parent.data.nodeLabel) {
                previousNodeLabel = params.parent.data.nodeLabel[params.parent.data.nodeLabel.length - 1] ? params.parent.data.nodeLabel[params.parent.data.nodeLabel.length - 1] : '';
            }
            if (previousNodeLabel != '') {
                var linkColor = this.options.plotOptions.decisionTree.style.link.color[0];
                if ($.inArray(params.data.id, params.parent.data.leaf) == 0) {
                    toolItems.push(''.concat('<span style="color: ', linkColor, '">', previousNodeLabel, ' <= ', params.parent.data.linkLabel[i]), '</span>');
                } else if ($.inArray(params.data.id, params.parent.data.leaf) == 1) {
                    toolItems.push(''.concat('<span style="color: ', linkColor, '">', previousNodeLabel, ' > ', params.parent.data.linkLabel[i]), '</span>');
                }
            }
        }
        return toolItems.join('<br>');
    };
    this._bindInternalOptions(this.seriesHelper);
    this.update(opt);
};

D3DecisionTree.prototype.getLegendData = function () {
    var legendData = [];
    return legendData;
};

exports.default = D3DecisionTree;

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _d3OptionBuilder = __webpack_require__(388);

var _d3OptionBuilder2 = _interopRequireDefault(_d3OptionBuilder);

var _d3DecisiontreeExtractor = __webpack_require__(240);

var _d3DecisiontreeExtractor2 = _interopRequireDefault(_d3DecisiontreeExtractor);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function D3DecisionTreeOptionBuilder(parentId, options) {
    _d3OptionBuilder2.default.call(this, parentId, options);
} /**
   * Created by sds on 2018-03-19.
   */

/**
 * DecitionTree Option Builder
 * @param parentId
 * @param options
 * @constructor
 */


D3DecisionTreeOptionBuilder.prototype = Object.create(_d3OptionBuilder2.default.prototype);
D3DecisionTreeOptionBuilder.prototype.constructor = D3DecisionTreeOptionBuilder;

D3DecisionTreeOptionBuilder.prototype._defaultOptions = function () {
    var opt = _d3OptionBuilder2.default.prototype._defaultOptions.call(this);
    // opt.color.splice(0,1);
    delete opt.xAxis;
    delete opt.yAxis;
    delete opt.brush;
    return opt;
};

D3DecisionTreeOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = {
        type: 'decisionTree',
        large: true,
        largeThreshold: 5000,
        label: this.bOptions.plotOptions.decisionTree.label,
        data: [],
        force: {
            repulsion: 100
        },
        layout: 'force',
        roam: true
    };
    var decisionTreeOptions = this.bOptions.plotOptions.decisionTree;
    var attributes = ['label'];
    this._applySeriesOptions(seriesItem, decisionTreeOptions, attributes);

    return seriesItem;
};

D3DecisionTreeOptionBuilder.prototype.getFromColumn = function () {
    return this.bOptions.plotOptions.decisionTree.fromColumn[0].selected;
};

D3DecisionTreeOptionBuilder.prototype.getToColumn = function () {
    return this.bOptions.plotOptions.decisionTree.toColumn[0].selected;
};

D3DecisionTreeOptionBuilder.prototype.getGroupByColumn = function () {
    return this.bOptions.plotOptions.decisionTree.groupByColumn[0].selected;
};

D3DecisionTreeOptionBuilder.prototype.getNodeLabelColumn = function () {
    return this.bOptions.plotOptions.decisionTree.nodeLabelColumn[0].selected;
};

D3DecisionTreeOptionBuilder.prototype.getLinkLabelColumn = function () {
    return this.bOptions.plotOptions.decisionTree.linkLabelColumn[0].selected;
};

D3DecisionTreeOptionBuilder.prototype.getSeriesKeyColumns = function () {
    return [];
};

D3DecisionTreeOptionBuilder.prototype.getSeriesDataColumns = function () {
    return [];
};

D3DecisionTreeOptionBuilder.prototype._buildCategory = function () {};

D3DecisionTreeOptionBuilder.prototype.getColumnIndexes = function (column, allColumns) {
    return _optionUtils2.default.getColumnIndexes(column.length > 0 ? this.filterNullColumn(column) : [], allColumns);
};

D3DecisionTreeOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.bOptions.source.localData[0];

    var fromColumn = this.getFromColumn();
    var fromColumnIndex = this.getColumnIndexes(fromColumn, localData.columns);

    var toColumn = this.getToColumn();
    var toColumnIndex = this.getColumnIndexes(toColumn, localData.columns);

    var groupByColumn = this.getGroupByColumn();
    var groupByColumnIndex = this.getColumnIndexes(groupByColumn, localData.columns);

    var nodeLabelColumn = this.getNodeLabelColumn();
    var nodeLabelColumnIndex = this.getColumnIndexes(nodeLabelColumn, localData.columns);

    var linkLabelColumn = this.getLinkLabelColumn();
    var linkLabelColumnIndex = this.getColumnIndexes(linkLabelColumn, localData.columns);

    if ($.inArray(fromColumnIndex[0], toColumnIndex) > -1) {
        this._throwValidation('The same column name exists in from and to column.');
    }

    return new _d3DecisiontreeExtractor2.default(groupByColumnIndex, fromColumnIndex, toColumnIndex, nodeLabelColumnIndex, linkLabelColumnIndex);
};

D3DecisionTreeOptionBuilder.prototype._buildSeriesData = function () {

    for (var s in this.d3Options.series) {
        var sourceData = this.d3Options.series[s].extractor.nodeExtract();
        if (sourceData.length > 500) {
            this._throwValidation('This Data has more than 500 nodes.');
        }

        var dataMap = sourceData.reduce(function (map, node) {
            map[node.id] = node;
            return map;
        }, {});
        // var treeData = [];
        var treeData = {
            name: 'mainRoot',
            children: []
        };

        var sourceDataWidthParent = this._setParentId(sourceData);
        sourceDataWidthParent.forEach(function (node) {
            var parent = dataMap[node.parent];
            if (parent) {
                (parent.children || (parent.children = [])).push(node);
            } else {
                node.parent = 'mainRoot';
                treeData.children.push(node);
            }
        });

        this.d3Options.series[s].data = treeData;
    }
};

D3DecisionTreeOptionBuilder.prototype._setParentId = function (source) {
    var sourceDataWidthParent = source;
    for (var i in sourceDataWidthParent) {
        for (var j in sourceDataWidthParent) {
            if ($.inArray(sourceDataWidthParent[i].id, sourceDataWidthParent[j].leaf) != -1) {
                sourceDataWidthParent[i].parent = sourceDataWidthParent[j].id;
            }
        }
    }
    return sourceDataWidthParent;
};

exports.default = D3DecisionTreeOptionBuilder;

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * Created by sds on 2018-03-19.
 */
/**
 * D3 의 Series Data 를 생성
 * @param columnIndexes
 * @constructor
 */
function SeriesDataExtractor(columnIndexes) {
  this.columnIndexes = columnIndexes;
  this.points = [];
}

SeriesDataExtractor.prototype.push = function (row, rowIndex) {};

SeriesDataExtractor.prototype.extract = function () {
  return this.points;
};

exports.default = SeriesDataExtractor;

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

var _d3AggregationExtractor = __webpack_require__(100);

var _d3AggregationExtractor2 = _interopRequireDefault(_d3AggregationExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Created by sds on 2018-03-19.
 */

/**
 * X 축의 값이 category, Y 축의 값이 aggregation 된 형태의 Series Data 를 생성
 * @param columnIndexes
 * @constructor
 */
function DecisionTreeDataExtractor(groupByColumnIndex, fromColumnIndex, toColumnIndex, nodeLabelColumnIndex, linkLabelColumnIndex) {
    _d3AggregationExtractor2.default.call(this, []);
    this.fromColumnIndex = fromColumnIndex;
    this.toColumnIndex = toColumnIndex;
    this.groupByColumnIndex = groupByColumnIndex;
    this.nodeLabelColumnIndex = nodeLabelColumnIndex;
    this.linkLabelColumnIndex = linkLabelColumnIndex;
    this._nodeOperators = {};
    this._targetNodeOperators = {};
    this._nodes = {};
    this._targetNodes = {};
}

DecisionTreeDataExtractor.prototype = Object.create(_d3AggregationExtractor2.default.prototype);
DecisionTreeDataExtractor.prototype.constructor = DecisionTreeDataExtractor;

DecisionTreeDataExtractor.prototype._pushTargetNodes = function (row, rowIndex) {
    this._targetNodes[row[this.toColumnIndex]] = this._targetNodes[row[this.toColumnIndex]] || {};
    var targetNode = this._targetNodes[row[this.toColumnIndex]];
    targetNode.name = targetNode.name || row[this.toColumnIndex];

    var targetNodeOperator = this._targetNodeOperators[targetNode.name];
    if (!targetNodeOperator) {
        targetNodeOperator = new _aggregationOperator2.default(targetNode.name);
        this._targetNodeOperators[targetNode.name] = targetNodeOperator;
    }

    targetNodeOperator.add(rowIndex, 1);
    if (this.groupByColumnIndex) {
        targetNodeOperator.parent = row[this.groupByColumnIndex] + '::' + row[this.fromColumnIndex];
    } else {
        targetNodeOperator.parent = row[this.fromColumnIndex];
    }
};

DecisionTreeDataExtractor.prototype._getLabels = function (row, indexes) {
    var linkLabels = [];
    for (var i in indexes) {
        linkLabels.push(row[indexes[i]]);
    }
    return linkLabels;
};

DecisionTreeDataExtractor.prototype._pushNodes = function (row, rowIndex) {
    if (this.groupByColumnIndex) {
        var groupKeys = [];
        for (var i in this.groupByColumnIndex) {
            groupKeys.push(row[this.groupByColumnIndex[i]]);
        }

        this._nodes[groupKeys.join('::') + '::' + row[this.fromColumnIndex]] = this._nodes[groupKeys.join('::') + '::' + row[this.fromColumnIndex]] || {};
        var node = this._nodes[groupKeys.join('::') + '::' + row[this.fromColumnIndex]];
        node.name = node.name || groupKeys.join('::') + '::' + row[this.fromColumnIndex];
        node.leaf = [];
        for (var j in this.toColumnIndex) {
            if (row[this.toColumnIndex[j]] != -1) {
                node.leaf.push(groupKeys.join('::') + '::' + row[this.toColumnIndex[j]]);
            }
        }
        var nodeOperator = this._nodeOperators[node.name];
        if (!nodeOperator) {
            nodeOperator = new _aggregationOperator2.default(node.name);
            nodeOperator.leaf = node.leaf;
            nodeOperator.nodeLabel = this._getLabels(row, this.nodeLabelColumnIndex);
            nodeOperator.linkLabel = this._getLabels(row, this.linkLabelColumnIndex);
            nodeOperator.groupByLabel = this._getLabels(row, this.groupByColumnIndex);
            nodeOperator.from = row[this.fromColumnIndex];
            this._nodeOperators[node.name] = nodeOperator;
        }
    } else {
        this._nodes[row[this.fromColumnIndex]] = this._nodes[row[this.fromColumnIndex]] || {};
        var node = this._nodes[row[this.fromColumnIndex]];
        node.name = node.name || row[this.fromColumnIndex];
        node.leaf = [];
        for (var j in this.toColumnIndex) {
            if (row[this.toColumnIndex[j]] != -1) node.leaf.push(row[this.fromColumnIndex] + '::' + row[this.toColumnIndex[j]]);
        }
        var nodeOperator = this._nodeOperators[node.name];
        if (!nodeOperator) {
            nodeOperator = new _aggregationOperator2.default(node.name);
            nodeOperator.leaf = node.leaf;
            nodeOperator.nodeLabel = this._getLabels(row, this.nodeLabelColumnIndex);
            nodeOperator.linkLabel = this._getLabels(row, this.linkLabelColumnIndex);
            nodeOperator.groupByLabel = this._getLabels(row, this.groupByColumnIndex);
            nodeOperator.from = row[this.fromColumnIndex];
            this._nodeOperators[node.name] = nodeOperator;
        }
    }
};

DecisionTreeDataExtractor.prototype.push = function (row, rowIndex) {
    //
    this._pushNodes(row, rowIndex);
};

DecisionTreeDataExtractor.prototype.nodeExtract = function (operator) {
    var answer = [];
    for (var name in this._nodeOperators) {
        var pointData = {
            id: name,
            nodeLabel: this._nodeOperators[name].nodeLabel,
            linkLabel: this._nodeOperators[name].linkLabel,
            groupByLabel: this._nodeOperators[name].groupByLabel,
            leaf: this._nodeOperators[name].leaf,
            from: this._nodeOperators[name].from
        };

        if (operator) {
            pointData.value = this._nodeOperators[name].calc(operator);
        }

        answer.push(pointData);
    }
    return answer;
};

exports.default = DecisionTreeDataExtractor;

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeCalculatedOptionBuilder = __webpack_require__(32);

var _echartsAxisTypeCalculatedOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeCalculatedOptionBuilder);

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

var _echartsHeatmapMatrixCalculatedExtoractor = __webpack_require__(396);

var _echartsHeatmapMatrixCalculatedExtoractor2 = _interopRequireDefault(_echartsHeatmapMatrixCalculatedExtoractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsHeatmapMatrixCalculatedOptionBuilder() {
    _echartsAxisTypeCalculatedOptionBuilder2.default.call(this);
}

EChartsHeatmapMatrixCalculatedOptionBuilder.prototype = Object.create(_echartsAxisTypeCalculatedOptionBuilder2.default.prototype);
EChartsHeatmapMatrixCalculatedOptionBuilder.prototype.constructor = EChartsHeatmapMatrixCalculatedOptionBuilder;

EChartsHeatmapMatrixCalculatedOptionBuilder.prototype._defaultOptions = function () {
    var opt = _echartsOptionBuilder2.default.prototype._defaultOptions.call(this);
    opt.xAxis[0].type = 'category';
    opt.xAxis[0].data = [];
    opt.yAxis[0].type = 'category';
    opt.yAxis[0].data = [];
    opt.dataZoom = this.bOptions.dataZoom;
    opt.visualMap = {};
    return opt;
};

EChartsHeatmapMatrixCalculatedOptionBuilder.prototype._setUpOptions = function () {
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('brushRemoval');
    this._registerDecorator('tooltipHeatmapMatrix');
    this._registerDecorator('visualMap');
    this.setSeriesKeyColumns([]);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
};

EChartsHeatmapMatrixCalculatedOptionBuilder.prototype._buildSeriesData = function () {
    for (var s in this.series) {
        this.series[s].type = 'heatmap';
        this.series[s].data = this.series[s].extractor.extract();
        this.series[s].largeThreshold = this.series[s].data.length + 10;
        this.eOptions.xAxis[0].data = this._getCategories(this.bOptions.xAxis[0].selected);
        this.eOptions.yAxis[0].data = this.series[s].extractor.yCategories();
        this.eOptions.visualMap.min = Math.floor(this.series[s].extractor.min);
        this.eOptions.visualMap.max = Math.ceil(this.series[s].extractor.max);
    }
};

EChartsHeatmapMatrixCalculatedOptionBuilder.prototype.getSeriesDataColumns = function () {
    return this.bOptions.xAxis[0].selected;
};

EChartsHeatmapMatrixCalculatedOptionBuilder.prototype._newSeriesExtractor = function (dataLength) {
    var allColumns = this.getAllColumns();
    var yAxisIndex = this.getColumnIndexes(this.bOptions.yAxis[0].selected, allColumns);
    var columnIndexes = this.getSeriesDataColumnIndexes();
    return new _echartsHeatmapMatrixCalculatedExtoractor2.default(columnIndexes, yAxisIndex, dataLength);
};

EChartsHeatmapMatrixCalculatedOptionBuilder.prototype._getCategories = function (axis) {
    var categories = [];
    for (var i in axis) {
        if (axis[i] && axis[i].name) {
            categories.push(axis[i].name);
        }
    }
    return categories;
};

EChartsHeatmapMatrixCalculatedOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsOptionBuilder2.default.prototype._newSeriesItem.call(this);

    var heatmapOptions = this.bOptions.plotOptions.heatmap;
    var attributes = [];
    this._applySeriesOptions(seriesItem, heatmapOptions, attributes);

    return seriesItem;
};

EChartsHeatmapMatrixCalculatedOptionBuilder.prototype._buildTooltip = function () {
    var _this = this;
    var xAxisCategories = this._getCategories(this.bOptions.xAxis[0].selected);
    var yAxisCategories = this.eOptions.series[0].extractor.yCategories();
    _this.eOptions.tooltip.formatter = function (params, ticket, callback) {
        if (params.seriesType === 'heatmap') {
            return ['X-Axis : ' + xAxisCategories[params.data[0]], 'Y-Axis : ' + yAxisCategories[params.data[1]], 'Value: ' + params.data[2]].join('<br/>');
        }
    };
};

EChartsHeatmapMatrixCalculatedOptionBuilder.prototype.getSeriesKeyColumns = function () {
    return [];
};

exports.default = EChartsHeatmapMatrixCalculatedOptionBuilder;

/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeOptionBuilder = __webpack_require__(19);

var _echartsAxisTypeOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeOptionBuilder);

var _echartsHistogramExtractor = __webpack_require__(243);

var _echartsHistogramExtractor2 = _interopRequireDefault(_echartsHistogramExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsHistogramOptionBuilder() {
    _echartsAxisTypeOptionBuilder2.default.call(this);
}

EChartsHistogramOptionBuilder.prototype = Object.create(_echartsAxisTypeOptionBuilder2.default.prototype);
EChartsHistogramOptionBuilder.prototype.constructor = EChartsHistogramOptionBuilder;

EChartsHistogramOptionBuilder.prototype._setUpOptions = function () {
    this._registerDecorator('axisTypeValue');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('axisLineOnZeroFalse');
    this._registerDecorator('xAxisBoundaryGapFalse');
    this._registerDecorator('yAxisScaleFalse');
    this._registerDecorator('xAxisRangeForHistogram');
    this._registerDecorator('TooltipTriggerForceItemDecorator');
    this._registerDecorator('tooltipHistogram');

    this.setSeriesKeyColumns([]);
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
};

EChartsHistogramOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsAxisTypeOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.type = 'custom';
    seriesItem.encode = {
        x: [0, 1],
        y: 2,
        tooltip: 2,
        label: 2
    };
    seriesItem.itemStyle = {
        normal: {}
    };
    seriesItem.renderItem = function (params, api) {
        var yValue = api.value(2);
        var start = api.coord([api.value(0), yValue]);
        var size = api.size([api.value(1) - api.value(0), yValue]);
        var style = api.style();

        return {
            type: 'rect',
            shape: echarts.graphic.clipRectByRect({
                x: start[0] + 1,
                y: start[1],
                width: size[0] - 1,
                height: size[1]
            }, {
                x: params.coordSys.x,
                y: params.coordSys.y,
                width: params.coordSys.width,
                height: params.coordSys.height
            }),
            style: style
        };
    };

    return seriesItem;
};

EChartsHistogramOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData();
    var columnIndexes = this.getSeriesDataColumnIndexes(0);

    var extractor = new _echartsHistogramExtractor2.default();

    extractor.setTarget({
        index: columnIndexes,
        type: 'value',
        isKey: true
    });

    var xIndex = columnIndexes[0];
    var xData = localData.data.map(function (row) {
        return row[xIndex];
    });

    var filteredxData = xData.filter(function (val) {
        return val !== null && !isNaN(val);
    });

    var min = Math.min.apply(null, filteredxData);
    var max = Math.max.apply(null, filteredxData);
    if (min === max) {
        // this._throwValidation('The maximum and minimum values of this data are same.');
        filteredxData.push(min + min / 10);
    }

    var bins = ecStat.histogram(filteredxData, this.bOptions.plotOptions.column.binMethod);
    extractor.setBins(bins.bins);

    return extractor;
};

EChartsHistogramOptionBuilder.prototype._buildSeriesData = function () {
    this.series[0].data = this.series[0].extractor.extract();
};

exports.default = EChartsHistogramOptionBuilder;

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function HistogramExtractor() {
    _echartsPointExtractor2.default.call(this);
    this._keyPointMap = {};
    this.valueList = [];
    this.min = Infinity;
    this.max = -Infinity;
}

HistogramExtractor.prototype = Object.create(_echartsPointExtractor2.default.prototype);
HistogramExtractor.prototype.constructor = HistogramExtractor;

HistogramExtractor.prototype.push = function (row, rowIndex) {
    _echartsPointExtractor2.default.prototype.push.call(this, row, rowIndex);

    var value = this._getKeyList(row, rowIndex)[0];
    this.valueList.push(value);
    this.min = Math.min(this.min, value);
    this.max = Math.max(this.max, value);
};

HistogramExtractor.prototype._getKeyPointer = function (row, rowIndex) {
    var keys = this._getKeyList(row, rowIndex);
    var bin = this._findBin(keys[0]);

    this._keyPointMap[bin] = this._keyPointMap[bin] || { value: [bin], point: [], indexList: [] };

    return this._keyPointMap[bin];
};

HistogramExtractor.prototype.setBins = function (bins) {
    this.bins = bins.map(function (bin) {
        bin.x0 = Number(bin.x0.toFixed(14));
        bin.x1 = Number(bin.x1.toFixed(14));
        bin.x = bin.x0 + (bin.x1 - bin.x0) / 2;
        bin.x = Number(bin.x.toFixed(14));
        return bin;
    });
};

HistogramExtractor.prototype._findBin = function (x) {
    for (var b in this.bins) {
        if (this.bins[b].x0 <= x && x < this.bins[b].x1) {
            return this.bins[b].x;
        }
    }
};

HistogramExtractor.prototype.extract = function () {
    var answer = [];
    for (var b in this.bins) {
        var bin = this.bins[b];
        var pointObject = this._keyPointMap[bin.x];
        if (pointObject) {
            var operator = new _aggregationOperator2.default(pointObject.value);
            for (var i = 0; i < pointObject.indexList.length; i++) {
                operator.add(pointObject.indexList[i], pointObject.point[i][1]);
            }
            answer.push({ value: [bin.x0, bin.x1, operator.calc('count')] });
        }
    }
    return answer;
};

exports.default = HistogramExtractor;

/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _preferenceOptions = __webpack_require__(419);

var _preferenceOptions2 = _interopRequireDefault(_preferenceOptions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /**
                                                                                                                                                                                                                   * Created by sds on 2017-11-07.
                                                                                                                                                                                                                   */


function PreferenceUtils() {}

/**
 * @param prefOptArr = [{
     *      type: number,
     *      digit: 3
     * },{
     * // (number 또는 exponential 하나만 가능)
     *      type: exponential,
     *      digit: 4
     * },{
     *      type: string,
     *      detail: '$'
     * }]
 */
PreferenceUtils.setTableFormatter = function (prefOptArr) {
    if (!prefOptArr || !Array.isArray(prefOptArr)) {
        return;
    }
    prefOptArr.forEach(function (prefOption) {
        if (['number', 'exponential', 'double', 'integer'].includes(prefOption.type)) {
            var parsedStr = _optionUtils2.default.parseFmtObjToStr(prefOption);
            $.extend(true, _preferenceOptions2.default.table.formatter, _defineProperty({}, prefOption.type === 'exponential' ? 'number' : prefOption.type, parsedStr));
        } else {
            console.warn('String type formatter is not implemented yet.');
            // TODO: implement type == string, jQWidgetsTableOptionBuilder.prototype._createStringRenderer
        }

        if (prefOption.pivot) {
            $.extend(true, _preferenceOptions2.default.table.formatter, { pivot: prefOption.pivot });
        }
    });
};

PreferenceUtils.getTableFormatter = function (type) {
    if (!type) {
        return _preferenceOptions2.default.table.formatter;
    } else {
        return _preferenceOptions2.default.table.formatter[type];
    }
};

PreferenceUtils.clearTableFormatter = function () {
    _preferenceOptions2.default.table.formatter = {};
};

// PreferenceUtils.setValue = function (prefOpts) {
//     PrefOptions.extend(prefOpts);
// };
//
// PreferenceUtils.getValue = function () {
//     return PrefOptions;
// };

exports.default = PreferenceUtils;

/***/ }),
/* 245 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return empty; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__config__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_hostReportError__ = __webpack_require__(103);
/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */


var empty = {
    closed: true,
    next: function (value) { },
    error: function (err) {
        if (__WEBPACK_IMPORTED_MODULE_0__config__["a" /* config */].useDeprecatedSynchronousErrorHandling) {
            throw err;
        }
        else {
            Object(__WEBPACK_IMPORTED_MODULE_1__util_hostReportError__["a" /* hostReportError */])(err);
        }
    },
    complete: function () { }
};
//# sourceMappingURL=Observer.js.map


/***/ }),
/* 246 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UnsubscriptionError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var UnsubscriptionErrorImpl = /*@__PURE__*/ (function () {
    function UnsubscriptionErrorImpl(errors) {
        Error.call(this);
        this.message = errors ?
            errors.length + " errors occurred during unsubscription:\n" + errors.map(function (err, i) { return i + 1 + ") " + err.toString(); }).join('\n  ') : '';
        this.name = 'UnsubscriptionError';
        this.errors = errors;
        return this;
    }
    UnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return UnsubscriptionErrorImpl;
})();
var UnsubscriptionError = UnsubscriptionErrorImpl;
//# sourceMappingURL=UnsubscriptionError.js.map


/***/ }),
/* 247 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ConnectableObservable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return connectableObservableDescriptor; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subject__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Subscription__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__operators_refCount__ = __webpack_require__(107);
/** PURE_IMPORTS_START tslib,_Subject,_Observable,_Subscriber,_Subscription,_operators_refCount PURE_IMPORTS_END */






var ConnectableObservable = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ConnectableObservable, _super);
    function ConnectableObservable(source, subjectFactory) {
        var _this = _super.call(this) || this;
        _this.source = source;
        _this.subjectFactory = subjectFactory;
        _this._refCount = 0;
        _this._isComplete = false;
        return _this;
    }
    ConnectableObservable.prototype._subscribe = function (subscriber) {
        return this.getSubject().subscribe(subscriber);
    };
    ConnectableObservable.prototype.getSubject = function () {
        var subject = this._subject;
        if (!subject || subject.isStopped) {
            this._subject = this.subjectFactory();
        }
        return this._subject;
    };
    ConnectableObservable.prototype.connect = function () {
        var connection = this._connection;
        if (!connection) {
            this._isComplete = false;
            connection = this._connection = new __WEBPACK_IMPORTED_MODULE_4__Subscription__["a" /* Subscription */]();
            connection.add(this.source
                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));
            if (connection.closed) {
                this._connection = null;
                connection = __WEBPACK_IMPORTED_MODULE_4__Subscription__["a" /* Subscription */].EMPTY;
            }
        }
        return connection;
    };
    ConnectableObservable.prototype.refCount = function () {
        return Object(__WEBPACK_IMPORTED_MODULE_5__operators_refCount__["a" /* refCount */])()(this);
    };
    return ConnectableObservable;
}(__WEBPACK_IMPORTED_MODULE_2__Observable__["a" /* Observable */]));

var connectableObservableDescriptor = /*@__PURE__*/ (function () {
    var connectableProto = ConnectableObservable.prototype;
    return {
        operator: { value: null },
        _refCount: { value: 0, writable: true },
        _subject: { value: null, writable: true },
        _connection: { value: null, writable: true },
        _subscribe: { value: connectableProto._subscribe },
        _isComplete: { value: connectableProto._isComplete, writable: true },
        getSubject: { value: connectableProto.getSubject },
        connect: { value: connectableProto.connect },
        refCount: { value: connectableProto.refCount }
    };
})();
var ConnectableSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ConnectableSubscriber, _super);
    function ConnectableSubscriber(destination, connectable) {
        var _this = _super.call(this, destination) || this;
        _this.connectable = connectable;
        return _this;
    }
    ConnectableSubscriber.prototype._error = function (err) {
        this._unsubscribe();
        _super.prototype._error.call(this, err);
    };
    ConnectableSubscriber.prototype._complete = function () {
        this.connectable._isComplete = true;
        this._unsubscribe();
        _super.prototype._complete.call(this);
    };
    ConnectableSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (connectable) {
            this.connectable = null;
            var connection = connectable._connection;
            connectable._refCount = 0;
            connectable._subject = null;
            connectable._connection = null;
            if (connection) {
                connection.unsubscribe();
            }
        }
    };
    return ConnectableSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subject__["b" /* SubjectSubscriber */]));
var RefCountOperator = /*@__PURE__*/ (function () {
    function RefCountOperator(connectable) {
        this.connectable = connectable;
    }
    RefCountOperator.prototype.call = function (subscriber, source) {
        var connectable = this.connectable;
        connectable._refCount++;
        var refCounter = new RefCountSubscriber(subscriber, connectable);
        var subscription = source.subscribe(refCounter);
        if (!refCounter.closed) {
            refCounter.connection = connectable.connect();
        }
        return subscription;
    };
    return RefCountOperator;
}());
var RefCountSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](RefCountSubscriber, _super);
    function RefCountSubscriber(destination, connectable) {
        var _this = _super.call(this, destination) || this;
        _this.connectable = connectable;
        return _this;
    }
    RefCountSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (!connectable) {
            this.connection = null;
            return;
        }
        this.connectable = null;
        var refCount = connectable._refCount;
        if (refCount <= 0) {
            this.connection = null;
            return;
        }
        connectable._refCount = refCount - 1;
        if (refCount > 1) {
            this.connection = null;
            return;
        }
        var connection = this.connection;
        var sharedConnection = connectable._connection;
        this.connection = null;
        if (sharedConnection && (!connection || sharedConnection === connection)) {
            sharedConnection.unsubscribe();
        }
    };
    return RefCountSubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=ConnectableObservable.js.map


/***/ }),
/* 248 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SubjectSubscription; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscription__ = __webpack_require__(23);
/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */


var SubjectSubscription = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SubjectSubscription, _super);
    function SubjectSubscription(subject, subscriber) {
        var _this = _super.call(this) || this;
        _this.subject = subject;
        _this.subscriber = subscriber;
        _this.closed = false;
        return _this;
    }
    SubjectSubscription.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.closed = true;
        var subject = this.subject;
        var observers = subject.observers;
        this.subject = null;
        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {
            return;
        }
        var subscriberIndex = observers.indexOf(this.subscriber);
        if (subscriberIndex !== -1) {
            observers.splice(subscriberIndex, 1);
        }
    };
    return SubjectSubscription;
}(__WEBPACK_IMPORTED_MODULE_1__Subscription__["a" /* Subscription */]));

//# sourceMappingURL=SubjectSubscription.js.map


/***/ }),
/* 249 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["b"] = groupBy;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GroupedObservable; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subscription__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Subject__ = __webpack_require__(27);
/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription,_Observable,_Subject PURE_IMPORTS_END */





function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {
    return function (source) {
        return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));
    };
}
var GroupByOperator = /*@__PURE__*/ (function () {
    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {
        this.keySelector = keySelector;
        this.elementSelector = elementSelector;
        this.durationSelector = durationSelector;
        this.subjectSelector = subjectSelector;
    }
    GroupByOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));
    };
    return GroupByOperator;
}());
var GroupBySubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](GroupBySubscriber, _super);
    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {
        var _this = _super.call(this, destination) || this;
        _this.keySelector = keySelector;
        _this.elementSelector = elementSelector;
        _this.durationSelector = durationSelector;
        _this.subjectSelector = subjectSelector;
        _this.groups = null;
        _this.attemptedToUnsubscribe = false;
        _this.count = 0;
        return _this;
    }
    GroupBySubscriber.prototype._next = function (value) {
        var key;
        try {
            key = this.keySelector(value);
        }
        catch (err) {
            this.error(err);
            return;
        }
        this._group(value, key);
    };
    GroupBySubscriber.prototype._group = function (value, key) {
        var groups = this.groups;
        if (!groups) {
            groups = this.groups = new Map();
        }
        var group = groups.get(key);
        var element;
        if (this.elementSelector) {
            try {
                element = this.elementSelector(value);
            }
            catch (err) {
                this.error(err);
            }
        }
        else {
            element = value;
        }
        if (!group) {
            group = (this.subjectSelector ? this.subjectSelector() : new __WEBPACK_IMPORTED_MODULE_4__Subject__["a" /* Subject */]());
            groups.set(key, group);
            var groupedObservable = new GroupedObservable(key, group, this);
            this.destination.next(groupedObservable);
            if (this.durationSelector) {
                var duration = void 0;
                try {
                    duration = this.durationSelector(new GroupedObservable(key, group));
                }
                catch (err) {
                    this.error(err);
                    return;
                }
                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));
            }
        }
        if (!group.closed) {
            group.next(element);
        }
    };
    GroupBySubscriber.prototype._error = function (err) {
        var groups = this.groups;
        if (groups) {
            groups.forEach(function (group, key) {
                group.error(err);
            });
            groups.clear();
        }
        this.destination.error(err);
    };
    GroupBySubscriber.prototype._complete = function () {
        var groups = this.groups;
        if (groups) {
            groups.forEach(function (group, key) {
                group.complete();
            });
            groups.clear();
        }
        this.destination.complete();
    };
    GroupBySubscriber.prototype.removeGroup = function (key) {
        this.groups.delete(key);
    };
    GroupBySubscriber.prototype.unsubscribe = function () {
        if (!this.closed) {
            this.attemptedToUnsubscribe = true;
            if (this.count === 0) {
                _super.prototype.unsubscribe.call(this);
            }
        }
    };
    return GroupBySubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
var GroupDurationSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](GroupDurationSubscriber, _super);
    function GroupDurationSubscriber(key, group, parent) {
        var _this = _super.call(this, group) || this;
        _this.key = key;
        _this.group = group;
        _this.parent = parent;
        return _this;
    }
    GroupDurationSubscriber.prototype._next = function (value) {
        this.complete();
    };
    GroupDurationSubscriber.prototype._unsubscribe = function () {
        var _a = this, parent = _a.parent, key = _a.key;
        this.key = this.parent = null;
        if (parent) {
            parent.removeGroup(key);
        }
    };
    return GroupDurationSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
var GroupedObservable = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](GroupedObservable, _super);
    function GroupedObservable(key, groupSubject, refCountSubscription) {
        var _this = _super.call(this) || this;
        _this.key = key;
        _this.groupSubject = groupSubject;
        _this.refCountSubscription = refCountSubscription;
        return _this;
    }
    GroupedObservable.prototype._subscribe = function (subscriber) {
        var subscription = new __WEBPACK_IMPORTED_MODULE_2__Subscription__["a" /* Subscription */]();
        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;
        if (refCountSubscription && !refCountSubscription.closed) {
            subscription.add(new InnerRefCountSubscription(refCountSubscription));
        }
        subscription.add(groupSubject.subscribe(subscriber));
        return subscription;
    };
    return GroupedObservable;
}(__WEBPACK_IMPORTED_MODULE_3__Observable__["a" /* Observable */]));

var InnerRefCountSubscription = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](InnerRefCountSubscription, _super);
    function InnerRefCountSubscription(parent) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        parent.count++;
        return _this;
    }
    InnerRefCountSubscription.prototype.unsubscribe = function () {
        var parent = this.parent;
        if (!parent.closed && !this.closed) {
            _super.prototype.unsubscribe.call(this);
            parent.count -= 1;
            if (parent.count === 0 && parent.attemptedToUnsubscribe) {
                parent.unsubscribe();
            }
        }
    };
    return InnerRefCountSubscription;
}(__WEBPACK_IMPORTED_MODULE_2__Subscription__["a" /* Subscription */]));
//# sourceMappingURL=groupBy.js.map


/***/ }),
/* 250 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BehaviorSubject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subject__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_ObjectUnsubscribedError__ = __webpack_require__(67);
/** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */



var BehaviorSubject = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](BehaviorSubject, _super);
    function BehaviorSubject(_value) {
        var _this = _super.call(this) || this;
        _this._value = _value;
        return _this;
    }
    Object.defineProperty(BehaviorSubject.prototype, "value", {
        get: function () {
            return this.getValue();
        },
        enumerable: true,
        configurable: true
    });
    BehaviorSubject.prototype._subscribe = function (subscriber) {
        var subscription = _super.prototype._subscribe.call(this, subscriber);
        if (subscription && !subscription.closed) {
            subscriber.next(this._value);
        }
        return subscription;
    };
    BehaviorSubject.prototype.getValue = function () {
        if (this.hasError) {
            throw this.thrownError;
        }
        else if (this.closed) {
            throw new __WEBPACK_IMPORTED_MODULE_2__util_ObjectUnsubscribedError__["a" /* ObjectUnsubscribedError */]();
        }
        else {
            return this._value;
        }
    };
    BehaviorSubject.prototype.next = function (value) {
        _super.prototype.next.call(this, this._value = value);
    };
    return BehaviorSubject;
}(__WEBPACK_IMPORTED_MODULE_1__Subject__["a" /* Subject */]));

//# sourceMappingURL=BehaviorSubject.js.map


/***/ }),
/* 251 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return queueScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return queue; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__QueueAction__ = __webpack_require__(433);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__QueueScheduler__ = __webpack_require__(435);
/** PURE_IMPORTS_START _QueueAction,_QueueScheduler PURE_IMPORTS_END */


var queueScheduler = /*@__PURE__*/ new __WEBPACK_IMPORTED_MODULE_1__QueueScheduler__["a" /* QueueScheduler */](__WEBPACK_IMPORTED_MODULE_0__QueueAction__["a" /* QueueAction */]);
var queue = queueScheduler;
//# sourceMappingURL=queue.js.map


/***/ }),
/* 252 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Scheduler; });
var Scheduler = /*@__PURE__*/ (function () {
    function Scheduler(SchedulerAction, now) {
        if (now === void 0) {
            now = Scheduler.now;
        }
        this.SchedulerAction = SchedulerAction;
        this.now = now;
    }
    Scheduler.prototype.schedule = function (work, delay, state) {
        if (delay === void 0) {
            delay = 0;
        }
        return new this.SchedulerAction(this, work).schedule(state, delay);
    };
    Scheduler.now = function () { return Date.now(); };
    return Scheduler;
}());

//# sourceMappingURL=Scheduler.js.map


/***/ }),
/* 253 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["b"] = observeOn;
/* unused harmony export ObserveOnOperator */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ObserveOnSubscriber; });
/* unused harmony export ObserveOnMessage */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Notification__ = __webpack_require__(68);
/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */



function observeOn(scheduler, delay) {
    if (delay === void 0) {
        delay = 0;
    }
    return function observeOnOperatorFunction(source) {
        return source.lift(new ObserveOnOperator(scheduler, delay));
    };
}
var ObserveOnOperator = /*@__PURE__*/ (function () {
    function ObserveOnOperator(scheduler, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        this.scheduler = scheduler;
        this.delay = delay;
    }
    ObserveOnOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));
    };
    return ObserveOnOperator;
}());

var ObserveOnSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ObserveOnSubscriber, _super);
    function ObserveOnSubscriber(destination, scheduler, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        var _this = _super.call(this, destination) || this;
        _this.scheduler = scheduler;
        _this.delay = delay;
        return _this;
    }
    ObserveOnSubscriber.dispatch = function (arg) {
        var notification = arg.notification, destination = arg.destination;
        notification.observe(destination);
        this.unsubscribe();
    };
    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {
        var destination = this.destination;
        destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));
    };
    ObserveOnSubscriber.prototype._next = function (value) {
        this.scheduleMessage(__WEBPACK_IMPORTED_MODULE_2__Notification__["a" /* Notification */].createNext(value));
    };
    ObserveOnSubscriber.prototype._error = function (err) {
        this.scheduleMessage(__WEBPACK_IMPORTED_MODULE_2__Notification__["a" /* Notification */].createError(err));
        this.unsubscribe();
    };
    ObserveOnSubscriber.prototype._complete = function () {
        this.scheduleMessage(__WEBPACK_IMPORTED_MODULE_2__Notification__["a" /* Notification */].createComplete());
        this.unsubscribe();
    };
    return ObserveOnSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));

var ObserveOnMessage = /*@__PURE__*/ (function () {
    function ObserveOnMessage(notification, destination) {
        this.notification = notification;
        this.destination = destination;
    }
    return ObserveOnMessage;
}());

//# sourceMappingURL=observeOn.js.map


/***/ }),
/* 254 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return subscribeToArray; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var subscribeToArray = function (array) {
    return function (subscriber) {
        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {
            subscriber.next(array[i]);
        }
        subscriber.complete();
    };
};
//# sourceMappingURL=subscribeToArray.js.map


/***/ }),
/* 255 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return asapScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return asap; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__AsapAction__ = __webpack_require__(436);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AsapScheduler__ = __webpack_require__(438);
/** PURE_IMPORTS_START _AsapAction,_AsapScheduler PURE_IMPORTS_END */


var asapScheduler = /*@__PURE__*/ new __WEBPACK_IMPORTED_MODULE_1__AsapScheduler__["a" /* AsapScheduler */](__WEBPACK_IMPORTED_MODULE_0__AsapAction__["a" /* AsapAction */]);
var asap = asapScheduler;
//# sourceMappingURL=asap.js.map


/***/ }),
/* 256 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TimeoutError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var TimeoutErrorImpl = /*@__PURE__*/ (function () {
    function TimeoutErrorImpl() {
        Error.call(this);
        this.message = 'Timeout has occurred';
        this.name = 'TimeoutError';
        return this;
    }
    TimeoutErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return TimeoutErrorImpl;
})();
var TimeoutError = TimeoutErrorImpl;
//# sourceMappingURL=TimeoutError.js.map


/***/ }),
/* 257 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return isArrayLike; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });
//# sourceMappingURL=isArrayLike.js.map


/***/ }),
/* 258 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isPromise;
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isPromise(value) {
    return !!value && typeof value.subscribe !== 'function' && typeof value.then === 'function';
}
//# sourceMappingURL=isPromise.js.map


/***/ }),
/* 259 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = concatAll;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mergeAll__ = __webpack_require__(114);
/** PURE_IMPORTS_START _mergeAll PURE_IMPORTS_END */

function concatAll() {
    return Object(__WEBPACK_IMPORTED_MODULE_0__mergeAll__["a" /* mergeAll */])(1);
}
//# sourceMappingURL=concatAll.js.map


/***/ }),
/* 260 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = scheduled;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scheduleObservable__ = __webpack_require__(449);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__schedulePromise__ = __webpack_require__(450);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scheduleArray__ = __webpack_require__(109);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__scheduleIterable__ = __webpack_require__(451);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_isInteropObservable__ = __webpack_require__(452);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_isPromise__ = __webpack_require__(258);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__util_isArrayLike__ = __webpack_require__(257);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__util_isIterable__ = __webpack_require__(453);
/** PURE_IMPORTS_START _scheduleObservable,_schedulePromise,_scheduleArray,_scheduleIterable,_util_isInteropObservable,_util_isPromise,_util_isArrayLike,_util_isIterable PURE_IMPORTS_END */








function scheduled(input, scheduler) {
    if (input != null) {
        if (Object(__WEBPACK_IMPORTED_MODULE_4__util_isInteropObservable__["a" /* isInteropObservable */])(input)) {
            return Object(__WEBPACK_IMPORTED_MODULE_0__scheduleObservable__["a" /* scheduleObservable */])(input, scheduler);
        }
        else if (Object(__WEBPACK_IMPORTED_MODULE_5__util_isPromise__["a" /* isPromise */])(input)) {
            return Object(__WEBPACK_IMPORTED_MODULE_1__schedulePromise__["a" /* schedulePromise */])(input, scheduler);
        }
        else if (Object(__WEBPACK_IMPORTED_MODULE_6__util_isArrayLike__["a" /* isArrayLike */])(input)) {
            return Object(__WEBPACK_IMPORTED_MODULE_2__scheduleArray__["a" /* scheduleArray */])(input, scheduler);
        }
        else if (Object(__WEBPACK_IMPORTED_MODULE_7__util_isIterable__["a" /* isIterable */])(input) || typeof input === 'string') {
            return Object(__WEBPACK_IMPORTED_MODULE_3__scheduleIterable__["a" /* scheduleIterable */])(input, scheduler);
        }
    }
    throw new TypeError((input !== null && typeof input || input) + ' is not observable');
}
//# sourceMappingURL=scheduled.js.map


/***/ }),
/* 261 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = merge;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_isScheduler__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__operators_mergeAll__ = __webpack_require__(114);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fromArray__ = __webpack_require__(56);
/** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */




function merge() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var concurrent = Number.POSITIVE_INFINITY;
    var scheduler = null;
    var last = observables[observables.length - 1];
    if (Object(__WEBPACK_IMPORTED_MODULE_1__util_isScheduler__["a" /* isScheduler */])(last)) {
        scheduler = observables.pop();
        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {
            concurrent = observables.pop();
        }
    }
    else if (typeof last === 'number') {
        concurrent = observables.pop();
    }
    if (scheduler === null && observables.length === 1 && observables[0] instanceof __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */]) {
        return observables[0];
    }
    return Object(__WEBPACK_IMPORTED_MODULE_2__operators_mergeAll__["a" /* mergeAll */])(concurrent)(Object(__WEBPACK_IMPORTED_MODULE_3__fromArray__["a" /* fromArray */])(observables, scheduler));
}
//# sourceMappingURL=merge.js.map


/***/ }),
/* 262 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NEVER; });
/* harmony export (immutable) */ __webpack_exports__["b"] = never;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_noop__ = __webpack_require__(111);
/** PURE_IMPORTS_START _Observable,_util_noop PURE_IMPORTS_END */


var NEVER = /*@__PURE__*/ new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](__WEBPACK_IMPORTED_MODULE_1__util_noop__["a" /* noop */]);
function never() {
    return NEVER;
}
//# sourceMappingURL=never.js.map


/***/ }),
/* 263 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = not;
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function not(pred, thisArg) {
    function notPred() {
        return !(notPred.pred.apply(notPred.thisArg, arguments));
    }
    notPred.pred = pred;
    notPred.thisArg = thisArg;
    return notPred;
}
//# sourceMappingURL=not.js.map


/***/ }),
/* 264 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = race;
/* unused harmony export RaceOperator */
/* unused harmony export RaceSubscriber */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_isArray__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__fromArray__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_util_isArray,_fromArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





function race() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    if (observables.length === 1) {
        if (Object(__WEBPACK_IMPORTED_MODULE_1__util_isArray__["a" /* isArray */])(observables[0])) {
            observables = observables[0];
        }
        else {
            return observables[0];
        }
    }
    return Object(__WEBPACK_IMPORTED_MODULE_2__fromArray__["a" /* fromArray */])(observables, undefined).lift(new RaceOperator());
}
var RaceOperator = /*@__PURE__*/ (function () {
    function RaceOperator() {
    }
    RaceOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RaceSubscriber(subscriber));
    };
    return RaceOperator;
}());

var RaceSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](RaceSubscriber, _super);
    function RaceSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.hasFirst = false;
        _this.observables = [];
        _this.subscriptions = [];
        return _this;
    }
    RaceSubscriber.prototype._next = function (observable) {
        this.observables.push(observable);
    };
    RaceSubscriber.prototype._complete = function () {
        var observables = this.observables;
        var len = observables.length;
        if (len === 0) {
            this.destination.complete();
        }
        else {
            for (var i = 0; i < len && !this.hasFirst; i++) {
                var observable = observables[i];
                var subscription = Object(__WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__["a" /* subscribeToResult */])(this, observable, observable, i);
                if (this.subscriptions) {
                    this.subscriptions.push(subscription);
                }
                this.add(subscription);
            }
            this.observables = null;
        }
    };
    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (!this.hasFirst) {
            this.hasFirst = true;
            for (var i = 0; i < this.subscriptions.length; i++) {
                if (i !== outerIndex) {
                    var subscription = this.subscriptions[i];
                    subscription.unsubscribe();
                    this.remove(subscription);
                }
            }
            this.subscriptions = null;
        }
        this.destination.next(innerValue);
    };
    return RaceSubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__["a" /* OuterSubscriber */]));

//# sourceMappingURL=race.js.map


/***/ }),
/* 265 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = timer;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__scheduler_async__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isNumeric__ = __webpack_require__(73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_isScheduler__ = __webpack_require__(38);
/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */




function timer(dueTime, periodOrScheduler, scheduler) {
    if (dueTime === void 0) {
        dueTime = 0;
    }
    var period = -1;
    if (Object(__WEBPACK_IMPORTED_MODULE_2__util_isNumeric__["a" /* isNumeric */])(periodOrScheduler)) {
        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);
    }
    else if (Object(__WEBPACK_IMPORTED_MODULE_3__util_isScheduler__["a" /* isScheduler */])(periodOrScheduler)) {
        scheduler = periodOrScheduler;
    }
    if (!Object(__WEBPACK_IMPORTED_MODULE_3__util_isScheduler__["a" /* isScheduler */])(scheduler)) {
        scheduler = __WEBPACK_IMPORTED_MODULE_1__scheduler_async__["a" /* async */];
    }
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var due = Object(__WEBPACK_IMPORTED_MODULE_2__util_isNumeric__["a" /* isNumeric */])(dueTime)
            ? dueTime
            : (+dueTime - scheduler.now());
        return scheduler.schedule(dispatch, due, {
            index: 0, period: period, subscriber: subscriber
        });
    });
}
function dispatch(state) {
    var index = state.index, period = state.period, subscriber = state.subscriber;
    subscriber.next(index);
    if (subscriber.closed) {
        return;
    }
    else if (period === -1) {
        return subscriber.complete();
    }
    state.index = index + 1;
    this.schedule(state, period);
}
//# sourceMappingURL=timer.js.map


/***/ }),
/* 266 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = audit;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function audit(durationSelector) {
    return function auditOperatorFunction(source) {
        return source.lift(new AuditOperator(durationSelector));
    };
}
var AuditOperator = /*@__PURE__*/ (function () {
    function AuditOperator(durationSelector) {
        this.durationSelector = durationSelector;
    }
    AuditOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));
    };
    return AuditOperator;
}());
var AuditSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](AuditSubscriber, _super);
    function AuditSubscriber(destination, durationSelector) {
        var _this = _super.call(this, destination) || this;
        _this.durationSelector = durationSelector;
        _this.hasValue = false;
        return _this;
    }
    AuditSubscriber.prototype._next = function (value) {
        this.value = value;
        this.hasValue = true;
        if (!this.throttled) {
            var duration = void 0;
            try {
                var durationSelector = this.durationSelector;
                duration = durationSelector(value);
            }
            catch (err) {
                return this.destination.error(err);
            }
            var innerSubscription = Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(this, duration);
            if (!innerSubscription || innerSubscription.closed) {
                this.clearThrottle();
            }
            else {
                this.add(this.throttled = innerSubscription);
            }
        }
    };
    AuditSubscriber.prototype.clearThrottle = function () {
        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;
        if (throttled) {
            this.remove(throttled);
            this.throttled = null;
            throttled.unsubscribe();
        }
        if (hasValue) {
            this.value = null;
            this.hasValue = false;
            this.destination.next(value);
        }
    };
    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {
        this.clearThrottle();
    };
    AuditSubscriber.prototype.notifyComplete = function () {
        this.clearThrottle();
    };
    return AuditSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=audit.js.map


/***/ }),
/* 267 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = concatMap;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mergeMap__ = __webpack_require__(72);
/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */

function concatMap(project, resultSelector) {
    return Object(__WEBPACK_IMPORTED_MODULE_0__mergeMap__["b" /* mergeMap */])(project, resultSelector, 1);
}
//# sourceMappingURL=concatMap.js.map


/***/ }),
/* 268 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isDate;
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isDate(value) {
    return value instanceof Date && !isNaN(+value);
}
//# sourceMappingURL=isDate.js.map


/***/ }),
/* 269 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = distinctUntilChanged;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function distinctUntilChanged(compare, keySelector) {
    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };
}
var DistinctUntilChangedOperator = /*@__PURE__*/ (function () {
    function DistinctUntilChangedOperator(compare, keySelector) {
        this.compare = compare;
        this.keySelector = keySelector;
    }
    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));
    };
    return DistinctUntilChangedOperator;
}());
var DistinctUntilChangedSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](DistinctUntilChangedSubscriber, _super);
    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {
        var _this = _super.call(this, destination) || this;
        _this.keySelector = keySelector;
        _this.hasKey = false;
        if (typeof compare === 'function') {
            _this.compare = compare;
        }
        return _this;
    }
    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {
        return x === y;
    };
    DistinctUntilChangedSubscriber.prototype._next = function (value) {
        var key;
        try {
            var keySelector = this.keySelector;
            key = keySelector ? keySelector(value) : value;
        }
        catch (err) {
            return this.destination.error(err);
        }
        var result = false;
        if (this.hasKey) {
            try {
                var compare = this.compare;
                result = compare(this.key, key);
            }
            catch (err) {
                return this.destination.error(err);
            }
        }
        else {
            this.hasKey = true;
        }
        if (!result) {
            this.key = key;
            this.destination.next(value);
        }
    };
    return DistinctUntilChangedSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=distinctUntilChanged.js.map


/***/ }),
/* 270 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["b"] = find;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FindValueOperator; });
/* unused harmony export FindValueSubscriber */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function find(predicate, thisArg) {
    if (typeof predicate !== 'function') {
        throw new TypeError('predicate is not a function');
    }
    return function (source) { return source.lift(new FindValueOperator(predicate, source, false, thisArg)); };
}
var FindValueOperator = /*@__PURE__*/ (function () {
    function FindValueOperator(predicate, source, yieldIndex, thisArg) {
        this.predicate = predicate;
        this.source = source;
        this.yieldIndex = yieldIndex;
        this.thisArg = thisArg;
    }
    FindValueOperator.prototype.call = function (observer, source) {
        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));
    };
    return FindValueOperator;
}());

var FindValueSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](FindValueSubscriber, _super);
    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.source = source;
        _this.yieldIndex = yieldIndex;
        _this.thisArg = thisArg;
        _this.index = 0;
        return _this;
    }
    FindValueSubscriber.prototype.notifyComplete = function (value) {
        var destination = this.destination;
        destination.next(value);
        destination.complete();
        this.unsubscribe();
    };
    FindValueSubscriber.prototype._next = function (value) {
        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;
        var index = this.index++;
        try {
            var result = predicate.call(thisArg || this, value, index, this.source);
            if (result) {
                this.notifyComplete(this.yieldIndex ? index : value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    FindValueSubscriber.prototype._complete = function () {
        this.notifyComplete(this.yieldIndex ? -1 : undefined);
    };
    return FindValueSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));

//# sourceMappingURL=find.js.map


/***/ }),
/* 271 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return defaultThrottleConfig; });
/* harmony export (immutable) */ __webpack_exports__["b"] = throttle;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



var defaultThrottleConfig = {
    leading: true,
    trailing: false
};
function throttle(durationSelector, config) {
    if (config === void 0) {
        config = defaultThrottleConfig;
    }
    return function (source) { return source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing)); };
}
var ThrottleOperator = /*@__PURE__*/ (function () {
    function ThrottleOperator(durationSelector, leading, trailing) {
        this.durationSelector = durationSelector;
        this.leading = leading;
        this.trailing = trailing;
    }
    ThrottleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));
    };
    return ThrottleOperator;
}());
var ThrottleSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ThrottleSubscriber, _super);
    function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.durationSelector = durationSelector;
        _this._leading = _leading;
        _this._trailing = _trailing;
        _this._hasValue = false;
        return _this;
    }
    ThrottleSubscriber.prototype._next = function (value) {
        this._hasValue = true;
        this._sendValue = value;
        if (!this._throttled) {
            if (this._leading) {
                this.send();
            }
            else {
                this.throttle(value);
            }
        }
    };
    ThrottleSubscriber.prototype.send = function () {
        var _a = this, _hasValue = _a._hasValue, _sendValue = _a._sendValue;
        if (_hasValue) {
            this.destination.next(_sendValue);
            this.throttle(_sendValue);
        }
        this._hasValue = false;
        this._sendValue = null;
    };
    ThrottleSubscriber.prototype.throttle = function (value) {
        var duration = this.tryDurationSelector(value);
        if (!!duration) {
            this.add(this._throttled = Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(this, duration));
        }
    };
    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {
        try {
            return this.durationSelector(value);
        }
        catch (err) {
            this.destination.error(err);
            return null;
        }
    };
    ThrottleSubscriber.prototype.throttlingDone = function () {
        var _a = this, _throttled = _a._throttled, _trailing = _a._trailing;
        if (_throttled) {
            _throttled.unsubscribe();
        }
        this._throttled = null;
        if (_trailing) {
            this.send();
        }
    };
    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.throttlingDone();
    };
    ThrottleSubscriber.prototype.notifyComplete = function () {
        this.throttlingDone();
    };
    return ThrottleSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=throttle.js.map


/***/ }),
/* 272 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = timeoutWith;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__scheduler_async__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isDate__ = __webpack_require__(268);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





function timeoutWith(due, withObservable, scheduler) {
    if (scheduler === void 0) {
        scheduler = __WEBPACK_IMPORTED_MODULE_1__scheduler_async__["a" /* async */];
    }
    return function (source) {
        var absoluteTimeout = Object(__WEBPACK_IMPORTED_MODULE_2__util_isDate__["a" /* isDate */])(due);
        var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);
        return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));
    };
}
var TimeoutWithOperator = /*@__PURE__*/ (function () {
    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {
        this.waitFor = waitFor;
        this.absoluteTimeout = absoluteTimeout;
        this.withObservable = withObservable;
        this.scheduler = scheduler;
    }
    TimeoutWithOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));
    };
    return TimeoutWithOperator;
}());
var TimeoutWithSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](TimeoutWithSubscriber, _super);
    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.absoluteTimeout = absoluteTimeout;
        _this.waitFor = waitFor;
        _this.withObservable = withObservable;
        _this.scheduler = scheduler;
        _this.action = null;
        _this.scheduleTimeout();
        return _this;
    }
    TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {
        var withObservable = subscriber.withObservable;
        subscriber._unsubscribeAndRecycle();
        subscriber.add(Object(__WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__["a" /* subscribeToResult */])(subscriber, withObservable));
    };
    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {
        var action = this.action;
        if (action) {
            this.action = action.schedule(this, this.waitFor);
        }
        else {
            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));
        }
    };
    TimeoutWithSubscriber.prototype._next = function (value) {
        if (!this.absoluteTimeout) {
            this.scheduleTimeout();
        }
        _super.prototype._next.call(this, value);
    };
    TimeoutWithSubscriber.prototype._unsubscribe = function () {
        this.action = null;
        this.scheduler = null;
        this.withObservable = null;
    };
    return TimeoutWithSubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=timeoutWith.js.map


/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartArea = __webpack_require__(131);

var _bchartArea2 = _interopRequireDefault(_bchartArea);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-area-stacked.js
 * Created by daewon.park on 2017-04-12.
 */
function BAreaStackedCharts(parentId, options) {
    _bchartArea2.default.call(this, parentId, options);
}

BAreaStackedCharts.prototype = Object.create(_bchartArea2.default.prototype);
BAreaStackedCharts.prototype.constructor = BAreaStackedCharts;

BAreaStackedCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BAreaStackedCharts.Attr.Key, this.$parent, this.options);
};

BAreaStackedCharts.prototype.setOptions = function (options) {
    $.extend(true, options, {
        plotOptions: {
            area: {}
        }
    });

    var reload = this.isReload(options);
    if (!reload) reload |= this._isSelectionChanged(this.options.xAxis, options.xAxis);
    if (!reload) reload |= this._isSelectionChanged(this.options.yAxis, options.yAxis);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.area.stackBy, options.plotOptions.area.stackBy);
    this._changeOptions(options);
    this.render(reload);
};

BAreaStackedCharts.Attr = $.extend(true, {}, _bchartArea2.default.Attr, {
    Key: 'area-stacked',
    Label: 'Stacked Area',
    Order: 31,
    ColumnConf: {
        xAxis: {
            label: 'X-axis',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            mandatory: true
        },
        yAxis: {
            label: 'Y-axis',
            aggregationEnabled: true,
            aggregationMap: {
                number: _const2.default.extendAggregation(['SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
            },
            columnType: ['string', 'number'],
            mandatory: true
        },
        stackBy: {
            label: 'Stack By',
            aggregationEnabled: false,
            multiple: true,
            columnType: ['string', 'number']
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        toolbar: {
            show: true,
            menu: {
                // brush: {},
                zoom: { zoomAxis: 'xAxis' // zoomAxis : all || xAxis || yAxis
                } }
        },
        plotOptions: {
            area: {
                smooth: true,
                stackBy: [{
                    selected: []
                }],
                marker: $.extend(true, {}, _defaultOptions2.default.Marker, {
                    leng: [{
                        selected: "0"
                    }],
                    numberFormat: { use: '' },
                    label: {
                        normal: {
                            show: false,
                            position: 'top',
                            formatter: function formatter(params) {
                                return params.value;
                            }
                        }

                    }
                }),
                stripLine: _defaultOptions2.default.StripLine,
                trendLine: _defaultOptions2.default.TrendLine,
                tooltip: { trigger: 'axis' },
                showSymbol: { all: 'auto' }
            }
        }
    })
});

exports.default = BAreaStackedCharts;

/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-bar.js
 * Created by daewon.park on 2017-04-16.
 */
function BBarCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
}

BBarCharts.prototype = Object.create(_bchartBase2.default.prototype);
BBarCharts.prototype.constructor = BBarCharts;

BBarCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BBarCharts.Attr.Key, this.$parent, this.options);
};

BBarCharts.Attr = {
    Key: 'bar',
    Label: 'Bar',
    Order: 20,
    ColumnConf: {
        xAxis: {
            label: 'X-axis',
            aggregationEnabled: true,
            aggregationMap: {
                number: _const2.default.extendAggregation(['SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
            },
            columnType: ['string', 'number'],
            mandatory: true
        },
        yAxis: {
            label: 'Y-axis',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            mandatory: true
        },
        colorBy: {
            label: 'Color By',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            multiple: true
        }
    },
    //todo: 2017 pvr zoom 라이브러리 버그(filter mode)로 인한 줌기능 제거
    DefaultOptions: _defaultOptions2.default.extend({
        toolbar: {
            show: true,
            menu: {
                brush: {},
                zoom: { zoomAxis: 'yAxis' // zoomAxis : all || xAxis || yAxis
                } }
        },
        plotOptions: {
            bar: {
                stripLine: _defaultOptions2.default.StripLine,
                trendLine: _defaultOptions2.default.TrendLine,
                tooltip: { trigger: 'item' },
                axisSort: { sort: true, rule: 'asc', type: 'axis' },
                marker: $.extend(true, {}, _defaultOptions2.default.Marker, {
                    leng: [{
                        selected: "0"
                    }],
                    numberFormat: { use: '' },
                    label: {
                        normal: {
                            show: false,
                            position: 'top',
                            formatter: function formatter(params) {
                                return params.value;
                            }
                        }

                    }
                }),
                emphasis: {
                    max: { use: false, controlLimit: { use: false, value: null }, color: '#313695' },
                    min: { use: false, controlLimit: { use: false, value: null }, color: '#313695' }
                }
            }
        }
    })
};

exports.default = BBarCharts;

/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBar = __webpack_require__(274);

var _bchartBar2 = _interopRequireDefault(_bchartBar);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-bar-stacked.js
 * Created by daewon.park on 2017-04-16.
 */
function BBarStackedCharts(parentId, options) {
    _bchartBar2.default.call(this, parentId, options);
}

BBarStackedCharts.prototype = Object.create(_bchartBar2.default.prototype);
BBarStackedCharts.prototype.constructor = BBarStackedCharts;

BBarStackedCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BBarStackedCharts.Attr.Key, this.$parent, this.options);
};

BBarStackedCharts.prototype.setOptions = function (options) {
    $.extend(true, options, {
        plotOptions: {
            bar: {}
        }
    });

    var reload = this.isReload(options);
    if (!reload) reload |= this._isSelectionChanged(this.options.xAxis, options.xAxis);
    if (!reload) reload |= this._isSelectionChanged(this.options.yAxis, options.yAxis);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.bar.stackBy, options.plotOptions.bar.stackBy);
    this._changeOptions(options);
    this.render(reload);
};

BBarStackedCharts.Attr = $.extend(true, {}, _bchartBar2.default.Attr, {
    Key: 'bar-stacked',
    Label: 'Stacked Bar',
    Order: 21,
    ColumnConf: {
        xAxis: {
            label: 'X-axis',
            aggregationEnabled: true,
            aggregationMap: {
                number: _const2.default.extendAggregation(['SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
            },
            columnType: ['string', 'number'],
            mandatory: true
        },
        yAxis: {
            label: 'Y-axis',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            mandatory: true
        },
        stackBy: {
            label: 'Stack By',
            aggregationEnabled: false,
            multiple: true,
            columnType: ['string', 'number']
        }
    },
    //todo: 2017 pvr zoom 라이브러리 버그(filter mode)로 인한 줌기능 제거
    DefaultOptions: _defaultOptions2.default.extend({
        toolbar: {
            show: true,
            menu: {
                brush: {},
                zoom: { zoomAxis: 'yAxis' // zoomAxis : all || xAxis || yAxis
                } }
        },
        plotOptions: {
            bar: {
                stackBy: [{
                    selected: []
                }],
                stripLine: _defaultOptions2.default.StripLine,
                trendLine: _defaultOptions2.default.TrendLine,
                tooltip: { trigger: 'axis' },
                axisSort: { sort: true, rule: 'asc', type: 'axis' },
                marker: $.extend(true, {}, _defaultOptions2.default.Marker, {
                    leng: [{
                        selected: "0"
                    }],
                    numberFormat: { use: '' },
                    label: {
                        normal: {
                            show: false,
                            position: 'top',
                            formatter: function formatter(params) {
                                return params.value;
                            }
                        }

                    }
                })
            }
        }
    })
});

exports.default = BBarStackedCharts;

/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartColumn = __webpack_require__(122);

var _bchartColumn2 = _interopRequireDefault(_bchartColumn);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-column-stacked.js
 * Created by daewon.park on 2017-04-11.
 */
function BColumnStackedCharts(parentId, options) {
    _bchartColumn2.default.call(this, parentId, options);
}

BColumnStackedCharts.prototype = Object.create(_bchartColumn2.default.prototype);
BColumnStackedCharts.prototype.constructor = BColumnStackedCharts;

BColumnStackedCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BColumnStackedCharts.Attr.Key, this.$parent, this.options);
};

BColumnStackedCharts.prototype.setOptions = function (options) {
    $.extend(true, options, {
        plotOptions: {
            column: {}
        }
    });

    var reload = this.isReload(options);
    if (!reload) reload |= this._isSelectionChanged(this.options.xAxis, options.xAxis);
    if (!reload) reload |= this._isSelectionChanged(this.options.yAxis, options.yAxis);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.column.stackBy, options.plotOptions.column.stackBy);
    this._changeOptions(options);
    this.render(reload);
};

BColumnStackedCharts.Attr = {
    Key: 'column-stacked',
    Label: 'Stacked Column',
    Order: 11,
    ColumnConf: {
        xAxis: {
            label: 'X-axis',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            mandatory: true
        },
        yAxis: {
            label: 'Y-axis',
            aggregationEnabled: true,
            aggregationMap: {
                number: _const2.default.extendAggregation(['SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
            },
            columnType: ['string', 'number'],
            mandatory: true
        },
        stackBy: {
            label: 'Stack By',
            aggregationEnabled: false,
            multiple: true,
            columnType: ['string', 'number']
        }
    },
    //todo: 2017 pvr zoom 라이브러리 버그(filter mode)로 인한 줌기능 제거
    DefaultOptions: _defaultOptions2.default.extend({
        toolbar: {
            show: true,
            menu: {
                brush: {},
                zoom: { zoomAxis: 'xAxis' // zoomAxis : all || xAxis || yAxis
                } }
        },
        plotOptions: {
            column: {
                stackBy: [{
                    selected: []
                }],
                stripLine: _defaultOptions2.default.StripLine,
                trendLine: _defaultOptions2.default.TrendLine,
                tooltip: { trigger: 'axis' },
                axisSort: { sort: true, rule: 'asc', type: 'axis' },
                marker: $.extend(true, {}, _defaultOptions2.default.Marker, {
                    leng: [{
                        selected: "0"
                    }],
                    numberFormat: { use: '' },
                    label: {
                        normal: {
                            show: false,
                            position: 'top',
                            formatter: function formatter(params) {
                                return params.value;
                            }
                        }

                    }
                })
            }
        }
    })
};

exports.default = BColumnStackedCharts;

/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-heatmap.js
 * Created by daewon.park on 2017-04-16.
 */
function BHeatmapCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
}

BHeatmapCharts.prototype = Object.create(_bchartBase2.default.prototype);
BHeatmapCharts.prototype.constructor = BHeatmapCharts;

BHeatmapCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BHeatmapCharts.Attr.Key, this.$parent, this.options);
};

BHeatmapCharts.prototype.setOptions = function (options) {
    $.extend(true, options, {
        plotOptions: {
            heatmap: {}
        }
    });

    var reload = this.isReload(options);
    if (!reload) reload |= this._isSelectionChanged(this.options.xAxis, options.xAxis);
    if (!reload) reload |= this._isSelectionChanged(this.options.yAxis, options.yAxis);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.heatmap.valueBy, options.plotOptions.heatmap.valueBy);
    this._changeOptions(options);
    this.render(reload);
};

BHeatmapCharts.Attr = {
    Key: 'heatmap',
    Label: 'Heat map',
    Order: 40,
    ColumnConf: {
        xAxis: {
            label: 'X-axis',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            mandatory: true
        },
        yAxis: {
            label: 'Y-axis',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            mandatory: true
        },
        valueBy: {
            aggregationEnabled: true,
            aggregationMap: {
                number: _const2.default.extendAggregation(['SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
            },
            columnType: ['string', 'number'],
            label: 'Value By',
            mandatory: true
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        visualMap: _defaultOptions2.default.VisualMap,
        plotOptions: {
            heatmap: {
                valueBy: [{
                    selected: []
                }]
            }
        }
    })
};

exports.default = BHeatmapCharts;

/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-pie.js
 * Created by daewon.park on 2017-03-30.
 */
function BPieCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
}

BPieCharts.prototype = Object.create(_bchartBase2.default.prototype);
BPieCharts.prototype.constructor = BPieCharts;

BPieCharts.prototype._createFrameComponent = function () {
    this._createTitle();
    this._createToolbar();
    this._createLoadingPanel();
    this._createErrorPanel();
};

BPieCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BPieCharts.Attr.Key, this.$parent, this.options);
};

BPieCharts.prototype._renderFrame = function () {
    if (this.title) {
        this.title.render(this.options.title.text);
    }

    if (this.toolbar) {
        this.toolbar.render();
    }
};

BPieCharts.prototype.setOptions = function (options) {
    $.extend(true, options, {
        plotOptions: {
            pie: {}
        }
    });

    var reload = this.isReload(options);
    if (!reload) reload |= this._isSelectionChanged(this.options.colorBy, options.colorBy);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.pie.sizeBy, options.plotOptions.pie.sizeBy);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.pie.label, options.plotOptions.pie.label);
    this._changeOptions(options);
    this.render(reload);
};

BPieCharts.Attr = {
    Key: 'pie',
    Label: 'Pie',
    Order: 13,
    ColumnConf: {
        colorBy: {
            label: 'Color By',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            multiple: true,
            mandatory: true
        },
        sizeBy: {
            label: 'Size By',
            aggregationEnabled: true,
            aggregationMap: {
                number: _const2.default.extendAggregation(['SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
            },
            columnType: ['string', 'number']
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        toolbar: {
            show: false
        },
        plotOptions: {
            pie: {
                radius: '75%',
                axisSort: { sort: true, rule: 'asc', type: 'legend' },
                center: ['50%', '50%'],
                sizeBy: [{
                    selected: []
                }],
                label: {
                    show: true,
                    position: 'outside',
                    formatter: '{b}',
                    fontSize: 12
                }
            }
        }
    })
};

exports.default = BPieCharts;

/***/ }),
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */,
/* 283 */,
/* 284 */,
/* 285 */,
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */,
/* 290 */,
/* 291 */,
/* 292 */,
/* 293 */,
/* 294 */,
/* 295 */,
/* 296 */,
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */,
/* 301 */,
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */,
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */,
/* 310 */,
/* 311 */,
/* 312 */,
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(86);
module.exports = __webpack_require__(314);


/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(315);

var _bcharts = __webpack_require__(130);

var _bcharts2 = _interopRequireDefault(_bcharts);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bcharts-jquery.js
 * Created by daewon.park on 2017-04-13.
 */

(function ($, window, document, undefined) {

    $.fn.bcharts = function (options, propertyName, propertyValue) {
        var $el = this.first();
        try {
            if (options) {
                if (typeof options === 'string') {
                    var method = options;
                    var chart = $el.children('.bcharts-container').data('BChartsRef');
                    if (chart && typeof chart[method] === 'function') {
                        return chart[method](propertyName, propertyValue);
                    }
                } else {
                    var chart = new _bcharts2.default($el, options);
                    $el.children('.bcharts-container').data('BChartsRef', chart);
                    return this;
                }
            } else {
                return $el.children('.bcharts-container').data('BChartsRef');
            }
        } catch (e) {
            throw new Error(e.stack);
        }
    };
})(jQuery, window, document);

/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _package = __webpack_require__(316);

var _package2 = _interopRequireDefault(_package);

var _bcharts = __webpack_require__(130);

var _bcharts2 = _interopRequireDefault(_bcharts);

var _widget = __webpack_require__(31);

var _widget2 = _interopRequireDefault(_widget);

var _bchartRegister = __webpack_require__(40);

var Chart = _interopRequireWildcard(_bchartRegister);

var _pagination = __webpack_require__(140);

var _columnHelper = __webpack_require__(134);

var _columnHelper2 = _interopRequireDefault(_columnHelper);

var _filterHelper = __webpack_require__(580);

var _filterHelper2 = _interopRequireDefault(_filterHelper);

var _preferenceUtils = __webpack_require__(244);

var _preferenceUtils2 = _interopRequireDefault(_preferenceUtils);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _chartUtils = __webpack_require__(24);

var _chartUtils2 = _interopRequireDefault(_chartUtils);

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

var _chartValidator = __webpack_require__(133);

var _chartValidator2 = _interopRequireDefault(_chartValidator);

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

var _problemLibrary = __webpack_require__(88);

var _problemLibrary2 = _interopRequireDefault(_problemLibrary);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _chartValidatorRegister = __webpack_require__(135);

var Validator = _interopRequireWildcard(_chartValidatorRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _d3Decisiontree = __webpack_require__(237);

var _d3Decisiontree2 = _interopRequireDefault(_d3Decisiontree);

var _d3DecisiontreeOptionBuilder = __webpack_require__(238);

var _d3DecisiontreeOptionBuilder2 = _interopRequireDefault(_d3DecisiontreeOptionBuilder);

var _d3DecisiontreeExtractor = __webpack_require__(240);

var _d3DecisiontreeExtractor2 = _interopRequireDefault(_d3DecisiontreeExtractor);

var _d3AggregationExtractor = __webpack_require__(100);

var _d3AggregationExtractor2 = _interopRequireDefault(_d3AggregationExtractor);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_package2.default.Chart.BCharts = _bcharts2.default; /**
                                                      * Created by sds on 2018-03-21.
                                                      */

_package2.default.Chart.Widget = _widget2.default;
_package2.default.Chart.Registry = Chart.default;
_package2.default.Chart.Component.Pagination = _pagination.Pagination;
_package2.default.Chart.Helper.ColumnHelper = _columnHelper2.default;
_package2.default.Chart.Helper.SelectionFilterHelper = _filterHelper2.default;
_package2.default.Chart.Helper.PreferenceUtils = _preferenceUtils2.default;
_package2.default.Chart.Helper.OptionUtils = _optionUtils2.default;
_package2.default.Chart.Helper.ChartUtils = _chartUtils2.default;
_package2.default.Chart.Helper.AggregationOperator = _aggregationOperator2.default;
_package2.default.Chart.Validator.ChartValidator = _chartValidator2.default;
_package2.default.Chart.Validator.selectableColumnType = _problemLibrary2.default.selectableColumnType;

//module
_package2.default.Chart.API.registerChart = Chart.registerChart;
_package2.default.Chart.API.registerChartWrapper = Wrapper.registerChartWrapper;
_package2.default.Chart.API.registerChartValidator = Validator.registerChartValidator;

_package2.default.Chart.getChartTypeList = Chart.getChartTypeList;
_package2.default.Chart.getChartAttr = Chart.getChartAttr;

_package2.default.Chart.Wrapper.getChartWrapper = Wrapper.getChartWrapper;
_package2.default.Chart.Wrapper.createChartWrapper = Wrapper.createChartWrapper;
_package2.default.Chart.WrapperRegistry = Wrapper.default;
_package2.default.Chart.Validator.ChartValidator.Base = _chartValidatorBase2.default;

_package2.default.Chart.Validator.Register = Validator;
_package2.default.Chart.Validator.Base = _chartValidatorBase2.default;
_package2.default.Chart.Validator.getChartValidator = Validator.getChartValidator;
// BChartPackage.Chart.Validator.ChartValidator.Base = ChartValidatorBase;

//ㅠㅠ

_package2.default.Chart.Wrapper.OptionBuilder = {};
_package2.default.Chart.Wrapper.OptionBuilder['decisionTree'] = _d3DecisiontreeOptionBuilder2.default;
_package2.default.Chart.Wrapper.Extractor = {};
_package2.default.Chart.Wrapper.Extractor['decisionTree'] = _d3DecisiontreeExtractor2.default;
_package2.default.Chart.Wrapper.Extractor['d3-aggregation'] = _d3AggregationExtractor2.default;

_package2.default.Chart.DefaultOption = _defaultOptions2.default;

/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/**
 * Source: package.js
 * Created by daewon.park on 2017-03-22.
 */
var root = window;

if (typeof root.Brightics == 'undefined') {
    root.Brightics = {};
}

$.extend(true, root.Brightics, {
    Chart: {
        BCharts: {},
        Component: {},
        Helper: {},
        Registry: {},
        Wrapper: {},
        Env: {
            DefaultOptions: {},
            PrefOptions: {}
        },
        Validator: {},
        Error: {},
        API: {}
    }
});

exports.default = root.Brightics;

window.Brightics = root.Brightics;

/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _problemLibrary = __webpack_require__(88);

var _problemLibrary2 = _interopRequireDefault(_problemLibrary);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Problem(key, param, targetObj) {
    var problemTemplate = _problemLibrary2.default.Problems[key];

    if (typeof param === 'undefined') param = [];

    var problem = {
        key: key,
        message: this._getMessage(problemTemplate.message, param)
    };

    if (targetObj) {
        problem.target = targetObj.target;
        if (typeof targetObj.index !== 'undefined') {
            problem.index = targetObj.index;
        }
    }
    return problem;
} /**
   * Created by SDS on 2017-05-10.
   */


Problem.prototype._getMessage = function (messageFormat, param) {
    return messageFormat.replace(/{(\d+)}/g, function (match, number) {
        return typeof param[number] !== 'undefined' ? param[number] : match;
    });
};

exports.default = Problem;

/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _warningLibrary = __webpack_require__(319);

var _warningLibrary2 = _interopRequireDefault(_warningLibrary);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Warning(key, param, targetObj) {
    var warningTemplate = _warningLibrary2.default[key];

    if (typeof param === 'undefined') param = [];

    var warning = {
        key: key,
        message: this._getMessage(warningTemplate.message, param)
    };

    if (targetObj) {
        warning.target = targetObj.target;
        if (typeof targetObj.index !== 'undefined') {
            warning.index = targetObj.index;
        }
    }
    return warning;
} /**
   * Created by SDS on 2017-05-10.
   */


Warning.prototype._getMessage = function (messageFormat, param) {
    return messageFormat.replace(/{(\d+)}/g, function (match, number) {
        return typeof param[number] !== 'undefined' ? param[number] : match;
    });
};

exports.default = Warning;

/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/**
 * Created by SDS on 2017-05-10.
 */
exports.default = {
    'axis-001': {
        message: '{0} Strip Line is not available.'
    },
    'axis-002': {
        message: '{0} Scale is not available.'
    }
};

/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.wordCloud = exports.radar = exports.imageGrid = exports.donut = exports.map = exports.treemap = exports.table = exports.scatter = exports.roccurve = exports.qqplot = exports.pie = exports.pairwiseScatter = exports.network = exports.line = exports.histogram = exports.heatmapMatrix = exports.heatmap = exports.dendrogram = exports.decisiontree = exports.complex = exports.columnStacked100 = exports.columnStacked = exports.column = exports.card = exports.bubble = exports.boxplot = exports.biplot = exports.barStacked100 = exports.barStacked = exports.bar = exports.areaStacked100 = exports.areaStacked = exports.area = undefined;

var _chartValidatorArea = __webpack_require__(321);

var _chartValidatorArea2 = _interopRequireDefault(_chartValidatorArea);

var _chartValidatorAreaStacked = __webpack_require__(136);

var _chartValidatorAreaStacked2 = _interopRequireDefault(_chartValidatorAreaStacked);

var _chartValidatorAreaStacked3 = __webpack_require__(322);

var _chartValidatorAreaStacked4 = _interopRequireDefault(_chartValidatorAreaStacked3);

var _chartValidatorBar = __webpack_require__(323);

var _chartValidatorBar2 = _interopRequireDefault(_chartValidatorBar);

var _chartValidatorBarStacked = __webpack_require__(137);

var _chartValidatorBarStacked2 = _interopRequireDefault(_chartValidatorBarStacked);

var _chartValidatorBarStacked3 = __webpack_require__(324);

var _chartValidatorBarStacked4 = _interopRequireDefault(_chartValidatorBarStacked3);

var _chartValidatorBiplot = __webpack_require__(325);

var _chartValidatorBiplot2 = _interopRequireDefault(_chartValidatorBiplot);

var _chartValidatorBoxplot = __webpack_require__(326);

var _chartValidatorBoxplot2 = _interopRequireDefault(_chartValidatorBoxplot);

var _chartValidatorBubble = __webpack_require__(327);

var _chartValidatorBubble2 = _interopRequireDefault(_chartValidatorBubble);

var _chartValidatorCard = __webpack_require__(328);

var _chartValidatorCard2 = _interopRequireDefault(_chartValidatorCard);

var _chartValidatorColumn = __webpack_require__(329);

var _chartValidatorColumn2 = _interopRequireDefault(_chartValidatorColumn);

var _chartValidatorColumnStacked = __webpack_require__(138);

var _chartValidatorColumnStacked2 = _interopRequireDefault(_chartValidatorColumnStacked);

var _chartValidatorColumnStacked3 = __webpack_require__(330);

var _chartValidatorColumnStacked4 = _interopRequireDefault(_chartValidatorColumnStacked3);

var _chartValidatorComplex = __webpack_require__(331);

var _chartValidatorComplex2 = _interopRequireDefault(_chartValidatorComplex);

var _chartValidatorDecisiontree = __webpack_require__(332);

var _chartValidatorDecisiontree2 = _interopRequireDefault(_chartValidatorDecisiontree);

var _chartValidatorDendrogram = __webpack_require__(333);

var _chartValidatorDendrogram2 = _interopRequireDefault(_chartValidatorDendrogram);

var _chartValidatorHeatmap = __webpack_require__(334);

var _chartValidatorHeatmap2 = _interopRequireDefault(_chartValidatorHeatmap);

var _chartValidatorHeatmapMatrix = __webpack_require__(335);

var _chartValidatorHeatmapMatrix2 = _interopRequireDefault(_chartValidatorHeatmapMatrix);

var _chartValidatorHistogram = __webpack_require__(336);

var _chartValidatorHistogram2 = _interopRequireDefault(_chartValidatorHistogram);

var _chartValidatorLine = __webpack_require__(337);

var _chartValidatorLine2 = _interopRequireDefault(_chartValidatorLine);

var _chartValidatorNetwork = __webpack_require__(338);

var _chartValidatorNetwork2 = _interopRequireDefault(_chartValidatorNetwork);

var _chartValidatorPairwiseScatter = __webpack_require__(339);

var _chartValidatorPairwiseScatter2 = _interopRequireDefault(_chartValidatorPairwiseScatter);

var _chartValidatorPie = __webpack_require__(340);

var _chartValidatorPie2 = _interopRequireDefault(_chartValidatorPie);

var _chartValidatorQqplot = __webpack_require__(341);

var _chartValidatorQqplot2 = _interopRequireDefault(_chartValidatorQqplot);

var _chartValidatorRadar = __webpack_require__(342);

var _chartValidatorRadar2 = _interopRequireDefault(_chartValidatorRadar);

var _chartValidatorRoccurve = __webpack_require__(343);

var _chartValidatorRoccurve2 = _interopRequireDefault(_chartValidatorRoccurve);

var _chartValidatorScatter = __webpack_require__(344);

var _chartValidatorScatter2 = _interopRequireDefault(_chartValidatorScatter);

var _chartValidatorTable = __webpack_require__(345);

var _chartValidatorTable2 = _interopRequireDefault(_chartValidatorTable);

var _chartValidatorTreemap = __webpack_require__(346);

var _chartValidatorTreemap2 = _interopRequireDefault(_chartValidatorTreemap);

var _chartValidatorMap = __webpack_require__(347);

var _chartValidatorMap2 = _interopRequireDefault(_chartValidatorMap);

var _chartValidatorDonut = __webpack_require__(348);

var _chartValidatorDonut2 = _interopRequireDefault(_chartValidatorDonut);

var _chartValidatorImageGrid = __webpack_require__(349);

var _chartValidatorImageGrid2 = _interopRequireDefault(_chartValidatorImageGrid);

var _chartValidatorWordcloud = __webpack_require__(350);

var _chartValidatorWordcloud2 = _interopRequireDefault(_chartValidatorWordcloud);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import scattermap from './implement/chart-validator-scattermap';
exports.area = _chartValidatorArea2.default;
exports.areaStacked = _chartValidatorAreaStacked2.default;
exports.areaStacked100 = _chartValidatorAreaStacked4.default;
exports.bar = _chartValidatorBar2.default;
exports.barStacked = _chartValidatorBarStacked2.default;
exports.barStacked100 = _chartValidatorBarStacked4.default;
exports.biplot = _chartValidatorBiplot2.default;
exports.boxplot = _chartValidatorBoxplot2.default;
exports.bubble = _chartValidatorBubble2.default;
exports.card = _chartValidatorCard2.default;
exports.column = _chartValidatorColumn2.default;
exports.columnStacked = _chartValidatorColumnStacked2.default;
exports.columnStacked100 = _chartValidatorColumnStacked4.default;
exports.complex = _chartValidatorComplex2.default;
exports.decisiontree = _chartValidatorDecisiontree2.default;
exports.dendrogram = _chartValidatorDendrogram2.default;
exports.heatmap = _chartValidatorHeatmap2.default;
exports.heatmapMatrix = _chartValidatorHeatmapMatrix2.default;
exports.histogram = _chartValidatorHistogram2.default;
exports.line = _chartValidatorLine2.default;
exports.network = _chartValidatorNetwork2.default;
exports.pairwiseScatter = _chartValidatorPairwiseScatter2.default;
exports.pie = _chartValidatorPie2.default;
exports.qqplot = _chartValidatorQqplot2.default;
exports.roccurve = _chartValidatorRoccurve2.default;
exports.scatter = _chartValidatorScatter2.default;
exports.table = _chartValidatorTable2.default;
exports.treemap = _chartValidatorTreemap2.default;
exports.map = _chartValidatorMap2.default;
exports.donut = _chartValidatorDonut2.default;
exports.imageGrid = _chartValidatorImageGrid2.default;
exports.radar = _chartValidatorRadar2.default;
exports.wordCloud = _chartValidatorWordcloud2.default; /**
                                                        * Source: chart-validator-index.js
                                                        * Created by sds on 2018-03-14.
                                                        */

/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function AreaChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


AreaChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
AreaChartValidator.prototype.constructor = AreaChartValidator;

AreaChartValidator.prototype.validateStripLineType = function (dataIdx) {
    this._createWarning('axis-001', ['X-axis'], {
        target: 'xAxis'
    });
};

exports.default = AreaChartValidator;

/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _chartValidatorAreaStacked = __webpack_require__(136);

var _chartValidatorAreaStacked2 = _interopRequireDefault(_chartValidatorAreaStacked);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function AreaStacked100ChartValidator(options) {
  _chartValidatorAreaStacked2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


AreaStacked100ChartValidator.prototype = Object.create(_chartValidatorAreaStacked2.default.prototype);
AreaStacked100ChartValidator.prototype.constructor = AreaStacked100ChartValidator;

exports.default = AreaStacked100ChartValidator;

/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BarChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


BarChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
BarChartValidator.prototype.constructor = BarChartValidator;

BarChartValidator.prototype.validateStripLineType = function (dataIdx) {
    this._createWarning('axis-001', ['Y-axis'], {
        target: 'yAxis'
    });
};

BarChartValidator.prototype.validateScale = function (dataIdx) {
    this._createWarning('axis-002', ['Y-axis'], {
        target: 'yaxis'
    });
};

exports.default = BarChartValidator;

/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _chartValidatorBarStacked = __webpack_require__(137);

var _chartValidatorBarStacked2 = _interopRequireDefault(_chartValidatorBarStacked);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BarStacked100ChartValidator(options) {
  _chartValidatorBarStacked2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


BarStacked100ChartValidator.prototype = Object.create(_chartValidatorBarStacked2.default.prototype);
BarStacked100ChartValidator.prototype.constructor = BarStacked100ChartValidator;

exports.default = BarStacked100ChartValidator;

/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BiplotChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by sds on 2017-09-11.
   */


BiplotChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
BiplotChartValidator.prototype.constructor = BiplotChartValidator;

BiplotChartValidator.prototype.getDataSrcOptions = function () {
    return [{
        label: 'Data Source #1'
    }, {
        label: 'Data Source #2'
    }];
};

BiplotChartValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'lineXAxis',
        value: this.options.xAxis[0]
    }, {
        key: 'lineYAxis',
        value: this.options.yAxis[0]
    }, {
        key: 'lineLabelBy',
        value: this.options.plotOptions.component.labelBy[0]
    }, {
        key: 'scatterXAxis',
        value: this.options.xAxis[1],
        dataSetIndex: 1
    }, {
        key: 'scatterYAxis',
        value: this.options.yAxis[1],
        dataSetIndex: 1
    }, {
        key: 'scatterLabelBy',
        value: this.options.plotOptions.projection.labelBy[0],
        dataSetIndex: 1
    }];
};

exports.default = BiplotChartValidator;

/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BoxPlotChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


BoxPlotChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
BoxPlotChartValidator.prototype.constructor = BoxPlotChartValidator;

BoxPlotChartValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'xAxis'
    }, {
        key: 'yAxis'
    }];
};

exports.default = BoxPlotChartValidator;

/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BubbleChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


BubbleChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
BubbleChartValidator.prototype.constructor = BubbleChartValidator;

BubbleChartValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'xAxis'
    }, {
        key: 'yAxis'
    }, {
        key: 'stackBy'
    }, {
        key: 'sizeBy'
    }];
};

exports.default = BubbleChartValidator;

/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function CardChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by sds on 2018-03-26.
   */


CardChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
CardChartValidator.prototype.constructor = CardChartValidator;

//@implement
CardChartValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'valueBy'
    }];
};

CardChartValidator.prototype._validateAxisViewRange = function () {
    // do nothing
};

CardChartValidator.prototype.validateStripLineType = function () {
    // do nothing
};

CardChartValidator.prototype.validateScale = function () {
    // do nothing
};

exports.default = CardChartValidator;

/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ColumnChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


ColumnChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
ColumnChartValidator.prototype.constructor = ColumnChartValidator;

ColumnChartValidator.prototype.validateStripLineType = function (dataIdx) {
    this._createWarning('axis-001', ['X-axis'], {
        target: 'xAxis'
    });
};

ColumnChartValidator.prototype.validateScale = function (dataIdx) {
    this._createWarning('axis-002', ['X-axis'], {
        target: 'xaxis'
    });
};

exports.default = ColumnChartValidator;

/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _chartValidatorColumnStacked = __webpack_require__(138);

var _chartValidatorColumnStacked2 = _interopRequireDefault(_chartValidatorColumnStacked);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ColumnStacked100ChartValidator(options) {
  _chartValidatorColumnStacked2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


ColumnStacked100ChartValidator.prototype = Object.create(_chartValidatorColumnStacked2.default.prototype);
ColumnStacked100ChartValidator.prototype.constructor = ColumnStacked100ChartValidator;

exports.default = ColumnStacked100ChartValidator;

/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ComplexChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


ComplexChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
ComplexChartValidator.prototype.constructor = ComplexChartValidator;

ComplexChartValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'xAxis'
    }, {
        key: 'yAxis',
        chartIdx: 0,
        value: this.options.complex[0].yAxis[0]
    }, {
        key: 'yAxis',
        chartIdx: 1,
        value: this.options.complex[1].yAxis[0]
    }, {
        key: 'colorBy',
        chartIdx: 0,
        value: this.options.complex[0].colorBy[0]
    }, {
        key: 'colorBy',
        chartIdx: 1,
        value: this.options.complex[1].colorBy[0]
    }, {
        key: 'lineBy',
        chartIdx: 0,
        value: this.options.complex[0].plotOptions.line.lineBy[0]
    }, {
        key: 'lineBy',
        chartIdx: 1,
        value: this.options.complex[1].plotOptions.line.lineBy[0]
    }];
};

ComplexChartValidator.prototype._validateAxisViewRange = function () {
    // do nothing
};

ComplexChartValidator.prototype.validateStripLineType = function () {
    // do nothing
};

ComplexChartValidator.prototype.validateScale = function () {
    // do nothing
};

exports.default = ComplexChartValidator;

/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function DecisionTreeChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


DecisionTreeChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
DecisionTreeChartValidator.prototype.constructor = DecisionTreeChartValidator;

DecisionTreeChartValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'fromColumn'
    }, {
        key: 'toColumn'
    }, {
        key: 'nodeLabelColumn'
    }, {
        key: 'linkLabelColumn'
    }];
};

DecisionTreeChartValidator.prototype._validateAxisViewRange = function () {
    // do nothing
};

DecisionTreeChartValidator.prototype.validateStripLineType = function () {
    // do nothing
};

DecisionTreeChartValidator.prototype.validateScale = function () {
    // do nothing
};

exports.default = DecisionTreeChartValidator;

/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function DendrogramChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


DendrogramChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
DendrogramChartValidator.prototype.constructor = DendrogramChartValidator;

DendrogramChartValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'clusterGroupColumn'
    }, {
        key: 'clusterColumn'
    }, {
        key: 'heightColumn'
    }];
};

DendrogramChartValidator.prototype._validateAxisViewRange = function () {
    // do nothing
};

DendrogramChartValidator.prototype.validateStripLineType = function () {
    // do nothing
};

DendrogramChartValidator.prototype.validateScale = function () {
    // do nothing
};

exports.default = DendrogramChartValidator;

/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function HeatmapChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


HeatmapChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
HeatmapChartValidator.prototype.constructor = HeatmapChartValidator;

HeatmapChartValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'xAxis'
    }, {
        key: 'yAxis'
    }, {
        key: 'valueBy'
    }];
};

HeatmapChartValidator.prototype._validateAxisViewRange = function () {
    // do nothing
};

HeatmapChartValidator.prototype.validateStripLineType = function () {
    // do nothing
};

HeatmapChartValidator.prototype.validateScale = function () {
    // do nothing
};

exports.default = HeatmapChartValidator;

/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function HeatmapMatrixChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


HeatmapMatrixChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
HeatmapMatrixChartValidator.prototype.constructor = HeatmapMatrixChartValidator;

HeatmapMatrixChartValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'xAxis'
    }, {
        key: 'yAxis'
    }];
};

HeatmapMatrixChartValidator.prototype._validateAxisViewRange = function () {
    // do nothing
};

HeatmapMatrixChartValidator.prototype.validateStripLineType = function () {
    // do nothing
};

HeatmapMatrixChartValidator.prototype.validateScale = function () {
    // do nothing
};

exports.default = HeatmapMatrixChartValidator;

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function HisogramChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by sds on 2017-07-27.
   */


HisogramChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
HisogramChartValidator.prototype.constructor = HisogramChartValidator;

HisogramChartValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'xAxis'
    }];
};

exports.default = HisogramChartValidator;

/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function LineChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


LineChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
LineChartValidator.prototype.constructor = LineChartValidator;

LineChartValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'xAxis'
    }, {
        key: 'yAxis'
    }, {
        key: 'colorBy'
    }, {
        key: 'lineBy'
    }];
};

exports.default = LineChartValidator;

/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

var _chartUtils = __webpack_require__(24);

var _chartUtils2 = _interopRequireDefault(_chartUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Created by SDS on 2017-05-10.
 */
function NetworkChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
}

NetworkChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
NetworkChartValidator.prototype.constructor = NetworkChartValidator;

NetworkChartValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'fromColumn'
    }, {
        key: 'toColumn'
    }, {
        key: 'nodeSizeBy'
    }];
};

NetworkChartValidator.prototype._validateAxisViewRange = function () {
    // do nothing
};
NetworkChartValidator.prototype.validateStripLineType = function () {
    // do nothing
};

NetworkChartValidator.prototype.validateScale = function () {
    // do nothing
};

exports.default = NetworkChartValidator;

/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PairwiseScatterChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


PairwiseScatterChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
PairwiseScatterChartValidator.prototype.constructor = PairwiseScatterChartValidator;

PairwiseScatterChartValidator.prototype._configureAxis = function () {
    _chartValidatorBase2.default.prototype._configureAxis.call(this);
};

PairwiseScatterChartValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'xAxis'
    }, {
        key: 'colorBy'
    }];
};

exports.default = PairwiseScatterChartValidator;

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PieChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


PieChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
PieChartValidator.prototype.constructor = PieChartValidator;

PieChartValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'colorBy'
    }, {
        key: 'sizeBy'
    }];
};

PieChartValidator.prototype._validateAxisViewRange = function () {
    // do nothing
};

PieChartValidator.prototype.validateStripLineType = function () {
    // do nothing
};

PieChartValidator.prototype.validateScale = function () {
    // do nothing
};

exports.default = PieChartValidator;

/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function QQPlotValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


QQPlotValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
QQPlotValidator.prototype.constructor = QQPlotValidator;

QQPlotValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'values'
    }];
};

QQPlotValidator.prototype._validateAxisViewRange = function () {
    // do nothing
};

QQPlotValidator.prototype.validateStripLineType = function () {
    // do nothing
};

QQPlotValidator.prototype._validateImplement = function () {
    var distribution = this.options.plotOptions.qqplot.distribution[0].selected;
    if (!distribution || distribution === '') {
        var distTarget = { target: 'Distribution Type', index: 0 };
        this._createProblem('value-005', ['Distribution Type'], distTarget);
    }
    var confidence = this.options.plotOptions.qqplot.confidence[0].selected;
    if (!confidence || confidence === '') {
        var confTarget = { target: 'Confidence Level', index: 0 };
        this._createProblem('value-005', ['Confidence Level'], confTarget);
    }
};

QQPlotValidator.prototype.validateScale = function () {
    // do nothing
};

exports.default = QQPlotValidator;

/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function RadarChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by sds on 2017-09-05.
   */


RadarChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
RadarChartValidator.prototype.constructor = RadarChartValidator;

RadarChartValidator.prototype.validate = function () {
    _chartValidatorBase2.default.prototype.validate.call(this);
    this._validateRadarViewRange();
};

RadarChartValidator.prototype._validateRadarViewRange = function () {
    if (typeof this.options.plotOptions.radar.min === 'undefined' || typeof this.options.plotOptions.radar.max === 'undefined' || this.options.plotOptions.radar.min === null || this.options.plotOptions.radar.max === null) {
        this._createProblem('radar-view-range-001');
    }

    this._validateLessValue('View Range', {
        value1: this.options.plotOptions.radar.min,
        value2: this.options.plotOptions.radar.max
    }, ['Axis View Range', 'Min', 'Max']);
};

RadarChartValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'yAxis'
    }, {
        key: 'colorBy'
    }];
};
exports.default = RadarChartValidator;

/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BROCCurveChartValidator(options) {
  _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


BROCCurveChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
BROCCurveChartValidator.prototype.constructor = BROCCurveChartValidator;

exports.default = BROCCurveChartValidator;

/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ScatterChartValidator(options) {
  _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


ScatterChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
ScatterChartValidator.prototype.constructor = ScatterChartValidator;

exports.default = ScatterChartValidator;

/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TableChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


TableChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
TableChartValidator.prototype.constructor = TableChartValidator;

TableChartValidator.prototype.validate = function () {
    this.validateDataSource();
    this.validateAxis();
};

TableChartValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'formatter',
        value: this.options.plotOptions.table.formatter
    }];
};

exports.default = TableChartValidator;

/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TreemapValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


TreemapValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
TreemapValidator.prototype.constructor = TreemapValidator;

TreemapValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'hierarchyCol'
    }, {
        key: 'sizeBy'
    }];
};

TreemapValidator.prototype._validateAxisViewRange = function () {
    // do nothing
};

TreemapValidator.prototype.validateStripLineType = function () {
    // do nothing
};

TreemapValidator.prototype.validateScale = function () {
    // do nothing
};

exports.default = TreemapValidator;

/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function MapChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by sds on 2018-03-26.
   */


MapChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
MapChartValidator.prototype.constructor = MapChartValidator;

MapChartValidator.prototype.getAxisOptions = function () {
    return [];
};

MapChartValidator.prototype._configureAxis = function () {
    // do nothing
};

MapChartValidator.prototype._validateAxisViewRange = function () {
    // do nothing
};

MapChartValidator.prototype.validateStripLineType = function () {
    // do nothing
};

exports.default = MapChartValidator;

/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function DonutChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
} /**
   * Created by SDS on 2017-05-10.
   */


DonutChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
DonutChartValidator.prototype.constructor = DonutChartValidator;

DonutChartValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'colorBy'
    }, {
        key: 'sizeBy'
    }];
};

DonutChartValidator.prototype._validateAxisViewRange = function () {
    // do nothing
};

DonutChartValidator.prototype.validateStripLineType = function () {
    // do nothing
};

DonutChartValidator.prototype.validateScale = function () {
    // do nothing
};

exports.default = DonutChartValidator;

/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by sds on 2017-07-27.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var ImageGridValidator = function (_ChartValidatorBase) {
    _inherits(ImageGridValidator, _ChartValidatorBase);

    function ImageGridValidator(options) {
        _classCallCheck(this, ImageGridValidator);

        return _possibleConstructorReturn(this, (ImageGridValidator.__proto__ || Object.getPrototypeOf(ImageGridValidator)).call(this, options));
    }

    _createClass(ImageGridValidator, [{
        key: 'getAxisOptions',
        value: function getAxisOptions() {
            return [{
                key: 'imageColumn'
            }, {
                key: 'sortBy'
            }, {
                key: 'labelColumn'
            }];
        }
    }]);

    return ImageGridValidator;
}(_chartValidatorBase2.default);

exports.default = ImageGridValidator;

/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _chartValidatorBase = __webpack_require__(10);

var _chartValidatorBase2 = _interopRequireDefault(_chartValidatorBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function WordCloudChartValidator(options) {
    _chartValidatorBase2.default.call(this, options);
}

WordCloudChartValidator.prototype = Object.create(_chartValidatorBase2.default.prototype);
WordCloudChartValidator.prototype.constructor = WordCloudChartValidator;

WordCloudChartValidator.prototype.getAxisOptions = function () {
    return [{
        key: 'colorBy'
    }, {
        key: 'sizeBy'
    }];
};

WordCloudChartValidator.prototype._validateAxisViewRange = function () {
    // do nothing
};

WordCloudChartValidator.prototype.validateStripLineType = function () {
    // do nothing
};

WordCloudChartValidator.prototype.validateScale = function () {
    // do nothing
};

exports.default = WordCloudChartValidator;

/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AxisTitle = undefined;

var _title = __webpack_require__(139);

/**
 *
 * @param parentId
 * @param options {  }
 * @constructor
 */
function AxisTitle(parentId, options) {
    this._showAggregation = true;
    _title.Title.call(this, parentId, options);
} /**
   * Source: axis-title.js
   * Created by daewon.park on 2017-03-27.
   */


AxisTitle.prototype = Object.create(_title.Title.prototype);
AxisTitle.prototype.constructor = AxisTitle;

AxisTitle.prototype._createContents = function ($parent) {
    _title.Title.prototype._createContents.call(this, $parent);
    this.$mainControl.addClass('bcharts-axis');
};

AxisTitle.prototype.showAggregation = function (show) {
    this._showAggregation = show;
};

AxisTitle.prototype.render = function (axis) {
    var text = '';

    if (typeof axis === 'string') {
        text = axis;
    } else if (axis) {
        if (axis.title && axis.title.text) {
            text = axis.title.text;
        } else if (axis.axisType === 'byColumnNames') {
            text = 'Column Names';
        } else if (axis.selected && axis.selected.length > 0) {
            if (this._showAggregation) {
                var labels = {
                    'max': 'Max({0})',
                    'min': 'Min({0})',
                    'sum': 'Sum({0})',
                    'average': 'Average({0})',
                    'count': 'Count({0})',
                    'unique_count': 'Unique Count({0})'
                };

                var textList = [];

                for (var i in axis.selected) {
                    if (axis.selected[i]) {
                        if (labels[axis.selected[i].aggregation]) {
                            textList.push(labels[axis.selected[i].aggregation].replace(/\{(\d+)\}/g, axis.selected[i].name));
                        } else {
                            textList.push(axis.selected[i].name);
                        }
                    }
                }

                text = textList.join(', ');
            } else {
                text = axis.selected[0].name;
            }
        }
    }

    _title.Title.prototype.render.call(this, text);
};

exports.AxisTitle = AxisTitle;

/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Legend = undefined;

var _widget = __webpack_require__(31);

var _widget2 = _interopRequireDefault(_widget);

var _utils = __webpack_require__(52);

var _chartUtils = __webpack_require__(24);

var _chartUtils2 = _interopRequireDefault(_chartUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getLegendOrigin = _chartUtils2.default.getLegendOrigin;
/**
 *
 * @param parentId
 * @param options { orientation: 'horizontal', background:{}, right: 0, top: 0 }
 * @constructor
 */
/**
 * Source: legend.js
 * Created by daewon.park on 2017-03-27.
 */

function Legend(parentId, options) {
    _widget2.default.call(this, parentId, options);
}

Legend.prototype = Object.create(_widget2.default.prototype);
Legend.prototype.constructor = Legend;

Legend.prototype.destroy = function () {
    if (this.resizeHandler) {
        $(window).off('resize', this.resizeHandler);
        this.resizeHandler = null;
    }
};

Legend.prototype._createContents = function ($parent) {
    this.$mainControl = $('<div class="bcharts-legend"></div>');
    $parent.append(this.$mainControl);
    this.$mainControl.perfectScrollbar();

    var _this = this;
    this.resizeHandler = function () {
        _this.redrawLayout();
    };
    $(window).resize(this.resizeHandler);
};

Legend.prototype.redrawLayout = function () {
    var _this = this;

    clearTimeout(this._redrawLayoutJob);
    this._redrawLayoutJob = setTimeout(function () {
        _this._adjustLayout();
    }, 300);
};

Legend.prototype.setGrid = function (legendData) {
    var gridColumnRowCnt = 1;
    if (this.getOptions().grid && this.getOptions().grid.use) {
        this.$mainControl.css('display', 'grid');
        this.$mainControl.css('display', '-ms-grid');
        var rowColumnCount = this.getOptions().grid.rowColumnCount || 1;
        if (this.getOptions().orientation === 'horizontal') {
            gridColumnRowCnt = Math.ceil(legendData.length / rowColumnCount);
        } else {
            gridColumnRowCnt = rowColumnCount;
        }
        var gridTemplateColumn = 'repeat(%s, 1fr)';
        var msGridTemplateColumn = '(1fr)[%s]';
        gridTemplateColumn = gridTemplateColumn.replace('%s', gridColumnRowCnt);
        msGridTemplateColumn = msGridTemplateColumn.replace('%s', gridColumnRowCnt);
        this.$mainControl.css('grid-template-columns', gridTemplateColumn);
        this.$mainControl.css('-ms-grid-columns', msGridTemplateColumn);
        this.$mainControl.css('justify-items', 'left');
        this.$mainControl.css('-ms-grid-column-align', 'start');
    } else {
        var styleObject = this.$mainControl.prop('style');
        styleObject.removeProperty('grid-template-columns');
        styleObject.removeProperty('-ms-grid-columns');
        styleObject.removeProperty('justify-items');
        styleObject.removeProperty('-ms-grid-column-align');
    }
    return gridColumnRowCnt;
};

Legend.prototype.setGridColumnAndRow = function (ele, legendDataIdx, legendDataLength, gridRowColumnCnt) {
    if (this.getOptions().grid && this.getOptions().grid.use && this.getOptions().grid.rowColumnCount) {
        var columnIndex = legendDataIdx % gridRowColumnCnt + 1;
        var rowIndex = Math.floor(legendDataIdx / gridRowColumnCnt) + 1;
        if (this.getOptions().orientation === 'vertical') {
            columnIndex = Math.floor(legendDataIdx / Math.ceil(legendDataLength / gridRowColumnCnt)) + 1;
            rowIndex = legendDataIdx % Math.ceil(legendDataLength / gridRowColumnCnt) + 1;
        }
        console.log('legendDataIndex=', legendDataIdx, 'column=', columnIndex, 'row=', rowIndex);
        ele.css('grid-column', columnIndex.toString());
        ele.css('grid-row', rowIndex.toString());
        ele.css('-ms-grid-column', columnIndex.toString());
        ele.css('-ms-grid-row', rowIndex.toString());
    } else {
        var styleObject = ele.prop('style');
        styleObject.removeProperty('grid-column');
        styleObject.removeProperty('grid-row');
        styleObject.removeProperty('-ms-grid-column');
        styleObject.removeProperty('-ms-grid-row');
    }
};
/**
 * render
 * @param legendData [{ name: 'species', symbol: 'circle', symbolSize: 10, color: '#FD026C' }]
 */
Legend.prototype.render = function (legendData) {
    var _this = this;
    this.$mainControl.empty();

    _this._setMaxSize();

    if (this.getOptions().orientation === 'horizontal') {
        this.$mainControl.css('display', 'flex');
    } else {
        this.$mainControl.css('display', 'block');
    }
    var gridRowColumnCnt = this.setGrid(legendData);

    var legendMap = _this.options().legendMap[0] || {};
    for (var i in legendData) {
        var $item = $('' + '<div class="bcharts-legend-item">' + '   <div class="bcharts-legend-symbol"></div>' + '   <div class="bcharts-legend-label"></div>' + '</div>');
        $item.children('.bcharts-legend-symbol').append(this._generateSymbol(legendData[i]));
        $item.attr('itemKey', legendData[i].name);
        $item.children('.bcharts-legend-label').text(legendMap[legendData[i].name] ? legendMap[legendData[i].name] : legendData[i].name);
        if (legendData[i].selected === false) {
            $item.addClass('bcharts-legend-hide');
        }

        $item.click(function (event) {
            var dom = $(event.currentTarget);
            dom.toggleClass('bcharts-legend-hide');
            if (_this.getOptions().selected) {
                _this.getOptions().selected(dom.attr('itemKey'));
            }
        });

        this.$mainControl.append($item);

        this.setGridColumnAndRow($item, i, legendData.length, gridRowColumnCnt);
    }

    var renderTextFont = function renderTextFont(target) {
        var fontFamliy = target.textStyle ? target.textStyle.fontFamily ? target.textStyle.fontFamily + ',' : '' : '';
        target.textStyle.fontFamily = fontFamliy + 'Gulim,"Gulim"';
    };
    renderTextFont(this.getOptions());

    var styles = ['background', 'border'];
    for (var _i in styles) {
        if (typeof this.getOptions()[styles[_i]] !== 'undefined') this.$mainControl.css(styles[_i], this.getOptions()[styles[_i]]);
    }

    if (this.getOptions().textStyle) {
        styles = ['color', 'fontFamily', 'fontSize', 'fontWeight', 'fontStyle', 'textDecoration'];
        for (var _i2 in styles) {
            if (typeof this.getOptions().textStyle[styles[_i2]] !== 'undefined') this.$mainControl.css(styles[_i2], this.getOptions().textStyle[styles[_i2]]);
        }
    }

    _this._adjustLayout();

    if (this.getOptions().show) {
        this.$mainControl.show();
        this.$mainControl.perfectScrollbar('update');
    } else {
        this.$mainControl.hide();
    }
};

Legend.prototype.show = function () {
    if (this.$mainControl && this.getOptions().show && this.$mainControl.find('.bcharts-legend-item').length > 0) {
        this.$mainControl.show();
    }
};

Legend.prototype.getLegendPositionStyle = function (h, v) {
    var num = function num(x) {
        return (x + '').indexOf('px') !== -1 ? (x + '').split('px')[0] : (x + '').indexOf('%') !== -1 ? (x + '').split('%')[0] : x;
    };
    var get = function get(x) {
        return typeof x === 'undefined' || x === 'auto' || num(x) < 0 ? '0px' : x;
    };
    var correction = function correction(x, type) {
        if ((x + '').indexOf('%') !== -1) {
            if (type === 'w') return correction_percent(x, width);else return correction_percent(x, height);
        } else if ((x + '').indexOf('px') !== -1) {
            if (type === 'w') return correction_px(x, parentWidth - width);else return correction_px(x, parentHeight - height);
        } else {
            return x;
        }
    };
    var correction_px = function correction_px(x, y) {
        return num(x) > y ? y + 'px' : '' + x;
    };
    var correction_percent = function correction_percent(x, y) {
        return num(x) > 100 ? 'calc(100% - ' + y + 'px)' : 'calc(' + x + ' - ' + y * num(x) / 100 + 'px)';
    };

    var options = this.getOptions();
    var parentWidth = num(this.$parent.css('width'));
    var parentHeight = num(this.$parent.css('height'));
    var width = num(this.$mainControl.css('width'));
    var height = num(this.$mainControl.css('height'));
    var left = 'auto';
    var right = 'auto';
    var bottom = 'auto';
    var top = 'auto';

    if (h === 'left') {
        left = correction(get(options.horizontalMargin), 'w');
    } else if (h === 'right') {
        right = correction(get(options.horizontalMargin), 'w');
    } else {
        left = '50%';
    }

    if (v === 'top') {
        top = correction(get(options.verticalMargin), 'h');
    } else if (v === 'bottom') {
        bottom = correction(get(options.verticalMargin), 'h');
    } else {
        top = '50%';
    }

    return { left: left, right: right, top: top, bottom: bottom };
};

Legend.prototype._adjustLayout = function () {
    var _this = this;

    _this._setMaxSize();

    var _getLegendOrigin = getLegendOrigin(this.getOptions()),
        h = _getLegendOrigin.h,
        v = _getLegendOrigin.v;

    var _getLegendPositionSty = this.getLegendPositionStyle(h, v),
        left = _getLegendPositionSty.left,
        right = _getLegendPositionSty.right,
        top = _getLegendPositionSty.top,
        bottom = _getLegendPositionSty.bottom;

    var hForceUpdate = h !== 'center';
    var vForceUpdate = v !== 'center';

    if (!(0, _utils.isUndefined)(left)) _this.$mainControl.css('left', _this._adjustPosition(left, _this.$mainControl.outerWidth(), hForceUpdate));
    if (!(0, _utils.isUndefined)(right)) _this.$mainControl.css('right', _this._adjustPosition(right, _this.$mainControl.outerWidth(), hForceUpdate));
    if (!(0, _utils.isUndefined)(bottom)) _this.$mainControl.css('bottom', _this._adjustPosition(bottom, _this.$mainControl.outerHeight(), vForceUpdate));
    if (!(0, _utils.isUndefined)(top)) _this.$mainControl.css('top', _this._adjustPosition(top, _this.$mainControl.outerHeight(), vForceUpdate));
};

Legend.prototype._adjustPosition = function (position, size) {
    var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

    if (Number.isNaN(Number(position)) === false) return Number(position);
    if (position == null) return 'initial';
    return force ? position : position.replace(/(\d+%)/, 'calc($1 - ' + size / 2 + 'px)');
};

Legend.prototype._generateSymbol = function (data) {
    if (data.symbol == 'square') {
        return $('<svg height="20" width="20"><rect x="5" y="5" width="10" height="10" fill="' + data.color + '"></rect></svg>');
    } else if (data.symbol == 'triangle') {
        return $('<svg height="20" width="20"><polygon points="10,5 5,15 15,15" fill="' + data.color + '"></polygon></svg>');
    } else {
        return $('<svg height="20" width="20"><circle cx="10" cy="10" r="5" fill="' + data.color + '"></circle></svg>');
    }
};

Legend.prototype._setMaxSize = function () {
    var parentsWidth = this.$parent.width() - 10;
    var parentsHeight = this.$parent.height() - 10;
    this.$mainControl.css('max-width', parentsWidth + 'px');
    this.$mainControl.css('max-height', parentsHeight + 'px');
};

exports.Legend = Legend;

/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Toolbar = undefined;

var _widget = __webpack_require__(31);

var _widget2 = _interopRequireDefault(_widget);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 *
 * @param parentId
 * @param options {  }
 * @constructor
 */

// Sample Option
/**
 toolbar: {
        right: '10px',
        top: '10px',
        orientation: 'horizontal',
        feature: {
            changeType: {},
            brush: {},
            setting: {
                click: function (param) {

                }
            }
        }
    },
 **/
function Toolbar(parentId, options) {
    _widget2.default.call(this, parentId, options);
} /**
   * Source: toolbar.js
   * Created by daewon.park on 2017-03-27.
   */


Toolbar.prototype = Object.create(_widget2.default.prototype);
Toolbar.prototype.constructor = Toolbar;

Toolbar.prototype.destroy = function () {};

Toolbar.prototype._createContents = function ($parent) {
    this.$mainControl = $('' + '<div class="bcharts-toolbar"></div>');
    $parent.append(this.$mainControl);
};

/**
 * render
 */
Toolbar.prototype.render = function () {
    var _this = this;
    this.$mainControl.empty();

    this.$mainControl.append('' + '<div class="bcharts-toolbar-handler"><i class="fa fa-ellipsis-v" aria-hidden="true"></i></div>' + '<div class="bcharts-toolitem-dropdown" toolbar-menu-type="brush">' + '   <div class="bcharts-toolitem" action="toggle-brush-type" brushType="rect" title="Select Rect"></div>' + '   <div class="bcharts-toolitem" action="toggle-brush-type" brushType="lineX" title="Select X Axis"></div>' + '   <div class="bcharts-toolitem" action="toggle-brush-type" brushType="lineY" title="Select Y Axis"></div>' + '   <div class="bcharts-toolitem" action="toggle-brush-type" brushType="polygon"></div>' + '</div>' + '<div class="bcharts-toolitem" action="toggle-brush-mode" title="Toggle Single / Multi Selection" toolbar-menu-type="brush"></div>' + '<div class="bcharts-toolitem" action="btn-clear-selection" title="Clear Selection" toolbar-menu-type="brush"></div>' + '<div class="bcharts-toolitem" action="toggle-zoom-slider" title="Zoom" toolbar-menu-type="zoom"></div>' + '<div class="bcharts-toolitem" action="open-chart-option" style="display: none;"></div>' + '');

    this._adjustLayout();

    var styles = ['background', 'border'];
    for (var i in styles) {
        if (typeof this.getOptions()[styles[i]] !== 'undefined') this.$mainControl.css(styles[i], this.getOptions()[styles[i]]);
    }

    if (this.getOptions().orientation !== 'vertical') {
        this.$mainControl.css('display', 'flex');
        this.$mainControl.css('align-items', 'center');
    }

    this.$mainControl.draggable({
        handle: '.bcharts-toolbar-handler',
        containment: 'parent',
        start: function start() {
            $(this).css('right', 'initial');
        },
        stop: function stop() {
            var position = $(this).position();
            if (position.left > $(this).parent().width() / 2) {
                $(this).css('left', 'initial');
                $(this).css('right', $(this).parent().width() - position.left - $(this).width());
            }
        }
    });

    if (this.getOptions().show !== true || this.getOptions().visible == false) this.$mainControl.hide();

    this._createBrushContents();
    this._createZoomContents();

    this.$mainControl.find('.bcharts-toolitem[action="open-chart-option"]').click(function () {
        var $chartPanelArea = $('<div class="chart-option-panel-area" style="width:200px;height:800px;background-color:white; z-index:1000000; position:absolute; top:0;"><div>');
        if (_this.$parent.find('.chart-option-panel-area').length) {
            _this.$parent.find('.chart-option-panel-area').remove();
        }
        _this.$parent.append($chartPanelArea);

        _this.chartOptionContainer = new Brightics.Modules.ChartOption($chartPanelArea, {
            // trigger: 'chartOptionChanged',
            popup: false,
            // popup: true,
            changed: function changed(changedChartOpt) {
                var drawingChartOpt = {};
                $.extend(drawingChartOpt, changedChartOpt.chartOptions, { columns: changedChartOpt.columns });
            }
        });

        if (_this.getOptions().selected) {
            _this.getOptions().selected($(this).attr('action'));
        }
    });
};

Toolbar.prototype.unselectAllItems = function () {
    this.$mainControl.find('.bcharts-toolitem-selected').removeClass('bcharts-toolitem-selected');
};

Toolbar.prototype._createBrushContents = function () {

    if (typeof this.getOptions().menu.brush === 'undefined') {
        this.$mainControl.find('div[toolbar-menu-type="brush"]').css('display', 'none');
        return;
    }

    var _this = this;

    this.$mainControl.find('.bcharts-toolitem[action="toggle-brush-type"]').click(function () {
        if ($(this).hasClass('bcharts-toolitem-selected')) {
            $(this).removeClass('bcharts-toolitem-selected');
        } else {
            _this.$mainControl.find('.bcharts-toolitem[action="toggle-brush-type"]').removeClass('bcharts-toolitem-selected');
            $(this).addClass('bcharts-toolitem-selected');
        }
        var $parent = $(this).parent();
        $(this).detach().prependTo($parent);

        if (_this.getOptions().selected) {
            _this.getOptions().selected($(this).attr('action'));
        }
    });

    this.$mainControl.find('.bcharts-toolitem[action="toggle-brush-mode"]').click(function () {
        $(this).toggleClass('bcharts-toolitem-selected');

        if (_this.getOptions().selected) {
            _this.getOptions().selected($(this).attr('action'));
        }
    });

    this.$mainControl.find('.bcharts-toolitem[action="btn-clear-selection"]').click(function () {
        if (_this.getOptions().selected) {
            _this.getOptions().selected($(this).attr('action'));
        }
    });
};

Toolbar.prototype._createZoomContents = function () {

    if (typeof this.getOptions().menu.zoom === 'undefined') {
        this.$mainControl.find('.bcharts-toolitem[toolbar-menu-type="zoom"]').css('display', 'none');
        return;
    }

    var _this = this;

    this.$mainControl.find('.bcharts-toolitem[action="toggle-zoom-slider"]').click(function () {
        $(this).toggleClass('bcharts-toolitem-selected');

        if (_this.getOptions().selected) {
            _this.getOptions().selected($(this).attr('action'));
        }
    });
};

Toolbar.prototype.getSelectedBrushType = function () {
    return this.$mainControl.find('.bcharts-toolitem.bcharts-toolitem-selected[action="toggle-brush-type"]').attr('brushType');
};

Toolbar.prototype.getSelectedBrushMode = function () {
    if (this.$mainControl.find('.bcharts-toolitem[action="toggle-brush-mode"]').hasClass('bcharts-toolitem-selected')) {
        return 'multiple';
    } else {
        return 'single';
    }
};

Toolbar.prototype.getZoomMode = function () {
    if (this.$mainControl.find('.bcharts-toolitem[action="toggle-zoom-slider"]').hasClass('bcharts-toolitem-selected')) {
        return true;
    } else {
        return false;
    }
};

// ['rect', 'lineX', 'lineY']
Toolbar.prototype.setBrushTypeList = function (typeList) {
    var _this = this;
    typeList = ['rect', 'lineX', 'lineY'];
    this.$mainControl.find('.bcharts-toolitem[action="toggle-brush-type"]').hide();
    typeList.forEach(function (type) {
        _this.$mainControl.find('.bcharts-toolitem[brushType="' + type + '"]').show();
    });
};

Toolbar.prototype.setSelectedBrushTypeList = function (type) {};

Toolbar.prototype.show = function () {
    this.$mainControl.show();
};

Toolbar.prototype.hide = function () {
    this.$mainControl.hide();
};

Toolbar.prototype._adjustLayout = function () {
    var _this = this;

    if (typeof _this.getOptions().left !== 'undefined') _this.$mainControl.css('left', _this._adjustPosition(_this.getOptions().left, _this.$mainControl.outerWidth()));else if (typeof _this.getOptions().right !== 'undefined') _this.$mainControl.css('right', _this._adjustPosition(_this.getOptions().right, _this.$mainControl.outerWidth()));
    if (typeof _this.getOptions().top !== 'undefined') _this.$mainControl.css('top', _this._adjustPosition(_this.getOptions().top, _this.$mainControl.outerHeight()));else if (typeof _this.getOptions().bottom !== 'undefined') _this.$mainControl.css('bottom', _this._adjustPosition(_this.getOptions().bottom, _this.$mainControl.outerHeight()));
};

Toolbar.prototype._adjustPosition = function (position, size) {
    if (Number.isNaN(Number(position)) === false) return Number(position);
    return position.replace(/(\d+%)/, 'calc($1 - ' + size / 2 + 'px)');
};

exports.Toolbar = Toolbar;

/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.wordCloud = exports.radar = exports.imageGrid = exports.donut = exports.map = exports.treemap = exports.table = exports.scatter = exports.roccurve = exports.qqplot = exports.pie = exports.pairwiseScatter = exports.network = exports.line = exports.histogram = exports.heatmapMatrix = exports.heatmap = exports.dendrogram = exports.decisiontree = exports.complex = exports.columnStacked100 = exports.columnStacked = exports.column = exports.card = exports.bubble = exports.boxplot = exports.biplot = exports.barStacked100 = exports.barStacked = exports.bar = exports.areaStacked100 = exports.areaStacked = exports.area = undefined;

var _echartsArea = __webpack_require__(89);

var _echartsArea2 = _interopRequireDefault(_echartsArea);

var _echartsAreaStacked = __webpack_require__(95);

var _echartsAreaStacked2 = _interopRequireDefault(_echartsAreaStacked);

var _echartsAreaStacked3 = __webpack_require__(220);

var _echartsAreaStacked4 = _interopRequireDefault(_echartsAreaStacked3);

var _echartsBar = __webpack_require__(221);

var _echartsBar2 = _interopRequireDefault(_echartsBar);

var _echartsBarStacked = __webpack_require__(223);

var _echartsBarStacked2 = _interopRequireDefault(_echartsBarStacked);

var _echartsBarStacked3 = __webpack_require__(365);

var _echartsBarStacked4 = _interopRequireDefault(_echartsBarStacked3);

var _echartsBiplot = __webpack_require__(368);

var _echartsBiplot2 = _interopRequireDefault(_echartsBiplot);

var _echartsBoxplot = __webpack_require__(371);

var _echartsBoxplot2 = _interopRequireDefault(_echartsBoxplot);

var _echartsBubble = __webpack_require__(227);

var _echartsBubble2 = _interopRequireDefault(_echartsBubble);

var _echartsCard = __webpack_require__(377);

var _echartsCard2 = _interopRequireDefault(_echartsCard);

var _echartsColumn = __webpack_require__(65);

var _echartsColumn2 = _interopRequireDefault(_echartsColumn);

var _echartsColumnStacked = __webpack_require__(98);

var _echartsColumnStacked2 = _interopRequireDefault(_echartsColumnStacked);

var _echartsColumnStacked3 = __webpack_require__(233);

var _echartsColumnStacked4 = _interopRequireDefault(_echartsColumnStacked3);

var _echartsComplex = __webpack_require__(384);

var _echartsComplex2 = _interopRequireDefault(_echartsComplex);

var _d3Decisiontree = __webpack_require__(237);

var _d3Decisiontree2 = _interopRequireDefault(_d3Decisiontree);

var _echartsDendrogram = __webpack_require__(390);

var _echartsDendrogram2 = _interopRequireDefault(_echartsDendrogram);

var _echartsHeatmap = __webpack_require__(393);

var _echartsHeatmap2 = _interopRequireDefault(_echartsHeatmap);

var _echartsHeatmapMatrix = __webpack_require__(397);

var _echartsHeatmapMatrix2 = _interopRequireDefault(_echartsHeatmapMatrix);

var _echartsHistogram = __webpack_require__(400);

var _echartsHistogram2 = _interopRequireDefault(_echartsHistogram);

var _echartsLine = __webpack_require__(62);

var _echartsLine2 = _interopRequireDefault(_echartsLine);

var _echartsNetwork = __webpack_require__(402);

var _echartsNetwork2 = _interopRequireDefault(_echartsNetwork);

var _echartsPairwiseScatter = __webpack_require__(405);

var _echartsPairwiseScatter2 = _interopRequireDefault(_echartsPairwiseScatter);

var _echartsPie = __webpack_require__(407);

var _echartsPie2 = _interopRequireDefault(_echartsPie);

var _echartsQqplot = __webpack_require__(410);

var _echartsQqplot2 = _interopRequireDefault(_echartsQqplot);

var _echartsRadar = __webpack_require__(413);

var _echartsRadar2 = _interopRequireDefault(_echartsRadar);

var _echartsRoccurve = __webpack_require__(415);

var _echartsRoccurve2 = _interopRequireDefault(_echartsRoccurve);

var _echartsScatter = __webpack_require__(99);

var _echartsScatter2 = _interopRequireDefault(_echartsScatter);

var _handsontableTable = __webpack_require__(418);

var _handsontableTable2 = _interopRequireDefault(_handsontableTable);

var _echartsTreemap = __webpack_require__(420);

var _echartsTreemap2 = _interopRequireDefault(_echartsTreemap);

var _echartsMap = __webpack_require__(424);

var _echartsMap2 = _interopRequireDefault(_echartsMap);

var _echartsDonut = __webpack_require__(427);

var _echartsDonut2 = _interopRequireDefault(_echartsDonut);

var _imageGrid = __webpack_require__(430);

var _imageGrid2 = _interopRequireDefault(_imageGrid);

var _echartsWordcloud = __webpack_require__(550);

var _echartsWordcloud2 = _interopRequireDefault(_echartsWordcloud);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import scattermap from '../wrapper/echarts/types/echarts-scattermap';
//import table from '../wrapper/jqwidgets/jqwidgets-table'
exports.area = _echartsArea2.default;
exports.areaStacked = _echartsAreaStacked2.default;
exports.areaStacked100 = _echartsAreaStacked4.default;
exports.bar = _echartsBar2.default;
exports.barStacked = _echartsBarStacked2.default;
exports.barStacked100 = _echartsBarStacked4.default;
exports.biplot = _echartsBiplot2.default;
exports.boxplot = _echartsBoxplot2.default;
exports.bubble = _echartsBubble2.default;
exports.card = _echartsCard2.default;
exports.column = _echartsColumn2.default;
exports.columnStacked = _echartsColumnStacked2.default;
exports.columnStacked100 = _echartsColumnStacked4.default;
exports.complex = _echartsComplex2.default;
exports.decisiontree = _d3Decisiontree2.default;
exports.dendrogram = _echartsDendrogram2.default;
exports.heatmap = _echartsHeatmap2.default;
exports.heatmapMatrix = _echartsHeatmapMatrix2.default;
exports.histogram = _echartsHistogram2.default;
exports.line = _echartsLine2.default;
exports.network = _echartsNetwork2.default;
exports.pairwiseScatter = _echartsPairwiseScatter2.default;
exports.pie = _echartsPie2.default;
exports.qqplot = _echartsQqplot2.default;
exports.roccurve = _echartsRoccurve2.default;
exports.scatter = _echartsScatter2.default;
exports.table = _handsontableTable2.default;
exports.treemap = _echartsTreemap2.default;
exports.map = _echartsMap2.default;
exports.donut = _echartsDonut2.default;
exports.imageGrid = _imageGrid2.default;
exports.radar = _echartsRadar2.default;
exports.wordCloud = _echartsWordcloud2.default; /**
                                                 * Created by sds on 2018-03-20.
                                                 */

/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsPointByrowindexExtractor = __webpack_require__(91);

var _echartsPointByrowindexExtractor2 = _interopRequireDefault(_echartsPointByrowindexExtractor);

var _echartsLineOptionBuilder = __webpack_require__(90);

var _echartsLineOptionBuilder2 = _interopRequireDefault(_echartsLineOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import EChartsLineOptionBuilder, * as OptionBuilder  from './echarts-line-option-builder';


function EChartsLineByRowIndexOptionBuilder() {
    _echartsLineOptionBuilder2.default.call(this);
}

EChartsLineByRowIndexOptionBuilder.prototype = Object.create(_echartsLineOptionBuilder2.default.prototype);
EChartsLineByRowIndexOptionBuilder.prototype.constructor = EChartsLineByRowIndexOptionBuilder;

EChartsLineByRowIndexOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['markPoint', 'markLine', 'smooth', 'smoothMonotone', 'step'];
    this._registerDecorator('axisTypeByRowIndex');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('tooltipTriggerAxis');
    this._registerDecorator('tooltipByRowIndex');
    this._registerDecorator('marker');
    this._registerDecorator('lineStyle');
    this._registerDecorator('showSymbol');
    this._registerDecorator('plotOptions');
    this._registerDecorator('lineBy');
    this.setSeriesSubKeyColumns(this.plotOptions.lineBy[0].selected);
    this.setSeriesKeyColumns(this.bOptions.colorBy[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
    this._registerDecorator('trendline');
};

EChartsLineByRowIndexOptionBuilder.prototype._buildSeries = function () {
    var series = {};
    var localData = this.getLocalData();
    var keyIndexes = this.getSeriesKeyColumnIndexes();
    var subKeyIndexes = this.getSeriesSubKeyColumnIndexes();
    var allKeyIndexes = keyIndexes.concat(subKeyIndexes);
    var yAxisSelected = this.filterNullColumn(this.bOptions.yAxis[0].selected);

    var i, row, seriesName, seriesItem, yAxisIndex, seriesNameList, yAxisName;

    for (i in localData.data) {
        row = localData.data[i];

        for (yAxisIndex = 0; yAxisIndex < yAxisSelected.length; yAxisIndex++) {

            yAxisName = Brightics.Chart.Helper.OptionUtils.getColumnLabel(yAxisSelected[yAxisIndex]);
            seriesNameList = [];
            seriesNameList.push(yAxisSelected[yAxisIndex].name);
            seriesNameList.push(this.getSeriesName(row, allKeyIndexes));
            seriesName = seriesNameList.join(' ');

            seriesItem = this._getSeriesItem(series, seriesName);
            series[seriesName] = seriesItem;

            if (!seriesItem.extractor) {
                seriesItem.extractor = this._newSeriesExtractor(yAxisIndex);
                seriesItem.extractor.keys = this.getCellText(row, allKeyIndexes, yAxisSelected[yAxisIndex].name);
                seriesItem.name = this.getCellText(row, keyIndexes, yAxisSelected[yAxisIndex].name).join(' ');
                seriesItem.keys = seriesItem.extractor.keys;

                seriesItem.tooltipHeaders = ['Row Index', yAxisName];
            }
            seriesItem.extractor.push(row, i);
        }
    }

    this._setSeries(series);
    this._buildSeriesData();
    this.eOptions.series = this.series;
};

EChartsLineByRowIndexOptionBuilder.prototype._newSeriesExtractor = function (yAxisIndex) {
    var localData = this.getLocalData();
    var yIndexes = this.getColumnIndexes(this.bOptions.yAxis[0].selected, localData.columns);

    var extractor = new _echartsPointByrowindexExtractor2.default();

    extractor.setTarget({
        index: [yIndexes[yAxisIndex]],
        type: 'value',
        isKey: false
    });

    return extractor;
};

EChartsLineByRowIndexOptionBuilder.prototype.hasLegendData = function () {
    return true;
};

exports.default = EChartsLineByRowIndexOptionBuilder;

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeComplexOptionBuilder = __webpack_require__(46);

var _echartsAxisTypeComplexOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeComplexOptionBuilder);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _echartsComplexScatterLineExtractor = __webpack_require__(92);

var _echartsComplexScatterLineExtractor2 = _interopRequireDefault(_echartsComplexScatterLineExtractor);

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsLineComplexOptionBuilder() {
    _echartsAxisTypeComplexOptionBuilder2.default.call(this);
} /**
   * Created by sds on 2018-01-24.
   */


EChartsLineComplexOptionBuilder.prototype = Object.create(_echartsAxisTypeComplexOptionBuilder2.default.prototype);
EChartsLineComplexOptionBuilder.prototype.constructor = EChartsLineComplexOptionBuilder;

EChartsLineComplexOptionBuilder.prototype._setUpOptions = function () {
    _echartsAxisTypeComplexOptionBuilder2.default.prototype._setUpOptions.call(this);
    this.plotOptionAttributes = ['markPoint', 'markLine', 'smooth', 'smoothMonotone', 'step'];
    this._registerDecorator('stripline');
    this._registerDecorator('marker');
    this._registerDecorator('lineStyle');
    this._registerDecorator('showSymbol');
    this._registerDecorator('plotOptions');
    this._registerDecorator('lineBy');
    this._setSeriesDataSortRule();
    this.setSeriesSubKeyColumns(this.plotOptions.lineBy[0].selected);
    this.setSeriesKeyColumns(this.bOptions.colorBy[0].selected);
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
    this._registerDecorator('trendline');
};

EChartsLineComplexOptionBuilder.prototype.getTooltipKeyColumns = function (dataIndex) {
    return this.getSeriesKeyColumns(dataIndex).concat(this.getSeriesSubKeyColumns(dataIndex));
};

EChartsLineComplexOptionBuilder.prototype.setSeriesSubKeyColumns = function (columns, dataIndex) {
    dataIndex = dataIndex || 0;
    columns = this.filterNullColumn(columns);
    this._seriesSubKeyColumsList = this._seriesSubKeyColumsList || [];
    this._seriesSubKeyColumsList[dataIndex] = this._seriesSubKeyColumsList[dataIndex] || [];
    this._seriesSubKeyColumsList[dataIndex] = this._seriesSubKeyColumsList[dataIndex].concat(columns);
};

EChartsLineComplexOptionBuilder.prototype.getSeriesSubKeyColumns = function (dataIndex) {
    dataIndex = dataIndex || 0;
    return this._seriesSubKeyColumsList[dataIndex] || [];
};

EChartsLineComplexOptionBuilder.prototype.getSeriesSubKeyColumnIndexes = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    var localData = this.getLocalData(dataIndex);
    var keyColumns = this.getSeriesSubKeyColumns(dataIndex);
    return this.getColumnIndexes(keyColumns, localData.columns);
};

EChartsLineComplexOptionBuilder.prototype._buildSeries = function () {
    var series = {};
    var localData = this.getLocalData();
    var keyIndexes = this.getSeriesKeyColumnIndexes();
    var subKeyIndexes = this.getSeriesSubKeyColumnIndexes();
    var allKeyIndexes = keyIndexes.concat(subKeyIndexes);

    var i, row, seriesName, seriesItem;
    for (i in localData.data) {
        row = localData.data[i];
        seriesName = this.getSeriesName(row, allKeyIndexes);
        seriesItem = this._getSeriesItem(series, seriesName);
        series[seriesName] = seriesItem;
        if (!seriesItem.extractor) {
            seriesItem.extractor = this._newSeriesExtractor();
            seriesItem.extractor.keys = this.getCellText(row, allKeyIndexes);
            seriesItem.keys = seriesItem.extractor.keys;
            seriesItem.name = this.getSeriesName(row, keyIndexes);
        }
        seriesItem.extractor.push(row, i);
    }

    this._setSeries(series);
    this._buildSeriesData();
    this.eOptions.series = this.series;
};

exports.default = EChartsLineComplexOptionBuilder;

/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeOptionBuilder = __webpack_require__(19);

var _echartsAxisTypeOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeOptionBuilder);

var _echartsPointBycolumnnamesExtractor = __webpack_require__(64);

var _echartsPointBycolumnnamesExtractor2 = _interopRequireDefault(_echartsPointBycolumnnamesExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsLineByColumnNamesOptionBuilder() {
    _echartsAxisTypeOptionBuilder2.default.call(this);
}

EChartsLineByColumnNamesOptionBuilder.prototype = Object.create(_echartsAxisTypeOptionBuilder2.default.prototype);
EChartsLineByColumnNamesOptionBuilder.prototype.constructor = EChartsLineByColumnNamesOptionBuilder;

EChartsLineByColumnNamesOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['markPoint', 'markLine'];
    this._registerDecorator('axisTypeByColumnNames');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('tooltipByColumnNames');
    this._registerDecorator('marker');
    this._registerDecorator('showSymbol');
    this._registerDecorator('plotOptions');
    this._registerDecorator('brush');
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this._registerDecorator('trendline');
};

EChartsLineByColumnNamesOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData();
    var yIndexes = this.getColumnIndexes(this.bOptions.yAxis[0].selected, localData.columns);

    var extractor = new _echartsPointBycolumnnamesExtractor2.default();

    extractor.setTarget({
        index: yIndexes,
        type: 'value',
        isKey: false
    });

    return extractor;
};

exports.default = EChartsLineByColumnNamesOptionBuilder;

/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeCalculatedOptionBuilder = __webpack_require__(32);

var _echartsAxisTypeCalculatedOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeCalculatedOptionBuilder);

var _echartsPointWithCategorykeyExtractor = __webpack_require__(25);

var _echartsPointWithCategorykeyExtractor2 = _interopRequireDefault(_echartsPointWithCategorykeyExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsAxisTypeWithCategoryKeyCalculatedOptionBuilder() {
    _echartsAxisTypeCalculatedOptionBuilder2.default.call(this);
}

EChartsAxisTypeWithCategoryKeyCalculatedOptionBuilder.prototype = Object.create(_echartsAxisTypeCalculatedOptionBuilder2.default.prototype);
EChartsAxisTypeWithCategoryKeyCalculatedOptionBuilder.prototype.constructor = EChartsAxisTypeWithCategoryKeyCalculatedOptionBuilder;

EChartsAxisTypeWithCategoryKeyCalculatedOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData();
    var xIndexes = this.getColumnIndexes([{ name: 'xAxis' }], localData.chartColumns);
    var yIndexes = this.getColumnIndexes([{ name: 'yAxis' }], localData.chartColumns);

    var extractor = new _echartsPointWithCategorykeyExtractor2.default();

    extractor.setTarget({
        index: xIndexes,
        type: 'category',
        isKey: true
    });

    extractor.setTarget({
        index: yIndexes,
        type: 'value',
        isKey: false
    });

    return extractor;
};

exports.default = EChartsAxisTypeWithCategoryKeyCalculatedOptionBuilder;

/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

var _echartsPointWithCategorykeyExtractor = __webpack_require__(25);

var _echartsPointWithCategorykeyExtractor2 = _interopRequireDefault(_echartsPointWithCategorykeyExtractor);

var _echartsAxisTypeComplexOptionBuilder = __webpack_require__(46);

var _echartsAxisTypeComplexOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeComplexOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsAxisTypeWithCategoryKeyComplexOptionBuilder() {
    _echartsAxisTypeComplexOptionBuilder2.default.call(this);
}

EChartsAxisTypeWithCategoryKeyComplexOptionBuilder.prototype = Object.create(_echartsAxisTypeComplexOptionBuilder2.default.prototype);
EChartsAxisTypeWithCategoryKeyComplexOptionBuilder.prototype.constructor = EChartsAxisTypeWithCategoryKeyComplexOptionBuilder;

EChartsAxisTypeWithCategoryKeyComplexOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData();
    var dataColumns = this.getSeriesDataColumns();
    var aggregation = dataColumns[1].aggregation;
    var hasAggregation = aggregation && aggregation !== 'none';
    var xIndexes = this.getColumnIndexes(this.bOptions.xAxis[0].selected, localData.columns);
    var yIndexes = this.getColumnIndexes(this.bOptions.yAxis[0].selected, localData.columns);

    var extractor = new _echartsPointWithCategorykeyExtractor2.default();

    extractor.setTarget({
        index: xIndexes,
        type: 'category',
        isKey: true
    });

    extractor.setTarget({
        index: yIndexes,
        type: 'value',
        isKey: false
    });

    if (hasAggregation) {
        extractor.setExtractOperator(function (pointObject) {
            var operator = new _aggregationOperator2.default(pointObject.value);
            for (var i = 0; i < pointObject.indexList.length; i++) {
                operator.add(pointObject.indexList[i], pointObject.point[i][1]);
            }
            return [{ value: pointObject.value.concat(operator.calc(aggregation)), dataIndexes: pointObject.indexList }];
        });
    }
    return extractor;
};
exports.default = EChartsAxisTypeWithCategoryKeyComplexOptionBuilder;

/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsPointWithCategorykeyExtractor = __webpack_require__(25);

var _echartsPointWithCategorykeyExtractor2 = _interopRequireDefault(_echartsPointWithCategorykeyExtractor);

var _echartsAreaCalculatedOptionBuilder = __webpack_require__(94);

var _echartsAreaCalculatedOptionBuilder2 = _interopRequireDefault(_echartsAreaCalculatedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsAreaCalculatedStackedOptionBuilder() {
    _echartsAreaCalculatedOptionBuilder2.default.call(this);
}

EChartsAreaCalculatedStackedOptionBuilder.prototype = Object.create(_echartsAreaCalculatedOptionBuilder2.default.prototype);
EChartsAreaCalculatedStackedOptionBuilder.prototype.constructor = EChartsAreaCalculatedStackedOptionBuilder;

EChartsAreaCalculatedStackedOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['markPoint', 'markLine', 'areaStyle', 'sampling', 'smooth', 'smoothMonotone', 'step'];
    this._registerDecorator('axisTypeWithCategoryX');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('xAxisBoundaryGapFalse');
    this._registerDecorator('fillXCategoryValues');
    this._registerDecorator('stripline');
    this._registerDecorator('tooltipTriggerAxis');
    this._registerDecorator('tooltipAxisCalculated');
    this._registerDecorator('marker');
    this._registerDecorator('showSymbol');
    this._registerDecorator('plotOptions');
    this._setSeriesDataSortRule();
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
    this.setSeriesKeyColumns(this.plotOptions.stackBy[0].selected);
};

EChartsAreaCalculatedStackedOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData();
    var xIndexes = this.getColumnIndexes([{ name: 'xAxis' }], localData.chartColumns);
    var yIndexes = this.getColumnIndexes([{ name: 'yAxis' }], localData.chartColumns);

    var extractor = new _echartsPointWithCategorykeyExtractor2.default();

    extractor.setTarget({
        index: xIndexes,
        type: 'category',
        isKey: true
    });

    extractor.setTarget({
        index: yIndexes,
        type: 'value',
        isKey: false
    });

    return extractor;
};

EChartsAreaCalculatedStackedOptionBuilder.prototype.getTooltipKeyColumns = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    return this.plotOptions.stackBy.length > 0 ? this.filterNullColumn(this.plotOptions.stackBy[dataIndex].selected) : [];
};

EChartsAreaCalculatedStackedOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsAreaCalculatedOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.stack = 'stacked';
    return seriesItem;
};

EChartsAreaCalculatedStackedOptionBuilder.prototype.getSeriesKeyColumns = function () {
    var stackByColumns = this.filterNullColumn(this.plotOptions.stackBy[0].selected);
    if (stackByColumns.length > 0) {
        return [{ name: 'colorBy' }];
    } else {
        return [];
    }
};

exports.default = EChartsAreaCalculatedStackedOptionBuilder;

/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAreaStackedOptionBuilder = __webpack_require__(218);

var _echartsAreaStackedOptionBuilder2 = _interopRequireDefault(_echartsAreaStackedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsAreaStacked100OptionBuilder() {
    _echartsAreaStackedOptionBuilder2.default.call(this);
}

EChartsAreaStacked100OptionBuilder.prototype = Object.create(_echartsAreaStackedOptionBuilder2.default.prototype);
EChartsAreaStacked100OptionBuilder.prototype.constructor = EChartsAreaStacked100OptionBuilder;

EChartsAreaStacked100OptionBuilder.prototype._setUpOptions = function () {
    this._registerDecorator('tooltipTriggerAxis');
    this._registerDecorator('tooltipXAxisPercent');
    _echartsAreaStackedOptionBuilder2.default.prototype._setUpOptions.call(this);
    this._registerDecorator('yAxisMin0Max100');
    this._registerDecorator('seriesStacked100', { column: 'xAxis', valueIndex: 1 });
};

EChartsAreaStacked100OptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsAreaStackedOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.stack = 'stacked';
    return seriesItem;
};

exports.default = EChartsAreaStacked100OptionBuilder;

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsPointWithCategorykeyExtractor = __webpack_require__(25);

var _echartsPointWithCategorykeyExtractor2 = _interopRequireDefault(_echartsPointWithCategorykeyExtractor);

var _echartsAreaCalculatedOptionBuilder = __webpack_require__(94);

var _echartsAreaCalculatedOptionBuilder2 = _interopRequireDefault(_echartsAreaCalculatedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsAreaCalculatedStacked100OptionBuilder() {
    _echartsAreaCalculatedOptionBuilder2.default.call(this);
}

EChartsAreaCalculatedStacked100OptionBuilder.prototype = Object.create(_echartsAreaCalculatedOptionBuilder2.default.prototype);
EChartsAreaCalculatedStacked100OptionBuilder.prototype.constructor = EChartsAreaCalculatedStacked100OptionBuilder;

EChartsAreaCalculatedStacked100OptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['markPoint', 'markLine', 'areaStyle', 'sampling', 'smooth', 'smoothMonotone', 'step'];
    this._registerDecorator('axisTypeWithCategoryX');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('xAxisBoundaryGapFalse');
    this._registerDecorator('fillXCategoryValues');
    this._registerDecorator('stripline');
    this._registerDecorator('tooltipTriggerAxis');
    this._registerDecorator('tooltipAxisCalculated');
    this._registerDecorator('marker');
    this._registerDecorator('showSymbol');
    this._registerDecorator('plotOptions');
    this._registerDecorator('seriesStacked100', { column: 'xAxis', valueIndex: 1 });
    this._setSeriesDataSortRule();
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
    this.setSeriesKeyColumns(this.plotOptions.stackBy[0].selected);
};

EChartsAreaCalculatedStacked100OptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData();
    var xIndexes = this.getColumnIndexes([{ name: 'xAxis' }], localData.chartColumns);
    var yIndexes = this.getColumnIndexes([{ name: 'yAxis' }], localData.chartColumns);

    var extractor = new _echartsPointWithCategorykeyExtractor2.default();

    extractor.setTarget({
        index: xIndexes,
        type: 'category',
        isKey: true
    });

    extractor.setTarget({
        index: yIndexes,
        type: 'value',
        isKey: false
    });

    return extractor;
};

EChartsAreaCalculatedStacked100OptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsAreaCalculatedOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.stack = 'stacked';
    return seriesItem;
};

EChartsAreaCalculatedStacked100OptionBuilder.prototype.getSeriesKeyColumns = function () {
    var stackByColumns = this.filterNullColumn(this.plotOptions.stackBy[0].selected);
    if (stackByColumns.length > 0) {
        return [{ name: 'colorBy' }];
    } else {
        return [];
    }
};

EChartsAreaCalculatedStacked100OptionBuilder.prototype.getTooltipKeyColumns = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    return this.plotOptions.stackBy.length > 0 ? this.filterNullColumn(this.plotOptions.stackBy[dataIndex].selected) : [];
};

exports.default = EChartsAreaCalculatedStacked100OptionBuilder;

/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAreaStackedComplexOptionBuilder = __webpack_require__(219);

var _echartsAreaStackedComplexOptionBuilder2 = _interopRequireDefault(_echartsAreaStackedComplexOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsAreaStacked100ComplexOptionBuilder() {
    _echartsAreaStackedComplexOptionBuilder2.default.call(this);
}

EChartsAreaStacked100ComplexOptionBuilder.prototype = Object.create(_echartsAreaStackedComplexOptionBuilder2.default.prototype);
EChartsAreaStacked100ComplexOptionBuilder.prototype.constructor = EChartsAreaStacked100ComplexOptionBuilder;

EChartsAreaStacked100ComplexOptionBuilder.prototype._setUpOptions = function () {
    this._registerDecorator('tooltipTriggerAxis');
    this._registerDecorator('tooltipXAxisPercent');
    _echartsAreaStackedComplexOptionBuilder2.default.prototype._setUpOptions.call(this);
    this._registerDecorator('yAxisMin0Max100');
    this._registerDecorator('seriesStacked100', { column: 'xAxis', valueIndex: 1 });
};

EChartsAreaStacked100ComplexOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsAreaStackedComplexOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.stack = 'stacked';
    return seriesItem;
};

exports.default = EChartsAreaStacked100ComplexOptionBuilder;

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsBarCalculatedOptionBuilder = __webpack_require__(96);

var _echartsBarCalculatedOptionBuilder2 = _interopRequireDefault(_echartsBarCalculatedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsBarCalculatedStackedOptionBuilder() {
    _echartsBarCalculatedOptionBuilder2.default.call(this);
}

EChartsBarCalculatedStackedOptionBuilder.prototype = Object.create(_echartsBarCalculatedOptionBuilder2.default.prototype);
EChartsBarCalculatedStackedOptionBuilder.prototype.constructor = EChartsBarCalculatedStackedOptionBuilder;

EChartsBarCalculatedStackedOptionBuilder.prototype._setUpOptions = function () {
    this._setAxisColumnSortRule();
    this._registerDecorator('sortAxisInit');
    this._registerDecorator('axisTypeWithCategoryY');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('plotOptions');
    this._registerDecorator('brush');
    this._registerDecorator('tooltipTriggerAxis');
    this._registerDecorator('tooltipYAxis');
    this._registerDecorator('tooltipAxisPointerShadow');
    this._registerDecorator('tooltipAxisCalculated');
    this._registerDecorator('axisLineOnZeroTrue');
    this._registerDecorator('seriesStacked');
    this._registerDecorator('xAxisScaleFalse');

    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
};

EChartsBarCalculatedStackedOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsBarCalculatedOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.stack = 'stacked';
    seriesItem.type = 'bar';
    return seriesItem;
};

EChartsBarCalculatedStackedOptionBuilder.prototype.getTooltipKeyColumns = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    return this.plotOptions.stackBy.length > 0 ? this.filterNullColumn(this.plotOptions.stackBy[dataIndex].selected) : [];
};

EChartsBarCalculatedStackedOptionBuilder.prototype.getSeriesKeyColumns = function () {
    var stackByColumns = this.filterNullColumn(this.plotOptions.stackBy[0].selected);
    if (stackByColumns.length > 0) {
        return [{ name: 'colorBy' }];
    } else {
        return [];
    }
};

EChartsBarCalculatedStackedOptionBuilder.prototype._setAxisColumnSortRule = function () {
    this._axisSortRule = this.bOptions.plotOptions.bar.axisSort;
};

exports.default = EChartsBarCalculatedStackedOptionBuilder;

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsBarStacked = __webpack_require__(223);

var _echartsBarStacked2 = _interopRequireDefault(_echartsBarStacked);

var _echartsBarStacked100OptionBuilder = __webpack_require__(366);

var _echartsBarStacked100OptionBuilder2 = _interopRequireDefault(_echartsBarStacked100OptionBuilder);

var _echartsBarCalculatedStacked100OptionBuilder = __webpack_require__(367);

var _echartsBarCalculatedStacked100OptionBuilder2 = _interopRequireDefault(_echartsBarCalculatedStacked100OptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsBarStacked100(parentId, options) {
    _echartsBarStacked2.default.call(this, parentId, options);
} /**
   * Source: echarts-bar-stacked100.js
   * Created by daewon.park on 2017-04-19.
   */

EChartsBarStacked100.prototype = Object.create(_echartsBarStacked2.default.prototype);
EChartsBarStacked100.prototype.constructor = EChartsBarStacked100;

EChartsBarStacked100.prototype.render = function () {
    this.seriesHelper = this.getSeriesHelper();
    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._doDataValidation(opt);
    this._setEChartOption(opt);
    this._backupItemStyles();
};

EChartsBarStacked100.prototype.getSeriesHelper = function () {
    if (this.options.source.localData[0].dataType == 'chartdata') {
        return new _echartsBarCalculatedStacked100OptionBuilder2.default();
    } else {
        return new _echartsBarStacked100OptionBuilder2.default();
    }
};

exports.default = EChartsBarStacked100;

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsBarStackedOptionBuilder = __webpack_require__(224);

var _echartsBarStackedOptionBuilder2 = _interopRequireDefault(_echartsBarStackedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsBarStacked100OptionBuilder() {
    _echartsBarStackedOptionBuilder2.default.call(this);
}

EChartsBarStacked100OptionBuilder.prototype = Object.create(_echartsBarStackedOptionBuilder2.default.prototype);
EChartsBarStacked100OptionBuilder.prototype.constructor = EChartsBarStacked100OptionBuilder;

EChartsBarStacked100OptionBuilder.prototype._setUpOptions = function () {
    this._registerDecorator('tooltipTriggerAxis');
    this._registerDecorator('tooltipYAxisPercent');
    _echartsBarStackedOptionBuilder2.default.prototype._setUpOptions.call(this);
    this._registerDecorator('xAxisMin0Max100');
    this._registerDecorator('seriesStacked100', { column: 'yAxis', valueIndex: 0 });
    this._registerDecorator('barMarker');
};

exports.default = EChartsBarStacked100OptionBuilder;

/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsBarCalculatedOptionBuilder = __webpack_require__(96);

var _echartsBarCalculatedOptionBuilder2 = _interopRequireDefault(_echartsBarCalculatedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsBarCalculatedStacked100OptionBuilder() {
    _echartsBarCalculatedOptionBuilder2.default.call(this);
}

EChartsBarCalculatedStacked100OptionBuilder.prototype = Object.create(_echartsBarCalculatedOptionBuilder2.default.prototype);
EChartsBarCalculatedStacked100OptionBuilder.prototype.constructor = EChartsBarCalculatedStacked100OptionBuilder;

EChartsBarCalculatedStacked100OptionBuilder.prototype._setUpOptions = function () {
    this._setAxisColumnSortRule();
    this._registerDecorator('sortAxisInit');
    this._registerDecorator('tooltipTriggerAxis');
    this._registerDecorator('tooltipAxisCalculated');
    this._registerDecorator('axisTypeWithCategoryY');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('marker');
    this._registerDecorator('brush');
    this._registerDecorator('xAxisScaleFalse');
    this._registerDecorator('seriesStacked');
    this._registerDecorator('axisLineOnZeroTrue');
    this._registerDecorator('xAxisMin0Max100');
    this._registerDecorator('seriesStacked100', { column: 'yAxis', valueIndex: 0 });
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
};

EChartsBarCalculatedStacked100OptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsBarCalculatedOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.stack = 'stacked';
    seriesItem.type = 'bar';
    return seriesItem;
};

EChartsBarCalculatedStacked100OptionBuilder.prototype.getTooltipKeyColumns = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    return this.plotOptions.stackBy.length > 0 ? this.filterNullColumn(this.plotOptions.stackBy[dataIndex].selected) : [];
};

EChartsBarCalculatedStacked100OptionBuilder.prototype.getSeriesKeyColumns = function () {
    var stackByColumns = this.filterNullColumn(this.plotOptions.stackBy[0].selected);
    if (stackByColumns.length > 0) {
        return [{ name: 'colorBy' }];
    } else {
        return [];
    }
};

EChartsBarCalculatedStacked100OptionBuilder.prototype._setAxisColumnSortRule = function () {
    this._axisSortRule = this.bOptions.plotOptions.bar.axisSort;
};

exports.default = EChartsBarCalculatedStacked100OptionBuilder;

/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _echartsBiplotOptionBuilder = __webpack_require__(369);

var _echartsBiplotOptionBuilder2 = _interopRequireDefault(_echartsBiplotOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * EChartsBiplot
 * @param parentId
 * @param options
 */
/**
 * Source: echarts-biplot.js
 * Created by daewon.park on 2017-04-24.
 */

function EChartsBiplot(parentId, options) {
  _echartsWrapper2.default.call(this, parentId, options);
}

EChartsBiplot.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsBiplot.prototype.constructor = EChartsBiplot;

EChartsBiplot.prototype.render = function () {
  this.seriesHelper = new _echartsBiplotOptionBuilder2.default();
  var opt = this.seriesHelper.buildOptions(this.options);
  this._bindInternalOptions(this.seriesHelper);
  this._setEChartOption(opt);
  //series itemStyle이 line일때는 없다. 왜지?
  // this._backupItemStyles();
};

exports.default = EChartsBiplot;

/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

var _echartsBiplotExtractor = __webpack_require__(370);

var _echartsBiplotExtractor2 = _interopRequireDefault(_echartsBiplotExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * EChartsBiplotOptionBuilder
 * @constructor
 */
/**
 * Created by sds on 2018-03-15.
 */
function EChartsBiplotOptionBuilder() {
    _echartsOptionBuilder2.default.call(this);
}

EChartsBiplotOptionBuilder.prototype = Object.create(_echartsOptionBuilder2.default.prototype);
EChartsBiplotOptionBuilder.prototype.constructor = EChartsBiplotOptionBuilder;

EChartsBiplotOptionBuilder.prototype.buildOptions = function (options) {
    this.bOptions = options;
    this.plotOptions = this.getPlotOptions(); //FIXME: component만 받아올텐데?
    this.eOptions = this._defaultOptions();
    this._setUpOptions();
    this.buildSeries();
    this._buildTooltip();
    this._setAxisRange();
    return this.eOptions;
};

EChartsBiplotOptionBuilder.prototype._defaultOptions = function () {
    var opt = _echartsOptionBuilder2.default.prototype._defaultOptions.call(this);
    opt.dataZoom = this.bOptions.dataZoom;
    opt.xAxis = [{
        //line
        type: 'value',
        scale: false,
        splitLine: { show: false },
        axisLine: { onZero: true }
    }, {
        //scatter
        type: 'value',
        scale: false,
        splitLine: { show: false },
        axisLine: { onZero: true }
    }];
    opt.yAxis = [{
        type: 'value',
        scale: false,
        splitLine: { show: false },
        axisLine: { onZero: true }
    }, {
        type: 'value',
        scale: false,
        splitLine: { show: false },
        axisLine: { onZero: true }
    }];
    $.extend(true, opt.xAxis, this.bOptions.xAxis);
    $.extend(true, opt.yAxis, this.bOptions.yAxis);
    return opt;
};

//FIXME: color by 구현되면 지워야함.
EChartsBiplotOptionBuilder.prototype.getSeriesKeyColumns = function () {
    return [];
};

EChartsBiplotOptionBuilder.prototype._buildTooltip = function () {};
EChartsBiplotOptionBuilder.prototype._setUpOptions = function () {
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected, 0);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected, 0);
    this.setSeriesDataColumns(this.bOptions.xAxis[1].selected, 1);
    this.setSeriesDataColumns(this.bOptions.yAxis[1].selected, 1);
};
EChartsBiplotOptionBuilder.prototype.buildSeries = function () {
    this.eOptions.series = [];
    this._buildComponentSeries(); //line chart
    this._buildProjectionSeries(); //scatter chart
    this._buildSeriesData();
};

EChartsBiplotOptionBuilder.prototype._buildComponentSeries = function () {
    var datasourceIndex = 0;
    var seriesType = 'component';

    var localData = this.getLocalData(datasourceIndex);
    var keyIndexes = this.getSeriesKeyColumnIndexes(datasourceIndex);
    var dataColumnIndexes = this.getSeriesDataColumnIndexes(datasourceIndex);
    var labelColumnIndexes = this.getLabelColumnIndexes(seriesType, datasourceIndex);

    var series = {};
    var seriesLabel = this._getSeriesLabel(seriesType, labelColumnIndexes);
    var i, row, seriesName, seriesItem;
    for (i in localData.data) {
        row = localData.data[i];
        seriesName = this.getSeriesName(row, keyIndexes); //key가되는 colorby 값이 없으면 ""임
        seriesItem = this.getSeriesItem(seriesType, series, seriesName);
        seriesItem.label = seriesLabel;
        series[seriesName] = seriesItem;
        if (!seriesItem.extractor) {
            seriesItem.extractor = new _echartsBiplotExtractor2.default(dataColumnIndexes);
            seriesItem.extractor.initAxisRange();
            // seriesItem.extractor.keys = this.getCellText(row, dataColumnIndexes);
            // seriesItem.keys = seriesItem.extractor.keys;
        }
        // (0, 0) 원점 추가
        var center = [];
        for (var c = 0; c < localData.columns.length; c++) {
            center.push(0);
        }
        seriesItem.extractor.push(center, -1);
        seriesItem.extractor.push(row, i);
    }
    // this._setSeries(series);
    seriesItem.data = seriesItem.extractor.extract();
    this.eOptions.series.push(seriesItem);
};

EChartsBiplotOptionBuilder.prototype._buildProjectionSeries = function () {
    var datasourceIndex = 1;
    var seriesType = 'projection';

    var localData = this.getLocalData(datasourceIndex);
    var keyIndexes = this.getSeriesKeyColumnIndexes(datasourceIndex);
    var dataColumnIndexes = this.getSeriesDataColumnIndexes(datasourceIndex);
    var labelColumnIndexes = this.getLabelColumnIndexes(seriesType, datasourceIndex);

    var series = {};
    var seriesLabel = this._getSeriesLabel(seriesType, labelColumnIndexes);
    var i, row, seriesName, seriesItem;
    for (i in localData.data) {
        row = localData.data[i];
        seriesName = this.getSeriesName(row, keyIndexes); //key가되는 colorby 값이 없으면 ""임
        seriesItem = this.getSeriesItem(seriesType, series, seriesName);
        seriesItem.label = seriesLabel;
        series[seriesName] = seriesItem;
        if (!seriesItem.extractor) {
            seriesItem.extractor = new _echartsBiplotExtractor2.default(dataColumnIndexes);
            seriesItem.extractor.initAxisRange();
            // seriesItem.extractor.keys = this.getCellText(row, dataColumnIndexes);
            // seriesItem.keys = seriesItem.extractor.keys;
        }
        seriesItem.extractor.push(row, i);
    }
    // this._setSeries(series);
    seriesItem.data = seriesItem.extractor.extract();
    this.eOptions.series.push(seriesItem);
};

/**
 *
 * @param specOptions : 'projection' || 'component'
 * @returns {Array}
 */
EChartsBiplotOptionBuilder.prototype.getLabelColumns = function (seriesName) {
    var specOptions = this.bOptions.plotOptions[seriesName];
    return specOptions.labelBy && specOptions.labelBy.length > 0 ? this.filterNullColumn(specOptions.labelBy[0].selected) : [];
};

EChartsBiplotOptionBuilder.prototype.getLabelColumnIndexes = function (biplotChartType, dataIndex) {
    var localData = this.getLocalData(dataIndex);
    var keyColumns = this.getLabelColumns(biplotChartType);
    return this.getColumnIndexes(keyColumns, localData.columns);
};

EChartsBiplotOptionBuilder.prototype.getSeriesItem = function (biplotChartType, series, seriesName) {
    var seriesItem = series[seriesName];
    if (!seriesItem) {
        seriesItem = this._newSeriesItem(biplotChartType);
    }
    return seriesItem;
};

EChartsBiplotOptionBuilder.prototype._newSeriesItem = function (seriesName) {
    var datasourceIndex = seriesName == 'component' ? 0 : 1;
    var seriesItem = {
        type: seriesName == 'component' ? 'line' : 'scatter',
        xAxisIndex: datasourceIndex,
        yAxisIndex: datasourceIndex,
        name: seriesName,
        large: true,
        largeThreshold: 5000,
        data: []
    };

    var specOptions = this.bOptions.plotOptions[seriesName];

    //Marker
    if (typeof specOptions.marker !== 'undefined') {
        for (var attrName in specOptions.marker) {
            seriesItem[attrName] = specOptions.marker[attrName];
        }
    }

    return seriesItem;
};

EChartsBiplotOptionBuilder.prototype._getSeriesLabel = function (seriesName, labelColumnIndexes) {
    var specOptions = this.bOptions.plotOptions[seriesName];
    var datasourceIndex = seriesName == 'component' ? 0 : 1;

    var localData = this.getLocalData(datasourceIndex);
    var label;
    // Label
    if (labelColumnIndexes.length > 0) {
        label = specOptions.label || { normal: { show: true } };
        $.extend(true, label, {
            normal: {
                formatter: function formatter(params) {
                    var dataIndex = params.data.dataIndexes[0];
                    if (dataIndex === -1) return '';
                    return localData.data[dataIndex][labelColumnIndexes[0]];
                },
                textStyle: {
                    // color: this.bOptions.colorSet[datasourceIndex] //FIXME: colorby 들어가면 이걸로 수정해야할듯
                    color: datasourceIndex == 0 ? this.bOptions.colorSet[datasourceIndex] : 'black'
                }
            }
        });
    }
    return label;
};

EChartsBiplotOptionBuilder.prototype._buildSeriesData = function () {
    for (var s in this.eOptions.series) {
        this.eOptions.series[s].data = this.eOptions.series[s].extractor.extract();
    }
};

EChartsBiplotOptionBuilder.prototype._setAxisRange = function () {
    for (var s in this.eOptions.series) {
        var axisRange = this.eOptions.series[s].extractor.getAxisRange();
        this.eOptions.xAxis[s].min = -Number(axisRange.maxAbsX);
        this.eOptions.xAxis[s].max = Number(axisRange.maxAbsX);
        this.eOptions.yAxis[s].min = -Number(axisRange.maxAbsY);
        this.eOptions.yAxis[s].max = Number(axisRange.maxAbsY);
    }
};

exports.default = EChartsBiplotOptionBuilder;

/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/**
 * Created by sds on 2018-03-15.
 */

//todo: fix
function BiplotPointDataExtractor(columnIndexes) {
    // PointExtractor.call(this, columnIndexes);
    this.columnIndexes = columnIndexes;
    this.points = [];
    this.xCategories = {};
}

// BiplotPointDataExtractor.prototype = Object.create(PointExtractor.prototype);
// BiplotPointDataExtractor.prototype.constructor = BiplotPointDataExtractor;

BiplotPointDataExtractor.prototype.push = function (row, rowIndex) {
    var isFinite = true;
    var pointData = {
        value: [],
        dataIndexes: [parseInt(rowIndex)] // point 에 해당하는 원본 데이터 인덱스
    };
    for (var d in this.columnIndexes) {
        if (!isFinite) break;
        var idxValue = row[this.columnIndexes[d]];
        isFinite = Number.isFinite(idxValue);
        if (isFinite && this.axisRange) {
            var absCeilValue = Math.abs(idxValue);
            if (d == 0) {
                this.axisRange.maxAbsX = Math.max(this.axisRange.maxAbsX, absCeilValue);
            } else if (d == 1) {
                this.axisRange.maxAbsY = Math.max(this.axisRange.maxAbsY, absCeilValue);
            }
        }
        pointData.value.push(idxValue);
    }
    if (isFinite) this.points.push(pointData);
};

BiplotPointDataExtractor.prototype.extract = function () {
    return this.points;
};

BiplotPointDataExtractor.prototype.initAxisRange = function () {
    this.axisRange = {
        maxAbsX: Number.MIN_VALUE,
        maxAbsY: Number.MIN_VALUE
    };
};

BiplotPointDataExtractor.prototype.getAxisRange = function () {
    return this.axisRange;
};

exports.default = BiplotPointDataExtractor;

/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _echartsBoxplotOptionBuilder = __webpack_require__(225);

var _echartsBoxplotOptionBuilder2 = _interopRequireDefault(_echartsBoxplotOptionBuilder);

var _echartsBoxplotCalculatedOptionBuilder = __webpack_require__(372);

var _echartsBoxplotCalculatedOptionBuilder2 = _interopRequireDefault(_echartsBoxplotCalculatedOptionBuilder);

var _echartsBoxplotBycolumnnamesOptionBuilder = __webpack_require__(373);

var _echartsBoxplotBycolumnnamesOptionBuilder2 = _interopRequireDefault(_echartsBoxplotBycolumnnamesOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsBoxPlot(parentId, options) {
    _echartsWrapper2.default.call(this, parentId, options);
} /**
   * Source: echarts-boxplot.js
   * Created by daewon.park on 2017-03-31.
   */

EChartsBoxPlot.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsBoxPlot.prototype.constructor = EChartsBoxPlot;

EChartsBoxPlot.prototype._init = function () {
    _echartsWrapper2.default.prototype._init.call(this);
};

EChartsBoxPlot.prototype.render = function () {
    var xAxisType = _optionUtils2.default.getXAxisType(this.options);

    if (xAxisType === 'byColumnNames') {
        this.seriesHelper = new _echartsBoxplotBycolumnnamesOptionBuilder2.default();
    } else if (this.options.source.localData[0].dataType === 'chartdata') {
        this.seriesHelper = new _echartsBoxplotCalculatedOptionBuilder2.default();
    } else {
        this.seriesHelper = new _echartsBoxplotOptionBuilder2.default();
    }
    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._setEChartOption(opt);
};

EChartsBoxPlot.prototype.getLegendData = function () {
    var legendData = _echartsWrapper2.default.prototype.getLegendData.call(this);
    for (var i in legendData) {
        legendData[i].symbol = 'square';
    }
    return legendData;
};

exports.default = EChartsBoxPlot;

/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsBoxplotOptionBuilder = __webpack_require__(225);

var _echartsBoxplotOptionBuilder2 = _interopRequireDefault(_echartsBoxplotOptionBuilder);

var _echartsPointWithCategorykeyExtractor = __webpack_require__(25);

var _echartsPointWithCategorykeyExtractor2 = _interopRequireDefault(_echartsPointWithCategorykeyExtractor);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsBoxPlotCalculatedOptionBuilder() {
    _echartsBoxplotOptionBuilder2.default.call(this);
}

EChartsBoxPlotCalculatedOptionBuilder.prototype = Object.create(_echartsBoxplotOptionBuilder2.default.prototype);
EChartsBoxPlotCalculatedOptionBuilder.prototype.constructor = EChartsBoxPlotCalculatedOptionBuilder;

EChartsBoxPlotCalculatedOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData();
    var xIndexes = this.getColumnIndexes([{ name: 'xAxis' }], localData.chartColumns);
    var yIndexes = this.getColumnIndexes([{ name: 'yAxis' }], localData.chartColumns);

    var extractor = new _echartsPointWithCategorykeyExtractor2.default();

    extractor.setTarget({
        index: xIndexes,
        type: 'category',
        isKey: false
    });

    extractor.setTarget({
        index: yIndexes,
        type: 'value',
        isKey: true
    });

    return extractor;
};

EChartsBoxPlotCalculatedOptionBuilder.prototype._buildSeriesData = function () {
    var outliers = [];

    for (var s in this.series) {
        var boxplotData = this.series[s].extractor.extract()[0].value;

        var axisType = this._getColumnDataType(this.filterNullColumn(this.bOptions.xAxis[0].selected));
        var sortRule = function sortRule(a, b) {
            var comp;
            if (axisType === 'category') comp = _optionUtils2.default.stringSortRule(a[0], b[0]);else if (axisType === 'time') comp = _optionUtils2.default.timeSortRule(a[0], b[0]);else comp = _optionUtils2.default.numericSortRule(a[0] * 1, b[0] * 1);

            return comp;
        };

        boxplotData.sort(sortRule);

        var seriesItemData = {
            boxData: [],
            outliers: []
        };

        for (var d in boxplotData) {
            var boxData = {
                name: boxplotData[d][0],
                value: boxplotData[d][1].box
            };
            seriesItemData.boxData.push(boxData);

            //Spec 확인 필요사항임.
            var out = boxplotData[d][1].outliers.split(',');
            out = out.map(function (item) {
                return {
                    name: boxplotData[d][0],
                    value: [boxplotData[d][0], item]
                };
            });
            seriesItemData.outliers = seriesItemData.outliers.concat(out);
        }

        this.series[s].data = seriesItemData.boxData;

        // TODO 3.6.2 에서 series.data = [{ value: {...}, itemStyle: {} }, { value: {...}, itemStyle: {} }] 형태를 인식하지 못하는 bug 가 있음. by daewon.park
        this.series[s]._originalData = this.series[s].data;

        // outlier series data
        if (seriesItemData.outliers.length > 0) {
            var outlierSeriesItem = {
                name: this.series[s].name,
                type: 'scatter',
                data: seriesItemData.outliers
            };
            outliers.push(outlierSeriesItem);
        }
    }
    for (var o in outliers) {
        this.series.push(outliers[o]);
    }
};

exports.default = EChartsBoxPlotCalculatedOptionBuilder;

/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsPointBycolumnnamesExtractor = __webpack_require__(64);

var _echartsPointBycolumnnamesExtractor2 = _interopRequireDefault(_echartsPointBycolumnnamesExtractor);

var _echartsAxisTypeOptionBuilder = __webpack_require__(19);

var _echartsAxisTypeOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeOptionBuilder);

var _boxplotOperator = __webpack_require__(226);

var _boxplotOperator2 = _interopRequireDefault(_boxplotOperator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsBoxPlotByColumnNamesOptionBuilder() {
    _echartsAxisTypeOptionBuilder2.default.call(this);
}

EChartsBoxPlotByColumnNamesOptionBuilder.prototype = Object.create(_echartsAxisTypeOptionBuilder2.default.prototype);
EChartsBoxPlotByColumnNamesOptionBuilder.prototype.constructor = EChartsBoxPlotByColumnNamesOptionBuilder;

EChartsBoxPlotByColumnNamesOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['boxWidth'];
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('boxPlotByColumnNamesAxisDecorator');
    this._registerDecorator('tooltipBoxPlotByColumnNames');
    this._registerDecorator('plotOptions');
    this._registerDecorator('boxPlotSeparateColorDecorator');
    this.setSeriesKeyColumns([]);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
};

EChartsBoxPlotByColumnNamesOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData();
    var yIndexes = this.getColumnIndexes(this.bOptions.yAxis[0].selected, localData.columns);

    var extractor = new _echartsPointBycolumnnamesExtractor2.default();

    extractor.setTarget({
        index: yIndexes,
        type: 'value',
        isKey: false
    });

    extractor.setExtractOperator(function (points) {
        var operatorMap = {};
        var point, categoryIndex, operator;
        for (var i = 0; i < points.length; i++) {
            point = points[i];
            categoryIndex = point.categoryIndex;
            var x = point.value[0];
            if (!operatorMap[x]) {
                operatorMap[x] = new _boxplotOperator2.default([x]);
            }
            operator = operatorMap[x];
            operator.add(point.dataIndexes[0], point.value[1]);
        }
        var answer = [];
        for (var i in operatorMap) {
            answer.push(operatorMap[i].calc());
        }
        return answer;
    });

    return extractor;
};

EChartsBoxPlotByColumnNamesOptionBuilder.prototype._buildSeriesData = function () {
    var outliers = [];
    var datacolumns = this.getSeriesDataColumns();

    for (var s in this.series) {
        var boxplotData = this.series[s].extractor.extract();

        var seriesItemData = {
            boxData: [],
            outliers: []
        };

        for (var d in boxplotData) {
            var boxData = boxplotData[d].boxData;
            boxData.name = datacolumns[boxplotData[d].x].name;
            seriesItemData.boxData.push(boxData);

            var out = boxplotData[d].outliers;
            out = out.map(function (item) {
                return {
                    name: datacolumns[boxplotData[d].x].name,
                    value: item.value,
                    dataIndexes: item.dataIndexes
                };
            });
            seriesItemData.outliers = seriesItemData.outliers.concat(out);
        }

        // boxplot series data
        this.series[s].data = seriesItemData.boxData;

        // TODO 3.6.2 에서 series.data = [{ value: {...}, itemStyle: {} }, { value: {...}, itemStyle: {} }] 형태를 인식하지 못하는 bug 가 있음. by daewon.park
        this.series[s]._originalData = this.series[s].data;

        seriesItemData.outliers.map(function (value) {
            value.value[0] *= 1;
        });

        // outlier series data
        if (seriesItemData.outliers.length > 0) {
            var outlierSeriesItem = {
                name: this.series[s].name,
                type: 'scatter',
                data: seriesItemData.outliers
            };
            outliers.push(outlierSeriesItem);
        }
    }
    for (var o in outliers) {
        this.series.push(outliers[o]);
    }
};

exports.default = EChartsBoxPlotByColumnNamesOptionBuilder;

/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeOptionBuilder = __webpack_require__(19);

var _echartsAxisTypeOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeOptionBuilder);

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsBubbleOptionBuilder() {
    _echartsAxisTypeOptionBuilder2.default.call(this);
}

EChartsBubbleOptionBuilder.prototype = Object.create(_echartsAxisTypeOptionBuilder2.default.prototype);
EChartsBubbleOptionBuilder.prototype.constructor = EChartsBubbleOptionBuilder;

EChartsBubbleOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['markPoint', 'markLine'];
    this._registerDecorator('axisType');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('tooltipBubble');
    this._registerDecorator('marker');
    this._registerDecorator('plotOptions');
    this._registerDecorator('itemOpacity7');
    this._registerDecorator('bubbleSize');
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.plotOptions.bubble.sizeBy[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.plotOptions.bubble.sizeBy[0].selected);
};

EChartsBubbleOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData();
    var dataColumns = this.getSeriesDataColumns();
    var aggregation = 'count';
    if (dataColumns[2]) aggregation = dataColumns[2].aggregation;
    var xIndexes = this.getColumnIndexes(this.bOptions.xAxis[0].selected, localData.columns);
    var yIndexes = this.getColumnIndexes(this.bOptions.yAxis[0].selected, localData.columns);
    var sizeByIndexes = this.getColumnIndexes(this.bOptions.plotOptions.bubble.sizeBy[0].selected, localData.columns);

    var extractor = new _echartsPointExtractor2.default();

    extractor.setTarget({
        index: xIndexes,
        type: _optionUtils2.default.getAxisType(localData.columns[xIndexes[0]]),
        isKey: true
    });

    extractor.setTarget({
        index: yIndexes,
        type: _optionUtils2.default.getAxisType(localData.columns[yIndexes[0]]),
        isKey: true
    });

    extractor.setTarget({
        index: sizeByIndexes,
        type: 'value',
        isKey: false
    });

    extractor.setExtractOperator(function (pointObject) {
        var operator = new _aggregationOperator2.default(pointObject.value);
        for (var i = 0; i < pointObject.indexList.length; i++) {
            operator.add(pointObject.indexList[i], pointObject.point[i] ? pointObject.point[i][2] : 1);
        }
        return [{ value: pointObject.value.concat(operator.calc(aggregation)), dataIndexes: pointObject.indexList }];
    });

    return extractor;
};

EChartsBubbleOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.type = 'scatter';
    return seriesItem;
};

exports.default = EChartsBubbleOptionBuilder;

/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeCalculatedOptionBuilder = __webpack_require__(32);

var _echartsAxisTypeCalculatedOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeCalculatedOptionBuilder);

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

var _echartsScatterCalculatedOptionBuilder = __webpack_require__(97);

var _echartsScatterCalculatedOptionBuilder2 = _interopRequireDefault(_echartsScatterCalculatedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsBubbleCalculatedOptionBuilder() {
    _echartsAxisTypeCalculatedOptionBuilder2.default.call(this);
}

EChartsBubbleCalculatedOptionBuilder.prototype = Object.create(_echartsAxisTypeCalculatedOptionBuilder2.default.prototype);
EChartsBubbleCalculatedOptionBuilder.prototype.constructor = EChartsBubbleCalculatedOptionBuilder;

EChartsBubbleCalculatedOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['markPoint', 'markLine'];
    this._registerDecorator('axisType');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('tooltipBubbleCalculated');
    this._registerDecorator('marker');
    this._registerDecorator('plotOptions');
    this._registerDecorator('itemOpacity7');
    this._registerDecorator('bubbleSize');
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.plotOptions.bubble.sizeBy[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.plotOptions.bubble.sizeBy[0].selected);
};

EChartsBubbleCalculatedOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData(0);
    var xIndexes = this.getColumnIndexes([{ name: 'xAxis' }], localData.chartColumns);
    var yIndexes = this.getColumnIndexes([{ name: 'yAxis' }], localData.chartColumns);
    var sizeByIndexes = this.getColumnIndexes([{ name: 'sizeBy' }], localData.chartColumns);

    var extractor = new _echartsPointExtractor2.default();

    extractor.setTarget({
        index: xIndexes,
        type: _optionUtils2.default.getAxisType(localData.columns[xIndexes[0]]),
        isKey: true
    });

    extractor.setTarget({
        index: yIndexes,
        type: _optionUtils2.default.getAxisType(localData.columns[yIndexes[0]]),
        isKey: true
    });

    extractor.setTarget({
        index: sizeByIndexes,
        type: 'value',
        isKey: false
    });

    return extractor;
};

EChartsBubbleCalculatedOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.type = 'scatter';
    return seriesItem;
};

EChartsBubbleCalculatedOptionBuilder.prototype.getSeriesKeyColumns = function () {
    var keyColumns = this.filterNullColumn(this.bOptions.colorBy[0].selected);
    if (keyColumns.length > 0) {
        return [{ name: 'colorBy' }];
    } else {
        return [];
    }
};

exports.default = EChartsBubbleCalculatedOptionBuilder;

/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _echartsAxisTypeComplexOptionBuilder = __webpack_require__(46);

var _echartsAxisTypeComplexOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeComplexOptionBuilder);

var _echartsPointWithCategorykeyExtractor = __webpack_require__(25);

var _echartsPointWithCategorykeyExtractor2 = _interopRequireDefault(_echartsPointWithCategorykeyExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsBubbleComplexOptionBuilder() {
    _echartsAxisTypeComplexOptionBuilder2.default.call(this);
}

EChartsBubbleComplexOptionBuilder.prototype = Object.create(_echartsAxisTypeComplexOptionBuilder2.default.prototype);
EChartsBubbleComplexOptionBuilder.prototype.constructor = EChartsBubbleComplexOptionBuilder;

EChartsBubbleComplexOptionBuilder.prototype._setUpOptions = function () {
    _echartsAxisTypeComplexOptionBuilder2.default.prototype._setUpOptions.call(this);
    this.plotOptionAttributes = ['markPoint', 'markLine'];
    this._registerDecorator('axisType');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('tooltipBubble');
    this._registerDecorator('marker');
    this._registerDecorator('plotOptions');
    this._registerDecorator('itemOpacity7');
    this._registerDecorator('bubbleSize');
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.plotOptions.bubble.sizeBy[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.plotOptions.bubble.sizeBy[0].selected);
};

EChartsBubbleComplexOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData();
    var dataColumns = this.getSeriesDataColumns();
    var aggregation = 'count';
    if (dataColumns[2]) aggregation = dataColumns[2].aggregation;
    var xIndexes = this.getColumnIndexes(this.bOptions.xAxis[0].selected, localData.columns);
    var yIndexes = this.getColumnIndexes(this.bOptions.yAxis[0].selected, localData.columns);
    var sizeByIndexes = this.getColumnIndexes(this.bOptions.plotOptions.bubble.sizeBy[0].selected, localData.columns);

    var extractor = this._categoryKey ? new _echartsPointWithCategorykeyExtractor2.default() : new _echartsPointExtractor2.default();

    extractor.setTarget({
        index: xIndexes,
        type: this._categoryKey ? 'category' : _optionUtils2.default.getAxisType(localData.columns[xIndexes[0]]),
        isKey: true
    });

    extractor.setTarget({
        index: yIndexes,
        type: this._categoryKey || aggregation ? 'value' : _optionUtils2.default.getAxisType(localData.columns[yIndexes[0]]),
        isKey: true
    });

    extractor.setTarget({
        index: sizeByIndexes,
        type: 'value',
        isKey: false
    });

    extractor.setExtractOperator(function (pointObject) {
        var operator = new _aggregationOperator2.default(pointObject.value);
        for (var i = 0; i < pointObject.indexList.length; i++) {
            operator.add(pointObject.indexList[i], pointObject.point[i] ? pointObject.point[i][2] : 1);
        }
        return [{ value: pointObject.value.concat(operator.calc(aggregation)), dataIndexes: pointObject.indexList }];
    });

    return extractor;
};

EChartsBubbleComplexOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsAxisTypeComplexOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.type = 'scatter';

    seriesItem.tooltipHeaders = [];
    for (var i = 0; i < this.tooltipDataColumns[0].length; i++) {
        seriesItem.tooltipHeaders.push(_optionUtils2.default.getColumnLabel(this.tooltipDataColumns[0][i]));
    }
    if (this.tooltipDataColumns[0].length < 3) {
        seriesItem.tooltipHeaders.push('Count');
    }

    return seriesItem;
};

exports.default = EChartsBubbleComplexOptionBuilder;

/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _echartsCardOptionBuilder = __webpack_require__(228);

var _echartsCardOptionBuilder2 = _interopRequireDefault(_echartsCardOptionBuilder);

var _echartsCardCalculatedOptionBuilder = __webpack_require__(378);

var _echartsCardCalculatedOptionBuilder2 = _interopRequireDefault(_echartsCardCalculatedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsCard(parentId, options) {
    _echartsWrapper2.default.call(this, parentId, options);
} /**
   * Created by sds on 2018-03-26.
   */


EChartsCard.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsCard.prototype.constructor = EChartsCard;

EChartsCard.prototype.render = function () {
    if (this.options.source.localData[0].dataType == 'chartdata') {
        this.seriesHelper = new _echartsCardCalculatedOptionBuilder2.default();
    } else {
        this.seriesHelper = new _echartsCardOptionBuilder2.default();
    }

    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._setEChartOption(opt);
};

EChartsCard.prototype.getLegendData = function () {};

exports.default = EChartsCard;

/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

var _echartsCardOptionBuilder = __webpack_require__(228);

var _echartsCardOptionBuilder2 = _interopRequireDefault(_echartsCardOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsCardCalculatedOptionBuilder() {
    _echartsCardOptionBuilder2.default.call(this);
}

EChartsCardCalculatedOptionBuilder.prototype = Object.create(_echartsCardOptionBuilder2.default.prototype);
EChartsCardCalculatedOptionBuilder.prototype.constructor = EChartsCardCalculatedOptionBuilder;

EChartsCardCalculatedOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['label', 'symbolRepeat', 'symbolSize'];
    this._registerDecorator('plotOptions');
    this._registerDecorator('axisTypeWithCategoryY');
    this._registerDecorator('axisHidden');
    this._registerDecorator('brushRemoval');
    this._registerDecorator('tooltipCard');
    this.setSeriesKeyColumns([]);
    this.setSeriesDataColumns(this.bOptions.plotOptions.card.valueBy[0].selected);
    this.setTooltipDataColumns(this.bOptions.plotOptions.card.valueBy[0].selected);
};

EChartsCardCalculatedOptionBuilder.prototype._buildSeriesData = function () {
    for (var s in this.series) {
        //series length is 1
        this.series[s].data = this.series[s].extractor.extract(function (pointMap) {
            return [[pointMap[0].point[0][0], 0, pointMap[0].point[0][0]]];
        });
    }
};

EChartsCardCalculatedOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData(0);
    var valueByIndexes = this.getColumnIndexes([{ name: 'value' }], localData.chartColumns);

    var extractor = new _echartsPointExtractor2.default();

    extractor.setTarget({
        index: valueByIndexes,
        type: 'value',
        isKey: false
    });

    return extractor;
};

exports.default = EChartsCardCalculatedOptionBuilder;

/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeOptionBuilder = __webpack_require__(19);

var _echartsAxisTypeOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeOptionBuilder);

var _echartsPointWithCategorykeyExtractor = __webpack_require__(25);

var _echartsPointWithCategorykeyExtractor2 = _interopRequireDefault(_echartsPointWithCategorykeyExtractor);

var _echartsAxisTypeCalculatedOptionBuilder = __webpack_require__(32);

var _echartsAxisTypeCalculatedOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeCalculatedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsColumnCalculatedOptionBuilder() {
    _echartsAxisTypeOptionBuilder2.default.call(this);
}

EChartsColumnCalculatedOptionBuilder.prototype = Object.create(_echartsAxisTypeCalculatedOptionBuilder2.default.prototype);
EChartsColumnCalculatedOptionBuilder.prototype.constructor = EChartsColumnCalculatedOptionBuilder;

EChartsColumnCalculatedOptionBuilder.prototype._setUpOptions = function () {
    this._setAxisColumnSortRule();
    this._registerDecorator('axisTypeWithCategoryX');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('tooltipItemCalculated');
    this._registerDecorator('marker');
    this._registerDecorator('brush');
    this._registerDecorator('yAxisMin0', { aggr: ['count'] });
    this._registerDecorator('axisLineOnZeroTrue');
    this._registerDecorator('emphasis');
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
};

EChartsColumnCalculatedOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData();
    var xIndexes = this.getColumnIndexes([{ name: 'xAxis' }], localData.chartColumns);
    var yIndexes = this.getColumnIndexes([{ name: 'yAxis' }], localData.chartColumns);

    var extractor = new _echartsPointWithCategorykeyExtractor2.default();

    extractor.setTarget({
        index: xIndexes,
        type: 'category',
        isKey: true
    });

    extractor.setTarget({
        index: yIndexes,
        type: 'value',
        isKey: false
    });

    return extractor;
};

EChartsColumnCalculatedOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = {
        type: 'bar',
        animationDuration: this.bOptions.chart.animationDuration,
        large: true,
        largeThreshold: 5000,
        data: []
    };

    return seriesItem;
};

EChartsColumnCalculatedOptionBuilder.prototype.getSeriesKeyColumns = function () {
    var keyColumns = this.filterNullColumn(this.bOptions.colorBy[0].selected);
    if (keyColumns.length > 0) {
        return [{ name: 'colorBy' }];
    } else {
        return [];
    }
};

EChartsColumnCalculatedOptionBuilder.prototype._setAxisColumnSortRule = function () {
    this._axisSortRule = this.bOptions.plotOptions.column.axisSort;
};

exports.default = EChartsColumnCalculatedOptionBuilder;

/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeCalculatedOptionBuilder = __webpack_require__(32);

var _echartsAxisTypeCalculatedOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeCalculatedOptionBuilder);

var _echartsPointWithCategorykeyExtractor = __webpack_require__(25);

var _echartsPointWithCategorykeyExtractor2 = _interopRequireDefault(_echartsPointWithCategorykeyExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsColumnCalculatedStackedOptionBuilder() {
    _echartsAxisTypeCalculatedOptionBuilder2.default.call(this);
}

EChartsColumnCalculatedStackedOptionBuilder.prototype = Object.create(_echartsAxisTypeCalculatedOptionBuilder2.default.prototype);
EChartsColumnCalculatedStackedOptionBuilder.prototype.constructor = EChartsColumnCalculatedStackedOptionBuilder;

EChartsColumnCalculatedStackedOptionBuilder.prototype._setUpOptions = function () {
    this._setAxisColumnSortRule();
    this._registerDecorator('sortAxisInit');
    this._registerDecorator('tooltipTriggerAxis');
    this._registerDecorator('tooltipAxisPointerShadow');
    this._registerDecorator('axisTypeWithCategoryX');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('tooltipAxisCalculated');
    this._registerDecorator('marker');
    this._registerDecorator('brush');
    this._registerDecorator('yAxisScaleFalse');
    this._registerDecorator('seriesStacked');
    this._registerDecorator('axisLineOnZeroTrue');

    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
    this.setSeriesKeyColumns(this.plotOptions.stackBy[0].selected);
};

EChartsColumnCalculatedStackedOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData();
    var xIndexes = this.getColumnIndexes([{ name: 'xAxis' }], localData.chartColumns);
    var yIndexes = this.getColumnIndexes([{ name: 'yAxis' }], localData.chartColumns);

    var extractor = new _echartsPointWithCategorykeyExtractor2.default();

    extractor.setTarget({
        index: xIndexes,
        type: 'category',
        isKey: true
    });

    extractor.setTarget({
        index: yIndexes,
        type: 'value',
        isKey: false
    });

    return extractor;
};

EChartsColumnCalculatedStackedOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = {
        type: 'bar',
        stack: 'stacked',
        animationDuration: this.bOptions.chart.animationDuration,
        large: true,
        largeThreshold: 5000,
        data: []
    };

    return seriesItem;
};

EChartsColumnCalculatedStackedOptionBuilder.prototype.getTooltipKeyColumns = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    return this.plotOptions.stackBy.length > 0 ? this.filterNullColumn(this.plotOptions.stackBy[dataIndex].selected) : [];
};

EChartsColumnCalculatedStackedOptionBuilder.prototype.getSeriesKeyColumns = function () {
    var stackByColumns = this.filterNullColumn(this.plotOptions.stackBy[0].selected);
    if (stackByColumns.length > 0) {
        return [{ name: 'colorBy' }];
    } else {
        return [];
    }
};

EChartsColumnCalculatedStackedOptionBuilder.prototype._setAxisColumnSortRule = function () {
    this._axisSortRule = this.bOptions.plotOptions.column.axisSort;
};

exports.default = EChartsColumnCalculatedStackedOptionBuilder;

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsColumnStackedOptionBuilder = __webpack_require__(231);

var _echartsColumnStackedOptionBuilder2 = _interopRequireDefault(_echartsColumnStackedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsColumnStacked100OptionBuilder() {
    _echartsColumnStackedOptionBuilder2.default.call(this);
}

EChartsColumnStacked100OptionBuilder.prototype = Object.create(_echartsColumnStackedOptionBuilder2.default.prototype);
EChartsColumnStacked100OptionBuilder.prototype.constructor = EChartsColumnStacked100OptionBuilder;

EChartsColumnStacked100OptionBuilder.prototype._setUpOptions = function () {
    this._registerDecorator('tooltipTriggerAxis');
    this._registerDecorator('tooltipXAxisPercent');
    _echartsColumnStackedOptionBuilder2.default.prototype._setUpOptions.call(this);
    this._registerDecorator('yAxisMin0Max100');
    this._registerDecorator('marker');
    this._registerDecorator('seriesStacked100', { column: 'xAxis', valueIndex: 1 });
};

exports.default = EChartsColumnStacked100OptionBuilder;

/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeCalculatedOptionBuilder = __webpack_require__(32);

var _echartsAxisTypeCalculatedOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeCalculatedOptionBuilder);

var _echartsPointWithCategorykeyExtractor = __webpack_require__(25);

var _echartsPointWithCategorykeyExtractor2 = _interopRequireDefault(_echartsPointWithCategorykeyExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsColumnCalculatedStacked100OptionBuilder() {
    _echartsAxisTypeCalculatedOptionBuilder2.default.call(this);
}

EChartsColumnCalculatedStacked100OptionBuilder.prototype = Object.create(_echartsAxisTypeCalculatedOptionBuilder2.default.prototype);
EChartsColumnCalculatedStacked100OptionBuilder.prototype.constructor = EChartsColumnCalculatedStacked100OptionBuilder;

EChartsColumnCalculatedStacked100OptionBuilder.prototype._setUpOptions = function () {
    this._setAxisColumnSortRule();
    this._registerDecorator('sortAxisInit');
    this._registerDecorator('tooltipTriggerAxis');
    this._registerDecorator('tooltipAxisCalculated');
    this._registerDecorator('axisTypeWithCategoryX');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('marker');
    this._registerDecorator('brush');
    this._registerDecorator('yAxisScaleFalse');
    this._registerDecorator('seriesStacked');
    this._registerDecorator('axisLineOnZeroTrue');
    this._registerDecorator('yAxisMin0Max100');
    this._registerDecorator('seriesStacked100', { column: 'xAxis', valueIndex: 1 });
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
    this.setSeriesKeyColumns(this.plotOptions.stackBy[0].selected);
};

EChartsColumnCalculatedStacked100OptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData();
    var xIndexes = this.getColumnIndexes([{ name: 'xAxis' }], localData.chartColumns);
    var yIndexes = this.getColumnIndexes([{ name: 'yAxis' }], localData.chartColumns);

    var extractor = new _echartsPointWithCategorykeyExtractor2.default();

    extractor.setTarget({
        index: xIndexes,
        type: 'category',
        isKey: true
    });

    extractor.setTarget({
        index: yIndexes,
        type: 'value',
        isKey: false
    });

    return extractor;
};

EChartsColumnCalculatedStacked100OptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = {
        type: 'bar',
        stack: 'stacked',
        animationDuration: this.bOptions.chart.animationDuration,
        large: true,
        largeThreshold: 5000,
        data: []
    };

    return seriesItem;
};

EChartsColumnCalculatedStacked100OptionBuilder.prototype.getTooltipKeyColumns = function (dataIndex) {
    dataIndex = dataIndex ? dataIndex : 0;
    return this.plotOptions.stackBy.length > 0 ? this.filterNullColumn(this.plotOptions.stackBy[dataIndex].selected) : [];
};

EChartsColumnCalculatedStacked100OptionBuilder.prototype.getSeriesKeyColumns = function () {
    var stackByColumns = this.filterNullColumn(this.plotOptions.stackBy[0].selected);
    if (stackByColumns.length > 0) {
        return [{ name: 'colorBy' }];
    } else {
        return [];
    }
};

EChartsColumnCalculatedStacked100OptionBuilder.prototype._setAxisColumnSortRule = function () {
    this._axisSortRule = this.bOptions.plotOptions.column.axisSort;
};

exports.default = EChartsColumnCalculatedStacked100OptionBuilder;

/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsColumnStackedComplexOptionBuilder = __webpack_require__(232);

var _echartsColumnStackedComplexOptionBuilder2 = _interopRequireDefault(_echartsColumnStackedComplexOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsColumnStacked100ComplexOptionBuilder() {
    _echartsColumnStackedComplexOptionBuilder2.default.call(this);
}

EChartsColumnStacked100ComplexOptionBuilder.prototype = Object.create(_echartsColumnStackedComplexOptionBuilder2.default.prototype);
EChartsColumnStacked100ComplexOptionBuilder.prototype.constructor = EChartsColumnStacked100ComplexOptionBuilder;

EChartsColumnStacked100ComplexOptionBuilder.prototype._setUpOptions = function () {
    _echartsColumnStackedComplexOptionBuilder2.default.prototype._setUpOptions.call(this);
    this._registerDecorator('yAxisMin0Max100');
    this._registerDecorator('seriesStacked100', { column: 'xAxis', valueIndex: 1 });
};

exports.default = EChartsColumnStacked100ComplexOptionBuilder;

/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _echartsComplexOptionBuilder = __webpack_require__(385);

var _echartsComplexOptionBuilder2 = _interopRequireDefault(_echartsComplexOptionBuilder);

var _chartUtils = __webpack_require__(24);

var _chartUtils2 = _interopRequireDefault(_chartUtils);

var _echartsLine = __webpack_require__(62);

var _echartsLine2 = _interopRequireDefault(_echartsLine);

var _echartsArea = __webpack_require__(89);

var _echartsArea2 = _interopRequireDefault(_echartsArea);

var _echartsAreaStacked = __webpack_require__(95);

var _echartsAreaStacked2 = _interopRequireDefault(_echartsAreaStacked);

var _echartsAreaStacked3 = __webpack_require__(220);

var _echartsAreaStacked4 = _interopRequireDefault(_echartsAreaStacked3);

var _echartsColumn = __webpack_require__(65);

var _echartsColumn2 = _interopRequireDefault(_echartsColumn);

var _echartsScatter = __webpack_require__(99);

var _echartsScatter2 = _interopRequireDefault(_echartsScatter);

var _echartsColumnStacked = __webpack_require__(98);

var _echartsColumnStacked2 = _interopRequireDefault(_echartsColumnStacked);

var _echartsColumnStacked3 = __webpack_require__(233);

var _echartsColumnStacked4 = _interopRequireDefault(_echartsColumnStacked3);

var _echartsBubble = __webpack_require__(227);

var _echartsBubble2 = _interopRequireDefault(_echartsBubble);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: echarts-scatter.js
 * Created by daewon.park on 2017-03-23.
 */

var complexChart = {
    line: _echartsLine2.default, area: _echartsArea2.default, 'area-stacked': _echartsAreaStacked2.default, 'area-stacked-100': _echartsAreaStacked4.default,
    column: _echartsColumn2.default, 'column-stacked': _echartsColumnStacked2.default, 'column-stacked-100': _echartsColumnStacked4.default,
    scatter: _echartsScatter2.default, 'bubble': _echartsBubble2.default
};

/**
 * EChartsComplex
 * @param parentId
 * @param options
 * @constructor
 */
function EChartsComplex(parentId, options) {
    _echartsWrapper2.default.call(this, parentId, options);
}

EChartsComplex.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsComplex.prototype.constructor = EChartsComplex;

EChartsComplex.prototype.render = function () {
    var optionsList = this._getChartOptionList(this.options);

    this.seriesHelper = new _echartsComplexOptionBuilder2.default();
    var opt = this.seriesHelper.buildOptions(optionsList);
    opt.tooltip = this.options.tooltip;

    this._bindInternalOptions(this.seriesHelper);
    this._setEChartOption(opt);
};

EChartsComplex.prototype._getChartOptionList = function (options) {
    var optionsList = [];

    var isCategory = options.complex.some(function (chartOption) {
        return chartOption.chart.type === 'column' || chartOption.chart.type === 'column-stacked' || chartOption.chart.type === 'column-stacked-100' || chartOption.chart.type === 'area' || chartOption.chart.type === 'area-stacked' || chartOption.chart.type === 'area-stacked-100';
    });

    var complexOption, complexChartType, singleBOptions, singleECharts, eChartOptionBuilder, singleChartOpt;
    var seriesIdx = 0;
    for (var chartIdx = 0; chartIdx < options.complex.length; chartIdx++) {
        complexOption = options.complex[chartIdx];
        complexChartType = complexOption.chart.type;
        delete complexOption.source;
        singleBOptions = $.extend(true, {}, options, complexOption);
        _chartUtils2.default.assignArray(singleBOptions, complexOption);

        if (!complexChart[complexChartType]) {
            throw '[' + complexChartType + '] chart cannot use to complex chart.';
        }

        singleECharts = new complexChart[complexChartType](this.parentId, singleBOptions);
        singleECharts.parseComplex(true);
        // var eChartOptionBuilder = singleECharts.getSeriesHelper().setComplexKey(singleBOptions.yAxis[0].selected[0]);
        eChartOptionBuilder = singleECharts.getSeriesHelper().setComplexOption({
            column: singleBOptions.yAxis[0].selected[0],
            idx: seriesIdx
        });
        if (isCategory) {
            //column chart가 포함돼있으면 x축을 category로 변경해야함.
            eChartOptionBuilder = eChartOptionBuilder.parseCategory(true);
        }

        this._bindInternalOptions(eChartOptionBuilder);
        singleChartOpt = eChartOptionBuilder.buildOptions(singleBOptions);
        seriesIdx = seriesIdx + eChartOptionBuilder.seriesNameSet.length;
        optionsList.push(singleChartOpt);

        singleECharts.destroy();
        singleECharts.$mainControl.remove();
    }
    return optionsList;
};

EChartsComplex.prototype._bindInternalOptions = function (opt) {
    var _this = this;
    opt._internalOptions = function () {
        return _this._getEChartOption();
    };
};

EChartsComplex.prototype.getLegendData = function () {
    var legendData = {};

    if (this._getEChartOption().legend && this._getEChartOption().legend[0]) {
        var legendSelection = this._getEChartOption().legend[0].selected;
        var hasLegend = this.seriesHelper.hasLegendData();

        if (hasLegend) {
            //무조건 true
            var opt = this.seriesHelper._internalOptions();
            for (var i in opt.series) {
                if (opt.series[i].virtualSeries) {
                    // true 일 경우만 skip
                } else {
                    var item = {
                        name: opt.series[i].name,
                        symbol: opt.series[i].symbol || 'circle',
                        symbolSize: opt.series[i].symbolSize || 10,
                        color: opt.series[i].itemStyle.color || opt.color[parseFloat(i) % opt.color.length]
                    };
                    if (typeof legendSelection[item.name] === 'undefined') {
                        item.selected = true;
                    } else {
                        item.selected = legendSelection[item.name];
                    }
                    // legendData.push(item);
                    legendData[item.color] = item;
                }
            }
        }
    }
    return Object.values(legendData);
};

exports.default = EChartsComplex;

/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeOptionBuilder = __webpack_require__(19);

var _echartsAxisTypeOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsComplexOptionBuilder() {
    _echartsAxisTypeOptionBuilder2.default.call(this);
} /**
   * Created by sds on 2018-01-23.
   */


EChartsComplexOptionBuilder.prototype = Object.create(_echartsAxisTypeOptionBuilder2.default.prototype);
EChartsComplexOptionBuilder.prototype.constructor = EChartsComplexOptionBuilder;

EChartsComplexOptionBuilder.prototype._setUpOptions = function () {
    this._registerDecorator('xAxisFilterZoomMode');
};

EChartsComplexOptionBuilder.prototype.buildOptions = function (chartOptions) {
    this.eOptions = this._buildSeries(chartOptions);
    this._setUpOptions();
    this._decorate();
    return this.eOptions;
};

EChartsComplexOptionBuilder.prototype._buildSeries = function (chartOptionList) {
    var mergedOption;
    for (var idx = 0; idx < chartOptionList.length; idx++) {
        if (idx == 0) {
            mergedOption = $.extend(true, {}, chartOptionList[idx]);
            mergedOption.series = [];
            mergedOption.tooltip = {};
            mergedOption.yAxis = [];
        }

        var chartSeries = chartOptionList[idx].series; //.slice();
        for (var seriesIdx = 0; seriesIdx < chartSeries.length; seriesIdx++) {
            if (chartSeries[seriesIdx].virtualSeries) {
                //POLICY: complex chart는 stripline 제외.(임시)
                chartSeries[seriesIdx].yAxisIndex = idx;
                //continue;
            } else {
                chartSeries[seriesIdx].yAxisIndex = idx;
                chartSeries[seriesIdx].tooltip = chartOptionList[idx].tooltip;
            }
        }
        mergedOption.series = mergedOption.series.concat(chartSeries.filter(function (singleSeries) {
            return singleSeries;
        }));
        mergedOption.yAxis = mergedOption.yAxis.concat(chartOptionList[idx].yAxis);
    }
    return mergedOption;
};

EChartsComplexOptionBuilder.prototype.hasLegendData = function () {
    return true;
};

EChartsComplexOptionBuilder.prototype._decorate = function () {
    for (var k in this._decoratorList) {
        if (!this._decoratorList[k]) continue;
        this._decoratorList[k].decorate(this.eOptions);
    }
};

exports.default = EChartsComplexOptionBuilder;

/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _widget = __webpack_require__(31);

var _widget2 = _interopRequireDefault(_widget);

var _d3Wrap = __webpack_require__(387);

var _d3Wrap2 = _interopRequireDefault(_d3Wrap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: d3.wrapper.js
 * Created by daewon.park on 2017-03-23.
 */
function D3Wrapper(parentId, options) {
    _widget2.default.call(this, parentId, options);
}

D3Wrapper.prototype = Object.create(_widget2.default.prototype);
D3Wrapper.prototype.constructor = D3Wrapper;
D3Wrapper.prototype.destroy = function () {

    if (this.d3chart) {
        $(window).off('resize', this.resizeHandler);

        this.d3chart.clear();
        this.d3chart.dispose();
        this.d3chart.destroy();
        // d3chart.dispose(this.d3chart);
        // d3chart.dispose(this.$mainControl[0]);
        this.d3chart = null;
    }
};

D3Wrapper.prototype._extractSeriesSelection = function (batch, series, keyColumns) {
    var selected = [];
    if (keyColumns.length > 0) {
        for (var s in batch.selected) {
            var seriesIndex = batch.selected[s].seriesIndex;
            var selection = {};
            for (var k in keyColumns) {
                var seriesKey = keyColumns[k].name;
                var seriesValue = series[seriesIndex].keys[k];
                selection[seriesKey] = seriesValue;
            }
            selected.push(selection);
        }
    } else {
        selected.push({});
    }
    return selected;
};

D3Wrapper.prototype._convertToSelection = function (axis, columnName, range) {
    if (axis.type === 'value') {
        return {
            min: range[0],
            max: range[1]
        };
    } else {
        return {
            min: axis.data[range[0]],
            max: axis.data[range[1]]
        };
    }
};

D3Wrapper.prototype._createContents = function ($parent) {
    var _this = this;
    this.$mainControl = $('<div class="bcharts-chart" chart-vendor="d3"></div>');
    $parent.append(this.$mainControl);

    this.d3chart = new _d3Wrap2.default();
    this.d3chart.init(this.$mainControl, this.options);

    this._chartInit();

    this._bindMouseOut();

    this.resizeHandler = function () {
        _this.redrawLayout();
        // _this.render();
    };
    $(window).resize(this.resizeHandler);
};

D3Wrapper.prototype._chartInit = function ($parent) {};

D3Wrapper.prototype._bindMouseOut = function () {
    var _this = this;
    this.$mainControl.mouseout(function (event) {
        if (_this.d3chart && _this.d3chart.nodeTooltip && event.toElement !== _this.$mainControl[0] && $(event.toElement).closest('.bcharts-chart')[0] !== _this.$mainControl[0] && !$(event.toElement).hasClass('d3-node-tooltip')) {
            _this.d3chart.nodeTooltip.hide();
        }
    });
};

D3Wrapper.prototype.selectRange = function (args) {};

D3Wrapper.prototype.clear = function () {
    this.d3chart.clear();

    // TODO tooltip 을 위한 div 가 render 할 때 마다 생성됨, 강제로 삭제 by daewon.park since 2017-05-23
    this.$mainControl.children('div:nth-child(2)').remove();
};

D3Wrapper.prototype._bindInternalOptions = function (opt) {
    var _this = this;
    opt._internalOptions = function () {
        return _this.d3chart.getOption();
    };
};

D3Wrapper.prototype.setFinished = function (callback) {
    callback();
};

D3Wrapper.prototype.getDataURL = function (options) {
    // if (this.d3chart) {
    // return this.d3chart.getDataURL(options);
    // }
};

D3Wrapper.prototype.render = function () {};

D3Wrapper.prototype.redrawLayout = function () {
    var _this = this;

    clearTimeout(this._redrawLayoutJob);
    this._redrawLayoutJob = setTimeout(function () {
        if (_this.d3chart) {
            _this.d3chart.resize();
        }
    }, 300);
};

D3Wrapper.prototype.setBrushType = function (opt) {};

D3Wrapper.prototype.setZoomMode = function (zoom) {};

D3Wrapper.prototype.toggleLegend = function (name) {
    this.d3chart.dispatchAction({
        type: 'legendToggleSelect',
        name: name
    });
};

D3Wrapper.prototype.getLegendData = function () {
    var legendData = [];

    if (this.d3chart.getOption().legend && this.d3chart.getOption().legend[0]) {
        var legendSelection = this.d3chart.getOption().legend[0].selected;
        var keyColumns = this.seriesHelper.getSeriesKeyColumns(this.options);
        if (keyColumns.length > 0) {
            var opt = this.seriesHelper.d3Options;
            for (var i in opt.series) {
                if (opt.series[i].virtualSeries) {
                    // true 일 경우만 skip
                } else {
                    var item = {
                        name: opt.series[i].name,
                        symbol: opt.series[i].symbol || 'circle',
                        symbolSize: opt.series[i].symbolSize || 10,
                        color: opt.color[parseFloat(i) % opt.color.length]
                    };
                    if (typeof legendSelection[item.name] === 'undefined') {
                        item.selected = true;
                    } else {
                        item.selected = legendSelection[item.name];
                    }
                    legendData.push(item);
                }
            }
        }
    }

    return legendData;
};

exports.default = D3Wrapper;

/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/**
 * Created by jhoon80.park on 2017-09-17.
 */

function D3Wrap() {};

D3Wrap.prototype.init = function ($parent, options) {
    this.parent = $parent;
    this.options = options;
    this.d3 = d3;
    this.mainContainer = d3.select($parent.get(0));
    this.svg = this.mainContainer.append('svg');
    this.bchartInstance = this.parent.parent().attr('_bcharts_instance_');
    this.nodeTooltip = this.d3.tip().attr('class', 'd3-node-tooltip' + ' ' + this.bchartInstance).direction('se');
    this.linkTooltip = this.d3.tip().attr('class', 'd3-link-tooltip' + ' ' + this.bchartInstance).direction('se');
    // this.linkTooltip = this.d3.tip().attr('class', 'd3-link-tooltip' + ' ' + this.bchartInstance)
    // .offset(
    //     // [0, 0]
    //     function () {
    //         return [this.getBBox().height / 2, this.getBBox().width / 2]
    //     }
    // )
    //     .direction('se');
};

D3Wrap.prototype.destroy = function () {
    this.parent.remove();
    this.d3.select('.d3-node-tooltip' + '.' + this.bchartInstance).remove();
    this.d3.select('.d3-link-tooltip' + '.' + this.bchartInstance).remove();
};
D3Wrap.prototype.clear = function () {
    this.svg.selectAll('*').empty();
};
D3Wrap.prototype.setOption = function (option) {
    console.log("SETOPTION");
};
D3Wrap.prototype.getOptions = function () {
    return this.options;
};
D3Wrap.prototype.resize = function () {
    this.svg.attr('width', '100%').attr('height', '100%').attr("viewBox", "0 0 " + this.getMainContainer().clientWidth + " " + this.getMainContainer().clientHeight);
};
D3Wrap.prototype.dispatchAction = function () {};
D3Wrap.prototype.dispose = function () {};
D3Wrap.prototype.brushSelected = function () {};
D3Wrap.prototype.getMainContainer = function () {
    return this.mainContainer.node();
};
D3Wrap.prototype.selectRange = function () {};
D3Wrap.prototype.on = function (eventKey, callBack) {
    this.svg.on(eventKey, callBack);
};
D3Wrap.prototype.off = function (eventKey) {
    this.svg.on(eventKey, null);
};

exports.default = D3Wrap;

/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _chartOptionBuilder = __webpack_require__(63);

var _chartOptionBuilder2 = _interopRequireDefault(_chartOptionBuilder);

var _validationError = __webpack_require__(36);

var _validationError2 = _interopRequireDefault(_validationError);

var _d3PointExtractor = __webpack_require__(389);

var _d3PointExtractor2 = _interopRequireDefault(_d3PointExtractor);

var _d3AggregationExtractor = __webpack_require__(100);

var _d3AggregationExtractor2 = _interopRequireDefault(_d3AggregationExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function D3OptionBuilder() {
    _chartOptionBuilder2.default.call(this);
} /**
   * Created by sds on 2018-03-19.
   */
/**
 * BChart 의 옵션 포맷
 * var options = {
     *     chart: {
     *         type: 'scatter'
     *     },
     *     xAxis: [ {
     *         selected: [{name: 'SepalLength', aggregation: 'none'}]
     *     } ],
     *     yAxis: [ {
     *         selected: [{name: 'SepalWidth', aggregation: 'none'}]
     *     } ],
     *     colorBy: [ {
     *         selected: [{name: 'Species'}]
     *     } ],
     *     source: {
     *         dataType: 'local',
     *         localData: [ {
     *             dataType: 'rawData',
     *             columns: [],
     *             data: []
     *         } ]
     *     }
     * }
 * d3chart 의 옵션 포맷
 * var option = {
     *      legend: {},
     *      grid: {},
     *      xAxis: [],
     *      yAxis: [],
     *      series: [ {name: '', type: 'scatter', data: []} ]
     * }
 */

D3OptionBuilder.prototype = Object.create(_chartOptionBuilder2.default.prototype);
D3OptionBuilder.prototype.constructor = D3OptionBuilder;

D3OptionBuilder.prototype.buildOptions = function (options) {
    this.bOptions = options;
    this.d3Options = this._defaultOptions();
    this._buildSeries();
    this._buildTooltip();
    return this.d3Options;
};

D3OptionBuilder.prototype._defaultOptions = function () {
    var opt = {
        tooltip: {
            trigger: 'item',
            showDelay: 0
        },
        toolbox: {
            show: false,
            feature: {
                dataZoom: {
                    title: {
                        zoom: 'Area Zooming',
                        back: 'Restore Area Zooming'
                    }
                },
                restore: {
                    show: false
                },
                magicType: {
                    show: false
                },
                brush: {
                    show: false
                }
            }
        },
        legend: {},
        xAxis: [{
            type: 'value',
            scale: true,
            splitLine: { show: false },
            axisLine: { onZero: true }
        }],
        yAxis: [{
            type: 'value',
            scale: true,
            splitLine: { show: false },
            axisLine: { onZero: true }
        }],
        brush: {
            xAxisIndex: 0,
            yAxisIndex: 0
        }
    };

    opt.visualMap = this.bOptions.visualMap;
    opt.color = this.bOptions.colorSet;
    opt.grid = this.bOptions.grid;
    $.extend(true, opt.tooltip, this.bOptions.tooltip);
    $.extend(true, opt.xAxis, this.bOptions.xAxis);
    $.extend(true, opt.yAxis, this.bOptions.yAxis);
    $.extend(true, opt.toolbox, this.bOptions.toolbox);
    return opt;
};

D3OptionBuilder.prototype._newSeriesExtractor = function () {
    var dataColumns = this.getSeriesDataColumns();
    var aggregation = dataColumns[1].aggregation;

    var columnIndexes = this.getSeriesDataColumnIndexes();

    if (aggregation === 'none') {
        return new _d3PointExtractor2.default(columnIndexes);
    } else {
        return new _d3AggregationExtractor2.default(columnIndexes);
    }
};

D3OptionBuilder.prototype._buildSeriesData = function () {
    var aggregation = this.getSeriesDataColumns()[1].aggregation;
    for (var s in this.d3Options.series) {
        this.d3Options.series[s].data = this.d3Options.series[s].extractor.extract(aggregation);
    }
};

D3OptionBuilder.prototype._buildMarkLine = function () {
    var _this = this;
    for (var s in _this.d3Options.series) {
        var markLine = _this.d3Options.series[s].markLine;
        if (markLine && markLine.data) {
            markLine.data = markLine.data.map(function (item) {
                if (item.type === 'trend-line') {
                    var xData = [];
                    var yData = [];
                    for (var r in _this.d3Options.series[s].data) {
                        xData.push(_this.d3Options.series[s].data[r].value[0]);
                        yData.push(_this.d3Options.series[s].data[r].value[1]);
                    }
                    var squares = _optionUtils2.default.leastSquares(xData, yData);
                    return [{
                        name: item.name,
                        coord: [squares[0], squares[1]]
                    }, {
                        coord: [squares[2], squares[3]]
                    }];
                } else {
                    return item;
                }
            });
        }
    }
};

D3OptionBuilder.prototype._buildSeries = function () {
    var series = {};
    var localData = this.getLocalData();
    var keyIndexes = this.getSeriesKeyColumnIndexes();

    var i, row, seriesName, seriesItem;

    for (i in localData.data) {
        row = localData.data[i];
        seriesName = this.getSeriesName(row, keyIndexes);
        seriesItem = this.getSeriesItem(series, seriesName);
        series[seriesName] = seriesItem;
        if (!seriesItem.extractor) {
            seriesItem.extractor = this._newSeriesExtractor();
            seriesItem.extractor.keys = this.getCellText(row, keyIndexes);
            seriesItem.keys = seriesItem.extractor.keys;
        }
        seriesItem.extractor.push(row, i);
    }

    this._setSeries(series);
    this._buildSeriesData();
    this._buildMarkLine();
};

D3OptionBuilder.prototype._setSeries = function (series) {
    this.d3Options.series = function () {
        var answer = [];
        for (var s in series) {
            answer.push(series[s]);
        }
        answer.sort(function (a, b) {
            if (a.name == b.name) return 0;else if (a.name > b.name) return 1;else return -1;
        });
        return answer;
    }();

    if (this.d3Options.series.length > 30) {
        throw new _validationError2.default('The number of series exceeded 30 pieces. Please change your settings.');
    }
};

D3OptionBuilder.prototype._buildTooltip = function () {
    if (this.d3Options.tooltip.trigger == 'item') {
        this._buildItemTooltip();
    } else if (this.d3Options.tooltip.trigger == 'axis') {
        this._buildAxisTooltip();
    }
};

D3OptionBuilder.prototype._getItemXTooltip = function (params, dataColumns) {
    if (this._internalOptions().xAxis[0].type === 'value') {
        if (this._internalOptions().xAxis[0].data) {
            return _optionUtils2.default.getColumnLabel(dataColumns[0]) + ' : ' + this._internalOptions().xAxis[0].data[params.value[0] - 1];
        } else {
            return _optionUtils2.default.getColumnLabel(dataColumns[0]) + ' : ' + params.value[0];
        }
    } else {
        return _optionUtils2.default.getColumnLabel(dataColumns[0]) + ' : ' + params.name;
    }
};

D3OptionBuilder.prototype._getItemYTooltip = function (params, dataColumns) {
    if (this._internalOptions().xAxis[0].type === 'value') {
        return _optionUtils2.default.getColumnLabel(dataColumns[1]) + ' : ' + params.value[1];
    } else {
        return _optionUtils2.default.getColumnLabel(dataColumns[1]) + ' : ' + params.value;
    }
};

D3OptionBuilder.prototype._buildItemTooltip = function () {
    var _this = this;
    var keyColumns = _this.getSeriesKeyColumns();
    var keyColumnIndexes = _this.getSeriesKeyColumnIndexes();
    var dataColumns = _this.getSeriesDataColumns();
    var dataColumnIndexes = _this.getSeriesDataColumnIndexes();
    _this.d3Options.tooltip.formatter = function (params, ticket, callback) {
        // var toolItems = [];
        //
        // if (params.seriesName) {
        //     var extractor = _this._internalOptions().series[params.seriesIndex].extractor;
        //     for (var k = 0; k < keyColumnIndexes.length; k++) {
        //         toolItems.push(keyColumns[k].name + ' : ' + extractor.keys[k]);
        //     }
        // }
        // if (params.componentType === 'markLine' || params.componentType === 'markPoint') {
        //     toolItems.push(params.name + ' : ' + params.value);
        // } else {
        //     toolItems.push(_this._getItemXTooltip(params, dataColumns));
        //     toolItems.push(_this._getItemYTooltip(params, dataColumns));
        // }
        //
        // return function () {
        //     var result = [];
        //     for (var t in toolItems) {
        //         if (result.indexOf(toolItems[t]) === -1) {
        //             result.push(toolItems[t]);
        //         }
        //     }
        //     return result;
        // }().join('<br>');
    };
};

D3OptionBuilder.prototype._getAxisYTooltip = function (param, dataColumns) {
    return _optionUtils2.default.getColumnLabel(dataColumns[1]) + ' : ' + param.value;
};

D3OptionBuilder.prototype._buildAxisTooltip = function () {
    var _this = this;
    var keyColumns = this.getSeriesKeyColumns();
    var keyColumnIndexes = this.getSeriesKeyColumnIndexes();
    var dataColumns = this.getSeriesDataColumns();
    this.d3Options.tooltip.formatter = function (params, ticket, callback) {
        var toolItems = [];
        if (Array.isArray(params)) {
            for (var p in params) {
                if (_this._internalOptions().series[params[p].seriesIndex].virtualSeries) continue;

                // X 컬럼
                if (_this._internalOptions().xAxis[0].type === 'value') {
                    if (typeof params[p].value === 'undefined') continue;
                    toolItems.push(_optionUtils2.default.getColumnLabel(dataColumns[0]) + ' : ' + params[p].value[0]);
                } else {
                    toolItems.push(_optionUtils2.default.getColumnLabel(dataColumns[0]) + ' : ' + params[p].name);
                }

                // Series
                var division = function division(text) {
                    return '<div title="' + text + '">' + text + '</div>';
                };
                if (params[p].seriesName) {
                    division = function division(text) {
                        return '<div title="' + text + '" style="color: ' + params[p].color + ';">' + text + '</div>';
                    };

                    if (_this._internalOptions().series[params[p].seriesIndex]) {
                        var extractor = _this._internalOptions().series[params[p].seriesIndex].extractor;
                        if (extractor) {
                            for (var k = 0; k < keyColumnIndexes.length; k++) {
                                toolItems.push(division(keyColumns[k].name + ' : ' + extractor.keys[k]));
                            }
                        }
                    } else {
                        toolItems.push(division(params[p].seriesName));
                    }
                }

                // Y 컬럼
                toolItems.push(division(_this._getAxisYTooltip(params[p], dataColumns)));
            }
        } else {
            if (params.componentType === 'markLine' || params.componentType === 'markPoint') {
                toolItems.push(params.name + ' : ' + params.value);
            }
        }

        return function () {
            var result = [];
            for (var t in toolItems) {
                if (result.indexOf(toolItems[t]) === -1) {
                    result.push(toolItems[t]);
                }
            }
            return result;
        }().join('');
    };
};

D3OptionBuilder.prototype._applySeriesOptions = function (seriesItem, plotOptions, attributes) {
    var tmp = {};
    for (var i in attributes) {
        var attr = attributes[i];
        if (typeof plotOptions[attr] !== 'undefined') {
            tmp[attr] = plotOptions[attr];
        }
    }
    $.extend(true, seriesItem, tmp);
};

exports.default = D3OptionBuilder;

/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _d3SeriesExtractor = __webpack_require__(239);

var _d3SeriesExtractor2 = _interopRequireDefault(_d3SeriesExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PointDataExtractor(columnIndexes) {
    _d3SeriesExtractor2.default.call(this, columnIndexes);
} /**
   * Created by sds on 2018-03-19.
   */
/**
 * X, Y 축의 값이 value 인 형태의 Series Data 를 생성
 * @param columnIndexes
 * @constructor
 */


PointDataExtractor.prototype = Object.create(_d3SeriesExtractor2.default.prototype);
PointDataExtractor.prototype.constructor = PointDataExtractor;

PointDataExtractor.prototype.push = function (row, rowIndex) {
    var pointData = {
        value: [],
        dataIndexes: [parseInt(rowIndex)] // point 에 해당하는 원본 데이터 인덱스
    };
    for (var d in this.columnIndexes) {
        pointData.value.push(row[this.columnIndexes[d]]);
    }
    this.points.push(pointData);
};

exports.default = PointDataExtractor;

/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _echartsDendrogramOptionBuilder = __webpack_require__(391);

var _echartsDendrogramOptionBuilder2 = _interopRequireDefault(_echartsDendrogramOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * EChartsDendrogram
 * @param parentId
 * @param options
 * @constructor
 */
function EChartsDendrogram(parentId, options) {
    _echartsWrapper2.default.call(this, parentId, options);
}

EChartsDendrogram.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsDendrogram.prototype.constructor = EChartsDendrogram;

EChartsDendrogram.prototype.render = function () {
    this.seriesHelper = new _echartsDendrogramOptionBuilder2.default();
    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._setEChartOption(opt);
};

exports.default = EChartsDendrogram;

/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeOptionBuilder = __webpack_require__(19);

var _echartsAxisTypeOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeOptionBuilder);

var _echartsDendrogramExtractor = __webpack_require__(392);

var _echartsDendrogramExtractor2 = _interopRequireDefault(_echartsDendrogramExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsDendrogramOptionBuilder() {
    _echartsAxisTypeOptionBuilder2.default.call(this);
}

EChartsDendrogramOptionBuilder.prototype = Object.create(_echartsAxisTypeOptionBuilder2.default.prototype);
EChartsDendrogramOptionBuilder.prototype.constructor = EChartsDendrogramOptionBuilder;

EChartsDendrogramOptionBuilder.prototype._setUpOptions = function () {
    this._registerDecorator('axisTypeForDendrogram');
    this._registerDecorator('tooltipTriggerAxis');
    this._registerDecorator('tooltipAxisPointerY');
    this._registerDecorator('tooltipDendrogram');
    this._registerDecorator('brushRemoval');
};

EChartsDendrogramOptionBuilder.prototype._buildSeriesData = function () {
    for (var s in this.series) {
        this.series[s].data = this.series[s].extractor.extract(this.series[s].parentNodeId);
    }
};

EChartsDendrogramOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData(0);
    var clusterNameIndex = this.getColumnIndexes(this.bOptions.plotOptions.dendrogram.clusterGroupColumn[0].selected, localData.columns);
    var clusterColumnIndexes = this.getColumnIndexes(this.bOptions.plotOptions.dendrogram.clusterColumn[0].selected, localData.columns);
    var heightIndex = this.getColumnIndexes(this.bOptions.plotOptions.dendrogram.heightColumn[0].selected, localData.columns);

    var extractor = new _echartsDendrogramExtractor2.default();

    extractor.setTarget({
        index: clusterNameIndex,
        type: 'category',
        isKey: true
    });

    extractor.setTarget({
        index: clusterColumnIndexes,
        type: 'category',
        isKey: false
    });

    extractor.setTarget({
        index: heightIndex,
        type: 'value',
        isKey: false
    });

    return extractor;
};

EChartsDendrogramOptionBuilder.prototype._buildSeries = function () {
    var series = {};
    var localData = this.getLocalData(0);
    var keyIndexes = this.getColumnIndexes(this.bOptions.plotOptions.dendrogram.clusterGroupColumn[0].selected, localData.columns);

    var i, row, seriesName, seriesItem;

    var extractor = this._newSeriesExtractor();

    for (i in localData.data) {
        row = localData.data[i];
        seriesName = this.getSeriesName(row, keyIndexes);
        seriesItem = this._getSeriesItem(series, seriesName);
        series[seriesName] = seriesItem;
        series[seriesName].parentNodeId = seriesName;
        if (!series[seriesName].extractor) series[seriesName].extractor = extractor;
        seriesItem.extractor.push(row, i);
    }

    this.parentNodeMap = extractor.parentNodeMap;
    this.childNodeMap = extractor.childNodeMap;

    var rootNode = this._getRootNode();
    this.categoryList = this._createCategoryList(rootNode, []);
    var categoryIndexMap = {};
    $.map(this.categoryList, function (val, i) {
        categoryIndexMap[val] = i;
    });
    extractor.setCategoryIndexMap(categoryIndexMap);

    this._setSeries(series);
    this._buildSeriesData();
    this.eOptions.series = this.series;
};

EChartsDendrogramOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = {
        type: 'line',
        data: [],
        showSymbol: false
    };

    return seriesItem;
};

EChartsDendrogramOptionBuilder.prototype._getRootNode = function () {
    var rootNode, nodeId;
    var countOfRootNode = 0;
    for (nodeId in this.parentNodeMap) {
        if (!this.childNodeMap[nodeId]) {
            rootNode = nodeId;
            countOfRootNode++;
        }
    }

    if (countOfRootNode > 1) {
        this._throwValidation('This Data has more than 2 Root Cluster Group.');
    }

    if (typeof rootNode === 'undefined') {
        this._throwValidation('This data has no Root Cluster Group.');
    }

    return rootNode;
};

EChartsDendrogramOptionBuilder.prototype._createCategoryList = function (key, categoryList) {
    var parentNodeMap = this.parentNodeMap;
    var childNodeId;

    for (var i in parentNodeMap[key]) {
        childNodeId = parentNodeMap[key][i];
        if (parentNodeMap[childNodeId]) {
            categoryList = this._createCategoryList(childNodeId, categoryList);
        } else {
            categoryList.push(childNodeId);
        }
    }
    return categoryList;
};

exports.default = EChartsDendrogramOptionBuilder;

/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function DendrogramExtractor() {
    _echartsPointExtractor2.default.call(this);
    this._keyPointMap = {};
    this.parentNodeMap = {};
    this.childNodeMap = {};
    this.heightMap = {};
    this.pointMap = {};
}

DendrogramExtractor.prototype = Object.create(_echartsPointExtractor2.default.prototype);
DendrogramExtractor.prototype.constructor = DendrogramExtractor;

DendrogramExtractor.prototype.push = function (row, rowIndex) {
    var pointer = this._getKeyPointer(row, rowIndex);
    this.parentNodeMap[pointer.value] = [];
    var index = Number(rowIndex);
    var value;
    var indexes;

    for (var i = 0; i < this._columnIndices.length; i++) {
        indexes = this._columnIndices[i];
        for (var j = 0; j < indexes.length; j++) {
            value = this._getPointValue(row, indexes[j], index);

            if (i > 0 && i < this._columnIndices.length - 1) {
                this.parentNodeMap[pointer.value].push(value);
                this.childNodeMap[value] = pointer.value;
            }
        }
        if (i == this._columnIndices.length - 1) {
            this.heightMap[pointer.value] = row[indexes[0]];
        }
    }
};

DendrogramExtractor.prototype.extract = function (nodeId) {
    var answer = [];
    var pointObject = this._getPointObject(nodeId);
    answer.push([pointObject.x1, pointObject.y1]);
    answer.push([pointObject.x1, pointObject.height]);
    answer.push([pointObject.x2, pointObject.height]);
    answer.push([pointObject.x2, pointObject.y2]);

    return answer;
};

DendrogramExtractor.prototype._getPointObject = function (nodeId) {
    var childPointObj, pointObj;

    var parentNodeMap = this.parentNodeMap;
    var pointMap = this.pointMap;
    var heightMap = this.heightMap;
    var categoryIndexMap = this.categoryIndexMap;

    for (var i in parentNodeMap[nodeId]) {
        var childNodeId = parentNodeMap[nodeId][i];
        if (parentNodeMap[childNodeId]) {
            // isCluster

            if (!pointMap[childNodeId]) {
                // child pointMap does not exist
                pointMap[childNodeId] = this._getPointObject(childNodeId);
            }
            childPointObj = pointMap[childNodeId];
            pointObj = pointMap[nodeId] = pointMap[nodeId] || {};
            if (i == 0) {
                pointObj.x1 = (childPointObj.x1 + childPointObj.x2) / 2;
                pointObj.y1 = childPointObj.height;
                pointObj.height = heightMap[nodeId];
            } else {
                pointObj.x2 = (childPointObj.x1 + childPointObj.x2) / 2;
                pointObj.y2 = childPointObj.height;
                pointObj.height = heightMap[nodeId];
            }
        } else if (!parentNodeMap[childNodeId]) {
            // isColumn
            pointObj = pointMap[nodeId] = pointMap[nodeId] || {};
            if (i == 0) {
                pointObj.x1 = categoryIndexMap[childNodeId];
                pointObj.y1 = 0;
                pointObj.height = heightMap[nodeId];
            } else {
                pointObj.x2 = categoryIndexMap[childNodeId];
                pointObj.y2 = 0;
                pointObj.height = heightMap[nodeId];
            }
        }
    }
    return pointObj;
};

DendrogramExtractor.prototype.setCategoryIndexMap = function (categoryIndexMap) {
    this.categoryIndexMap = categoryIndexMap;
};

exports.default = DendrogramExtractor;

/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _echartsHeatmapOptionBuilder = __webpack_require__(394);

var _echartsHeatmapOptionBuilder2 = _interopRequireDefault(_echartsHeatmapOptionBuilder);

var _echartsHeatmapCalculatedOptionBuilder = __webpack_require__(395);

var _echartsHeatmapCalculatedOptionBuilder2 = _interopRequireDefault(_echartsHeatmapCalculatedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * EChartsHeatmap
 * @param parentId
 * @param options
 * @constructor
 */
function EChartsHeatmap(parentId, options) {
    _echartsWrapper2.default.call(this, parentId, options);
} /**
   * Source: echarts-heatmap.js
   * Created by daewon.park on 2017-04-16.
   */

EChartsHeatmap.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsHeatmap.prototype.constructor = EChartsHeatmap;

EChartsHeatmap.prototype.render = function () {
    if (this.options.source.localData[0].dataType == 'chartdata') {
        this.seriesHelper = new _echartsHeatmapCalculatedOptionBuilder2.default();
    } else {
        this.seriesHelper = new _echartsHeatmapOptionBuilder2.default();
    }
    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._setEChartOption(opt);
};

exports.default = EChartsHeatmap;

/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeOptionBuilder = __webpack_require__(19);

var _echartsAxisTypeOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeOptionBuilder);

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

var _echartsPointWithCategorykeyExtractor = __webpack_require__(25);

var _echartsPointWithCategorykeyExtractor2 = _interopRequireDefault(_echartsPointWithCategorykeyExtractor);

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsHeatmapOptionBuilder() {
    _echartsAxisTypeOptionBuilder2.default.call(this);
}

EChartsHeatmapOptionBuilder.prototype = Object.create(_echartsAxisTypeOptionBuilder2.default.prototype);
EChartsHeatmapOptionBuilder.prototype.constructor = EChartsHeatmapOptionBuilder;

EChartsHeatmapOptionBuilder.prototype._setUpOptions = function () {
    this._registerDecorator('brushRemoval');
    this._registerDecorator('tooltipHeatmap');
    this._registerDecorator('axisType', {
        setAxisByColumn: false
    });
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('visualMap');
    this.setSeriesKeyColumns([]);
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setSeriesDataColumns(this.plotOptions.valueBy[0].selected);
};

EChartsHeatmapOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData(0);
    var dataColumns = this.getSeriesDataColumns(0);
    var aggregation = dataColumns[2].aggregation;
    var xIndexes = this.getColumnIndexes(this.bOptions.xAxis[0].selected, localData.columns);
    var yIndexes = this.getColumnIndexes(this.bOptions.yAxis[0].selected, localData.columns);
    var valueByIndexes = this.getColumnIndexes(this.plotOptions.valueBy[0].selected, localData.columns);

    var extractor = new _echartsPointWithCategorykeyExtractor2.default();
    extractor._min = null;
    extractor._max = null;

    extractor.setTarget({
        index: xIndexes,
        type: 'category',
        isKey: true
    });

    extractor.setTarget({
        index: yIndexes,
        type: 'category',
        isKey: true
    });
    extractor.setTarget({
        index: valueByIndexes,
        type: 'value',
        isKey: false
    });

    extractor.setExtractOperator(function (pointObject) {
        var operator = new _aggregationOperator2.default(pointObject.value);
        for (var i = 0; i < pointObject.indexList.length; i++) {
            operator.add(pointObject.indexList[i], pointObject.point[i][2]);
        }

        var val = operator.calc(aggregation);

        extractor._min = extractor._min == null ? val : Math.min(extractor._min, val);
        extractor._max = extractor._max == null ? val : Math.max(extractor._max, val);

        return [{ value: pointObject.value.concat(val) }];
    });
    return extractor;
};

EChartsHeatmapOptionBuilder.prototype._buildSeries = function () {
    _echartsAxisTypeOptionBuilder2.default.prototype._buildSeries.call(this);
    for (var s in this.eOptions.series) {
        this.eOptions.visualMap.min = Math.floor(this.eOptions.series[s].extractor._min);
        this.eOptions.visualMap.max = Math.ceil(this.eOptions.series[s].extractor._max);
    }
};

EChartsHeatmapOptionBuilder.prototype._defaultOptions = function () {
    var opt = _echartsAxisTypeOptionBuilder2.default.prototype._defaultOptions.call(this);
    opt.xAxis[0].type = 'category';
    opt.xAxis[0].data = [];
    opt.yAxis[0].type = 'category';
    opt.yAxis[0].data = [];
    opt.dataZoom = this.bOptions.dataZoom;
    opt.visualMap = {};
    return opt;
};

EChartsHeatmapOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsOptionBuilder2.default.prototype._newSeriesItem.call(this);

    var heatmapOptions = this.bOptions.plotOptions.heatmap;
    var attributes = [];
    this._applySeriesOptions(seriesItem, heatmapOptions, attributes);

    return seriesItem;
};

exports.default = EChartsHeatmapOptionBuilder;

/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeCalculatedOptionBuilder = __webpack_require__(32);

var _echartsAxisTypeCalculatedOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeCalculatedOptionBuilder);

var _echartsPointWithCategorykeyExtractor = __webpack_require__(25);

var _echartsPointWithCategorykeyExtractor2 = _interopRequireDefault(_echartsPointWithCategorykeyExtractor);

var _echartsAxisTypeOptionBuilder = __webpack_require__(19);

var _echartsAxisTypeOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeOptionBuilder);

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

var _echartsHeatmapMatrixCalculatedOptionBuilder = __webpack_require__(241);

var _echartsHeatmapMatrixCalculatedOptionBuilder2 = _interopRequireDefault(_echartsHeatmapMatrixCalculatedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsHeatmapCalculatedOptionBuilder() {
    _echartsAxisTypeCalculatedOptionBuilder2.default.call(this);
}

EChartsHeatmapCalculatedOptionBuilder.prototype = Object.create(_echartsAxisTypeCalculatedOptionBuilder2.default.prototype);
EChartsHeatmapCalculatedOptionBuilder.prototype.constructor = EChartsHeatmapCalculatedOptionBuilder;

EChartsHeatmapCalculatedOptionBuilder.prototype._setUpOptions = function () {
    this._registerDecorator('brushRemoval');
    this._registerDecorator('tooltipHeatmap');
    this._registerDecorator('axisType', { setAxisByColumn: false });
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('visualMap');
    this.setSeriesKeyColumns([]);
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setSeriesDataColumns(this.plotOptions.valueBy[0].selected);
};

EChartsHeatmapCalculatedOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData(0);
    var xIndexes = this.getColumnIndexes([{ name: 'xAxis' }], localData.chartColumns);
    var yIndexes = this.getColumnIndexes([{ name: 'yAxis' }], localData.chartColumns);
    var valueByIndexes = this.getColumnIndexes([{ name: 'valueBy' }], localData.chartColumns);

    var extractor = new _echartsPointWithCategorykeyExtractor2.default();
    extractor._min = null;
    extractor._max = null;

    extractor.setTarget({
        index: xIndexes,
        type: 'category',
        isKey: true
    });

    extractor.setTarget({
        index: yIndexes,
        type: 'category',
        isKey: true
    });
    extractor.setTarget({
        index: valueByIndexes,
        type: 'value',
        isKey: false
    });

    extractor.setExtractOperator(function (pointObject) {
        var val = pointObject.point[0][2];

        extractor._min = extractor._min == null ? val : Math.min(extractor._min, val);
        extractor._max = extractor._max == null ? val : Math.max(extractor._max, val);

        return [{ value: pointObject.value.concat(val) }];
    });
    return extractor;
};

EChartsHeatmapCalculatedOptionBuilder.prototype._buildSeries = function () {
    _echartsAxisTypeOptionBuilder2.default.prototype._buildSeries.call(this);
    for (var s in this.eOptions.series) {
        this.eOptions.visualMap.min = Math.floor(this.eOptions.series[s].extractor._min);
        this.eOptions.visualMap.max = Math.ceil(this.eOptions.series[s].extractor._max);
    }
};

EChartsHeatmapCalculatedOptionBuilder.prototype._defaultOptions = function () {
    var opt = _echartsAxisTypeOptionBuilder2.default.prototype._defaultOptions.call(this);
    opt.xAxis[0].type = 'category';
    opt.xAxis[0].data = [];
    opt.yAxis[0].type = 'category';
    opt.yAxis[0].data = [];
    opt.dataZoom = this.bOptions.dataZoom;
    opt.visualMap = {};
    return opt;
};

EChartsHeatmapCalculatedOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsOptionBuilder2.default.prototype._newSeriesItem.call(this);

    var heatmapOptions = this.bOptions.plotOptions.heatmap;
    var attributes = [];
    this._applySeriesOptions(seriesItem, heatmapOptions, attributes);

    return seriesItem;
};

EChartsHeatmapCalculatedOptionBuilder.prototype.getSeriesKeyColumns = function () {
    return [];
};

exports.default = EChartsHeatmapCalculatedOptionBuilder;

/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function HeatmapMatrixCalculatedDataExtractor(columnIndexes, yAxisIndex, dataLength) {
    _echartsPointExtractor2.default.call(this);
    this.columnIndexes = columnIndexes;
    this.yAxisIndex = yAxisIndex;
    this._dataLength = dataLength;
    this._data = [];
    this._xCategories = [];
    this._yCategories = [];
    this._yCategoriesIndex = {};
    this.operators = {};
    this.min = null;
    this.max = null;
}

HeatmapMatrixCalculatedDataExtractor.prototype = Object.create(_echartsPointExtractor2.default.prototype);
HeatmapMatrixCalculatedDataExtractor.prototype.constructor = HeatmapMatrixCalculatedDataExtractor;

HeatmapMatrixCalculatedDataExtractor.prototype.push = function (row, rowIndex) {
    rowIndex = Number(rowIndex);

    this._data.push([row[0], row[1], row[2]]);
    this.min = this.min == null ? row[2] : Math.min(this.min, row[2]);
    this.max = this.max == null ? row[2] : Math.max(this.max, row[2]);

    if (!this._yCategoriesIndex[row[1]]) {
        this._yCategoriesIndex[row[1]] = true;
        this._yCategories.push(row[3]);
    }
};

HeatmapMatrixCalculatedDataExtractor.prototype.yCategories = function () {
    return this._yCategories;
};

HeatmapMatrixCalculatedDataExtractor.prototype.extract = function () {
    return this._data;
};

exports.default = HeatmapMatrixCalculatedDataExtractor;

/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _echartsHeatmapMatrixOptionBuilder = __webpack_require__(398);

var _echartsHeatmapMatrixOptionBuilder2 = _interopRequireDefault(_echartsHeatmapMatrixOptionBuilder);

var _echartsHeatmapMatrixCalculatedOptionBuilder = __webpack_require__(241);

var _echartsHeatmapMatrixCalculatedOptionBuilder2 = _interopRequireDefault(_echartsHeatmapMatrixCalculatedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * EChartsHeatmapMatrix
 * @param parentId
 * @param options
 * @constructor
 */
function EChartsHeatmapMatrix(parentId, options) {
    _echartsWrapper2.default.call(this, parentId, options);
}

EChartsHeatmapMatrix.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsHeatmapMatrix.prototype.constructor = EChartsHeatmapMatrix;

EChartsHeatmapMatrix.prototype.render = function () {
    if (this.options.source.localData[0].dataType == 'chartdata') {
        this.seriesHelper = new _echartsHeatmapMatrixCalculatedOptionBuilder2.default();
    } else {
        this.seriesHelper = new _echartsHeatmapMatrixOptionBuilder2.default();
    }
    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._setEChartOption(opt);
};

exports.default = EChartsHeatmapMatrix;

/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeOptionBuilder = __webpack_require__(19);

var _echartsAxisTypeOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeOptionBuilder);

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

var _echartsHeatmapMatrixExtoractor = __webpack_require__(399);

var _echartsHeatmapMatrixExtoractor2 = _interopRequireDefault(_echartsHeatmapMatrixExtoractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsHeatmapMatrixOptionBuilder() {
    _echartsAxisTypeOptionBuilder2.default.call(this);
}

EChartsHeatmapMatrixOptionBuilder.prototype = Object.create(_echartsAxisTypeOptionBuilder2.default.prototype);
EChartsHeatmapMatrixOptionBuilder.prototype.constructor = EChartsHeatmapMatrixOptionBuilder;

EChartsHeatmapMatrixOptionBuilder.prototype._setUpOptions = function () {
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('brushRemoval');
    this._registerDecorator('tooltipHeatmapMatrix');
    this._registerDecorator('visualMap');
    this.setSeriesKeyColumns([]);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
};

EChartsHeatmapMatrixOptionBuilder.prototype._defaultOptions = function () {
    var opt = _echartsOptionBuilder2.default.prototype._defaultOptions.call(this);
    opt.xAxis[0].type = 'category';
    opt.xAxis[0].data = [];
    opt.yAxis[0].type = 'category';
    opt.yAxis[0].data = [];
    opt.dataZoom = this.bOptions.dataZoom;
    opt.visualMap = {};
    return opt;
};

EChartsHeatmapMatrixOptionBuilder.prototype.getSeriesDataColumns = function () {
    return this.bOptions.xAxis[0].selected;
};

EChartsHeatmapMatrixOptionBuilder.prototype._newSeriesExtractor = function (dataLength) {
    var allColumns = this.getAllColumns();
    var yAxisIndex = this.getColumnIndexes(this.bOptions.yAxis[0].selected, allColumns);
    var columnIndexes = this.getSeriesDataColumnIndexes();
    return new _echartsHeatmapMatrixExtoractor2.default(columnIndexes, yAxisIndex, dataLength);
};

EChartsHeatmapMatrixOptionBuilder.prototype._getCategories = function (axis) {
    var categories = [];
    for (var i in axis) {
        if (axis[i] && axis[i].name) {
            categories.push(axis[i].name);
        }
    }
    return categories;
};

EChartsHeatmapMatrixOptionBuilder.prototype._buildSeriesData = function () {
    for (var s in this.series) {
        this.series[s].type = 'heatmap';
        this.series[s].data = this.series[s].extractor.extract();
        this.eOptions.xAxis[0].data = this._getCategories(this.bOptions.xAxis[0].selected);
        this.eOptions.yAxis[0].data = this.series[s].extractor.yCategories();
        this.eOptions.visualMap.min = Math.floor(this.series[s].extractor.min);
        this.eOptions.visualMap.max = Math.ceil(this.series[s].extractor.max);
    }
};

EChartsHeatmapMatrixOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsOptionBuilder2.default.prototype._newSeriesItem.call(this);

    var heatmapOptions = this.bOptions.plotOptions.heatmap;
    var attributes = [];
    this._applySeriesOptions(seriesItem, heatmapOptions, attributes);

    return seriesItem;
};

EChartsHeatmapMatrixOptionBuilder.prototype._buildTooltip = function () {
    var _this = this;
    var xAxisCategories = this._getCategories(this.bOptions.xAxis[0].selected);
    var yAxisCategories = this.eOptions.series[0].extractor.yCategories();
    _this.eOptions.tooltip.formatter = function (params, ticket, callback) {
        if (params.seriesType === 'heatmap') {
            return ['X-Axis : ' + xAxisCategories[params.data[0]], 'Y-Axis : ' + yAxisCategories[params.data[1]], 'Value: ' + params.data[2]].join('<br/>');
        }
    };
};

EChartsHeatmapMatrixOptionBuilder.prototype._buildSeries = function () {
    var series = {};
    var localData = this.getLocalData();
    var keyIndexes = this.getSeriesKeyColumnIndexes();

    var i, row, seriesName, seriesItem;
    for (i = localData.data.length - 1; i >= 0; i--) {
        row = localData.data[i];
        seriesName = this.getSeriesName(row, keyIndexes);
        seriesItem = this._getSeriesItem(series, seriesName);
        series[seriesName] = seriesItem;
        if (!seriesItem.extractor) {
            seriesItem.extractor = this._newSeriesExtractor(localData.data.length);
            seriesItem.extractor.keys = this.getCellText(row, keyIndexes);
            seriesItem.keys = seriesItem.extractor.keys;
        }
        seriesItem.extractor.push(row, i);
    }

    this._setSeries(series);
    this._buildSeriesData();
    this.eOptions.series = this.series;
};

exports.default = EChartsHeatmapMatrixOptionBuilder;

/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function HeatmapMatrixDataExtractor(columnIndexes, yAxisIndex, dataLength) {
    _echartsPointExtractor2.default.call(this);
    this.columnIndexes = columnIndexes;
    this.yAxisIndex = yAxisIndex;
    this._dataLength = dataLength;
    this._data = [];
    this._xCategories = [];
    this._yCategories = [];
    this.operators = {};
    this.min = null;
    this.max = null;
}

HeatmapMatrixDataExtractor.prototype = Object.create(_echartsPointExtractor2.default.prototype);
HeatmapMatrixDataExtractor.prototype.constructor = HeatmapMatrixDataExtractor;

HeatmapMatrixDataExtractor.prototype.push = function (row, rowIndex) {
    rowIndex = Number(rowIndex);
    var xIndex = 0;
    for (var i = 0; i < this.columnIndexes.length; i++) {
        if (this.columnIndexes[i] < 0) continue;
        var currentVal = row[this.columnIndexes[i]];
        if (typeof currentVal === 'number') {
            this._data.push([xIndex, this._dataLength - rowIndex - 1, currentVal]);
            xIndex++;
            this.min = this.min == null ? currentVal : Math.min(this.min, currentVal);
            this.max = this.max == null ? currentVal : Math.max(this.max, currentVal);
        } else {
            this._data.push([xIndex, rowIndex, NaN]);
        }
    }

    if (this.yAxisIndex && this.yAxisIndex.length > 0 && this.yAxisIndex[0] !== -1) {
        this._yCategories.push(row[this.yAxisIndex]);
    } else {
        this._yCategories.push(rowIndex + 1);
    }
};

HeatmapMatrixDataExtractor.prototype.yCategories = function () {
    return this._yCategories;
};

HeatmapMatrixDataExtractor.prototype.extract = function () {
    return this._data;
};

exports.default = HeatmapMatrixDataExtractor;

/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsColumn = __webpack_require__(65);

var _echartsColumn2 = _interopRequireDefault(_echartsColumn);

var _echartsHistogramOptionBuilder = __webpack_require__(242);

var _echartsHistogramOptionBuilder2 = _interopRequireDefault(_echartsHistogramOptionBuilder);

var _echartsHistogramCalculatedOptionBuilder = __webpack_require__(401);

var _echartsHistogramCalculatedOptionBuilder2 = _interopRequireDefault(_echartsHistogramCalculatedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsHistogram(parentId, options) {
    _echartsColumn2.default.call(this, parentId, options);
} /**
   * Source: echarts-histogram.js
   * Created by daewon.park on 2017-07-26.
   */


EChartsHistogram.prototype = Object.create(_echartsColumn2.default.prototype);
EChartsHistogram.prototype.constructor = EChartsHistogram;

EChartsHistogram.prototype.render = function () {
    if (this.options.source.localData[0].dataType == 'chartdata') {
        this.seriesHelper = new _echartsHistogramCalculatedOptionBuilder2.default();
    } else {
        this.seriesHelper = new _echartsHistogramOptionBuilder2.default();
    }
    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._setEChartOption(opt);
    this._backupItemStyles();
};

exports.default = EChartsHistogram;

/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsHistogramOptionBuilder = __webpack_require__(242);

var _echartsHistogramOptionBuilder2 = _interopRequireDefault(_echartsHistogramOptionBuilder);

var _echartsHistogramExtractor = __webpack_require__(243);

var _echartsHistogramExtractor2 = _interopRequireDefault(_echartsHistogramExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsHistogramCalculatedOptionBuilder() {
    _echartsHistogramOptionBuilder2.default.call(this);
}

EChartsHistogramCalculatedOptionBuilder.prototype = Object.create(_echartsHistogramOptionBuilder2.default.prototype);
EChartsHistogramCalculatedOptionBuilder.prototype.constructor = EChartsHistogramCalculatedOptionBuilder;

EChartsHistogramCalculatedOptionBuilder.prototype._newSeriesExtractor = function () {
    var extractor = new _echartsHistogramExtractor2.default();

    var localData = this.getLocalData();
    var bins = [];
    for (var d in localData.data) {
        var data = localData.data[d];
        var bin = {
            x0: data[0],
            x1: data[1]
        };
        bins.push(bin);
    }
    extractor.setBins(bins);

    return extractor;
};

EChartsHistogramCalculatedOptionBuilder.prototype._buildSeriesData = function () {
    var data = this.getLocalData().data;
    this.series[0].data = data;
};

exports.default = EChartsHistogramCalculatedOptionBuilder;

/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _echartsNetworkOptionBuilder = __webpack_require__(403);

var _echartsNetworkOptionBuilder2 = _interopRequireDefault(_echartsNetworkOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsNetwork(parentId, options) {
    _echartsWrapper2.default.call(this, parentId, options);
} /**
   * Source: echarts-network.js
   * Created by daewon.park on 2017-03-30.
   */

EChartsNetwork.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsNetwork.prototype.constructor = EChartsNetwork;

EChartsNetwork.prototype._init = function () {
    _echartsWrapper2.default.prototype._init.call(this);
    this.seriesHelper = new _echartsNetworkOptionBuilder2.default();
};

EChartsNetwork.prototype._getSizeByLabel = function () {
    var sizeByLabel = 'Count';
    var dataColumns = this.seriesHelper.getNodeSizeByColumn();
    if (dataColumns.length > 0) {
        sizeByLabel = _optionUtils2.default.getColumnLabel(dataColumns[0]);
    }
    return sizeByLabel;
};

EChartsNetwork.prototype.render = function () {
    var opt = this.seriesHelper.buildOptions(this.options);

    this.setChartStyle();

    var sizeByLabel = this._getSizeByLabel();
    opt.tooltip.formatter = function (params, ticket, callback) {
        var toolItems = [];
        toolItems.push(params.name);
        if (typeof params.value !== 'undefined') {
            toolItems.push(''.concat(sizeByLabel, ' : ', params.value));
        }
        return toolItems.join('<br>');
    };
    this._bindInternalOptions(this.seriesHelper);
    this._setEChartOption(opt);
};

EChartsNetwork.prototype.setChartStyle = function () {
    var networkOpt = this.options.plotOptions.network;
    if (networkOpt.style) {
        this.seriesHelper.setChartStyle(networkOpt);
    }
};

EChartsNetwork.prototype.getLegendData = function () {
    var legendData = [];
    return legendData;
};

exports.default = EChartsNetwork;

/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

var _echartsNetworkExtractor = __webpack_require__(404);

var _echartsNetworkExtractor2 = _interopRequireDefault(_echartsNetworkExtractor);

var _validationError = __webpack_require__(36);

var _validationError2 = _interopRequireDefault(_validationError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsNetworkOptionBuilder() {
    _echartsOptionBuilder2.default.call(this);
}

EChartsNetworkOptionBuilder.prototype = Object.create(_echartsOptionBuilder2.default.prototype);
EChartsNetworkOptionBuilder.prototype.constructor = EChartsNetworkOptionBuilder;

EChartsNetworkOptionBuilder.prototype._setUpOptions = function () {
    this._registerDecorator('brushRemoval');
    this.setSeriesKeyColumns([]);
    this.setSeriesDataColumns([]);
};

EChartsNetworkOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.bOptions.source.localData[0];

    var colorByColumns = this.getColorByColumns();
    var colorByIndexes = this.getColumnIndexes(colorByColumns, localData.columns);

    var nodeSizeByColumn = this.getNodeSizeByColumn();
    var nodeSizeByIndex = this.getColumnIndexes(nodeSizeByColumn, localData.columns);

    var fromColumn = this.getFromColumn();
    var fromColumnIndex = this.getColumnIndexes(fromColumn, localData.columns);

    var toColumn = this.getToColumn();
    var toColumnIndex = this.getColumnIndexes(toColumn, localData.columns);

    return new _echartsNetworkExtractor2.default(fromColumnIndex, toColumnIndex, nodeSizeByIndex, colorByIndexes);
};

EChartsNetworkOptionBuilder.prototype._buildSeries = function () {
    var series = {};
    var localData = this.getLocalData(0);
    var keyIndexes = this.getSeriesKeyColumnIndexes(0);

    var i, row, seriesName, seriesItem;
    for (i in localData.data) {
        row = localData.data[i];
        seriesName = this.getSeriesName(row, keyIndexes);
        seriesItem = this._getSeriesItem(series, seriesName);
        series[seriesName] = seriesItem;
        if (!seriesItem.extractor) {
            seriesItem.extractor = this._newSeriesExtractor();
        }
        seriesItem.extractor.push(row, i);
    }

    var nodeSum = Object.keys(series[''].extractor._nodes).length * 1 + Object.keys(series[''].extractor._targetNodes).length * 1;
    if (nodeSum > 1000) {
        throw new _validationError2.default('The number of nodes is limited to 1000.');
    }
    this._setSeries(series);
    this._buildSeriesData();
    this.eOptions.series = this.series;
};

EChartsNetworkOptionBuilder.prototype._defaultOptions = function () {
    var opt = _echartsOptionBuilder2.default.prototype._defaultOptions.call(this);
    delete opt.xAxis;
    delete opt.yAxis;
    delete opt.brush;
    return opt;
};

EChartsNetworkOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = {
        type: 'graph',
        large: true,
        largeThreshold: 5000,
        label: this.bOptions.plotOptions.network.label,
        data: [],
        force: {
            repulsion: 100
        },
        layout: 'force',
        roam: true,
        edgeSymbol: this.bOptions.plotOptions.network.style.edge.symbol,
        edgeSymbolSize: this.bOptions.plotOptions.network.style.edge.size
    };
    var networkOptions = this.bOptions.plotOptions.network;
    var attributes = ['label'];
    this._applySeriesOptions(seriesItem, networkOptions, attributes);

    return seriesItem;
};

EChartsNetworkOptionBuilder.prototype.getNodeSizeByColumn = function () {
    return this.bOptions.plotOptions.network.nodeSizeBy[0].selected;
};

EChartsNetworkOptionBuilder.prototype.getFromColumn = function () {
    return this.bOptions.plotOptions.network.fromColumn[0].selected;
};

EChartsNetworkOptionBuilder.prototype.getToColumn = function () {
    return this.bOptions.plotOptions.network.toColumn[0].selected;
};

EChartsNetworkOptionBuilder.prototype.setChartStyle = function (networkOption) {
    var styleOption = networkOption.style;
    //TODO: there is no input for min, max
    var maxNodeSize = styleOption.node.size.max || 30;
    var minNodeSize = styleOption.node.size.min || 10;
    var data, links;
    var dataValueList = [];
    for (var s in this.series) {
        this.series[s].data.map(function (dataObj) {
            if (dataObj.value) {
                dataValueList.push(dataObj.value);
            }
        });
    }
    var maxValue = Math.max.apply(null, dataValueList);
    var minValue = Math.min.apply(null, dataValueList);

    var x = (maxNodeSize - minNodeSize) / (maxValue - minValue);
    var y = minNodeSize - x * minValue;

    for (var s in this.series) {
        data = this.series[s].data;
        for (var dataIdx = 0; dataIdx < data.length; dataIdx++) {
            data[dataIdx].itemStyle = {
                normal: {
                    color: styleOption.node.color
                }
            };
            if (typeof data[dataIdx].value === 'undefined') {
                data[dataIdx].symbolSize = styleOption.node.size + 10;
            } else {
                data[dataIdx].symbolSize = data[dataIdx].value * x + y;
            }
        }
        0;
        links = this.series[s].links;
        for (var linkIdx = 0; linkIdx < links.length; linkIdx++) {
            links[linkIdx].lineStyle = {
                normal: styleOption.link
            };
        }
    }
};

EChartsNetworkOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.bOptions.source.localData[0];

    var colorByColumns = this.getColorByColumns();
    var colorByIndexes = this.getColumnIndexes(colorByColumns, localData.columns);

    var nodeSizeByColumn = this.getNodeSizeByColumn();
    var nodeSizeByIndex = this.getColumnIndexes(nodeSizeByColumn, localData.columns);

    var fromColumn = this.getFromColumn();
    var fromColumnIndex = this.getColumnIndexes(fromColumn, localData.columns);

    var toColumn = this.getToColumn();
    var toColumnIndex = this.getColumnIndexes(toColumn, localData.columns);

    return new _echartsNetworkExtractor2.default(fromColumnIndex, toColumnIndex, nodeSizeByIndex, colorByIndexes);
};

EChartsNetworkOptionBuilder.prototype._buildSeriesData = function () {
    var sizeByColumns = this.getNodeSizeByColumn();
    var aggregation;
    if (sizeByColumns.length > 0 && sizeByColumns[0]) {
        aggregation = sizeByColumns[0].aggregation;
    }
    for (var s in this.series) {

        this.series[s].categories = this.series[s].extractor.categoryExtract(aggregation);
        this.series[s].data = this.series[s].extractor.nodeExtract(aggregation);
        this.series[s].links = this.series[s].extractor.linkExtract(aggregation);
    }
};

exports.default = EChartsNetworkOptionBuilder;

/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsExtractor = __webpack_require__(45);

var _echartsExtractor2 = _interopRequireDefault(_echartsExtractor);

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function NetworkDataExtractor(fromColumnIndex, toColumnIndex, nodeSizeByIndex, colorByIndex) {
    _echartsExtractor2.default.call(this, []);
    this.fromColumnIndex = fromColumnIndex;
    this.toColumnIndex = toColumnIndex;
    this.nodeSizeByIndex = nodeSizeByIndex;
    this.colorByIndex = colorByIndex;
    this._nodeOperators = {};
    this._targetNodeOperators = {};
    this._linkOperators = {};
    this._nodes = {};
    this._targetNodes = {};
    this._links = {};
    this._categoryMap = {};
}

NetworkDataExtractor.prototype = Object.create(_echartsExtractor2.default.prototype);
NetworkDataExtractor.prototype.constructor = NetworkDataExtractor;

NetworkDataExtractor.prototype._pushNodes = function (row, rowIndex) {
    this._nodes[row[this.fromColumnIndex]] = this._nodes[row[this.fromColumnIndex]] || {};
    var node = this._nodes[row[this.fromColumnIndex]];
    node.name = node.name || row[this.fromColumnIndex];

    var nodeOperator = this._nodeOperators[node.name];
    if (!nodeOperator) {
        nodeOperator = new _aggregationOperator2.default(node.name);
        this._nodeOperators[node.name] = nodeOperator;
    }

    if (this.nodeSizeByIndex.length === 0) {
        nodeOperator.add(rowIndex, 1);
    } else {
        var value = row[this.nodeSizeByIndex[0]];
        nodeOperator.add(rowIndex, value);
    }
};

NetworkDataExtractor.prototype._pushTargetNodes = function (row, rowIndex) {
    this._targetNodes[row[this.toColumnIndex]] = this._targetNodes[row[this.toColumnIndex]] || {};
    var targetNode = this._targetNodes[row[this.toColumnIndex]];
    targetNode.name = targetNode.name || row[this.toColumnIndex];

    var targetNodeOperator = this._targetNodeOperators[targetNode.name];
    if (!targetNodeOperator) {
        targetNodeOperator = new _aggregationOperator2.default(targetNode.name);
        this._targetNodeOperators[targetNode.name] = targetNodeOperator;
    }

    targetNodeOperator.add(rowIndex, 1);
    targetNodeOperator.fromNode = row[this.fromColumnIndex];
};

NetworkDataExtractor.prototype._pushLinks = function (row, rowIndex) {
    var linkName = row[this.fromColumnIndex] + ' > ' + row[this.toColumnIndex];
    this._links[linkName] = this._links[linkName] || {};
    var link = this._links[linkName];
    link.name = link.name || linkName;

    var linkOperator = this._linkOperators[link.name];
    if (!linkOperator) {
        linkOperator = new _aggregationOperator2.default(link.name);
        this._linkOperators[link.name] = linkOperator;
    }
    linkOperator.source = row[this.fromColumnIndex] + '';
    linkOperator.target = row[this.toColumnIndex] + '';
};

NetworkDataExtractor.prototype._createCategoryMap = function (row, rowIndex) {
    var nodeName = row[this.fromColumnIndex];
    this._categoryMap[nodeName] = this._categoryMap[nodeName] || {};
    var categoryMap = this._categoryMap[nodeName];
    categoryMap[row[this.colorByIndex]] = categoryMap[row[this.colorByIndex]] || 1;
};

NetworkDataExtractor.prototype.push = function (row, rowIndex) {

    this._pushNodes(row, rowIndex);
    this._pushTargetNodes(row, rowIndex);
    this._pushLinks(row, rowIndex);
    this._createCategoryMap(row, rowIndex);
};

NetworkDataExtractor.prototype.nodeExtract = function (operator) {
    var answer = [];
    for (var name in this._nodeOperators) {
        var pointData = {
            id: name,
            name: name,
            draggable: true,
            dataIndexes: this._nodeOperators[name].dataIndexes
            // category: this._categoryMap[name].index
        };

        if (operator) {
            pointData.value = this._nodeOperators[name].calc(operator);
        }

        answer.push(pointData);
    }
    for (var targetName in this._targetNodeOperators) {
        if (!this._nodeOperators[targetName]) {
            var targetPointData = {
                id: targetName,
                name: targetName,
                draggable: true,
                dataIndexes: this._targetNodeOperators[targetName].dataIndexes
                // category: this._categoryList[this._categoryList.length]
            };
            answer.push(targetPointData);
        }
    }
    return answer;
};

NetworkDataExtractor.prototype.linkExtract = function (operator) {
    var answer = [];
    for (var name in this._linkOperators) {
        var pointData = {
            id: name,
            name: name,
            source: this._linkOperators[name].source,
            target: this._linkOperators[name].target,
            dataIndexes: this._linkOperators[name].dataIndexes // point 에 해당하는 원본 데이터 인덱스
        };
        answer.push(pointData);
    }
    return answer;
};

NetworkDataExtractor.prototype.categoryExtract = function () {

    this._categoryList = [];
    if (this.colorByIndex.length === 0) {
        this._categoryMap = {};
        return [];
    } else {
        for (var key in this._categoryMap) {
            var categoryKeyList = Object.keys(this._categoryMap[key]);
            if (categoryKeyList.length > 1) {
                delete this._categoryMap[key];
            }
        }
        this._categoryList = Object.keys(this._categoryMap).sort();

        for (var key in this._categoryMap) {
            this._categoryMap[key].index = this._categoryList.indexOf(key);
        }
        this._categoryList.push('ETC');

        return this._categoryList;
    }
};

exports.default = NetworkDataExtractor;

/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _echartsPairwiseScatterOptionBuilder = __webpack_require__(406);

var _echartsPairwiseScatterOptionBuilder2 = _interopRequireDefault(_echartsPairwiseScatterOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * EChartsPairwiseScatter
 * @param parentId
 * @param options
 * @constructor
 */
/**
 * Source: echarts-scatter.js
 * Created by daewon.park on 2017-03-23.
 */

function EChartsPairwiseScatter(parentId, options) {
    _echartsWrapper2.default.call(this, parentId, options);
}

EChartsPairwiseScatter.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsPairwiseScatter.prototype.constructor = EChartsPairwiseScatter;

EChartsPairwiseScatter.prototype.render = function () {

    this.seriesHelper = this.getSeriesHelper();

    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._setEChartOption(opt);
};

EChartsPairwiseScatter.prototype.getSeriesHelper = function () {
    return new _echartsPairwiseScatterOptionBuilder2.default();
};

EChartsPairwiseScatter.prototype.getLegendData = function () {
    var legendData = [],
        legendMap = {};

    if (this._getEChartOption().legend && this._getEChartOption().legend[0]) {
        var legendSelection = this._getEChartOption().legend[0].selected;
        var hasLegend = this.seriesHelper.hasLegendData();

        if (hasLegend) {
            var opt = this.seriesHelper._internalOptions();
            for (var i in opt.series) {
                if (opt.series[i].virtualSeries) {
                    // true 일 경우만 skip
                } else {
                    var item = {
                        name: opt.series[i].name,
                        symbol: opt.series[i].symbol || 'circle',
                        symbolSize: opt.series[i].symbolSize || 10
                        // color: opt.color[parseFloat(i) % opt.color.length]
                    };
                    if (typeof legendSelection[item.name] === 'undefined') {
                        item.selected = true;
                    } else {
                        item.selected = legendSelection[item.name];
                    }

                    if (typeof legendMap[item.name] === 'undefined') {
                        legendMap[item.name] = true;
                        item.color = opt.color[legendData.length % opt.color.length];
                        legendData.push(item);
                    }
                }
            }
        }
    }
    return legendData;
};

exports.default = EChartsPairwiseScatter;

/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _super = _echartsOptionBuilder2.default.prototype;

function EChartsPairwiseScatterOptionBuilder() {
    _super.constructor.call(this);
}

EChartsPairwiseScatterOptionBuilder.prototype = Object.create(_super);
EChartsPairwiseScatterOptionBuilder.prototype.constructor = EChartsPairwiseScatterOptionBuilder;

EChartsPairwiseScatterOptionBuilder.prototype._defaultOptions = function () {
    var opt = _super._defaultOptions.call(this);
    $.extend(true, opt, {
        dataZoom: [{
            type: 'inside',
            filterMode: 'filter',
            xAxisIndex: [0],
            disabled: true
        }]
    });
    return opt;
};

EChartsPairwiseScatterOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['markPoint', 'markLine'];
    this._registerDecorator('pairwiseGrid');
    this._registerDecorator('pairwiseAxis');
    this._registerDecorator('tooltipPairwiseScatter');
    this._registerDecorator('marker');
    this._registerDecorator('plotOptions');
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesKeyColumns(this.bOptions.colorBy[0].selected);
};

EChartsPairwiseScatterOptionBuilder.prototype._buildSeries = function () {
    var series = {};
    var grid = {};
    var localData = this.getLocalData();
    var colorByIndexes = this.getSeriesKeyColumnIndexes();
    var axisIndexes = _optionUtils2.default.getColumnIndexes(this.getSeriesDataColumns(), localData.columns);

    var i, row, seriesName, seriesItem, firstAxisIndex, secondAxisIndex, xAxisIndex, yAxisIndex, gridId;
    var axisIndex = 0;
    for (i in localData.data) {
        row = localData.data[i];

        for (firstAxisIndex = 0; firstAxisIndex < axisIndexes.length; firstAxisIndex++) {
            xAxisIndex = axisIndexes[firstAxisIndex];
            for (secondAxisIndex = 0; secondAxisIndex < axisIndexes.length; secondAxisIndex++) {
                yAxisIndex = axisIndexes[secondAxisIndex];
                seriesName = this.getSeriesName(row, colorByIndexes);
                gridId = firstAxisIndex + 'X' + secondAxisIndex;
                seriesItem = this._getSeriesItem(series, seriesName, gridId);
                grid[gridId] = typeof grid[gridId] === 'undefined' ? Object.keys(grid).length : grid[gridId];
                series[seriesName + gridId] = seriesItem;
                if (!seriesItem.extractor) {
                    seriesItem.extractor = this._newSeriesExtractor(xAxisIndex, yAxisIndex);
                    seriesItem.extractor.keys = this.getCellText(row, colorByIndexes);
                    seriesItem.keys = seriesItem.extractor.keys;

                    seriesItem.xAxisIndex = grid[gridId];
                    seriesItem.yAxisIndex = grid[gridId];

                    seriesItem.xAxisColumnIndex = firstAxisIndex;
                    seriesItem.yAxisColumnIndex = secondAxisIndex;

                    axisIndex++;
                }
                seriesItem.extractor.push(row, i);
            }
        }
    }

    this._setSeries(series);
    this._buildSeriesData();
    this.eOptions.series = this.series;
};

EChartsPairwiseScatterOptionBuilder.prototype._getSeriesItem = function (series, name, gridId) {
    var seriesItem = series[name + gridId];
    if (!seriesItem) {
        seriesItem = this._newSeriesItem();
        seriesItem.name = name || 'default';
    }
    return seriesItem;
};

EChartsPairwiseScatterOptionBuilder.prototype._newSeriesExtractor = function (xAxisIndex, yAxisIndex) {
    var extractor = new _echartsPointExtractor2.default();
    extractor.setTarget({
        index: [xAxisIndex],
        type: 'value',
        isKey: false
    });
    extractor.setTarget({
        index: [yAxisIndex],
        type: 'value',
        isKey: false
    });
    return extractor;
};

EChartsPairwiseScatterOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = {
        type: 'scatter',
        animationDuration: this.bOptions.chart.animationDuration,
        large: true,
        largeThreshold: 200,
        data: []
    };
    return seriesItem;
};

exports.default = EChartsPairwiseScatterOptionBuilder;

/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _chartUtils = __webpack_require__(24);

var _chartUtils2 = _interopRequireDefault(_chartUtils);

var _echartsPieOptionBuilder = __webpack_require__(408);

var _echartsPieOptionBuilder2 = _interopRequireDefault(_echartsPieOptionBuilder);

var _echartsPieCalculatedOptionBuilder = __webpack_require__(409);

var _echartsPieCalculatedOptionBuilder2 = _interopRequireDefault(_echartsPieCalculatedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: echarts-pie.js
 * Created by daewon.park on 2017-03-30.
 */

function EChartsPie(parentId, options) {
    _echartsWrapper2.default.call(this, parentId, options);
}

EChartsPie.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsPie.prototype.constructor = EChartsPie;

EChartsPie.prototype.objectWithKeySorted = function (object) {
    var sortable = [];
    var newObj = [];
    for (var key in object) {
        if (object.hasOwnProperty(key)) sortable.push([key, object[key]]);
    }sortable.sort(function (a, b) {
        var x = a[1].name,
            y = b[1].name;
        if (Number(x)) x = Number(x);
        if (Number(y)) y = Number(y);
        return x < y ? -1 : x > y ? 1 : 0;
    });

    for (var i in sortable) {
        newObj.push(sortable[i][1]);
    }
    return newObj;
};

EChartsPie.prototype.render = function () {
    if (this.options.source.localData[0].dataType === 'chartdata') {
        this.seriesHelper = new _echartsPieCalculatedOptionBuilder2.default();
    } else {
        this.seriesHelper = new _echartsPieOptionBuilder2.default();
    }
    var opt = this.seriesHelper.buildOptions(this.options);
    // opt.series[0].data = this.objectWithKeySorted(opt.series[0].data);
    this._bindInternalOptions(this.seriesHelper);
    this._doDataValidation(opt);
    this._setEChartOption(opt);
    this._backupItemStyles();
};

EChartsPie.prototype._doDataValidation = function (opt) {
    _chartUtils2.default.limitMaxSeriesSize(opt.series);
};

EChartsPie.prototype.getLegendData = function () {
    var legendData = [];

    var legendSelection = this._getEChartOption().legend[0].selected;
    var keyColumns = this.seriesHelper.getColorByColumns();
    if (keyColumns.length > 0) {
        var opt = this.seriesHelper.eOptions;
        if (opt.series.length > 0) {
            for (var i in opt.series[0].data) {
                var item = {
                    name: opt.series[0].data[i].name,
                    symbol: 'square',
                    color: opt.color[parseFloat(i) % opt.color.length]
                };
                if (typeof legendSelection[item.name] === 'undefined') {
                    item.selected = true;
                } else {
                    item.selected = legendSelection[item.name];
                }
                legendData.push(item);
            }
        }
    }

    return legendData;
};

exports.default = EChartsPie;

/***/ }),
/* 408 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsPieOptionBuilder() {
    _echartsOptionBuilder2.default.call(this);
}

EChartsPieOptionBuilder.prototype = Object.create(_echartsOptionBuilder2.default.prototype);
EChartsPieOptionBuilder.prototype.constructor = EChartsPieOptionBuilder;

EChartsPieOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['radius', 'itemStyle', 'label', 'silent', 'center'];
    this._registerDecorator('tooltipPie');
    this._registerDecorator('plotOptions');
    this._registerDecorator('axisRemoval');
    this._registerDecorator('brushRemoval');
    this._registerDecorator('sortLegendValue');
    this._registerDecorator('pieLabelDecorator');
    this.setSeriesKeyColumns([]);
    this._setLegendValueRule();
    this.setSeriesDataColumns(this.bOptions.colorBy[0].selected);
    this.setSeriesDataColumns(this.bOptions.plotOptions.pie.sizeBy[0].selected);
    this.setTooltipDataColumns(this.bOptions.colorBy[0].selected);
    this.setTooltipDataColumns(this.bOptions.plotOptions.pie.sizeBy[0].selected);
};

EChartsPieOptionBuilder.prototype._setLegendValueRule = function () {
    this._axisSortRule = this.bOptions.plotOptions.pie.axisSort;
};

EChartsPieOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData(0);
    var dataColumns = this.getSeriesDataColumns(0);
    var aggregation = 'count';
    if (dataColumns[dataColumns.length - 1] !== null && dataColumns[dataColumns.length - 1].aggregation && dataColumns[dataColumns.length - 1].aggregation !== 'none') aggregation = dataColumns[dataColumns.length - 1].aggregation;
    var colorByIndexes = this.getColumnIndexes(this.bOptions.colorBy[0].selected, localData.columns);
    var sizeByIndexes = this.getColumnIndexes(this.bOptions.plotOptions.pie.sizeBy[0].selected, localData.columns);

    var extractor = new _echartsPointExtractor2.default();

    extractor.setTarget({
        index: colorByIndexes,
        type: 'category',
        isKey: true
    });

    extractor.setTarget({
        index: sizeByIndexes,
        type: 'value',
        isKey: false
    });

    var _this = this;
    extractor.setExtractOperator(function (pointObject) {
        var operator = new _aggregationOperator2.default(pointObject.value);
        for (var i = 0; i < pointObject.indexList.length; i++) {
            operator.add(pointObject.indexList[i], pointObject.point[i] ? pointObject.point[i][pointObject.point[i].length - 1] : 1);
        }
        var seriesName = pointObject.value.join(' ');
        var name = void 0;
        if (_this.bOptions.legend.legendMap && _this.bOptions.legend.legendMap[0]) {
            name = _this.bOptions.legend.legendMap[0][seriesName] ? _this.bOptions.legend.legendMap[0][seriesName] : seriesName;
        } else {
            name = seriesName;
        }
        return [{
            keys: pointObject.value,
            name: name,
            value: Math.abs(operator.calc(aggregation)),
            dataIndexes: pointObject.indexList,
            minusValue: operator.calc(aggregation) < 0 ? true : false
        }];
    });

    return extractor;
};

exports.default = EChartsPieOptionBuilder;

/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsPieCalculatedOptionBuilder() {
    _echartsOptionBuilder2.default.call(this);
}

EChartsPieCalculatedOptionBuilder.prototype = Object.create(_echartsOptionBuilder2.default.prototype);
EChartsPieCalculatedOptionBuilder.prototype.constructor = EChartsPieCalculatedOptionBuilder;

EChartsPieCalculatedOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['radius', 'itemStyle', 'label', 'silent', 'center'];
    this._registerDecorator('tooltipPieCalculated');
    this._registerDecorator('plotOptions');
    this._registerDecorator('axisRemoval');
    this._registerDecorator('brushRemoval');
    this._registerDecorator('sortLegendValue');
    this._registerDecorator('pieLabelDecorator');
    this.setSeriesKeyColumns([]);
    this._setLegendValueRule();
    this.setSeriesDataColumns(this.bOptions.colorBy[0].selected);
    this.setSeriesDataColumns(this.bOptions.plotOptions.pie.sizeBy[0].selected);
    this.setTooltipDataColumns(this.bOptions.colorBy[0].selected);
    this.setTooltipDataColumns(this.bOptions.plotOptions.pie.sizeBy[0].selected);
};

EChartsPieCalculatedOptionBuilder.prototype._setLegendValueRule = function () {
    this._axisSortRule = this.bOptions.plotOptions.pie.axisSort;
};

EChartsPieCalculatedOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData(0);
    var colorByIndexes = this.getColumnIndexes([{ name: 'colorBy' }], localData.chartColumns);
    var sizeByIndexes = this.getColumnIndexes([{ name: 'sizeBy' }], localData.chartColumns);

    var extractor = new _echartsPointExtractor2.default();

    extractor.setTarget({
        index: colorByIndexes,
        type: 'category',
        isKey: true
    });

    extractor.setTarget({
        index: sizeByIndexes,
        type: 'value',
        isKey: false
    });

    var _this = this;
    extractor.setExtractOperator(function (pointObject) {
        var pointValue = pointObject.value;
        var names = [];
        for (var i in pointValue) {
            if ($.isArray(pointValue[i])) {
                for (var v in pointValue[i]) {
                    names.push(pointValue[i][v]);
                }
            } else {
                names.push(pointValue[i]);
            }
        }
        var seriesName = names.join(' ');
        var name = void 0;
        if (_this.bOptions.legend.legendMap && _this.bOptions.legend.legendMap[0]) {
            name = _this.bOptions.legend.legendMap[0][seriesName] ? _this.bOptions.legend.legendMap[0][seriesName] : seriesName;
        } else {
            name = seriesName;
        }

        return [{
            keys: pointObject.value,
            name: name,
            value: Math.abs(pointObject.point[0][1]),
            dataIndexes: pointObject.indexList,
            minusValue: pointObject.point[0][1] < 0 ? true : false
        }];
    });

    return extractor;
};

exports.default = EChartsPieCalculatedOptionBuilder;

/***/ }),
/* 410 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _echartsQqplotOptionBuilder = __webpack_require__(411);

var _echartsQqplotOptionBuilder2 = _interopRequireDefault(_echartsQqplotOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * EChartsQQPlot
 * @param parentId
 * @param options
 * @constructor
 */
/**
 * Source: echarts-qqplot.js
 * Created by ji_sung.park on 2018-02-06.
 */

function EChartsQQPlot(parentId, options) {
    _echartsWrapper2.default.call(this, parentId, options);
}

EChartsQQPlot.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsQQPlot.prototype.constructor = EChartsQQPlot;

EChartsQQPlot.prototype.render = function () {

    this.seriesHelper = new _echartsQqplotOptionBuilder2.default();

    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._setEChartOption(opt);
    this._backupItemStyles();
};

// Alias['qqplot'] = EChartsQQPlot;

exports.default = EChartsQQPlot;

/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _qqplotOperator = __webpack_require__(412);

var _qqplotOperator2 = _interopRequireDefault(_qqplotOperator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsQQPlotOptionBuilder() {
    _echartsOptionBuilder2.default.call(this);
}

EChartsQQPlotOptionBuilder.prototype = Object.create(_echartsOptionBuilder2.default.prototype);
EChartsQQPlotOptionBuilder.prototype.constructor = EChartsQQPlotOptionBuilder;

EChartsQQPlotOptionBuilder.prototype._setUpOptions = function () {
    this._registerDecorator('axisTypeValue');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('markerByType', { 'scatter': 'qqplot' });
    this._registerDecorator('tooltipQQPlot');
    this.setSeriesKeyColumns([]);
    this.setSeriesDataColumns(this.bOptions.plotOptions.qqplot.values[0].selected);
};

EChartsQQPlotOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.type = 'scatter';

    return seriesItem;
};

EChartsQQPlotOptionBuilder.prototype._newSeriesExtractor = function () {
    var valueIndexes = this.getSeriesDataColumnIndexes(0);
    var distribution = this.bOptions.plotOptions.qqplot.distribution[0].selected;

    var extractor = new _echartsPointExtractor2.default();

    extractor.setTarget({
        index: -1,
        type: 'value',
        isKey: true
    });

    extractor.setTarget({
        index: valueIndexes,
        type: 'value',
        isKey: false
    });

    extractor.setExtractOperator(function (pointObject) {
        var operator = new _qqplotOperator2.default(pointObject.value);
        for (var i = 0; i < pointObject.indexList.length; i++) {
            operator.add(pointObject.indexList[i], pointObject.point[i][0]);
        }

        return operator.calc(distribution);
    });

    return extractor;
};

EChartsQQPlotOptionBuilder.prototype._buildSeriesData = function () {
    var qqplotData;
    for (var s in this.series) {
        qqplotData = this.series[s].extractor.extract()[0];
        var values = [];
        for (var i in qqplotData.values) {
            values.push({
                value: qqplotData.values[i]
            });
        }
        this.series[s].data = values;
    }
    this._addReferenceLine(qqplotData);
    this._addPercentileLines(qqplotData);
};

EChartsQQPlotOptionBuilder.prototype._addReferenceLine = function (qqplotData) {
    var lineSeries = {
        virtualSeries: true,
        type: 'line',
        showSymbol: false,
        lineStyle: {
            normal: {
                color: this.bOptions.colorSet[1]
            }
        },
        data: []
    };

    var values = this._getVirtualSeriesValues(qqplotData);

    for (var i in values) {
        lineSeries.data.push({
            value: [values[i], values[i]]
        });
    }

    this.series.push(lineSeries);
};

EChartsQQPlotOptionBuilder.prototype._addPercentileLines = function (qqplotData) {
    var confidenceLine = {
        virtualSeries: true,
        type: 'line',
        showSymbol: false,
        smooth: true,
        lineStyle: {
            normal: {
                color: this.bOptions.colorSet[2]
            }
        },
        data: []
    };

    var upperConfidenceLine = $.extend(true, {}, confidenceLine);
    var lowerConfidenceLine = $.extend(true, {}, confidenceLine);

    var dist = qqplotData.dist;
    var n = qqplotData.values.length;

    var confidence = this.bOptions.plotOptions.qqplot.confidence[0].selected;
    var jstat = window.jStat();
    var stdNormal = jstat.normal(0, 1);
    var limitConst = stdNormal.inv(1 - (1 - confidence) / 2);

    var values = this._getVirtualSeriesValues(qqplotData);

    for (var i in values) {
        var q = values[i];
        var cdf = dist.cdf(q);
        var pdf = dist.pdf(q);
        var confidenceLimit = limitConst * Math.sqrt(cdf * (1 - cdf) / (n * pdf * pdf));
        var upperConf = q + confidenceLimit;
        upperConfidenceLine.data.push({
            value: [q, upperConf]
        });
        var lowerConf = q - confidenceLimit;
        lowerConfidenceLine.data.push({
            value: [q, lowerConf]
        });
    }

    this.series.push(upperConfidenceLine);
    this.series.push(lowerConfidenceLine);
};

EChartsQQPlotOptionBuilder.prototype._getVirtualSeriesValues = function (plotData) {
    var values = plotData.values.map(function (value) {
        return value[0];
    });
    values.sort(_optionUtils2.default.numericSortRule);

    var distribution = this.bOptions.plotOptions.qqplot.distribution[0].selected;

    var diff = (values[values.length - 1] - values[0]) * 0.1;

    var length = values.length;
    values = values.map(function (value, index) {
        var offset = -diff + diff * 2 / length * index;
        var calcVal = value + offset;
        if (distribution !== 'normal' && calcVal < 0) calcVal = 0;
        return calcVal;
    });

    values = values.filter(function (value) {
        var pdf = plotData.dist.pdf(value);
        return pdf !== 0 && (distribution !== 'lognormal' || distribution === 'lognormal' && value >= 0.025);
    });

    return values;
};

exports.default = EChartsQQPlotOptionBuilder;

/***/ }),
/* 412 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _validationError = __webpack_require__(36);

var _validationError2 = _interopRequireDefault(_validationError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: qqplot-operator.js
 * Created by ji_sung.park on 2018-02-06.
 */
var DISTRIBUTION_VALIDATOR_LIST = {
    'normal': [],
    'exponential': ['GreaterThanOrEqualToZero', 'MeanIsZero'],
    'gamma': ['GreaterThanZero', 'VarianceIsZero', 'MeanIsZero'],
    'lognormal': ['GreaterThanZero', 'MeanIsZero'],
    'beta': ['ZeroToOne', 'VarianceIsZero']
};
var VALIDATION_MESSAGE = {
    'GreaterThanOrEqualToZero': 'All values must be greater than or equal to 0.',
    'GreaterThanZero': 'All values must be greater than 0.',
    'ZeroToOne': 'All values must be 0 to 1.',
    'MeanIsZero': 'Cannot calculate distribution parameter. (Mean is 0)',
    'VarianceIsZero': 'Cannot calculate distribution parameter. (Variance is 0)'
};

function QQPlotOperator(x) {
    this.x = x;
    this.dataIndexes = [];
    this.values = [];
    this.sumValue = 0;
}

QQPlotOperator.prototype.add = function (index, value) {
    // if(Number.isFinite(value)){
    this.dataIndexes.push(parseInt(index));
    this.values.push(value);
    this.sumValue += value;
    // }
};

QQPlotOperator.prototype._toFixed = function (val) {
    return Number(val.toFixed(14));
};

QQPlotOperator.prototype._validate = function (distribution, m, v) {
    var errors = [];

    if (this.values.filter(function (value) {
        return value < 0;
    }).length > 0) {
        errors.push('GreaterThanOrEqualToZero');
    }
    if (this.values.filter(function (value) {
        return value <= 0;
    }).length > 0) {
        errors.push('GreaterThanZero');
    }
    if (this.values.filter(function (value) {
        return value < 0 || value > 1;
    }).length > 0) {
        errors.push('ZeroToOne');
    }
    if (m === 0) {
        errors.push('MeanIsZero');
    }
    if (v === 0) {
        errors.push('VarianceIsZero');
    }

    errors = errors.filter(function (value) {
        return DISTRIBUTION_VALIDATOR_LIST[distribution].indexOf(value) !== -1;
    });

    return errors;
};

QQPlotOperator.prototype._getDistribution = function (distribution) {
    var jStat = window.jStat(this.values);

    var m = jStat.mean();
    var v = jStat.variance();

    var errors = this._validate(distribution, m, v);

    if (errors.length > 0) {
        var message = errors.map(function (value) {
            return VALIDATION_MESSAGE[value];
        }).join('<br>');
        throw new _validationError2.default(message);
    }

    var firstParam, secondParam;

    switch (distribution) {
        case 'normal':
            firstParam = m;
            secondParam = jStat.stdev();
            break;
        case 'exponential':
            var rate = 1 / m;
            firstParam = rate;
            break;
        case 'gamma':
            var shape = m * m / v;
            var scale = v / m;
            firstParam = shape;
            secondParam = scale;
            break;
        case 'lognormal':
            var sigma = Math.sqrt(Math.log(1 + v / (m * m)));
            var mu = Math.log(m) - sigma * sigma / 2;
            firstParam = mu;
            secondParam = sigma;
            break;
        case 'beta':
            var aux = m * (1 - m) / v - 1;
            var alpha = m * aux;
            var beta = (1 - m) * aux;
            firstParam = alpha;
            secondParam = beta;
            break;
        default:
            break;
    }

    if (firstParam && secondParam) {
        return jStat[distribution](firstParam, secondParam);
    } else if (firstParam) {
        return jStat[distribution](firstParam);
    } else {
        throw new _validationError2.default('This distribution is not supported.');
    }
};

QQPlotOperator.prototype.calc = function (distribution) {
    var _this = this;
    this.values.sort(_optionUtils2.default.numericSortRule);
    var n = this.values.length;
    var p = this.values.map(function (value, index) {
        if (!Number.isFinite(value)) {
            throw new _validationError2.default('Selected column has one or more invalid value(s)');
        }
        return (index + 1) / (n + 1);
    });

    var dist = this._getDistribution(distribution);

    var q = p.map(function (value) {
        return dist.inv(value);
    });

    var values = q.map(function (value, index) {
        return [value, _this.values[index]];
    });

    return {
        p: p,
        q: q,
        dist: dist,
        values: values
    };
};

exports.default = QQPlotOperator;

/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _echartsRadarOptionBuilder = __webpack_require__(414);

var _echartsRadarOptionBuilder2 = _interopRequireDefault(_echartsRadarOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: echarts.wrapper.js
 * Created by daewon.park on 2017-03-23.
 */

function EChartsRadar(parentId, options) {
    _echartsWrapper2.default.call(this, parentId, options);
}

EChartsRadar.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsRadar.prototype.constructor = EChartsRadar;

EChartsRadar.prototype.render = function () {
    var _this = this;
    this.seriesHelper = new _echartsRadarOptionBuilder2.default();
    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._setEChartOption(opt);
};

EChartsRadar.prototype.getLegendData = function () {
    var legendData = [];

    var keyColumns = this.seriesHelper.getColorByColumns();
    var legendKeyMap = {};
    if (keyColumns.length > 0) {
        var opt = this.seriesHelper.eOptions;
        if (opt.series.length > 0) {
            for (var i in opt.series[0].data) {
                if (opt.series[0].data[i] instanceof Array) {
                    legendKeyMap = {};
                    break;
                } else {
                    //legend 중복을 막기 위해 로직 추가
                    if (!legendKeyMap[opt.series[0].data[i].name]) {
                        legendKeyMap[opt.series[0].data[i].name] = {
                            name: opt.series[0].data[i].name,
                            symbol: opt.series[0].symbol,
                            symbolSize: opt.series[0].symbolSize,
                            color: opt.color[parseFloat(i) % opt.color.length]
                        };
                    }
                }
            }
        }
    }

    for (var key in legendKeyMap) {
        legendData.push(legendKeyMap[key]);
    }

    return legendData;
};

exports.default = EChartsRadar;

/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * BChart 의 옵션 포맷
 var options = {
      colorSet: [
          '#FD026C', '#4682B8', '#A5D22D', '#F5CC0A', '#FE8C01', '#6B9494', '#B97C46',
          '#84ACD0', '#C2E173', '#F9DD5B', '#FE569D', '#FEB356', '#9CB8B8', '#D0A884',
          '#2E6072', '#6D8C1E', '#A48806', '#A90148', '#A95E01', '#476363', '#7B532F'
      ],
      chart: {
          type: 'radar'
      },
      title: {
          text: "레이더 차트 예제"
      },
      legend: {
          visible: true,
          orientation: 'horizontal',
          top: '0px',
          left: '50%',
          background: 'transparent'
      },
      colorBy: [ {
          selected: [{name: '영어'}]
      } ],
      plotOptions: {
          radar: {
              indicator: [{ name: '영어', max: 100}, { name: '수학', max: 100}, { name: '국어', max: 100}],
              shape: 'circle', // 'rect'
              startAngle: 90,
              splitNumber: 5
          }
      },
      source: {
          dataType: 'local',
          localData: [ {
              dataType: 'rawData',
              columns: [{ name: '영어', 'type': 'number'}, { name: '수학', 'type': 'number'}, { name: '국어', 'type': 'number'}],  //'string'
              data: [[100, 100, 95], [90, 90, 90], [100, 40, 50]]
          } ]
      }
  }
 *
 * EChart 의 옵션 포맷
 var option = {
      title: {
          text: '레이더 차트 예제'
      },
      tooltip: {},
      color: ['red', 'blue'],
      legend: {
          data: ['영어-100', '영어-90'],
          selectedMode: 'multi'
      },
      radar: {
          indicator: [{ name: '영어', max: 100}, { name: '수학', max: 100}, { name: '국어', max: 100}],
          shape: 'circle', // 'rect'
          startAngle: 90,
          splitNumber: 5
      },
      series: [{
          type: 'radar',
          data: [{
              value: [100, 100, 95],
              name: '영어-100'
          }, {
              value: [90, 90, 90],
              name: '영어-90'
          }, {
              value: [100, 40, 50],
              name: '영어-100'
          }]
      }]
 }
 */
function EChartsRadarOptionBuilder(parentId, options) {
    _echartsOptionBuilder2.default.call(this, parentId, options);
}

EChartsRadarOptionBuilder.prototype = Object.create(_echartsOptionBuilder2.default.prototype);
EChartsRadarOptionBuilder.prototype.constructor = EChartsRadarOptionBuilder;

EChartsRadarOptionBuilder.prototype._defaultOptions = function () {
    var opt = {
        tooltip: {
            trigger: 'item',
            showDelay: 0
        },
        toolbox: {
            show: false
        },
        legend: {
            data: [],
            selectedMode: 'multi', //중요: 현재 class 구조에서는 legend 옵션에 selectedMode를 추가할 수가 없어서 여기서 추가.
            show: false //중요: default legend는 hide
        },
        radar: {
            indicator: [],
            shape: 'polygon', // 'rect'
            startAngle: 90,
            splitNumber: 5
        },
        series: [{
            type: 'radar',
            data: []
        }]
    };

    opt.visualMap = this.bOptions.visualMap;
    opt.color = this.bOptions.colorBy && this.bOptions.colorBy.length ? this.bOptions.colorSet : this.bOptions.colorSet ? [this.bOptions.colorSet[0]] : ['#FFC14A'];
    $.extend(true, opt.tooltip, this.bOptions.tooltip);
    return opt;
};

EChartsRadarOptionBuilder.prototype.buildOptions = function (options) {
    this.bOptions = options;
    this.plotOptions = this.getPlotOptions();
    this.eOptions = this._defaultOptions();
    this._buildRadar();

    var _buildDataMap = this._buildDataMap(),
        _buildDataMap2 = _slicedToArray(_buildDataMap, 2),
        column2idx = _buildDataMap2[0],
        groupByXColumns = _buildDataMap2[1];

    var data = this._extractRadarData(groupByXColumns, column2idx);
    var indicator = this._extractRadarIndicator(data);
    this.eOptions.series[0].data = data;
    this.eOptions.radar.indicator = indicator;
    return this.eOptions;
};

_echartsOptionBuilder2.default.prototype.getSelectedYaxis = function () {
    return this.bOptions.yAxis[0].selected.filter(function (x) {
        return !!x;
    });
};

EChartsRadarOptionBuilder.prototype._extractRadarData = function (groupByXColumns, column2idx) {
    var yAxis = this.getSelectedYaxis();
    var data = [];
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
        for (var _iterator = Object.entries(groupByXColumns)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var _ref = _step.value;

            var _ref2 = _slicedToArray(_ref, 2);

            var k = _ref2[0];
            var v = _ref2[1];

            var d = [];
            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = undefined;

            try {
                for (var _iterator2 = yAxis[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                    var _ref3 = _step2.value;
                    var columnName = _ref3.name;
                    var aggregation = _ref3.aggregation;

                    d.push(this._aggregate(v, aggregation, column2idx[columnName]));
                }
            } catch (err) {
                _didIteratorError2 = true;
                _iteratorError2 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
                        _iterator2.return();
                    }
                } finally {
                    if (_didIteratorError2) {
                        throw _iteratorError2;
                    }
                }
            }

            data.push({
                name: '' + k,
                value: d
            });
        }
    } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
    } finally {
        try {
            if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
            }
        } finally {
            if (_didIteratorError) {
                throw _iteratorError;
            }
        }
    }

    return data;
};

EChartsRadarOptionBuilder.prototype._getRangeValue = function (n) {
    try {
        var t = typeof n === 'undefined' ? 'undefined' : _typeof(n);
        if (t === 'string' && n.trim() === '' || t !== 'string' && t === 'object' || t === 'undefined') {
            return undefined;
        }
        return parseFloat(n);
    } catch (e) {
        return undefined;
    }
};

EChartsRadarOptionBuilder.prototype._getMinRange = function () {
    return this._getRangeValue(this.bOptions.plotOptions.radar.min);
};

EChartsRadarOptionBuilder.prototype._getMaxRange = function () {
    return this._getRangeValue(this.bOptions.plotOptions.radar.max);
};

EChartsRadarOptionBuilder.prototype._extractRadarIndicator = function (data) {
    var _this = this;

    var yAxis = this.getSelectedYaxis();
    var hasMin = typeof this._getMinRange() === 'number';
    var hasMax = typeof this._getMaxRange() === 'number';

    var aggregationLabelMap = {
        sum: 'Sum',
        average: 'Average',
        count: 'Count',
        unique_count: 'Unique Count',
        min: 'Min',
        max: 'Max'
    };

    var capitalize = function capitalize(s) {
        return s[0].toUpperCase() + s.split('').slice(1).join('');
    };

    return yAxis.map(function (_ref4, idx) {
        var name = _ref4.name,
            aggregation = _ref4.aggregation;

        var m = hasMin ? _this._getMinRange() : Infinity;
        var M = hasMax ? _this._getMaxRange() : -Infinity;
        for (var i = 0; i < data.length; ++i) {
            if (!hasMin) m = Math.min(data[i].value[idx], m);
            if (!hasMax) M = Math.max(data[i].value[idx], M);
        }
        return {
            name: aggregation === 'none' ? name : name + '(' + (aggregationLabelMap[aggregation] || capitalize(aggregation)) + ')',
            min: hasMin ? m : m - 0.00000000001,
            max: hasMax ? M : M + 0.00000000001
        };
    });
};

EChartsRadarOptionBuilder.prototype._aggregate = function (data, aggregation, index) {
    if (aggregation === 'none') {
        return data[0][index];
    }
    var operator = new _aggregationOperator2.default();
    data.forEach(function (d, i) {
        return operator.add(i, d[index]);
    });
    return operator.calc(aggregation);
};

EChartsRadarOptionBuilder.prototype._buildRadar = function () {
    var options = this.bOptions;
    this.eOptions.radar = $.extend(true, {}, options.plotOptions.radar);
};

EChartsRadarOptionBuilder.prototype._buildDataMap = function () {
    var opt = this.bOptions;
    var localData = opt.source.localData[0];
    var dataMap = {};
    var column2idx = {};
    if (opt.colorBy && opt.colorBy.length) {
        localData.columns.forEach(function (_ref5, idx) {
            var name = _ref5.name;

            column2idx[name] = idx;
        });

        var colorIndex = column2idx[opt.colorBy[0].selected[0].name];
        var _iteratorNormalCompletion3 = true;
        var _didIteratorError3 = false;
        var _iteratorError3 = undefined;

        try {
            for (var _iterator3 = localData.data[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
                var d = _step3.value;

                if (!dataMap[d[colorIndex]]) dataMap[d[colorIndex]] = [];
                dataMap[d[colorIndex]].push(d);
            }
        } catch (err) {
            _didIteratorError3 = true;
            _iteratorError3 = err;
        } finally {
            try {
                if (!_iteratorNormalCompletion3 && _iterator3.return) {
                    _iterator3.return();
                }
            } finally {
                if (_didIteratorError3) {
                    throw _iteratorError3;
                }
            }
        }
    }
    return [column2idx, dataMap];
};

EChartsRadarOptionBuilder.prototype._buildTooltip = function () {
    //TODO
};

exports.default = EChartsRadarOptionBuilder;

/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsLine = __webpack_require__(62);

var _echartsLine2 = _interopRequireDefault(_echartsLine);

var _echartsRoccurveOptionBuilder = __webpack_require__(416);

var _echartsRoccurveOptionBuilder2 = _interopRequireDefault(_echartsRoccurveOptionBuilder);

var _echartsRoccurveCalculatedOptionBuilder = __webpack_require__(417);

var _echartsRoccurveCalculatedOptionBuilder2 = _interopRequireDefault(_echartsRoccurveCalculatedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsROCCurve(parentId, options) {
    _echartsLine2.default.call(this, parentId, options);
} /**
   * Source: echarts-roccurve.js
   * Created by daewon.park on 2017-04-19.
   */

EChartsROCCurve.prototype = Object.create(_echartsLine2.default.prototype);
EChartsROCCurve.prototype.constructor = EChartsROCCurve;

EChartsROCCurve.prototype.render = function () {
    if (this.options.source.localData[0].dataType === 'chartdata') {
        this.seriesHelper = new _echartsRoccurveCalculatedOptionBuilder2.default();
    } else {
        this.seriesHelper = new _echartsRoccurveOptionBuilder2.default();
    }
    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._setEChartOption(opt);
};

exports.default = EChartsROCCurve;

/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsLineOptionBuilder = __webpack_require__(90);

var _echartsLineOptionBuilder2 = _interopRequireDefault(_echartsLineOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsROCCurveOptionBuilder() {
    _echartsLineOptionBuilder2.default.call(this);
}

EChartsROCCurveOptionBuilder.prototype = Object.create(_echartsLineOptionBuilder2.default.prototype);
EChartsROCCurveOptionBuilder.prototype.constructor = EChartsROCCurveOptionBuilder;

EChartsROCCurveOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['markPoint', 'markLine', 'smooth', 'smoothMonotone', 'step', 'label'];
    this._registerDecorator('axisType');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('tooltipTriggerAxis');
    this._registerDecorator('tooltip');
    this._registerDecorator('marker');
    this._registerDecorator('plotOptions');
    this._setSeriesDataSortRule();
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.auroc[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
};

EChartsROCCurveOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsLineOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.type = 'line';

    return seriesItem;
};

EChartsROCCurveOptionBuilder.prototype._buildSeriesData = function () {
    _echartsLineOptionBuilder2.default.prototype._buildSeriesData.call(this);

    var minX, maxX;
    for (var s in this.series) {
        var data = this.series[s].data;
        if (data && data.length > 0) {
            if (typeof minX === 'undefined') minX = data[0].value[0];else minX = Math.min(minX, data[0].value[0]);

            if (typeof maxX === 'undefined') maxX = data[data.length - 1].value[0];else maxX = Math.max(maxX, data[data.length - 1].value[0]);
        }
    }

    if (typeof minX !== 'undefined' && typeof maxX !== 'undefined') {
        var baseSeries = {
            type: 'scatter',
            virtualSeries: true,
            showSymbol: false,
            symbolSize: 0,
            data: [[minX, minX], [maxX, maxX]],
            markLine: {
                silent: true,
                data: [[{
                    coord: [minX, minX],
                    symbol: 'none'
                }, {
                    coord: [maxX, maxX],
                    symbol: 'none'
                }]]
            }
        };
        $.extend(true, baseSeries.markLine, this.bOptions.plotOptions.roccurve.baseLine);
        this.series.push(baseSeries);
    }
    if (this.bOptions.auroc && this.bOptions.auroc[0].selected[0]) {
        this._addAuroc(minX, maxX);
    }
};

EChartsROCCurveOptionBuilder.prototype._addAuroc = function (minX, maxX) {
    var localData = this.getLocalData();
    var aurocIndex = this.getColumnIndexes(this.bOptions.auroc[0].selected, localData.columns);
    var aurocValue = this.getCellText(localData.data[0], aurocIndex);
    var centerPosition = (maxX + minX) / 2.0;

    var aurocSeries = {
        virtualSeries: true,
        type: 'scatter',
        data: [[centerPosition, centerPosition, aurocValue]],
        cursor: 'default',
        symbol: 'circle',
        symbolSize: 0.1,
        hoverAnimation: false,
        label: {
            normal: {
                formatter: function formatter(params) {
                    return 'auc : ' + Number(parseFloat(params.value[2]).toFixed(3));
                },
                show: true,
                position: "right",
                textStyle: {
                    color: "black",
                    fontSize: 18
                }
            }
        },
        itemStyle: {
            color: "white"
        }
    };

    this.series.push(aurocSeries);
};

exports.default = EChartsROCCurveOptionBuilder;

/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsLineCalculatedOptionBuilder = __webpack_require__(215);

var _echartsLineCalculatedOptionBuilder2 = _interopRequireDefault(_echartsLineCalculatedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsROCCurveCalculatedOptionBuilder() {
    _echartsLineCalculatedOptionBuilder2.default.call(this);
}

EChartsROCCurveCalculatedOptionBuilder.prototype = Object.create(_echartsLineCalculatedOptionBuilder2.default.prototype);
EChartsROCCurveCalculatedOptionBuilder.prototype.constructor = EChartsROCCurveCalculatedOptionBuilder;

EChartsROCCurveCalculatedOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['markPoint', 'markLine', 'smooth', 'smoothMonotone', 'step'];
    this._registerDecorator('axisType');
    this._registerDecorator('axisLabelFormatter');
    this._registerDecorator('stripline');
    this._registerDecorator('tooltipTriggerAxis');
    this._registerDecorator('tooltip');
    this._registerDecorator('marker');
    this._registerDecorator('plotOptions');
    this._setSeriesDataSortRule();
    this.setSeriesKeyColumns(this.bOptions.colorBy[0].selected);
    this.setSeriesDataColumns(this.bOptions.xAxis[0].selected);
    this.setSeriesDataColumns(this.bOptions.yAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.xAxis[0].selected);
    this.setTooltipDataColumns(this.bOptions.yAxis[0].selected);
};

EChartsROCCurveCalculatedOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = _echartsLineCalculatedOptionBuilder2.default.prototype._newSeriesItem.call(this);
    seriesItem.type = 'line';

    return seriesItem;
};

EChartsROCCurveCalculatedOptionBuilder.prototype.getSeriesKeyColumns = function () {
    var keyColumns = this.filterNullColumn(this.bOptions.colorBy[0].selected);
    if (keyColumns.length > 0) {
        return [{ name: 'colorBy' }];
    } else {
        return [];
    }
};

EChartsROCCurveCalculatedOptionBuilder.prototype._buildSeriesData = function () {
    _echartsLineCalculatedOptionBuilder2.default.prototype._buildSeriesData.call(this);

    var minX, maxX;
    for (var s in this.series) {
        var data = this.series[s].data;
        if (data && data.length > 0) {
            if (typeof minX === 'undefined') minX = data[0].value[0];else minX = Math.min(minX, data[0].value[0]);

            if (typeof maxX === 'undefined') maxX = data[data.length - 1].value[0];else maxX = Math.max(maxX, data[data.length - 1].value[0]);
        }
    }

    if (typeof minX !== 'undefined' && typeof maxX !== 'undefined') {
        var baseSeries = {
            type: 'scatter',
            virtualSeries: true,
            showSymbol: false,
            symbolSize: 0,
            data: [[minX, minX], [maxX, maxX]],
            markLine: {
                silent: true,
                data: [[{
                    coord: [minX, minX],
                    symbol: 'none'
                }, {
                    coord: [maxX, maxX],
                    symbol: 'none'
                }]]
            }
        };
        $.extend(true, baseSeries.markLine, this.bOptions.plotOptions.roccurve.baseLine);
        this.series.push(baseSeries);
    }
};

exports.default = EChartsROCCurveCalculatedOptionBuilder;

/***/ }),
/* 418 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _widget = __webpack_require__(31);

var _widget2 = _interopRequireDefault(_widget);

var _validationError = __webpack_require__(36);

var _validationError2 = _interopRequireDefault(_validationError);

var _chartOptionBuilder = __webpack_require__(63);

var _chartOptionBuilder2 = _interopRequireDefault(_chartOptionBuilder);

var _preferenceUtils = __webpack_require__(244);

var _preferenceUtils2 = _interopRequireDefault(_preferenceUtils);

var _utils = __webpack_require__(52);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function handsontableTable(parentId, options) {
    _widget2.default.call(this, parentId, options);
}

handsontableTable.prototype = Object.create(_widget2.default.prototype);
handsontableTable.prototype.constructor = handsontableTable;

handsontableTable.prototype.destroy = function () {
    try {
        $(window).off('resize', this.resizeHandler);
        this.table.destroy();
        delete this.table;
    } catch (ex) {
        // ignore exception
    }
};

handsontableTable.prototype._createContents = function ($parent) {
    var _this = this;

    this.$mainControl = $('<div class="bcharts-chart bchart-table"></div>');
    $parent.append(this.$mainControl);

    this.$mainControl.hide();

    this.resizeHandler = function () {
        _this.redrawLayout();
    };
    $(window).resize(this.resizeHandler);
};

handsontableTable.prototype.clear = function () {
    if (this.table) {
        $(window).off('resize', this.resizeHandler);
        this.table.destroy();
        delete this.table;
    }
};

handsontableTable.prototype.render = function () {
    var _this = this;
    if (this.options.source.localData[0].data.length == 0) {
        throw new _validationError2.default('No data to display');
    }

    if (this.options.plotOptions.table.border) {
        this.$mainControl.css('border', this.options.plotOptions.table.border);
    }

    this.builder = new handsontableTableOptionBuilder();

    var opt = this.builder.buildOptions(this.options, this.$parent.width(), this.$parent.height(), this._makeContextMenu());

    // 있으면 update 없으면 생성.. 다른 좋은 방법이 필요한...
    if (this.table) {
        if (this.table.getColHeader().length !== opt.colHeaders.length) {
            $(window).off('resize', this.resizeHandler);
            this.table.destroy();
            delete this.table;

            this.table = new Handsontable(this.$mainControl[0], opt);
            $(window).resize(this.resizeHandler);
        } else {
            var plugin = this.table.getPlugin('manualColumnResize');
            for (var i = 0; i < opt.colWidths.length; i++) {
                plugin.setManualSize(i, opt.colWidths[i]);
            }
            this.table.updateSettings(opt);
        }
    } else {
        this.table = new Handsontable(this.$mainControl[0], opt);
        $(window).resize(this.resizeHandler);
    }

    this.$mainControl.show();
};

handsontableTable.prototype.redrawLayout = function () {
    var _this = this;

    clearTimeout(this._redrawLayoutJob);
    this._redrawLayoutJob = setTimeout(function () {
        if (_this.table && _this.$parent.attr('status') !== 'error') {
            var updateOption = _this.table.getSettings();
            // 속도 개선 - size가 0 일경우 table size update 안함
            if (_this.$parent.width() !== 0 && _this.$parent.height() !== 0) {
                // 기존에 sort가 된 column의 sort 유지를 위한 로직 추가
                var plugin = _this.table.getPlugin('ColumnSorting');
                var sortConfig = undefined;
                if (plugin.isSorted()) {
                    sortConfig = plugin.getSortConfig();
                }

                updateOption.width = _this.$parent.width();
                updateOption.height = _this.$parent.height();
                _this.table.updateSettings(updateOption);

                if (sortConfig) {
                    plugin.sort(sortConfig);
                }
            }
        }
    }, 300);
};

handsontableTable.prototype.selectRange = function () {
    // do nothing, interaction 추후 개발 필요 시 구현
};

handsontableTable.prototype.getSelectedRange = function () {
    // do nothing, interaction 추후 개발 필요 시 구현
};

handsontableTable.prototype._makeContextMenu = function () {
    // OptionBuilder에 넣어야 되는데 사정상...
    var _this = this;
    var contextMenu = {
        items: {
            "option_1": {
                name: 'View cell',
                callback: function callback(key, selection, clickEvent) {
                    var isImageCell = this.getCell(this.getSelectedLast()[0], this.getSelectedLast()[1]).getAttribute('bcharts-image-cell');
                    _this._openCellViewDialog(this.getValue(), isImageCell);
                }
            },
            "option_2": {
                name: 'Auto resize this column',
                callback: function callback(key, selection, clickEvent) {
                    var colHeaders = this.getColHeader();
                    var plugin = this.getPlugin('manualColumnResize');
                    var selectedCol = selection[0].start.col;
                    var oldColumnSize = this.getColWidth(selectedCol);
                    var newColumnSize = this.runHooks('beforeColumnResize', selectedCol, oldColumnSize, true);

                    plugin.setManualSize(selectedCol, newColumnSize > 80 ? newColumnSize : 80);

                    this.updateSettings({});
                }
            },
            "option_3": {
                name: 'Auto resize all columns',
                callback: function callback() {
                    var colHeaders = this.getColHeader();
                    var plugin = this.getPlugin('manualColumnResize');

                    for (var i = 0; i < colHeaders.length; i++) {
                        var oldColumnSize = this.getColWidth(i);
                        var newColumnSize = this.runHooks('beforeColumnResize', i, oldColumnSize, true);

                        plugin.setManualSize(i, newColumnSize > 80 ? newColumnSize : 80);
                    }
                    // plugin.updatePlugin();
                    // manual에서는 위에걸로 하라고 하는데 안먹어서 그냥 이걸로....
                    this.updateSettings({});
                }
            },
            "option_4": {
                name: 'Copy columns to clipboard',
                callback: function callback() {
                    var columns = this.getColHeader();

                    var isIE = /Trident/.test(navigator.userAgent);

                    if (isIE) {
                        window.clipboardData.setData("Text", columns.join(', '));
                    } else {
                        var textField = document.createElement('textarea');
                        textField.innerText = columns.join(', ');
                        document.body.appendChild(textField);
                        textField.select();
                        document.execCommand('copy');
                        textField.remove();
                    }
                }
            }
        }
    };

    return contextMenu;
};

handsontableTable.prototype._openCellViewDialog = function (cellValue, isImageCell) {
    var $dialog = $('<div class="bcharts-dialog brtc-window">' + '   <div class="bcharts-dialog-header bos-dialogs-header brtc-window-header">Cell Viewer</div>' + '   <div class="bcharts-dialog-contents-wrapper brtc-window-body">' + '       <div class="bcharts-dialog-contents cellviewer"></div>' + '   </div>' + '</div>');
    var dialogWidth = 300;
    var dialogHeight = 300;
    var bdcClazz = '.bcharts-dialog-contents';
    if (cellValue) {
        try {
            if (isImageCell) {
                var value = JSON.parse(cellValue);
                var img = document.createElement('IMG');
                img.src = value.data;

                var table = $('<table></table>');
                table.append('<tr><th style="width:80px">Name</th><th style="width:120px">Value</th></tr>');
                for (var i in value.info) {
                    //data.push([i, value.info[i]]);
                    table.append('<tr><td>' + i + '</td><td title="' + value.info[i] + '">' + value.info[i] + '</td></tr>');
                }
                var dialogContent = $dialog.find(bdcClazz);
                var dialogCt = '<div class="bcharts-image-cell-viewer">' + '   <div class="bcharts-image-cell-image"></div>' + '   <div class="bcharts-image-cell-desc"></div>' + '</div>';
                dialogContent.append(dialogCt);
                $dialog.find('.bcharts-image-cell-image').append(img);
                $dialog.find('.bcharts-image-cell-desc').append(table);
                dialogWidth = img.width + 260 < 800 ? img.width + 260 : 800;
                dialogHeight = img.height + 80 < 800 ? img.height + 80 : 800;
            } else {
                var jsonObj = $.parseJSON(cellValue);
                if ((typeof jsonObj === 'undefined' ? 'undefined' : _typeof(jsonObj)) === 'object') {
                    $dialog.find(bdcClazz).append('<div class="bcharts-cell-viewer">' + JSON.stringify(jsonObj, null, 4) + '</div>');
                    dialogWidth = 800;
                    dialogHeight = 800;
                } else {
                    this._setContents($dialog, cellValue);
                }
            }
        } catch (err) {
            this._setContents($dialog, cellValue);
        }
    } else {
        $dialog.find(bdcClazz).append('<span style="color: #ff3333">' + cellValue + '</span>');
    }

    this.$parent.append($dialog);
    $dialog.find(bdcClazz).perfectScrollbar();

    this.dialog = brtcWidget.window($dialog, {
        modal: true,
        width: dialogWidth,
        height: dialogHeight,
        move: true,
        resize: false,
        top: '40%',
        left: '40%'
    });

    this.dialog.subscribe('close', function (event) {
        $dialog.remove();
    });
    this.dialog.execute('focus');
};

handsontableTable.prototype._setContents = function ($dialog, contents) {
    var bdcClazz = '.bcharts-dialog-contents';
    if ($.isPlainObject(contents)) {
        $dialog.find(bdcClazz).append('<div class="bcharts-cell-viewer">' + JSON.stringify(contents, null, 4) + '</div>');
    } else if ($.isArray(contents)) {
        $dialog.find(bdcClazz).append('<div class="bcharts-cell-viewer">' + JSON.stringify(contents) + '</div>');
    } else {
        $dialog.find(bdcClazz).text(contents);
    }
};

exports.default = handsontableTable;


var DO_NOT_SWAP = 0;
var FIRST_BEFORE_SECOND = -1;
var FIRST_AFTER_SECOND = 1;

var sortByString = function sortByString(sortOrder, columnMeta, columnPluginSettings) {
    return function (value, nextValue) {
        var sortEmptyCells = columnPluginSettings.sortEmptyCells;


        if (typeof value === 'string') {
            value = value.toLowerCase();
        } else if (typeof value === 'boolean') {
            value = value + '';
        }

        if (typeof nextValue === 'string') {
            nextValue = nextValue.toLowerCase();
        } else if (typeof nextValue === 'boolean') {
            nextValue = nextValue + '';
        }

        if (value === nextValue) {
            return DO_NOT_SWAP;
        }

        if ((0, _utils.isEmpty)(value)) {
            if ((0, _utils.isEmpty)(nextValue)) {
                return DO_NOT_SWAP;
            }

            if (sortEmptyCells) {
                return sortOrder === 'asc' ? FIRST_BEFORE_SECOND : FIRST_AFTER_SECOND;
            }

            return FIRST_AFTER_SECOND;
        }

        if ((0, _utils.isEmpty)(nextValue)) {

            if (sortEmptyCells) {
                return sortOrder === 'asc' ? FIRST_AFTER_SECOND : FIRST_BEFORE_SECOND;
            }

            return FIRST_BEFORE_SECOND;
        }

        if (isNaN(value) && !isNaN(nextValue)) {
            return sortOrder === 'asc' ? FIRST_AFTER_SECOND : FIRST_BEFORE_SECOND;
        } else if (!isNaN(value) && isNaN(nextValue)) {
            return sortOrder === 'asc' ? FIRST_BEFORE_SECOND : FIRST_AFTER_SECOND;
        } else if (!(isNaN(value) || isNaN(nextValue))) {
            value = parseFloat(value);
            nextValue = parseFloat(nextValue);
        }

        if (value < nextValue) {
            return sortOrder === 'asc' ? FIRST_BEFORE_SECOND : FIRST_AFTER_SECOND;
        }

        if (value > nextValue) {
            return sortOrder === 'asc' ? FIRST_AFTER_SECOND : FIRST_BEFORE_SECOND;
        }

        return DO_NOT_SWAP;
    };
};

function handsontableTableOptionBuilder() {
    _chartOptionBuilder2.default.call(this);
}

handsontableTableOptionBuilder.prototype = Object.create(_chartOptionBuilder2.default.prototype);
handsontableTableOptionBuilder.prototype.constructor = handsontableTableOptionBuilder;

handsontableTableOptionBuilder.prototype.buildOptions = function (options, width, height, contextMenu) {
    this.bOptions = options;
    this.handsontableTableOptions = this._defaultOptions(width, height);

    this._buildData();
    this._buildColumns();
    this._buildMenu(contextMenu);

    return this.handsontableTableOptions;
};

handsontableTableOptionBuilder.prototype._defaultOptions = function (width, height) {
    var opt = {
        readOnly: true,
        rowHeaders: this.bOptions.plotOptions.table.rowIndex.show,
        filters: false,
        dropdownMenu: false,
        manualColumnResize: true,
        columnSorting: true,
        width: width,
        height: height
    };
    return opt;
};

handsontableTableOptionBuilder.prototype._buildData = function () {
    var _this = this;
    _this.startIndex = 1, this.endIndex = _this.bOptions.source.localData[0].columns.length;
    if (_this.bOptions.plotOptions.table.viewColumnIndex) {
        _this.startIndex = _this.bOptions.plotOptions.table.viewColumnIndex.start || _this.startIndex;
        _this.endIndex = _this.bOptions.plotOptions.table.viewColumnIndex.end ? _this.bOptions.plotOptions.table.viewColumnIndex.end < _this.endIndex ? _this.bOptions.plotOptions.table.viewColumnIndex.end : _this.endIndex : _this.endIndex;
    }

    var tableData = [];
    for (var i = 0; i < _this.bOptions.source.localData[0].data.length; i++) {
        var rowData = [];
        for (var j = _this.startIndex - 1; j < _this.endIndex; j++) {
            rowData.push(_this.bOptions.source.localData[0].data[i][j]);
        }
        tableData.push(rowData);
    }

    this.handsontableTableOptions.data = tableData;
};

handsontableTableOptionBuilder.prototype._buildColumns = function () {
    var _this = this;
    var colHeaders = [];
    var colWidths = [];
    var columns = [];

    var colWidthsMap = new Map();
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
        for (var _iterator = this.bOptions.plotOptions.table.colWidths[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var colObj = _step.value;

            colWidthsMap.set(colObj.column, colObj.width);
        }
    } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
    } finally {
        try {
            if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
            }
        } finally {
            if (_didIteratorError) {
                throw _iteratorError;
            }
        }
    }

    for (var i = _this.startIndex - 1; i < _this.endIndex; i++) {
        var column = _this.bOptions.source.localData[0].columns[i];

        // header 설정
        colHeaders.push(column.name);

        // header Width 설정
        if (colWidthsMap.has(column.name)) {
            colWidths.push(colWidthsMap.get(column.name));
        } else {
            var colSize = 80; //column.name.length * 10 > 80 ? column.name.length * 10 : 80;
            colWidths.push(colSize);
            this.bOptions.plotOptions.table.colWidths.push({ column: column.name, width: colSize });
        }

        // column value 설정
        var columnSetting = {};
        if (column.type == 'date') {
            columnSetting = {
                type: 'time',
                timeFormat: 'yyyy-MM-dd HH:mm:ss:fff',
                correctFormat: true,
                renderer: function renderer(hotInstance, TD, row, col, prop, value, cellProperties) {
                    $(TD).attr('title', value);
                    $(TD).text(value);
                }
            };
        } else if (column.type == 'string') {
            columnSetting = _this._createStringColumnSetting(column);
        } else if (column.type == 'number') {
            columnSetting = _this._createNumberColumnSetting(column, _this._getColumnFormat(column.type, column.name, column.internalType));
        } else if (column.type == 'image') {
            columnSetting = _this._createImageColumnSetting(column);
        } else if (column.type == 'map') {
            columnSetting = _this._createMapColumnSetting(column);
        } else if (column.type.indexOf('[]') > -1) {
            columnSetting = _this._createArrayColumnSetting(column);
        }
        columns.push(columnSetting);
    }

    this.handsontableTableOptions.colWidths = colWidths;
    this.handsontableTableOptions.colHeaders = colHeaders;
    this.handsontableTableOptions.columns = columns;
};

handsontableTableOptionBuilder.prototype._getColumnFormat = function (type, name, internalType) {
    for (var i in this.bOptions.plotOptions.table.formatter) {
        var formatter = this.bOptions.plotOptions.table.formatter[i];
        if (formatter.column === name) {
            if (formatter.type && formatter.type === 'formatter') {
                return Brightics.Chart.Helper.OptionUtils.formatLabel(formatter.format);
            }
            return formatter.format;
        }
    }
    var prefFormatter = _preferenceUtils2.default.getTableFormatter();
    var mappedInternalType = Object.entries({
        'double': ['Double', 'Float'],
        'integer': ['Integer', 'Long', 'Short']
    }).filter(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2),
            foo = _ref2[0],
            target = _ref2[1];

        return target.includes(internalType);
    }).map(function (_ref3) {
        var _ref4 = _slicedToArray(_ref3, 1),
            foo = _ref4[0];

        return foo;
    })[0];
    if (prefFormatter) {
        return (0, _utils.first)((0, _utils.compact)([prefFormatter[type], prefFormatter[mappedInternalType]]));
    }
};

handsontableTableOptionBuilder.prototype._createStringColumnSetting = function (column) {
    var renderer = function renderer(hotInstance, TD, row, col, prop, value, cellProperties) {
        if (typeof value === 'boolean') {
            value = value + '';
        }

        if (value) {
            $(TD).attr('title', value);
        } else if (value == null) {
            value = 'null';
            $(TD).attr('title', 'null');
            $(TD).css('color', '#ff3333');
        } else {
            $(TD).attr('title', value);
            $(TD).css('color', '#ff3333');
        }
        $(TD).text(value);
    };
    return {
        type: 'text',
        renderer: renderer,
        columnSorting: {
            sortEmptyCells: true,
            indicator: true,
            headerAction: true,
            compareFunctionFactory: sortByString
        }
    };
};

handsontableTableOptionBuilder.prototype._createNumberColumnSetting = function (column, pattern) {
    var renderer = function renderer(hotInstance, TD, row, col, prop, value, cellProperties) {
        if (isNaN(value) || typeof value === 'undefined' || value === '' || value === null) {
            value = '' + value;
            $(TD).attr('title', value);
            $(TD).css('color', '#ff3333');
        } else if (pattern) {
            if (typeof pattern === 'function') {
                value = pattern(value);
            } else {
                var useFormat = Brightics.Chart.Helper.OptionUtils.parseFmtStrToObj(pattern);
                if (useFormat.type === 'number') {
                    $(TD).attr('title', value);
                    value = parseFloat(value).toFixed(useFormat.digit);
                } else if (useFormat.type === 'exponential') {
                    $(TD).attr('title', value);
                    value = parseFloat(value).toExponential(useFormat.digit);
                }
            }
        } else {
            if (value.toString().indexOf('e') !== -1) {
                $(TD).css('color', '#626fdb');
            }
            $(TD).attr('title', value);
        }
        $(TD).text(value);
        $(TD).css('text-align', 'right');
    };

    return { type: 'numeric', renderer: renderer };
};

handsontableTableOptionBuilder.prototype._createMapColumnSetting = function (column) {
    var renderer = function renderer(hotInstance, TD, row, col, prop, value, cellProperties) {
        if (!value) {
            $(TD).css('color', '#ff3333');
        }
        value = JSON.stringify(value);
        $(TD).attr('title', value);
        $(TD).text(value);
    };
    return { type: 'text', renderer: renderer };
};

handsontableTableOptionBuilder.prototype._createArrayColumnSetting = function (column) {
    var renderer = function renderer(hotInstance, TD, row, col, prop, value, cellProperties) {
        if (!value) {
            $(TD).css('color', '#ff3333');
        }
        $(TD).attr('title', value);
        $(TD).text(JSON.stringify(value));
    };
    return { type: 'text', renderer: renderer };
};

handsontableTableOptionBuilder.prototype._createImageColumnSetting = function (column) {
    var renderer = function renderer(hotInstance, TD, row, col, prop, value, cellProperties) {
        var img = document.createElement('IMG');
        img.src = JSON.parse(value).data;
        img.style.width = '24px';
        img.style.height = '24px';

        Handsontable.dom.empty(TD);
        TD.style['text-align'] = 'center';
        TD.setAttribute('bcharts-image-cell', true);
        TD.appendChild(img);
    };
    return {
        renderer: renderer,
        copyable: false,
        columnSorting: {
            sortEmptyCells: true,
            indicator: false,
            headerAction: false
        }
    };
};

handsontableTableOptionBuilder.prototype._buildMenu = function (contextMenu) {
    // 여기서 만드는게 구조상 맞는데 사정상 밖에서 만들고 끌고 들어옴
    this.handsontableTableOptions.contextMenu = contextMenu;
};

/***/ }),
/* 419 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/**
 * Created by sds on 2017-11-07.
 */
exports.default = {
    table: {
        formatter: {
            // string: '$',
            // number: '0.0'
        }
    },
    extend: function extend(options) {
        return $.extend(true, {}, options);
    }
};

/***/ }),
/* 420 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _echartsTreemapOptionBuilder = __webpack_require__(421);

var _echartsTreemapOptionBuilder2 = _interopRequireDefault(_echartsTreemapOptionBuilder);

var _echartsTreemapCalculatedOptionBuilder = __webpack_require__(423);

var _echartsTreemapCalculatedOptionBuilder2 = _interopRequireDefault(_echartsTreemapCalculatedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * EChartsTreemap
 * @param parentId
 * @param options
 * @constructor
 */
function EChartsTreemap(parentId, options) {
    _echartsWrapper2.default.call(this, parentId, options);
} /**
   * Source: echarts-treemap.js
   * Created by daewon.park on 2017-04-16.
   */


EChartsTreemap.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsTreemap.prototype.constructor = EChartsTreemap;

EChartsTreemap.prototype.render = function () {
    if (this.options.source.localData[0].dataType == 'chartdata') {
        this.seriesHelper = new _echartsTreemapCalculatedOptionBuilder2.default();
    } else {
        this.seriesHelper = new _echartsTreemapOptionBuilder2.default();
    }
    var opt = this.seriesHelper.buildOptions(this.options);
    this._bindInternalOptions(this.seriesHelper);
    this._setEChartOption(opt);
};

exports.default = EChartsTreemap;

/***/ }),
/* 421 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

var _echartsTreemapExtractor = __webpack_require__(422);

var _echartsTreemapExtractor2 = _interopRequireDefault(_echartsTreemapExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: echarts-treemap.js
 * Created by daewon.park on 2017-04-16.
 */
function EChartsTreemapOptionBuilder() {
    _echartsOptionBuilder2.default.call(this);
}

EChartsTreemapOptionBuilder.prototype = Object.create(_echartsOptionBuilder2.default.prototype);
EChartsTreemapOptionBuilder.prototype.constructor = EChartsTreemapOptionBuilder;

EChartsTreemapOptionBuilder.prototype._setUpOptions = function () {
    this._registerDecorator('brushRemoval');
    this._registerDecorator('tooltipTreemap');
    this.setSeriesKeyColumns([]);
    this.setSeriesDataColumns(this.plotOptions.hierarchyCol[0].selected);
};

EChartsTreemapOptionBuilder.prototype._defaultOptions = function () {
    var opt = _echartsOptionBuilder2.default.prototype._defaultOptions.call(this);
    delete opt.xAxis;
    delete opt.yAxis;
    return opt;
};

EChartsTreemapOptionBuilder.prototype._newSeriesExtractor = function () {
    var columnIndexes = this.getSeriesDataColumnIndexes();
    var sizeIndex = this.getColumnIndexes(this.plotOptions.sizeBy[0].selected, this.getLocalData().columns);
    return new _echartsTreemapExtractor2.default(columnIndexes, sizeIndex[0]);
};

EChartsTreemapOptionBuilder.prototype._buildSeriesData = function () {
    var aggregation = this.plotOptions.sizeBy[0].selected[0].aggregation;
    for (var s in this.series) {
        this.series[s].data = this.series[s].extractor.extract(aggregation);
    }
};

EChartsTreemapOptionBuilder.prototype._buildSeries = function () {
    var series = {};
    var localData = this.getLocalData(0);
    var keyIndexes = this.getSeriesKeyColumnIndexes(0);

    var i, row, seriesName, seriesItem;
    for (i in localData.data) {
        row = localData.data[i];
        seriesName = this.getSeriesName(row, keyIndexes);
        seriesItem = this._getSeriesItem(series, seriesName);
        series[seriesName] = seriesItem;
        if (!seriesItem.extractor) {
            seriesItem.extractor = this._newSeriesExtractor();
        }
        seriesItem.extractor.push(row, i);
    }

    this._setSeries(series);
    this._buildSeriesData();
    this.eOptions.series = this.series;
};

EChartsTreemapOptionBuilder.prototype.getSeriesName = function (row, columnIndexes) {
    return this.plotOptions.name || 'Root';
};

EChartsTreemapOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = {
        type: this.bOptions.chart.type,
        label: {
            formatter: '{b}'
        },
        leafDepth: 3,
        levels: [{
            itemStyle: {
                normal: {
                    borderColor: '#777',
                    borderWidth: 0,
                    gapWidth: 1
                }
            }
        }, {
            itemStyle: {
                normal: {
                    borderColor: '#555',
                    borderWidth: 5,
                    gapWidth: 1
                },
                emphasis: {
                    borderColor: '#ddd'
                }
            },
            upperLabel: {
                normal: {
                    show: true
                }
            },
            colorSaturation: [0.3, 0.5]
        }, {
            itemStyle: {
                normal: {
                    borderWidth: 5,
                    gapWidth: 1,
                    borderColorSaturation: 0.6
                }
            },
            upperLabel: {
                normal: {
                    show: true
                }
            },
            colorSaturation: [0.3, 0.5]
        }],
        data: []
    };

    var treemapOptions = this.plotOptions;
    var attributes = ['visibleMin', 'visibleMax', 'label', 'itemStyle', 'levels'];
    this._applySeriesOptions(seriesItem, treemapOptions, attributes);

    return seriesItem;
};

exports.default = EChartsTreemapOptionBuilder;

/***/ }),
/* 422 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsExtractor = __webpack_require__(45);

var _echartsExtractor2 = _interopRequireDefault(_echartsExtractor);

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: echarts-treemap.js
 * Created by daewon.park on 2017-04-16.
 */
function TreemapDataExtractor(columnIndexes, sizeIndex) {
    _echartsExtractor2.default.call(this);

    columnIndexes = columnIndexes.filter(function (value) {
        return value > -1;
    });

    this.columnIndexes = columnIndexes;
    this._sizeIndex = sizeIndex;
    this._nodes = {};
    this.operators = {};
}

TreemapDataExtractor.prototype = Object.create(_echartsExtractor2.default.prototype);
TreemapDataExtractor.prototype.constructor = TreemapDataExtractor;

TreemapDataExtractor.prototype.push = function (row, rowIndex) {

    var maxLength = this.columnIndexes.length;
    var hierarchyIndex, currentNodeKey, path;

    var nodes = this._nodes;
    for (var i = 0; i < maxLength; i++) {
        hierarchyIndex = this.columnIndexes[i];
        currentNodeKey = row[hierarchyIndex];

        path = path ? path + '/' + currentNodeKey : currentNodeKey;
        nodes[currentNodeKey] = nodes[currentNodeKey] || {
            name: currentNodeKey,
            path: path,
            operator: new _aggregationOperator2.default(currentNodeKey)
        };
        nodes[currentNodeKey].operator.add(rowIndex, row[this._sizeIndex]);
        if (i !== maxLength - 1) {
            nodes[currentNodeKey].children = nodes[currentNodeKey].children || {};
            nodes = nodes[currentNodeKey].children;
        }
    }
};

TreemapDataExtractor.prototype.extract = function (operator) {
    return this._convertMapToList(this._nodes, operator);
};

TreemapDataExtractor.prototype._convertMapToList = function (map, operator) {
    var answerList = [];
    for (var key in map) {
        var answer = {};
        answer.name = key;
        answer.path = map[key].path;
        answer.value = map[key].operator.calc(operator);

        if (map[key].children) {
            answer.children = this._convertMapToList(map[key].children, operator);
        }
        answerList.push(answer);
    }
    return answerList;
};

exports.default = TreemapDataExtractor;

/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsTreemapCalculatedOptionBuilder() {
    _echartsOptionBuilder2.default.call(this);
}

EChartsTreemapCalculatedOptionBuilder.prototype = Object.create(_echartsOptionBuilder2.default.prototype);
EChartsTreemapCalculatedOptionBuilder.prototype.constructor = EChartsTreemapCalculatedOptionBuilder;

EChartsTreemapCalculatedOptionBuilder.prototype._setUpOptions = function () {
    this._registerDecorator('brushRemoval');
    this._registerDecorator('tooltipTreemap');
    this.setSeriesKeyColumns([]);
    this.setSeriesDataColumns(this.plotOptions.hierarchyCol[0].selected);
};

EChartsTreemapCalculatedOptionBuilder.prototype._defaultOptions = function () {
    var opt = _echartsOptionBuilder2.default.prototype._defaultOptions.call(this);
    delete opt.xAxis;
    delete opt.yAxis;
    return opt;
};

EChartsTreemapCalculatedOptionBuilder.prototype._buildSeriesData = function () {
    var localData = this.getLocalData(0);
    this.chartDataLocal = localData.data;
    var dataByDepth = {};
    var chartData = [];

    for (var s in this.series) {
        var depth = 0;
        for (var i in localData.data) {
            depth++;
            if (!dataByDepth[localData.data[i][0]]) {
                dataByDepth[localData.data[i][0]] = {};
            }
            dataByDepth[localData.data[i][0]]['' + localData.data[i][3]] = { index: i, parent: localData.data[i][2] };
        }

        for (var _i = depth - 1; _i > 0; _i--) {
            for (var name in dataByDepth[_i]) {
                if (!dataByDepth[_i - 1]['' + dataByDepth[_i][name].parent].children) {
                    dataByDepth[_i - 1]['' + dataByDepth[_i][name].parent].children = [];
                }
                dataByDepth[_i - 1]['' + dataByDepth[_i][name].parent].children.push(dataByDepth[_i][name]);
            }
        }

        for (var _name in dataByDepth[0]) {
            chartData.push(this._buildSeriesDataCustom(dataByDepth[0][_name]));
        }

        console.log(chartData);

        this.series[s].data = chartData;
    }
};

EChartsTreemapCalculatedOptionBuilder.prototype._buildSeriesDataCustom = function (input) {
    var data = {};
    var children = [];

    if (input.children && input.children.length > 0) {
        for (var i in input.children) {
            children.push(this._buildSeriesDataCustom(input.children[i]));
        }
        data = {
            name: this.chartDataLocal[input.index][1],
            path: this.chartDataLocal[input.index][3],
            value: this.chartDataLocal[input.index][4],
            children: children
        };
    } else {
        data = {
            name: this.chartDataLocal[input.index][1],
            path: this.chartDataLocal[input.index][3],
            value: this.chartDataLocal[input.index][4] };
    }
    return data;
};

EChartsTreemapCalculatedOptionBuilder.prototype._buildSeries = function () {
    var series = {};
    var localData = this.getLocalData(0);
    var keyIndexes = this.getSeriesKeyColumnIndexes(0);

    var i, row, seriesName, seriesItem;
    for (i in localData.data) {
        row = localData.data[i];
        seriesName = this.getSeriesName(row, keyIndexes);
        seriesItem = this._getSeriesItem(series, seriesName);
        series[seriesName] = seriesItem;
    }

    this._setSeries(series);
    this._buildSeriesData();
    this.eOptions.series = this.series;
};

EChartsTreemapCalculatedOptionBuilder.prototype.getSeriesName = function (row, columnIndexes) {
    return this.plotOptions.name || 'Root';
};

EChartsTreemapCalculatedOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = {
        type: this.bOptions.chart.type,
        label: {
            formatter: '{b}'
        },
        leafDepth: 3,
        levels: [{
            itemStyle: {
                normal: {
                    borderColor: '#777',
                    borderWidth: 0,
                    gapWidth: 1
                }
            }
        }, {
            itemStyle: {
                normal: {
                    borderColor: '#555',
                    borderWidth: 5,
                    gapWidth: 1
                },
                emphasis: {
                    borderColor: '#ddd'
                }
            },
            upperLabel: {
                normal: {
                    show: true
                }
            },
            colorSaturation: [0.3, 0.5]
        }, {
            itemStyle: {
                normal: {
                    borderWidth: 5,
                    gapWidth: 1,
                    borderColorSaturation: 0.6
                }
            },
            upperLabel: {
                normal: {
                    show: true
                }
            },
            colorSaturation: [0.3, 0.5]
        }],
        data: []
    };

    var treemapOptions = this.plotOptions;
    var attributes = ['visibleMin', 'visibleMax', 'label', 'itemStyle', 'levels'];
    this._applySeriesOptions(seriesItem, treemapOptions, attributes);

    return seriesItem;
};

exports.default = EChartsTreemapCalculatedOptionBuilder;

/***/ }),
/* 424 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _echartsMapOptionBuilder = __webpack_require__(425);

var _echartsMapOptionBuilder2 = _interopRequireDefault(_echartsMapOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * EChartsMap
 * @param parentId
 * @param options
 * @constructor
 */
/**
 * Source: echarts-scatter.js
 * Created by daewon.park on 2017-03-23.
 */
function EChartsMap(parentId, options) {
    _echartsWrapper2.default.call(this, parentId, options);
}

EChartsMap.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsMap.prototype.constructor = EChartsMap;

var virtualSeries = [{
    virtualSeries: true, type: "lines", data: []
}, {
    virtualSeries: true, type: "scatter", data: [],
    coordinateSystem: "geo"
}];

EChartsMap.prototype.render = function () {
    this.seriesHelper = this.getSeriesHelper();
    this._buildedOptions = this.seriesHelper.buildOptions(this.options);

    var plotOptions = this.seriesHelper.plotOptions;
    var mapName = plotOptions.mapName;
    if (this._getRegisteredMap(mapName)) {
        this._render();
    } else {
        this._setCustomGeoData(plotOptions);
    }
};

EChartsMap.prototype._render = function () {
    var opt = this._buildedOptions;
    this._bindInternalOptions(this.seriesHelper);
    this._clearChart();
    this._setEChartOption(opt);
    this._backupItemStyles();
};

EChartsMap.prototype._clearChart = function () {
    if (this.echart) {
        this.echart.clear();
    }
};

EChartsMap.prototype.getSeriesHelper = function () {
    return new _echartsMapOptionBuilder2.default();
};

EChartsMap.prototype._setCustomGeoData = function (plotOptions) {
    var _this = this;

    if (plotOptions.geoData && plotOptions.geoData.url) {
        var url;
        if (typeof plotOptions.geoData.url === 'function') {
            url = plotOptions.geoData.url(plotOptions.mapName);
        } else {
            url = plotOptions.geoData.url;
        }
        $.ajax({
            url: url,
            async: false
        }).done(function (result) {
            _this._lazyGeoData(result);
        }).fail(function (e) {
            _this._failToLoadGeoData();
        });
    } else {
        this._failToLoadGeoData();
    }
};

EChartsMap.prototype._failToLoadGeoData = function () {
    var plotOptions = this.seriesHelper.plotOptions;
    var mapName = plotOptions.mapName;
    if (mapName == '') this.seriesHelper._throwValidation('Map Type is required.');else this.seriesHelper._throwValidation('This Map(' + mapName + ') is not exist.');
};

EChartsMap.prototype._lazyGeoData = function (geoJSON, specialAreas) {
    this._registerGeoData(geoJSON, specialAreas);
    this._render();
};

EChartsMap.prototype._registerGeoData = function (geoJSON, specialAreas) {
    var plotOptions = this.seriesHelper.plotOptions;
    var mapName = plotOptions.mapName;
    echarts.registerMap(mapName, geoJSON, specialAreas);
};

EChartsMap.prototype._getRegisteredMap = function (mapName) {
    if (mapName == '') this._failToLoadGeoData();else return echarts.getMap(mapName);
};

exports.default = EChartsMap;

/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

var _echartsMapLinesExtractor = __webpack_require__(426);

var _echartsMapLinesExtractor2 = _interopRequireDefault(_echartsMapLinesExtractor);

var _echartsAxisTypeOptionBuilder = __webpack_require__(19);

var _echartsAxisTypeOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsMapOptionBuilder() {
    _echartsOptionBuilder2.default.call(this);
}

// EChartsMapOptionBuilder.prototype.buildOptions = function (options) {
//     this.bOptions = options;
//     this.plotOptions = this.getPlotOptions();
//     this.eOptions = this._defaultOptions();
//     this._setUpOptions();
//     this._buildSeries();
//     this._decorate();
//     this._configureChartOptions();
//     return this.eOptions;
// };

EChartsMapOptionBuilder.prototype = Object.create(_echartsOptionBuilder2.default.prototype);
EChartsMapOptionBuilder.prototype.constructor = EChartsMapOptionBuilder;

EChartsMapOptionBuilder.prototype._setUpOptions = function () {
    var isSizeByExistArr = this.plotOptions.layers.map(function (layerObj) {
        if (typeof layerObj.sizeBy == 'undefined' || typeof layerObj.sizeBy[0].selected == 'undefined') return false;
        if ($.isArray(layerObj.sizeBy[0].selected)) {
            if (layerObj.sizeBy[0].selected[0] == null) return false;else return layerObj.sizeBy[0].selected.length > 0;
        } else return false;
    });
    this._registerDecorator('markerByType');
    this._registerDecorator('mapStyle');
    this._registerDecorator('tooltipMap');
    this._registerDecorator('marker', { isKey: isSizeByExistArr });
    this._registerDecorator('bubbleSize');
    for (var i in this.plotOptions.layers) {
        this.setTooltipDataColumns(this.plotOptions.layers[i].latitude[0].selected);
        this.setTooltipDataColumns(this.plotOptions.layers[i].longitude[0].selected);
    }
};

EChartsMapOptionBuilder.prototype._buildSeries = function (layerIndex) {
    return this.getColumnIndexes(this.plotOptions.layers[layerIndex].colorBy[0].selected, localData.columns);
};

EChartsMapOptionBuilder.prototype._buildSeries = function () {
    var layers = this.plotOptions.layers;

    var series = {};
    var localData = this.getLocalData();

    var i, row, seriesName, seriesItem, seriesKeyList, seriesKey;

    for (var l = 0; l < layers.length; l++) {
        var layer = layers[l];
        var layerType = layer.type;
        var layerName = layers.length >= 1 ? 'Layer ' + (l + 1) : '';

        var keyIndexes = this.getSeriesKeyColumnIndexes(l);

        var latitudeIndex = this.getColumnIndexes(layer.latitude[0].selected, localData.columns)[0];
        var longitudeIndex = this.getColumnIndexes(layer.longitude[0].selected, localData.columns)[0];

        if (!(latitudeIndex >= 0 && longitudeIndex >= 0)) continue;

        for (i in localData.data) {
            row = localData.data[i];

            if (layerName) {
                seriesKeyList = this.getCellText(row, keyIndexes, layerName);
            } else {
                seriesKeyList = this.getCellText(row, keyIndexes);
            }

            seriesKey = seriesKeyList.join(' ');
            seriesItem = this._getSeriesItem(series, seriesKey, layerType);

            series[seriesKey] = seriesItem;
            if (!seriesItem.extractor) {
                seriesItem.extractor = this._newSeriesExtractor(l);
                seriesItem.extractor.keys = this.getCellText(row, keyIndexes);
                seriesItem.keys = seriesItem.extractor.keys;
            }
            seriesItem.extractor.push(row, i);
        }
    }

    this._setSeries(series);
    this._buildSeriesData();
    this.eOptions.series = this.series;
};

EChartsMapOptionBuilder.prototype.getSeriesKeyColumnIndexes = function (layerIndex) {
    var layers = this.plotOptions.layers;
    var localData = this.getLocalData();
    var keyColumns = layers[layerIndex].colorBy.length > 0 ? this.filterNullColumn(layers[layerIndex].colorBy[0].selected) : [];

    return this.getColumnIndexes(keyColumns, localData.columns);
};

EChartsMapOptionBuilder.prototype._newSeriesExtractor = function (layerIndex) {
    var layers = this.plotOptions.layers;
    var layer = layers[layerIndex];
    var layerType = layer.type;

    var extractor;
    if (layerType === 'lines') {
        extractor = this._createMapLinesExtractor(layer);
    } else {
        extractor = this._createPointExtractor(layer);
    }

    return extractor;
};

EChartsMapOptionBuilder.prototype._createMapLinesExtractor = function (layer) {
    var localData = this.getLocalData();
    var latitudeIndexes = this.getColumnIndexes(layer.latitude[0].selected, localData.columns);
    var longitudeIndexes = this.getColumnIndexes(layer.longitude[0].selected, localData.columns);
    var sortByIndexes = this.getColumnIndexes(this.filterNullColumn(layer.sortBy[0].selected), localData.columns);
    var extractor = new _echartsMapLinesExtractor2.default();

    extractor.setTarget({
        index: longitudeIndexes,
        type: 'value',
        isKey: false
    });
    extractor.setTarget({
        index: latitudeIndexes,
        type: 'value',
        isKey: false
    });

    extractor.setSortIndexes(sortByIndexes);
    return extractor;
};

EChartsMapOptionBuilder.prototype._createPointExtractor = function (layer) {
    var localData = this.getLocalData();
    var latitudeIndexes = this.getColumnIndexes(layer.latitude[0].selected, localData.columns);
    var longitudeIndexes = this.getColumnIndexes(layer.longitude[0].selected, localData.columns);
    var sizeByIndexes = this.getColumnIndexes(layer.sizeBy[0].selected, localData.columns);
    var extractor = new _echartsPointExtractor2.default();

    var isKey = sizeByIndexes.length > 0 ? true : false;

    extractor.setTarget({
        index: longitudeIndexes,
        type: 'value',
        isKey: isKey
    });

    extractor.setTarget({
        index: latitudeIndexes,
        type: 'value',
        isKey: isKey
    });

    if (sizeByIndexes.length > 0 && sizeByIndexes[0] >= 0) {

        var aggregation = layer.sizeBy[0].selected[0].aggregation || 'count';

        extractor.setTarget({
            index: sizeByIndexes,
            type: 'value',
            isKey: false
        });

        extractor.setExtractOperator(function (pointObject) {
            var operator = new _aggregationOperator2.default(pointObject.value);
            for (var i = 0; i < pointObject.indexList.length; i++) {
                operator.add(pointObject.indexList[i], pointObject.point[i] ? pointObject.point[i][2] : 1);
            }
            return [{
                value: pointObject.value.concat(operator.calc(aggregation)),
                dataIndexes: pointObject.indexList,
                layer: layer
            }];
        });
    } else {
        extractor.setExtractOperator(function (pointObject) {
            return [{
                value: pointObject.point[0],
                dataIndexes: pointObject.indexList,
                layer: layer
            }];
        });
    }
    return extractor;
};

EChartsMapOptionBuilder.prototype._defaultOptions = function () {
    var opt = {
        tooltip: {
            trigger: 'item',
            showDelay: 0
        },
        toolbox: {
            show: false
        },
        legend: {
            show: false
        }
    };

    $.extend(true, opt.tooltip, this.bOptions.tooltip);
    opt.color = this.bOptions.colorSet;
    opt.grid = this.bOptions.grid;
    opt.geo = this._createGeoOptions();

    return opt;
};

EChartsMapOptionBuilder.prototype._createGeoOptions = function () {
    var mapName = this.plotOptions.mapName;
    var geoOptions = {
        type: 'map',
        map: mapName,
        roam: true,
        center: ["", ""]
        // label: {
        //     emphasis: {
        //         show: false
        //     }
        // },
        // itemStyle: {
        //     normal: {
        //         borderColor: '#404a59',
        //         areaColor: '#eee'
        //     },
        //     emphasis: {
        //         areaColor: '#eee'
        //     }
        // }
    };
    $.extend(true, geoOptions, this.plotOptions.mapStyle);

    return geoOptions;
};

EChartsMapOptionBuilder.prototype._getSeriesItem = function (series, name, layerType) {
    var seriesItem = series[name];
    if (!seriesItem) {
        seriesItem = this._newSeriesItem(layerType);
        seriesItem.name = name;
    }
    return seriesItem;
};

EChartsMapOptionBuilder.prototype._newSeriesItem = function (layerType) {
    var seriesItem = _echartsOptionBuilder2.default.prototype._newSeriesItem.call(this);
    if (layerType === 'lines') {
        seriesItem.type = 'lines';
    } else {
        seriesItem.type = 'scatter';
        seriesItem.coordinateSystem = "geo";
    }
    return seriesItem;
};

EChartsMapOptionBuilder.prototype._setSeriesDataSortRule = function () {
    var xAxisType = this._getColumnDataType(this.filterNullColumn(this.bOptions.xAxis[0].selected));
    var yAxisType = this._getColumnDataType(this.filterNullColumn(this.bOptions.yAxis[0].selected));

    var sortRule = function sortRule(a, b) {
        var xComp;
        if (xAxisType === 'category') xComp = _optionUtils2.default.stringSortRule(a.value[0], b.value[0]);else if (xAxisType === 'time') xComp = _optionUtils2.default.timeSortRule(a.value[0], b.value[0]);else xComp = _optionUtils2.default.numericSortRule(a.value[0], b.value[0]);

        if (xComp === 0) {
            var yComp;
            if (yAxisType === 'category') yComp = _optionUtils2.default.stringSortRule(a.value[1], b.value[1]);else if (yAxisType === 'time') yComp = _optionUtils2.default.timeSortRule(a.value[1], b.value[1]);else yComp = _optionUtils2.default.numericSortRule(a.value[1], b.value[1]);
            return yComp;
        } else {
            return xComp;
        }
    };

    this._seriesDataSortRule = sortRule;
};

exports.default = EChartsMapOptionBuilder;

/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsExtractor = __webpack_require__(45);

var _echartsExtractor2 = _interopRequireDefault(_echartsExtractor);

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function MapLinesExtractor() {
    _echartsExtractor2.default.call(this);
    this._pointerList = [];
    this._sortIndexes = [];
}

MapLinesExtractor.prototype = Object.create(_echartsExtractor2.default.prototype);
MapLinesExtractor.prototype.constructor = MapLinesExtractor;

MapLinesExtractor.prototype.setSortIndexes = function (sortIndexes) {
    this._sortIndexes = sortIndexes;
};

MapLinesExtractor.prototype.push = function (row, rowIndex) {
    var pointer = { point: [], indexList: [], sortList: [] };
    var index = Number(rowIndex);
    var value;
    var prePointList = [];
    var currentPointList = [];
    var indexes;

    for (var i = 0; i < this._columnIndices.length; i++) {
        indexes = this._columnIndices[i];
        prePointList = currentPointList.concat([]);
        currentPointList = [];
        for (var j = 0; j < indexes.length; j++) {
            value = this._getPointValue(row, indexes[j], index);
            if (prePointList.length === 0) {
                currentPointList.push([value]);
            } else {
                for (var k = 0; k < prePointList.length; k++) {
                    currentPointList.push(prePointList[k].concat([value]));
                }
            }
        }
    }

    for (var s = 0; s < this._sortIndexes.length; s++) {
        pointer.sortList.push(row[this._sortIndexes[s]]);
    }

    pointer.point = currentPointList;
    pointer.indexList.push(index);
    this._pointerList.push(pointer);
};

MapLinesExtractor.prototype._getPointValue = function (row, columnIndex) {
    return row[columnIndex];
};

MapLinesExtractor.prototype.extract = function () {
    var _this = this;
    var answer = [];

    if (this._pointerList.length <= 1) return answer;

    if (this._sortIndexes.length > 0) {
        this._pointerList.sort(function (a, b) {
            for (var sortIndex = 0; sortIndex < a.sortList.length; sortIndex++) {
                if (a.sortList[sortIndex] > b.sortList[sortIndex]) {
                    return 1;
                } else if (a.sortList[sortIndex] < b.sortList[sortIndex]) {
                    return -1;
                } else if (sortIndex + 1 === a.sortList.length) {
                    return 1;
                }
            }
        });
    }

    for (var i = 1; i < this._pointerList.length; i++) {
        var fromPointer = this._pointerList[i].point[0];
        var toPointer = this._pointerList[i - 1].point[0];
        answer.push({
            coords: [[fromPointer[0], fromPointer[1]], [toPointer[0], toPointer[1]]]
        });
    }
    return answer;
};

exports.default = MapLinesExtractor;

/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _chartUtils = __webpack_require__(24);

var _chartUtils2 = _interopRequireDefault(_chartUtils);

var _echartsDonutOptionBuilder = __webpack_require__(428);

var _echartsDonutOptionBuilder2 = _interopRequireDefault(_echartsDonutOptionBuilder);

var _echartsDonutCalculatedOptionBuilder = __webpack_require__(429);

var _echartsDonutCalculatedOptionBuilder2 = _interopRequireDefault(_echartsDonutCalculatedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: echarts-donut.js
 * Created by daewon.park on 2017-03-30.
 */

function EChartsDonut(parentId, options) {
    _echartsWrapper2.default.call(this, parentId, options);
}

EChartsDonut.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsDonut.prototype.constructor = EChartsDonut;

EChartsDonut.prototype.objectWithKeySorted = function (object) {
    var sortable = [];
    var newObj = [];
    for (var key in object) {
        if (object.hasOwnProperty(key)) sortable.push([key, object[key]]);
    }sortable.sort(function (a, b) {
        var x = a[1].name,
            y = b[1].name;
        if (Number(x)) x = Number(x);
        if (Number(y)) y = Number(y);
        return x < y ? -1 : x > y ? 1 : 0;
    });

    for (var i in sortable) {
        newObj.push(sortable[i][1]);
    }
    return newObj;
};

EChartsDonut.prototype.render = function () {
    if (this.options.source.localData[0].dataType === 'chartdata') {
        this.seriesHelper = new _echartsDonutCalculatedOptionBuilder2.default();
    } else {
        this.seriesHelper = new _echartsDonutOptionBuilder2.default();
    }
    var opt = this.seriesHelper.buildOptions(this.options);
    // opt.series[0].data = this.objectWithKeySorted(opt.series[0].data);
    this._bindInternalOptions(this.seriesHelper);
    this._doDataValidation(opt);
    this._setEChartOption(opt);
    this._backupItemStyles();
};

EChartsDonut.prototype._doDataValidation = function (opt) {
    _chartUtils2.default.limitMaxSeriesSize(opt.series);
};

EChartsDonut.prototype.getLegendData = function () {
    var legendData = [];

    var legendSelection = this._getEChartOption().legend[0].selected;
    var keyColumns = this.seriesHelper.getColorByColumns();
    if (keyColumns.length > 0) {
        var opt = this.seriesHelper.eOptions;
        if (opt.series.length > 0) {
            for (var i in opt.series[0].data) {
                var item = {
                    name: opt.series[0].data[i].name,
                    symbol: 'square',
                    color: opt.color[parseFloat(i) % opt.color.length]
                };
                if (typeof legendSelection[item.name] === 'undefined') {
                    item.selected = true;
                } else {
                    item.selected = legendSelection[item.name];
                }
                legendData.push(item);
            }
        }
    }

    return legendData;
};

exports.default = EChartsDonut;

/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EchartsDonutOptionBuilder() {
    _echartsOptionBuilder2.default.call(this);
}

EchartsDonutOptionBuilder.prototype = Object.create(_echartsOptionBuilder2.default.prototype);
EchartsDonutOptionBuilder.prototype.constructor = EchartsDonutOptionBuilder;

EchartsDonutOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['radius', 'itemStyle', 'label', 'silent', 'center'];
    this._registerDecorator('tooltipPie');
    this._registerDecorator('plotOptions');
    this._registerDecorator('axisRemoval');
    this._registerDecorator('brushRemoval');
    this._registerDecorator('sortLegendValue');
    this._registerDecorator('pieLabelDecorator');
    this.setSeriesKeyColumns([]);
    this._setLegendValueRule();
    this.setSeriesDataColumns(this.bOptions.colorBy[0].selected);
    this.setSeriesDataColumns(this.bOptions.plotOptions.donut.sizeBy[0].selected);
    this.setTooltipDataColumns(this.bOptions.colorBy[0].selected);
    this.setTooltipDataColumns(this.bOptions.plotOptions.donut.sizeBy[0].selected);
};

EchartsDonutOptionBuilder.prototype._setLegendValueRule = function () {
    this._axisSortRule = this.bOptions.plotOptions.donut.axisSort;
};

EchartsDonutOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData(0);
    var dataColumns = this.getSeriesDataColumns(0);
    var aggregation = 'count';
    if (dataColumns[dataColumns.length - 1] !== null && dataColumns[dataColumns.length - 1].aggregation && dataColumns[dataColumns.length - 1].aggregation !== 'none') aggregation = dataColumns[dataColumns.length - 1].aggregation;
    var colorByIndexes = this.getColumnIndexes(this.bOptions.colorBy[0].selected, localData.columns);
    var sizeByIndexes = this.getColumnIndexes(this.bOptions.plotOptions.donut.sizeBy[0].selected, localData.columns);

    var extractor = new _echartsPointExtractor2.default();

    extractor.setTarget({
        index: colorByIndexes,
        type: 'category',
        isKey: true
    });

    extractor.setTarget({
        index: sizeByIndexes,
        type: 'value',
        isKey: false
    });

    var _this = this;
    extractor.setExtractOperator(function (pointObject) {
        var operator = new _aggregationOperator2.default(pointObject.value);
        for (var i = 0; i < pointObject.indexList.length; i++) {
            operator.add(pointObject.indexList[i], pointObject.point[i] ? pointObject.point[i][pointObject.point[i].length - 1] : 1);
        }
        var seriesName = pointObject.value.join(' ');
        var name = void 0;
        if (_this.bOptions.legend.legendMap && _this.bOptions.legend.legendMap[0]) {
            name = _this.bOptions.legend.legendMap[0][seriesName] ? _this.bOptions.legend.legendMap[0][seriesName] : seriesName;
        } else {
            name = seriesName;
        }
        return [{
            keys: pointObject.value,
            name: name,
            value: Math.abs(operator.calc(aggregation)),
            dataIndexes: pointObject.indexList,
            minusValue: operator.calc(aggregation) < 0 ? true : false
        }];
    });

    return extractor;
};

EchartsDonutOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = {
        type: 'pie',
        animationDuration: this.bOptions.chart.animationDuration,
        large: true,
        largeThreshold: 5000,
        data: []
    };

    return seriesItem;
};

exports.default = EchartsDonutOptionBuilder;

/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsOptionBuilder = __webpack_require__(15);

var _echartsOptionBuilder2 = _interopRequireDefault(_echartsOptionBuilder);

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EchartsDonutCalculatedOptionBuilder() {
    _echartsOptionBuilder2.default.call(this);
}

EchartsDonutCalculatedOptionBuilder.prototype = Object.create(_echartsOptionBuilder2.default.prototype);
EchartsDonutCalculatedOptionBuilder.prototype.constructor = EchartsDonutCalculatedOptionBuilder;

EchartsDonutCalculatedOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['radius', 'itemStyle', 'label', 'silent', 'center'];
    this._registerDecorator('tooltipPieCalculated');
    this._registerDecorator('plotOptions');
    this._registerDecorator('axisRemoval');
    this._registerDecorator('brushRemoval');
    this._registerDecorator('sortLegendValue');
    this._registerDecorator('pieLabelDecorator');
    this.setSeriesKeyColumns([]);
    this._setLegendValueRule();
    this.setSeriesDataColumns(this.bOptions.colorBy[0].selected);
    this.setSeriesDataColumns(this.bOptions.plotOptions.donut.sizeBy[0].selected);
    this.setTooltipDataColumns(this.bOptions.colorBy[0].selected);
    this.setTooltipDataColumns(this.bOptions.plotOptions.donut.sizeBy[0].selected);
};

EchartsDonutCalculatedOptionBuilder.prototype._setLegendValueRule = function () {
    this._axisSortRule = this.bOptions.plotOptions.pie.axisSort;
};

EchartsDonutCalculatedOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData(0);
    var colorByIndexes = this.getColumnIndexes([{ name: 'colorBy' }], localData.chartColumns);
    var sizeByIndexes = this.getColumnIndexes([{ name: 'sizeBy' }], localData.chartColumns);

    var extractor = new _echartsPointExtractor2.default();

    extractor.setTarget({
        index: colorByIndexes,
        type: 'category',
        isKey: true
    });

    extractor.setTarget({
        index: sizeByIndexes,
        type: 'value',
        isKey: false
    });

    var _this = this;
    extractor.setExtractOperator(function (pointObject) {
        var pointValue = pointObject.value;
        var names = [];
        for (var i in pointValue) {
            if ($.isArray(pointValue[i])) {
                for (var v in pointValue[i]) {
                    names.push(pointValue[i][v]);
                }
            } else {
                names.push(pointValue[i]);
            }
        }
        var seriesName = names.join(' ');
        var name = void 0;
        if (_this.bOptions.legend.legendMap && _this.bOptions.legend.legendMap[0]) {
            name = _this.bOptions.legend.legendMap[0][seriesName] ? _this.bOptions.legend.legendMap[0][seriesName] : seriesName;
        } else {
            name = seriesName;
        }

        return [{
            keys: pointObject.value,
            name: name,
            value: Math.abs(pointObject.point[0][1]),
            dataIndexes: pointObject.indexList,
            minusValue: pointObject.point[0][1] < 0 ? true : false
        }];
    });

    return extractor;
};

EchartsDonutCalculatedOptionBuilder.prototype._newSeriesItem = function () {
    var seriesItem = {
        type: 'pie',
        animationDuration: this.bOptions.chart.animationDuration,
        large: true,
        largeThreshold: 5000,
        data: []
    };

    return seriesItem;
};

exports.default = EchartsDonutCalculatedOptionBuilder;

/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _customWrapper = __webpack_require__(431);

var _customWrapper2 = _interopRequireDefault(_customWrapper);

var _rxjs = __webpack_require__(101);

var _operators = __webpack_require__(117);

var _geo = __webpack_require__(547);

var _rx = __webpack_require__(548);

var _canvas = __webpack_require__(549);

var _canvas2 = _interopRequireDefault(_canvas);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* -----------------------------------------------------
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  image-grid.js
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  Created by hyunseok.oh@samsung.com on 2019-03-13.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ---------------------------------------------------- */


var BUTTON_WIDTH = 30;
var BUTTON_PADDING = 10;
var UNIT = BUTTON_WIDTH / 2;

var ImageGrid = function (_CustomWrapper) {
    _inherits(ImageGrid, _CustomWrapper);

    function ImageGrid(parentId, options) {
        _classCallCheck(this, ImageGrid);

        var _this = _possibleConstructorReturn(this, (ImageGrid.__proto__ || Object.getPrototypeOf(ImageGrid)).call(this, parentId, options));

        _this.$canvas = document.createElement('canvas');
        _this.$wrapper = $('<div class="img-grid__canvas-wrapper"/>');
        _this.$wrapper.append(_this.$canvas);
        _this.$parent.append(_this.$wrapper);

        _this.$canvas.setAttribute('width', _this.$wrapper.width());
        _this.$canvas.setAttribute('height', _this.$wrapper.height());
        _this.canvas = new _canvas2.default(_this.$canvas, {});
        _this.subscriptions = [];
        _this.resizeSubscription = (0, _rxjs.timer)(1000).pipe((0, _operators.mergeMap)(function () {
            return (0, _rxjs.interval)(1000 / 30).pipe((0, _operators.map)(function () {
                return {
                    width: _this.$wrapper.width(),
                    height: _this.$wrapper.height()
                };
            }), (0, _operators.distinctUntilChanged)(function (prev, cur) {
                return prev.width === cur.width && prev.height === cur.height;
            }));
        })).subscribe(function (_ref) {
            var width = _ref.width,
                height = _ref.height;

            _this.$canvas.setAttribute('width', width);
            _this.$canvas.setAttribute('height', height);
            _this.render();
        });
        return _this;
    }

    _createClass(ImageGrid, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var o = this.options;
            var cvs = this.canvas;
            var _o$grid = o.grid,
                n = _o$grid.row,
                m = _o$grid.column;


            var parseWidth = (0, _canvas.parseSize)(this.$canvas.width);
            var parseHeight = (0, _canvas.parseSize)(this.$canvas.height);

            var left = parseWidth(o.grid.left);
            var right = o.grid.width === 'auto' ? this.$canvas.width - parseWidth(o.grid.right) : left + parseWidth(o.grid.width);
            var top = parseWidth(o.grid.top);
            var bottom = o.grid.height === 'auto' ? this.$canvas.height - parseHeight(o.grid.bottom) : top + parseHeight(o.grid.height);

            var viewWidth = right - left;
            var viewHeight = bottom - top;
            var width = o.grid.useCellWidth && o.grid.cellWidth || viewWidth / m;
            var height = o.grid.useCellHeight && o.grid.cellHeight || viewHeight / n;

            var getName = function getName(o) {
                return o ? o.name : '';
            };
            var matchesName = function matchesName(v) {
                return function (_ref2) {
                    var name = _ref2.name;
                    return name === v;
                };
            };

            var selectedColumn = getName(o.imageColumn[0].selected[0]);
            var labelColumn = getName(o.labelColumn[0].selected[0]);
            var sortBySelected = o.sortBy[0].selected.filter(function (g) {
                return g !== null;
            }).map(getName);
            if (!o.source.localData || o.source.localData.length === 0) return;
            var localData = o.source.localData[0];
            var getColumnIndex = function getColumnIndex(pred) {
                return localData.columns.findIndex(pred);
            };
            var imgIndex = getColumnIndex(matchesName(selectedColumn));
            var grpIndex = sortBySelected.map(function (g) {
                return getColumnIndex(matchesName(g));
            });
            var labelIndex = getColumnIndex(matchesName(labelColumn));
            var datas = localData.data;

            var dataArray = function (ds) {
                return ds.slice().sort(function (a, b) {
                    var _iteratorNormalCompletion = true;
                    var _didIteratorError = false;
                    var _iteratorError = undefined;

                    try {
                        for (var _iterator = grpIndex[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                            var gi = _step.value;

                            if (gi >= 0) {
                                if (typeof a[gi] === 'number' && a[gi] !== b[gi]) {
                                    return a[gi] - b[gi];
                                }
                                var v = a[gi].localeCompare(b[gi]);
                                if (v !== 0) return v;
                            }
                        }
                    } catch (err) {
                        _didIteratorError = true;
                        _iteratorError = err;
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion && _iterator.return) {
                                _iterator.return();
                            }
                        } finally {
                            if (_didIteratorError) {
                                throw _iteratorError;
                            }
                        }
                    }

                    return 0;
                });
            }(datas);

            var windowOffset = 0;
            var windowSize = n * m;
            var minWindowOffset = 0;
            var maxWindowOffset = Math.floor((dataArray.length - 1) / windowSize);
            var buttonx1 = left + viewWidth - UNIT * 4 - 1 * BUTTON_PADDING;
            var buttony1 = top - BUTTON_PADDING - UNIT;
            var upButtonPoints = [[buttonx1 + UNIT, buttony1], [buttonx1, buttony1 + UNIT], [buttonx1 + 2 * UNIT, buttony1 + UNIT]];

            var downButtonPoints = upButtonPoints.map((0, _geo.reflectX)(buttonx1 + 2 * UNIT + BUTTON_PADDING / 4)).map((0, _geo.reflectY)(buttony1 + UNIT / 2));

            this.clearSubscription();

            var loaded = false;
            cvs.clear();
            cvs.setFrame(function () {
                cvs.clearRect(left, top, viewWidth, viewHeight);
                if (!o.grid.showImageGrid) return;
                var points = [[left, top], [left + viewWidth, top], [left + viewWidth, top + viewHeight], [left, top + viewHeight]];

                for (var i = 0; i < 4; ++i) {
                    cvs.drawLine.apply(cvs, _toConsumableArray(points[i].concat(points[(i + 1) % 4])));
                }

                for (var _i = 1; _i * height < viewHeight; ++_i) {
                    cvs.drawLine(left, top + height * _i, left + viewWidth, top + height * _i);
                }

                for (var _i2 = 1; _i2 * width < viewWidth; ++_i2) {
                    cvs.drawLine(left + width * _i2, top, left + width * _i2, top + viewHeight);
                }
            });

            var drawButton = function drawButton(offset) {
                var buttonAreaWidth = BUTTON_WIDTH * 2 + 2 * BUTTON_PADDING;
                var buttonAreaHeight = BUTTON_WIDTH;
                return cvs.clipRect(buttonx1, buttony1, buttonAreaWidth, buttonAreaHeight, function () {
                    var enabled = 'rgb(91, 91, 91)';
                    var disabled = 'rgb(205, 205, 205)';
                    var prevDisabled = offset === minWindowOffset;
                    var nextDisabled = offset === maxWindowOffset;
                    cvs.fillPath(upButtonPoints, prevDisabled ? disabled : enabled);
                    cvs.fillPath(downButtonPoints, nextDisabled ? disabled : enabled);
                    return true;
                });
            };

            var drawWindow = function drawWindow(start) {
                return cvs.clipRect(left, top, viewWidth, viewHeight, function () {
                    return Promise.all(dataArray.slice(start, start + n * m).map(function (data, i) {
                        var x = i % m;
                        var y = Math.floor(i / m);
                        return { data: data, x: x, y: y };
                    }).map(function (_ref3) {
                        var data = _ref3.data,
                            x = _ref3.x,
                            y = _ref3.y;

                        var d = JSON.parse(data[imgIndex]);
                        // const d = data[imgIndex];

                        var _fit = (0, _geo.fit)(width, height, d.info.width, d.info.height),
                            nw = _fit.width,
                            nh = _fit.height;

                        return cvs.drawImageData(d.data, left + x * width + (width - nw) / 2, top + y * height + (height - nh) / 2, nw, nh);
                    }));
                });
            };

            var drawImages = function drawImages(offset) {
                _this2.clearTooltip();
                loaded = false;
                cvs.triggerDrawLoops([function (ctx) {
                    loaded = false;
                    ctx.save();
                    ctx.globalCompositeOperation = 'source-over';
                    return drawButton(offset).then(function () {
                        ctx.restore();
                        return drawWindow(offset * windowSize);
                    });
                }, function () {
                    loaded = true;
                    return Promise.resolve();
                }]);
            };

            drawImages(0);

            var click$ = cvs.onMouseClick;
            var deltaHandler = function deltaHandler(delta) {
                var nextWindowOffset = delta > 0 ? Math.min(maxWindowOffset, windowOffset + 1) : Math.max(minWindowOffset, windowOffset - 1);

                if (windowOffset !== nextWindowOffset) {
                    windowOffset = nextWindowOffset;
                    drawImages(windowOffset);
                }
            };

            var subscription2 = click$.pipe((0, _operators.throttleTime)(100), (0, _operators.map)(function (_ref4) {
                var x = _ref4.x,
                    y = _ref4.y;

                if ((0, _geo.inner)(upButtonPoints, [x, y])) return -1;
                if ((0, _geo.inner)(downButtonPoints, [x, y])) return 1;
                return 0;
            }), (0, _operators.filter)(function (x) {
                return x === 1 || x === -1;
            })).subscribe(deltaHandler);

            var last = null;
            var subscription = click$.pipe((0, _operators.map)(function (_ref5) {
                var x = _ref5.x,
                    y = _ref5.y;
                return { x: x - left, y: y - top };
            })).subscribe(function (_ref6) {
                var cx = _ref6.x,
                    cy = _ref6.y;

                var x = Math.floor(cx / width);
                var y = Math.floor(cy / height);

                var _ref7 = function () {
                    var _$canvas$getBoundingC = _this2.$canvas.getBoundingClientRect(),
                        osx = _$canvas$getBoundingC.left,
                        osy = _$canvas$getBoundingC.top;

                    return {
                        tx: left + cx + osx,
                        ty: top + cy + osy
                    };
                }(),
                    tx = _ref7.tx,
                    ty = _ref7.ty;

                var order = windowOffset * windowSize + y * m + x;
                if (!loaded) return;
                var inRange = function inRange(c, l, r) {
                    return l <= c && c < r;
                };
                var inFrame = inRange(x, 0, m) && inRange(y, 0, n) && left + cx < right && top + cy < bottom;
                var inWindow = 0 <= order && order < dataArray.length;
                var mapForEsc = {
                    '<': '&lt;',
                    '>': '&gt;'
                };
                var esc = function esc(str) {
                    return (str + '').split('').map(function (s) {
                        return mapForEsc[s] || s;
                    }).join('');
                };
                if (inFrame && inWindow) {
                    if (!_this2.$tooltip) {
                        _this2.$tooltip = document.createElement('div');
                        _this2.$tooltip.className = 'img-grid__tooltip';

                        document.body.appendChild(_this2.$tooltip);
                        _this2.$tooltip.appendChild(function () {
                            var closeButton = document.createElement('div');
                            closeButton.className = 'img-grid__close-button';
                            closeButton.addEventListener('click', function () {
                                _this2.clearTooltip();
                                last = null;
                            });

                            var textDiv = document.createElement('span');
                            textDiv.className = 'img-grid__img-header-text-div';

                            var draggableHeader = document.createElement('div');
                            draggableHeader.className = 'img-grid__img-header';
                            draggableHeader.appendChild(textDiv);
                            draggableHeader.appendChild(closeButton);
                            _this2.subscriptions.push((0, _rx.draggable)(draggableHeader).subscribe(function (_ref8) {
                                var from = _ref8.from,
                                    to = _ref8.to;

                                var _positionDiff = (0, _geo.positionDiff)(from, to),
                                    dx = _positionDiff.dx,
                                    dy = _positionDiff.dy;

                                var _getPosition = (0, _rx.getPosition)(_this2.$tooltip),
                                    x = _getPosition.x,
                                    y = _getPosition.y;

                                (0, _rx.moveTo)(_this2.$tooltip, x + dx, y + dy);
                            }));
                            return draggableHeader;
                        }());

                        var containerContainer = document.createElement('div');
                        containerContainer.className = 'img-grid__img-container-container';

                        var imgContainer = document.createElement('div');
                        imgContainer.className = 'img-grid__img-container';

                        var infoContainer = document.createElement('div');
                        infoContainer.className = 'img-grid__img-info-container';

                        var info = JSON.parse(dataArray[order][imgIndex]).info;
                        // const info = (dataArray[order][imgIndex]).info;
                        var infoTable = document.createElement('table');

                        var tr = function tr(elem, key, value) {
                            var e = document.createElement('tr');
                            var escapedKey = esc(key);
                            var escapedValue = esc(value);
                            e.innerHTML = '\n                                <' + elem + ' title="' + escapedKey + '">' + escapedKey + '</' + elem + '>\n                                <' + elem + ' title="' + escapedValue + '">' + escapedValue + '</' + elem + '>\n                            ';
                            return e;
                        };
                        infoTable.appendChild(tr('th', 'Name', 'Value'));
                        Object.entries(info).forEach(function (_ref9) {
                            var _ref10 = _slicedToArray(_ref9, 2),
                                k = _ref10[0],
                                v = _ref10[1];

                            infoTable.appendChild(tr('td', k, v));
                        });
                        infoContainer.appendChild(infoTable);
                        containerContainer.appendChild(imgContainer);
                        containerContainer.appendChild(infoContainer);
                        _this2.$tooltip.appendChild(containerContainer);
                    }

                    (0, _rx.moveTo)(_this2.$tooltip, tx, ty);
                    if (last !== order) {
                        _this2.$tooltip.querySelector('.img-grid__img-container').innerHTML = '';
                        _this2.$tooltip.querySelector('.img-grid__img-header-text-div').innerHTML = labelIndex >= 0 ? esc(dataArray[order][labelIndex]) : '';
                        // dataToImage((dataArray[order][imgIndex]).data)
                        (0, _canvas.dataToImage)(JSON.parse(dataArray[order][imgIndex]).data).then(function (img) {
                            last = order;
                            img.className = 'img-grid__tooltip-img';
                            _this2.$tooltip.querySelector('.img-grid__img-container').appendChild(img);
                            (0, _rx.moveTo)(_this2.$tooltip, Math.min(tx, $(document.body).width() - $(_this2.$tooltip).width()), Math.min(ty, $(document.body).height() - $(_this2.$tooltip).height()));
                        });
                    }
                } else {
                    _this2.clearTooltip();
                    last = null;
                }
            });

            this.subscriptions.push(subscription);
            this.subscriptions.push(subscription2);
        }
    }, {
        key: 'destroy',
        value: function destroy() {
            this.clearSubscription();
            if (this.canvas) {
                this.canvas.destroy();
                this.canvas = null;
            }

            if (this.$canvas) {
                this.$canvas.remove();
                this.$canvas = null;
            }

            if (this.$wrapper) {
                this.resizeSubscription.unsubscribe();
                this.resizeSubscription = null;
                this.$wrapper.remove();
                this.$wrapper = null;
            }

            this.clearTooltip();
        }
    }, {
        key: 'clearTooltip',
        value: function clearTooltip() {
            if (this.$tooltip) this.$tooltip.remove();
            this.$tooltip = null;
        }
    }, {
        key: 'clearSubscription',
        value: function clearSubscription() {
            this.subscriptions.forEach(function (s) {
                return s.unsubscribe();
            });
            this.subscriptions = [];
        }
    }, {
        key: 'hide',
        value: function hide() {
            this.$wrapper && this.$wrapper.hide();
        }
    }, {
        key: 'show',
        value: function show() {
            this.$wrapper && this.$wrapper.show();
        }
    }]);

    return ImageGrid;
}(_customWrapper2.default);

exports.default = ImageGrid;

/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _widget = __webpack_require__(31);

var _widget2 = _interopRequireDefault(_widget);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* -----------------------------------------------------
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  custom-wrapper.js
reated by hyunseok.oh@samsung.com on 2019-03-13.


var CustomWrapper = function (_Widget) {
    _inherits(CustomWrapper, _Widget);

    function CustomWrapper(parentId, options) {
        _classCallCheck(this, CustomWrapper);

        return _possibleConstructorReturn(this, (CustomWrapper.__proto__ || Object.getPrototypeOf(CustomWrapper)).call(this, parentId, options));
    }

    _createClass(CustomWrapper, [{
        key: 'destroy',
        value: function destroy() {}
    }, {
        key: 'render',
        value: function render() {}
    }, {
        key: 'clear',
        value: function clear() {}
    }, {
        key: 'getLegendData',
        value: function getLegendData() {
            return [];
        }
    }]);

    return CustomWrapper;
}(_widget2.default);

exports.default = CustomWrapper;

/***/ }),
/* 432 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = toSubscriber;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__symbol_rxSubscriber__ = __webpack_require__(105);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Observer__ = __webpack_require__(245);
/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */



function toSubscriber(nextOrObserver, error, complete) {
    if (nextOrObserver) {
        if (nextOrObserver instanceof __WEBPACK_IMPORTED_MODULE_0__Subscriber__["a" /* Subscriber */]) {
            return nextOrObserver;
        }
        if (nextOrObserver[__WEBPACK_IMPORTED_MODULE_1__symbol_rxSubscriber__["a" /* rxSubscriber */]]) {
            return nextOrObserver[__WEBPACK_IMPORTED_MODULE_1__symbol_rxSubscriber__["a" /* rxSubscriber */]]();
        }
    }
    if (!nextOrObserver && !error && !complete) {
        return new __WEBPACK_IMPORTED_MODULE_0__Subscriber__["a" /* Subscriber */](__WEBPACK_IMPORTED_MODULE_2__Observer__["a" /* empty */]);
    }
    return new __WEBPACK_IMPORTED_MODULE_0__Subscriber__["a" /* Subscriber */](nextOrObserver, error, complete);
}
//# sourceMappingURL=toSubscriber.js.map


/***/ }),
/* 433 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return QueueAction; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AsyncAction__ = __webpack_require__(54);
/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */


var QueueAction = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](QueueAction, _super);
    function QueueAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    }
    QueueAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay > 0) {
            return _super.prototype.schedule.call(this, state, delay);
        }
        this.delay = delay;
        this.state = state;
        this.scheduler.flush(this);
        return this;
    };
    QueueAction.prototype.execute = function (state, delay) {
        return (delay > 0 || this.closed) ?
            _super.prototype.execute.call(this, state, delay) :
            this._execute(state, delay);
    };
    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        return scheduler.flush(this);
    };
    return QueueAction;
}(__WEBPACK_IMPORTED_MODULE_1__AsyncAction__["a" /* AsyncAction */]));

//# sourceMappingURL=QueueAction.js.map


/***/ }),
/* 434 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Action; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscription__ = __webpack_require__(23);
/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */


var Action = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](Action, _super);
    function Action(scheduler, work) {
        return _super.call(this) || this;
    }
    Action.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        return this;
    };
    return Action;
}(__WEBPACK_IMPORTED_MODULE_1__Subscription__["a" /* Subscription */]));

//# sourceMappingURL=Action.js.map


/***/ }),
/* 435 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return QueueScheduler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AsyncScheduler__ = __webpack_require__(55);
/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */


var QueueScheduler = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](QueueScheduler, _super);
    function QueueScheduler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return QueueScheduler;
}(__WEBPACK_IMPORTED_MODULE_1__AsyncScheduler__["a" /* AsyncScheduler */]));

//# sourceMappingURL=QueueScheduler.js.map


/***/ }),
/* 436 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AsapAction; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_Immediate__ = __webpack_require__(437);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__AsyncAction__ = __webpack_require__(54);
/** PURE_IMPORTS_START tslib,_util_Immediate,_AsyncAction PURE_IMPORTS_END */



var AsapAction = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](AsapAction, _super);
    function AsapAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    }
    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        scheduler.actions.push(this);
        return scheduler.scheduled || (scheduler.scheduled = __WEBPACK_IMPORTED_MODULE_1__util_Immediate__["a" /* Immediate */].setImmediate(scheduler.flush.bind(scheduler, null)));
    };
    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        }
        if (scheduler.actions.length === 0) {
            __WEBPACK_IMPORTED_MODULE_1__util_Immediate__["a" /* Immediate */].clearImmediate(id);
            scheduler.scheduled = undefined;
        }
        return undefined;
    };
    return AsapAction;
}(__WEBPACK_IMPORTED_MODULE_2__AsyncAction__["a" /* AsyncAction */]));

//# sourceMappingURL=AsapAction.js.map


/***/ }),
/* 437 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Immediate; });
/* unused harmony export TestTools */
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var nextHandle = 1;
var RESOLVED = /*@__PURE__*/ (function () { return /*@__PURE__*/ Promise.resolve(); })();
var activeHandles = {};
function findAndClearHandle(handle) {
    if (handle in activeHandles) {
        delete activeHandles[handle];
        return true;
    }
    return false;
}
var Immediate = {
    setImmediate: function (cb) {
        var handle = nextHandle++;
        activeHandles[handle] = true;
        RESOLVED.then(function () { return findAndClearHandle(handle) && cb(); });
        return handle;
    },
    clearImmediate: function (handle) {
        findAndClearHandle(handle);
    },
};
var TestTools = {
    pending: function () {
        return Object.keys(activeHandles).length;
    }
};
//# sourceMappingURL=Immediate.js.map


/***/ }),
/* 438 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AsapScheduler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AsyncScheduler__ = __webpack_require__(55);
/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */


var AsapScheduler = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](AsapScheduler, _super);
    function AsapScheduler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AsapScheduler.prototype.flush = function (action) {
        this.active = true;
        this.scheduled = undefined;
        var actions = this.actions;
        var error;
        var index = -1;
        var count = actions.length;
        action = action || actions.shift();
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (++index < count && (action = actions.shift()));
        this.active = false;
        if (error) {
            while (++index < count && (action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsapScheduler;
}(__WEBPACK_IMPORTED_MODULE_1__AsyncScheduler__["a" /* AsyncScheduler */]));

//# sourceMappingURL=AsapScheduler.js.map


/***/ }),
/* 439 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return animationFrameScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return animationFrame; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__AnimationFrameAction__ = __webpack_require__(440);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AnimationFrameScheduler__ = __webpack_require__(441);
/** PURE_IMPORTS_START _AnimationFrameAction,_AnimationFrameScheduler PURE_IMPORTS_END */


var animationFrameScheduler = /*@__PURE__*/ new __WEBPACK_IMPORTED_MODULE_1__AnimationFrameScheduler__["a" /* AnimationFrameScheduler */](__WEBPACK_IMPORTED_MODULE_0__AnimationFrameAction__["a" /* AnimationFrameAction */]);
var animationFrame = animationFrameScheduler;
//# sourceMappingURL=animationFrame.js.map


/***/ }),
/* 440 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AnimationFrameAction; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AsyncAction__ = __webpack_require__(54);
/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */


var AnimationFrameAction = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](AnimationFrameAction, _super);
    function AnimationFrameAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    }
    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        scheduler.actions.push(this);
        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(function () { return scheduler.flush(null); }));
    };
    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        }
        if (scheduler.actions.length === 0) {
            cancelAnimationFrame(id);
            scheduler.scheduled = undefined;
        }
        return undefined;
    };
    return AnimationFrameAction;
}(__WEBPACK_IMPORTED_MODULE_1__AsyncAction__["a" /* AsyncAction */]));

//# sourceMappingURL=AnimationFrameAction.js.map


/***/ }),
/* 441 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AnimationFrameScheduler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AsyncScheduler__ = __webpack_require__(55);
/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */


var AnimationFrameScheduler = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](AnimationFrameScheduler, _super);
    function AnimationFrameScheduler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AnimationFrameScheduler.prototype.flush = function (action) {
        this.active = true;
        this.scheduled = undefined;
        var actions = this.actions;
        var error;
        var index = -1;
        var count = actions.length;
        action = action || actions.shift();
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (++index < count && (action = actions.shift()));
        this.active = false;
        if (error) {
            while (++index < count && (action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AnimationFrameScheduler;
}(__WEBPACK_IMPORTED_MODULE_1__AsyncScheduler__["a" /* AsyncScheduler */]));

//# sourceMappingURL=AnimationFrameScheduler.js.map


/***/ }),
/* 442 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return VirtualTimeScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VirtualAction; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AsyncAction__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__AsyncScheduler__ = __webpack_require__(55);
/** PURE_IMPORTS_START tslib,_AsyncAction,_AsyncScheduler PURE_IMPORTS_END */



var VirtualTimeScheduler = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](VirtualTimeScheduler, _super);
    function VirtualTimeScheduler(SchedulerAction, maxFrames) {
        if (SchedulerAction === void 0) {
            SchedulerAction = VirtualAction;
        }
        if (maxFrames === void 0) {
            maxFrames = Number.POSITIVE_INFINITY;
        }
        var _this = _super.call(this, SchedulerAction, function () { return _this.frame; }) || this;
        _this.maxFrames = maxFrames;
        _this.frame = 0;
        _this.index = -1;
        return _this;
    }
    VirtualTimeScheduler.prototype.flush = function () {
        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;
        var error, action;
        while ((action = actions[0]) && action.delay <= maxFrames) {
            actions.shift();
            this.frame = action.delay;
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        }
        if (error) {
            while (action = actions.shift()) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    VirtualTimeScheduler.frameTimeFactor = 10;
    return VirtualTimeScheduler;
}(__WEBPACK_IMPORTED_MODULE_2__AsyncScheduler__["a" /* AsyncScheduler */]));

var VirtualAction = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](VirtualAction, _super);
    function VirtualAction(scheduler, work, index) {
        if (index === void 0) {
            index = scheduler.index += 1;
        }
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        _this.index = index;
        _this.active = true;
        _this.index = scheduler.index = index;
        return _this;
    }
    VirtualAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (!this.id) {
            return _super.prototype.schedule.call(this, state, delay);
        }
        this.active = false;
        var action = new VirtualAction(this.scheduler, this.work);
        this.add(action);
        return action.schedule(state, delay);
    };
    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        this.delay = scheduler.frame + delay;
        var actions = scheduler.actions;
        actions.push(this);
        actions.sort(VirtualAction.sortActions);
        return true;
    };
    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        return undefined;
    };
    VirtualAction.prototype._execute = function (state, delay) {
        if (this.active === true) {
            return _super.prototype._execute.call(this, state, delay);
        }
    };
    VirtualAction.sortActions = function (a, b) {
        if (a.delay === b.delay) {
            if (a.index === b.index) {
                return 0;
            }
            else if (a.index > b.index) {
                return 1;
            }
            else {
                return -1;
            }
        }
        else if (a.delay > b.delay) {
            return 1;
        }
        else {
            return -1;
        }
    };
    return VirtualAction;
}(__WEBPACK_IMPORTED_MODULE_1__AsyncAction__["a" /* AsyncAction */]));

//# sourceMappingURL=VirtualTimeScheduler.js.map


/***/ }),
/* 443 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isObservable;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

function isObservable(obj) {
    return !!obj && (obj instanceof __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */] || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));
}
//# sourceMappingURL=isObservable.js.map


/***/ }),
/* 444 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = bindCallback;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AsyncSubject__ = __webpack_require__(70);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__operators_map__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_canReportError__ = __webpack_require__(102);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_isArray__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_isScheduler__ = __webpack_require__(38);
/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_canReportError,_util_isArray,_util_isScheduler PURE_IMPORTS_END */






function bindCallback(callbackFunc, resultSelector, scheduler) {
    if (resultSelector) {
        if (Object(__WEBPACK_IMPORTED_MODULE_5__util_isScheduler__["a" /* isScheduler */])(resultSelector)) {
            scheduler = resultSelector;
        }
        else {
            return function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return bindCallback(callbackFunc, scheduler).apply(void 0, args).pipe(Object(__WEBPACK_IMPORTED_MODULE_2__operators_map__["a" /* map */])(function (args) { return Object(__WEBPACK_IMPORTED_MODULE_4__util_isArray__["a" /* isArray */])(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));
            };
        }
    }
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var context = this;
        var subject;
        var params = {
            context: context,
            subject: subject,
            callbackFunc: callbackFunc,
            scheduler: scheduler,
        };
        return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
            if (!scheduler) {
                if (!subject) {
                    subject = new __WEBPACK_IMPORTED_MODULE_1__AsyncSubject__["a" /* AsyncSubject */]();
                    var handler = function () {
                        var innerArgs = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            innerArgs[_i] = arguments[_i];
                        }
                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
                        subject.complete();
                    };
                    try {
                        callbackFunc.apply(context, args.concat([handler]));
                    }
                    catch (err) {
                        if (Object(__WEBPACK_IMPORTED_MODULE_3__util_canReportError__["a" /* canReportError */])(subject)) {
                            subject.error(err);
                        }
                        else {
                            console.warn(err);
                        }
                    }
                }
                return subject.subscribe(subscriber);
            }
            else {
                var state = {
                    args: args, subscriber: subscriber, params: params,
                };
                return scheduler.schedule(dispatch, 0, state);
            }
        });
    };
}
function dispatch(state) {
    var _this = this;
    var self = this;
    var args = state.args, subscriber = state.subscriber, params = state.params;
    var callbackFunc = params.callbackFunc, context = params.context, scheduler = params.scheduler;
    var subject = params.subject;
    if (!subject) {
        subject = params.subject = new __WEBPACK_IMPORTED_MODULE_1__AsyncSubject__["a" /* AsyncSubject */]();
        var handler = function () {
            var innerArgs = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                innerArgs[_i] = arguments[_i];
            }
            var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;
            _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));
        };
        try {
            callbackFunc.apply(context, args.concat([handler]));
        }
        catch (err) {
            subject.error(err);
        }
    }
    this.add(subject.subscribe(subscriber));
}
function dispatchNext(state) {
    var value = state.value, subject = state.subject;
    subject.next(value);
    subject.complete();
}
function dispatchError(state) {
    var err = state.err, subject = state.subject;
    subject.error(err);
}
//# sourceMappingURL=bindCallback.js.map


/***/ }),
/* 445 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = bindNodeCallback;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__AsyncSubject__ = __webpack_require__(70);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__operators_map__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_canReportError__ = __webpack_require__(102);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_isScheduler__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_isArray__ = __webpack_require__(28);
/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_canReportError,_util_isScheduler,_util_isArray PURE_IMPORTS_END */






function bindNodeCallback(callbackFunc, resultSelector, scheduler) {
    if (resultSelector) {
        if (Object(__WEBPACK_IMPORTED_MODULE_4__util_isScheduler__["a" /* isScheduler */])(resultSelector)) {
            scheduler = resultSelector;
        }
        else {
            return function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return bindNodeCallback(callbackFunc, scheduler).apply(void 0, args).pipe(Object(__WEBPACK_IMPORTED_MODULE_2__operators_map__["a" /* map */])(function (args) { return Object(__WEBPACK_IMPORTED_MODULE_5__util_isArray__["a" /* isArray */])(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));
            };
        }
    }
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var params = {
            subject: undefined,
            args: args,
            callbackFunc: callbackFunc,
            scheduler: scheduler,
            context: this,
        };
        return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
            var context = params.context;
            var subject = params.subject;
            if (!scheduler) {
                if (!subject) {
                    subject = params.subject = new __WEBPACK_IMPORTED_MODULE_1__AsyncSubject__["a" /* AsyncSubject */]();
                    var handler = function () {
                        var innerArgs = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            innerArgs[_i] = arguments[_i];
                        }
                        var err = innerArgs.shift();
                        if (err) {
                            subject.error(err);
                            return;
                        }
                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
                        subject.complete();
                    };
                    try {
                        callbackFunc.apply(context, args.concat([handler]));
                    }
                    catch (err) {
                        if (Object(__WEBPACK_IMPORTED_MODULE_3__util_canReportError__["a" /* canReportError */])(subject)) {
                            subject.error(err);
                        }
                        else {
                            console.warn(err);
                        }
                    }
                }
                return subject.subscribe(subscriber);
            }
            else {
                return scheduler.schedule(dispatch, 0, { params: params, subscriber: subscriber, context: context });
            }
        });
    };
}
function dispatch(state) {
    var _this = this;
    var params = state.params, subscriber = state.subscriber, context = state.context;
    var callbackFunc = params.callbackFunc, args = params.args, scheduler = params.scheduler;
    var subject = params.subject;
    if (!subject) {
        subject = params.subject = new __WEBPACK_IMPORTED_MODULE_1__AsyncSubject__["a" /* AsyncSubject */]();
        var handler = function () {
            var innerArgs = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                innerArgs[_i] = arguments[_i];
            }
            var err = innerArgs.shift();
            if (err) {
                _this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));
            }
            else {
                var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;
                _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));
            }
        };
        try {
            callbackFunc.apply(context, args.concat([handler]));
        }
        catch (err) {
            this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));
        }
    }
    this.add(subject.subscribe(subscriber));
}
function dispatchNext(arg) {
    var value = arg.value, subject = arg.subject;
    subject.next(value);
    subject.complete();
}
function dispatchError(arg) {
    var err = arg.err, subject = arg.subject;
    subject.error(err);
}
//# sourceMappingURL=bindNodeCallback.js.map


/***/ }),
/* 446 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return subscribeToPromise; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__hostReportError__ = __webpack_require__(103);
/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */

var subscribeToPromise = function (promise) {
    return function (subscriber) {
        promise.then(function (value) {
            if (!subscriber.closed) {
                subscriber.next(value);
                subscriber.complete();
            }
        }, function (err) { return subscriber.error(err); })
            .then(null, __WEBPACK_IMPORTED_MODULE_0__hostReportError__["a" /* hostReportError */]);
        return subscriber;
    };
};
//# sourceMappingURL=subscribeToPromise.js.map


/***/ }),
/* 447 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return subscribeToIterable; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__symbol_iterator__ = __webpack_require__(59);
/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */

var subscribeToIterable = function (iterable) {
    return function (subscriber) {
        var iterator = iterable[__WEBPACK_IMPORTED_MODULE_0__symbol_iterator__["a" /* iterator */]]();
        do {
            var item = void 0;
            try {
                item = iterator.next();
            }
            catch (err) {
                subscriber.error(err);
                return subscriber;
            }
            if (item.done) {
                subscriber.complete();
                break;
            }
            subscriber.next(item.value);
            if (subscriber.closed) {
                break;
            }
        } while (true);
        if (typeof iterator.return === 'function') {
            subscriber.add(function () {
                if (iterator.return) {
                    iterator.return();
                }
            });
        }
        return subscriber;
    };
};
//# sourceMappingURL=subscribeToIterable.js.map


/***/ }),
/* 448 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return subscribeToObservable; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__symbol_observable__ = __webpack_require__(47);
/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */

var subscribeToObservable = function (obj) {
    return function (subscriber) {
        var obs = obj[__WEBPACK_IMPORTED_MODULE_0__symbol_observable__["a" /* observable */]]();
        if (typeof obs.subscribe !== 'function') {
            throw new TypeError('Provided object does not correctly implement Symbol.observable');
        }
        else {
            return obs.subscribe(subscriber);
        }
    };
};
//# sourceMappingURL=subscribeToObservable.js.map


/***/ }),
/* 449 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = scheduleObservable;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscription__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__symbol_observable__ = __webpack_require__(47);
/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable PURE_IMPORTS_END */



function scheduleObservable(input, scheduler) {
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var sub = new __WEBPACK_IMPORTED_MODULE_1__Subscription__["a" /* Subscription */]();
        sub.add(scheduler.schedule(function () {
            var observable = input[__WEBPACK_IMPORTED_MODULE_2__symbol_observable__["a" /* observable */]]();
            sub.add(observable.subscribe({
                next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },
                error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },
                complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },
            }));
        }));
        return sub;
    });
}
//# sourceMappingURL=scheduleObservable.js.map


/***/ }),
/* 450 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = schedulePromise;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscription__ = __webpack_require__(23);
/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */


function schedulePromise(input, scheduler) {
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var sub = new __WEBPACK_IMPORTED_MODULE_1__Subscription__["a" /* Subscription */]();
        sub.add(scheduler.schedule(function () {
            return input.then(function (value) {
                sub.add(scheduler.schedule(function () {
                    subscriber.next(value);
                    sub.add(scheduler.schedule(function () { return subscriber.complete(); }));
                }));
            }, function (err) {
                sub.add(scheduler.schedule(function () { return subscriber.error(err); }));
            });
        }));
        return sub;
    });
}
//# sourceMappingURL=schedulePromise.js.map


/***/ }),
/* 451 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = scheduleIterable;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscription__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__symbol_iterator__ = __webpack_require__(59);
/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator PURE_IMPORTS_END */



function scheduleIterable(input, scheduler) {
    if (!input) {
        throw new Error('Iterable cannot be null');
    }
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var sub = new __WEBPACK_IMPORTED_MODULE_1__Subscription__["a" /* Subscription */]();
        var iterator;
        sub.add(function () {
            if (iterator && typeof iterator.return === 'function') {
                iterator.return();
            }
        });
        sub.add(scheduler.schedule(function () {
            iterator = input[__WEBPACK_IMPORTED_MODULE_2__symbol_iterator__["a" /* iterator */]]();
            sub.add(scheduler.schedule(function () {
                if (subscriber.closed) {
                    return;
                }
                var value;
                var done;
                try {
                    var result = iterator.next();
                    value = result.value;
                    done = result.done;
                }
                catch (err) {
                    subscriber.error(err);
                    return;
                }
                if (done) {
                    subscriber.complete();
                }
                else {
                    subscriber.next(value);
                    this.schedule();
                }
            }));
        }));
        return sub;
    });
}
//# sourceMappingURL=scheduleIterable.js.map


/***/ }),
/* 452 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isInteropObservable;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__symbol_observable__ = __webpack_require__(47);
/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */

function isInteropObservable(input) {
    return input && typeof input[__WEBPACK_IMPORTED_MODULE_0__symbol_observable__["a" /* observable */]] === 'function';
}
//# sourceMappingURL=isInteropObservable.js.map


/***/ }),
/* 453 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isIterable;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__symbol_iterator__ = __webpack_require__(59);
/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */

function isIterable(input) {
    return input && typeof input[__WEBPACK_IMPORTED_MODULE_0__symbol_iterator__["a" /* iterator */]] === 'function';
}
//# sourceMappingURL=isIterable.js.map


/***/ }),
/* 454 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = forkJoin;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_isArray__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__operators_map__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_isObject__ = __webpack_require__(104);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__from__ = __webpack_require__(39);
/** PURE_IMPORTS_START _Observable,_util_isArray,_operators_map,_util_isObject,_from PURE_IMPORTS_END */





function forkJoin() {
    var sources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        sources[_i] = arguments[_i];
    }
    if (sources.length === 1) {
        var first_1 = sources[0];
        if (Object(__WEBPACK_IMPORTED_MODULE_1__util_isArray__["a" /* isArray */])(first_1)) {
            return forkJoinInternal(first_1, null);
        }
        if (Object(__WEBPACK_IMPORTED_MODULE_3__util_isObject__["a" /* isObject */])(first_1) && Object.getPrototypeOf(first_1) === Object.prototype) {
            var keys = Object.keys(first_1);
            return forkJoinInternal(keys.map(function (key) { return first_1[key]; }), keys);
        }
    }
    if (typeof sources[sources.length - 1] === 'function') {
        var resultSelector_1 = sources.pop();
        sources = (sources.length === 1 && Object(__WEBPACK_IMPORTED_MODULE_1__util_isArray__["a" /* isArray */])(sources[0])) ? sources[0] : sources;
        return forkJoinInternal(sources, null).pipe(Object(__WEBPACK_IMPORTED_MODULE_2__operators_map__["a" /* map */])(function (args) { return resultSelector_1.apply(void 0, args); }));
    }
    return forkJoinInternal(sources, null);
}
function forkJoinInternal(sources, keys) {
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var len = sources.length;
        if (len === 0) {
            subscriber.complete();
            return;
        }
        var values = new Array(len);
        var completed = 0;
        var emitted = 0;
        var _loop_1 = function (i) {
            var source = Object(__WEBPACK_IMPORTED_MODULE_4__from__["a" /* from */])(sources[i]);
            var hasValue = false;
            subscriber.add(source.subscribe({
                next: function (value) {
                    if (!hasValue) {
                        hasValue = true;
                        emitted++;
                    }
                    values[i] = value;
                },
                error: function (err) { return subscriber.error(err); },
                complete: function () {
                    completed++;
                    if (completed === len || !hasValue) {
                        if (emitted === len) {
                            subscriber.next(keys ?
                                keys.reduce(function (result, key, i) { return (result[key] = values[i], result); }, {}) :
                                values);
                        }
                        subscriber.complete();
                    }
                }
            }));
        };
        for (var i = 0; i < len; i++) {
            _loop_1(i);
        }
    });
}
//# sourceMappingURL=forkJoin.js.map


/***/ }),
/* 455 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = fromEvent;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_isArray__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isFunction__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__operators_map__ = __webpack_require__(33);
/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */




var toString = /*@__PURE__*/ (function () { return Object.prototype.toString; })();
function fromEvent(target, eventName, options, resultSelector) {
    if (Object(__WEBPACK_IMPORTED_MODULE_2__util_isFunction__["a" /* isFunction */])(options)) {
        resultSelector = options;
        options = undefined;
    }
    if (resultSelector) {
        return fromEvent(target, eventName, options).pipe(Object(__WEBPACK_IMPORTED_MODULE_3__operators_map__["a" /* map */])(function (args) { return Object(__WEBPACK_IMPORTED_MODULE_1__util_isArray__["a" /* isArray */])(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));
    }
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        function handler(e) {
            if (arguments.length > 1) {
                subscriber.next(Array.prototype.slice.call(arguments));
            }
            else {
                subscriber.next(e);
            }
        }
        setupSubscription(target, eventName, handler, subscriber, options);
    });
}
function setupSubscription(sourceObj, eventName, handler, subscriber, options) {
    var unsubscribe;
    if (isEventTarget(sourceObj)) {
        var source_1 = sourceObj;
        sourceObj.addEventListener(eventName, handler, options);
        unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };
    }
    else if (isJQueryStyleEventEmitter(sourceObj)) {
        var source_2 = sourceObj;
        sourceObj.on(eventName, handler);
        unsubscribe = function () { return source_2.off(eventName, handler); };
    }
    else if (isNodeStyleEventEmitter(sourceObj)) {
        var source_3 = sourceObj;
        sourceObj.addListener(eventName, handler);
        unsubscribe = function () { return source_3.removeListener(eventName, handler); };
    }
    else if (sourceObj && sourceObj.length) {
        for (var i = 0, len = sourceObj.length; i < len; i++) {
            setupSubscription(sourceObj[i], eventName, handler, subscriber, options);
        }
    }
    else {
        throw new TypeError('Invalid event target');
    }
    subscriber.add(unsubscribe);
}
function isNodeStyleEventEmitter(sourceObj) {
    return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';
}
function isJQueryStyleEventEmitter(sourceObj) {
    return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';
}
function isEventTarget(sourceObj) {
    return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';
}
//# sourceMappingURL=fromEvent.js.map


/***/ }),
/* 456 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = fromEventPattern;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_isArray__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isFunction__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__operators_map__ = __webpack_require__(33);
/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */




function fromEventPattern(addHandler, removeHandler, resultSelector) {
    if (resultSelector) {
        return fromEventPattern(addHandler, removeHandler).pipe(Object(__WEBPACK_IMPORTED_MODULE_3__operators_map__["a" /* map */])(function (args) { return Object(__WEBPACK_IMPORTED_MODULE_1__util_isArray__["a" /* isArray */])(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));
    }
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var handler = function () {
            var e = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                e[_i] = arguments[_i];
            }
            return subscriber.next(e.length === 1 ? e[0] : e);
        };
        var retValue;
        try {
            retValue = addHandler(handler);
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        if (!Object(__WEBPACK_IMPORTED_MODULE_2__util_isFunction__["a" /* isFunction */])(removeHandler)) {
            return undefined;
        }
        return function () { return removeHandler(handler, retValue); };
    });
}
//# sourceMappingURL=fromEventPattern.js.map


/***/ }),
/* 457 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = generate;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_identity__ = __webpack_require__(43);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isScheduler__ = __webpack_require__(38);
/** PURE_IMPORTS_START _Observable,_util_identity,_util_isScheduler PURE_IMPORTS_END */



function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {
    var resultSelector;
    var initialState;
    if (arguments.length == 1) {
        var options = initialStateOrOptions;
        initialState = options.initialState;
        condition = options.condition;
        iterate = options.iterate;
        resultSelector = options.resultSelector || __WEBPACK_IMPORTED_MODULE_1__util_identity__["a" /* identity */];
        scheduler = options.scheduler;
    }
    else if (resultSelectorOrObservable === undefined || Object(__WEBPACK_IMPORTED_MODULE_2__util_isScheduler__["a" /* isScheduler */])(resultSelectorOrObservable)) {
        initialState = initialStateOrOptions;
        resultSelector = __WEBPACK_IMPORTED_MODULE_1__util_identity__["a" /* identity */];
        scheduler = resultSelectorOrObservable;
    }
    else {
        initialState = initialStateOrOptions;
        resultSelector = resultSelectorOrObservable;
    }
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var state = initialState;
        if (scheduler) {
            return scheduler.schedule(dispatch, 0, {
                subscriber: subscriber,
                iterate: iterate,
                condition: condition,
                resultSelector: resultSelector,
                state: state
            });
        }
        do {
            if (condition) {
                var conditionResult = void 0;
                try {
                    conditionResult = condition(state);
                }
                catch (err) {
                    subscriber.error(err);
                    return undefined;
                }
                if (!conditionResult) {
                    subscriber.complete();
                    break;
                }
            }
            var value = void 0;
            try {
                value = resultSelector(state);
            }
            catch (err) {
                subscriber.error(err);
                return undefined;
            }
            subscriber.next(value);
            if (subscriber.closed) {
                break;
            }
            try {
                state = iterate(state);
            }
            catch (err) {
                subscriber.error(err);
                return undefined;
            }
        } while (true);
        return undefined;
    });
}
function dispatch(state) {
    var subscriber = state.subscriber, condition = state.condition;
    if (subscriber.closed) {
        return undefined;
    }
    if (state.needIterate) {
        try {
            state.state = state.iterate(state.state);
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
    }
    else {
        state.needIterate = true;
    }
    if (condition) {
        var conditionResult = void 0;
        try {
            conditionResult = condition(state.state);
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        if (!conditionResult) {
            subscriber.complete();
            return undefined;
        }
        if (subscriber.closed) {
            return undefined;
        }
    }
    var value;
    try {
        value = state.resultSelector(state.state);
    }
    catch (err) {
        subscriber.error(err);
        return undefined;
    }
    if (subscriber.closed) {
        return undefined;
    }
    subscriber.next(value);
    if (subscriber.closed) {
        return undefined;
    }
    return this.schedule(state);
}
//# sourceMappingURL=generate.js.map


/***/ }),
/* 458 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = iif;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__defer__ = __webpack_require__(115);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__empty__ = __webpack_require__(37);
/** PURE_IMPORTS_START _defer,_empty PURE_IMPORTS_END */


function iif(condition, trueResult, falseResult) {
    if (trueResult === void 0) {
        trueResult = __WEBPACK_IMPORTED_MODULE_1__empty__["a" /* EMPTY */];
    }
    if (falseResult === void 0) {
        falseResult = __WEBPACK_IMPORTED_MODULE_1__empty__["a" /* EMPTY */];
    }
    return Object(__WEBPACK_IMPORTED_MODULE_0__defer__["a" /* defer */])(function () { return condition() ? trueResult : falseResult; });
}
//# sourceMappingURL=iif.js.map


/***/ }),
/* 459 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = interval;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__scheduler_async__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isNumeric__ = __webpack_require__(73);
/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric PURE_IMPORTS_END */



function interval(period, scheduler) {
    if (period === void 0) {
        period = 0;
    }
    if (scheduler === void 0) {
        scheduler = __WEBPACK_IMPORTED_MODULE_1__scheduler_async__["a" /* async */];
    }
    if (!Object(__WEBPACK_IMPORTED_MODULE_2__util_isNumeric__["a" /* isNumeric */])(period) || period < 0) {
        period = 0;
    }
    if (!scheduler || typeof scheduler.schedule !== 'function') {
        scheduler = __WEBPACK_IMPORTED_MODULE_1__scheduler_async__["a" /* async */];
    }
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        subscriber.add(scheduler.schedule(dispatch, period, { subscriber: subscriber, counter: 0, period: period }));
        return subscriber;
    });
}
function dispatch(state) {
    var subscriber = state.subscriber, counter = state.counter, period = state.period;
    subscriber.next(counter);
    this.schedule({ subscriber: subscriber, counter: counter + 1, period: period }, period);
}
//# sourceMappingURL=interval.js.map


/***/ }),
/* 460 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = onErrorResumeNext;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__from__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isArray__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__empty__ = __webpack_require__(37);
/** PURE_IMPORTS_START _Observable,_from,_util_isArray,_empty PURE_IMPORTS_END */




function onErrorResumeNext() {
    var sources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        sources[_i] = arguments[_i];
    }
    if (sources.length === 0) {
        return __WEBPACK_IMPORTED_MODULE_3__empty__["a" /* EMPTY */];
    }
    var first = sources[0], remainder = sources.slice(1);
    if (sources.length === 1 && Object(__WEBPACK_IMPORTED_MODULE_2__util_isArray__["a" /* isArray */])(first)) {
        return onErrorResumeNext.apply(void 0, first);
    }
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var subNext = function () { return subscriber.add(onErrorResumeNext.apply(void 0, remainder).subscribe(subscriber)); };
        return Object(__WEBPACK_IMPORTED_MODULE_1__from__["a" /* from */])(first).subscribe({
            next: function (value) { subscriber.next(value); },
            error: subNext,
            complete: subNext,
        });
    });
}
//# sourceMappingURL=onErrorResumeNext.js.map


/***/ }),
/* 461 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = pairs;
/* unused harmony export dispatch */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscription__ = __webpack_require__(23);
/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */


function pairs(obj, scheduler) {
    if (!scheduler) {
        return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
            var keys = Object.keys(obj);
            for (var i = 0; i < keys.length && !subscriber.closed; i++) {
                var key = keys[i];
                if (obj.hasOwnProperty(key)) {
                    subscriber.next([key, obj[key]]);
                }
            }
            subscriber.complete();
        });
    }
    else {
        return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
            var keys = Object.keys(obj);
            var subscription = new __WEBPACK_IMPORTED_MODULE_1__Subscription__["a" /* Subscription */]();
            subscription.add(scheduler.schedule(dispatch, 0, { keys: keys, index: 0, subscriber: subscriber, subscription: subscription, obj: obj }));
            return subscription;
        });
    }
}
function dispatch(state) {
    var keys = state.keys, index = state.index, subscriber = state.subscriber, subscription = state.subscription, obj = state.obj;
    if (!subscriber.closed) {
        if (index < keys.length) {
            var key = keys[index];
            subscriber.next([key, obj[key]]);
            subscription.add(this.schedule({ keys: keys, index: index + 1, subscriber: subscriber, subscription: subscription, obj: obj }));
        }
        else {
            subscriber.complete();
        }
    }
}
//# sourceMappingURL=pairs.js.map


/***/ }),
/* 462 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = partition;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_not__ = __webpack_require__(263);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_subscribeTo__ = __webpack_require__(113);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__operators_filter__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Observable__ = __webpack_require__(12);
/** PURE_IMPORTS_START _util_not,_util_subscribeTo,_operators_filter,_Observable PURE_IMPORTS_END */




function partition(source, predicate, thisArg) {
    return [
        Object(__WEBPACK_IMPORTED_MODULE_2__operators_filter__["a" /* filter */])(predicate, thisArg)(new __WEBPACK_IMPORTED_MODULE_3__Observable__["a" /* Observable */](Object(__WEBPACK_IMPORTED_MODULE_1__util_subscribeTo__["a" /* subscribeTo */])(source))),
        Object(__WEBPACK_IMPORTED_MODULE_2__operators_filter__["a" /* filter */])(Object(__WEBPACK_IMPORTED_MODULE_0__util_not__["a" /* not */])(predicate, thisArg))(new __WEBPACK_IMPORTED_MODULE_3__Observable__["a" /* Observable */](Object(__WEBPACK_IMPORTED_MODULE_1__util_subscribeTo__["a" /* subscribeTo */])(source)))
    ];
}
//# sourceMappingURL=partition.js.map


/***/ }),
/* 463 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = range;
/* unused harmony export dispatch */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

function range(start, count, scheduler) {
    if (start === void 0) {
        start = 0;
    }
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        if (count === undefined) {
            count = start;
            start = 0;
        }
        var index = 0;
        var current = start;
        if (scheduler) {
            return scheduler.schedule(dispatch, 0, {
                index: index, count: count, start: start, subscriber: subscriber
            });
        }
        else {
            do {
                if (index++ >= count) {
                    subscriber.complete();
                    break;
                }
                subscriber.next(current++);
                if (subscriber.closed) {
                    break;
                }
            } while (true);
        }
        return undefined;
    });
}
function dispatch(state) {
    var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;
    if (index >= count) {
        subscriber.complete();
        return;
    }
    subscriber.next(start);
    if (subscriber.closed) {
        return;
    }
    state.index = index + 1;
    state.start = start + 1;
    this.schedule(state);
}
//# sourceMappingURL=range.js.map


/***/ }),
/* 464 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = using;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__from__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__empty__ = __webpack_require__(37);
/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */



function using(resourceFactory, observableFactory) {
    return new __WEBPACK_IMPORTED_MODULE_0__Observable__["a" /* Observable */](function (subscriber) {
        var resource;
        try {
            resource = resourceFactory();
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        var result;
        try {
            result = observableFactory(resource);
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        var source = result ? Object(__WEBPACK_IMPORTED_MODULE_1__from__["a" /* from */])(result) : __WEBPACK_IMPORTED_MODULE_2__empty__["a" /* EMPTY */];
        var subscription = source.subscribe(subscriber);
        return function () {
            subscription.unsubscribe();
            if (resource) {
                resource.unsubscribe();
            }
        };
    });
}
//# sourceMappingURL=using.js.map


/***/ }),
/* 465 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = auditTime;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scheduler_async__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__audit__ = __webpack_require__(266);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__observable_timer__ = __webpack_require__(265);
/** PURE_IMPORTS_START _scheduler_async,_audit,_observable_timer PURE_IMPORTS_END */



function auditTime(duration, scheduler) {
    if (scheduler === void 0) {
        scheduler = __WEBPACK_IMPORTED_MODULE_0__scheduler_async__["a" /* async */];
    }
    return Object(__WEBPACK_IMPORTED_MODULE_1__audit__["a" /* audit */])(function () { return Object(__WEBPACK_IMPORTED_MODULE_2__observable_timer__["a" /* timer */])(duration, scheduler); });
}
//# sourceMappingURL=auditTime.js.map


/***/ }),
/* 466 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = buffer;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function buffer(closingNotifier) {
    return function bufferOperatorFunction(source) {
        return source.lift(new BufferOperator(closingNotifier));
    };
}
var BufferOperator = /*@__PURE__*/ (function () {
    function BufferOperator(closingNotifier) {
        this.closingNotifier = closingNotifier;
    }
    BufferOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));
    };
    return BufferOperator;
}());
var BufferSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](BufferSubscriber, _super);
    function BufferSubscriber(destination, closingNotifier) {
        var _this = _super.call(this, destination) || this;
        _this.buffer = [];
        _this.add(Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(_this, closingNotifier));
        return _this;
    }
    BufferSubscriber.prototype._next = function (value) {
        this.buffer.push(value);
    };
    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var buffer = this.buffer;
        this.buffer = [];
        this.destination.next(buffer);
    };
    return BufferSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=buffer.js.map


/***/ }),
/* 467 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = bufferCount;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function bufferCount(bufferSize, startBufferEvery) {
    if (startBufferEvery === void 0) {
        startBufferEvery = null;
    }
    return function bufferCountOperatorFunction(source) {
        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));
    };
}
var BufferCountOperator = /*@__PURE__*/ (function () {
    function BufferCountOperator(bufferSize, startBufferEvery) {
        this.bufferSize = bufferSize;
        this.startBufferEvery = startBufferEvery;
        if (!startBufferEvery || bufferSize === startBufferEvery) {
            this.subscriberClass = BufferCountSubscriber;
        }
        else {
            this.subscriberClass = BufferSkipCountSubscriber;
        }
    }
    BufferCountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));
    };
    return BufferCountOperator;
}());
var BufferCountSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](BufferCountSubscriber, _super);
    function BufferCountSubscriber(destination, bufferSize) {
        var _this = _super.call(this, destination) || this;
        _this.bufferSize = bufferSize;
        _this.buffer = [];
        return _this;
    }
    BufferCountSubscriber.prototype._next = function (value) {
        var buffer = this.buffer;
        buffer.push(value);
        if (buffer.length == this.bufferSize) {
            this.destination.next(buffer);
            this.buffer = [];
        }
    };
    BufferCountSubscriber.prototype._complete = function () {
        var buffer = this.buffer;
        if (buffer.length > 0) {
            this.destination.next(buffer);
        }
        _super.prototype._complete.call(this);
    };
    return BufferCountSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
var BufferSkipCountSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](BufferSkipCountSubscriber, _super);
    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {
        var _this = _super.call(this, destination) || this;
        _this.bufferSize = bufferSize;
        _this.startBufferEvery = startBufferEvery;
        _this.buffers = [];
        _this.count = 0;
        return _this;
    }
    BufferSkipCountSubscriber.prototype._next = function (value) {
        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;
        this.count++;
        if (count % startBufferEvery === 0) {
            buffers.push([]);
        }
        for (var i = buffers.length; i--;) {
            var buffer = buffers[i];
            buffer.push(value);
            if (buffer.length === bufferSize) {
                buffers.splice(i, 1);
                this.destination.next(buffer);
            }
        }
    };
    BufferSkipCountSubscriber.prototype._complete = function () {
        var _a = this, buffers = _a.buffers, destination = _a.destination;
        while (buffers.length > 0) {
            var buffer = buffers.shift();
            if (buffer.length > 0) {
                destination.next(buffer);
            }
        }
        _super.prototype._complete.call(this);
    };
    return BufferSkipCountSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=bufferCount.js.map


/***/ }),
/* 468 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = bufferTime;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__scheduler_async__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_isScheduler__ = __webpack_require__(38);
/** PURE_IMPORTS_START tslib,_scheduler_async,_Subscriber,_util_isScheduler PURE_IMPORTS_END */




function bufferTime(bufferTimeSpan) {
    var length = arguments.length;
    var scheduler = __WEBPACK_IMPORTED_MODULE_1__scheduler_async__["a" /* async */];
    if (Object(__WEBPACK_IMPORTED_MODULE_3__util_isScheduler__["a" /* isScheduler */])(arguments[arguments.length - 1])) {
        scheduler = arguments[arguments.length - 1];
        length--;
    }
    var bufferCreationInterval = null;
    if (length >= 2) {
        bufferCreationInterval = arguments[1];
    }
    var maxBufferSize = Number.POSITIVE_INFINITY;
    if (length >= 3) {
        maxBufferSize = arguments[2];
    }
    return function bufferTimeOperatorFunction(source) {
        return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));
    };
}
var BufferTimeOperator = /*@__PURE__*/ (function () {
    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
        this.bufferTimeSpan = bufferTimeSpan;
        this.bufferCreationInterval = bufferCreationInterval;
        this.maxBufferSize = maxBufferSize;
        this.scheduler = scheduler;
    }
    BufferTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));
    };
    return BufferTimeOperator;
}());
var Context = /*@__PURE__*/ (function () {
    function Context() {
        this.buffer = [];
    }
    return Context;
}());
var BufferTimeSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](BufferTimeSubscriber, _super);
    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.bufferTimeSpan = bufferTimeSpan;
        _this.bufferCreationInterval = bufferCreationInterval;
        _this.maxBufferSize = maxBufferSize;
        _this.scheduler = scheduler;
        _this.contexts = [];
        var context = _this.openContext();
        _this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;
        if (_this.timespanOnly) {
            var timeSpanOnlyState = { subscriber: _this, context: context, bufferTimeSpan: bufferTimeSpan };
            _this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
        }
        else {
            var closeState = { subscriber: _this, context: context };
            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: _this, scheduler: scheduler };
            _this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));
            _this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));
        }
        return _this;
    }
    BufferTimeSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        var len = contexts.length;
        var filledBufferContext;
        for (var i = 0; i < len; i++) {
            var context_1 = contexts[i];
            var buffer = context_1.buffer;
            buffer.push(value);
            if (buffer.length == this.maxBufferSize) {
                filledBufferContext = context_1;
            }
        }
        if (filledBufferContext) {
            this.onBufferFull(filledBufferContext);
        }
    };
    BufferTimeSubscriber.prototype._error = function (err) {
        this.contexts.length = 0;
        _super.prototype._error.call(this, err);
    };
    BufferTimeSubscriber.prototype._complete = function () {
        var _a = this, contexts = _a.contexts, destination = _a.destination;
        while (contexts.length > 0) {
            var context_2 = contexts.shift();
            destination.next(context_2.buffer);
        }
        _super.prototype._complete.call(this);
    };
    BufferTimeSubscriber.prototype._unsubscribe = function () {
        this.contexts = null;
    };
    BufferTimeSubscriber.prototype.onBufferFull = function (context) {
        this.closeContext(context);
        var closeAction = context.closeAction;
        closeAction.unsubscribe();
        this.remove(closeAction);
        if (!this.closed && this.timespanOnly) {
            context = this.openContext();
            var bufferTimeSpan = this.bufferTimeSpan;
            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };
            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
        }
    };
    BufferTimeSubscriber.prototype.openContext = function () {
        var context = new Context();
        this.contexts.push(context);
        return context;
    };
    BufferTimeSubscriber.prototype.closeContext = function (context) {
        this.destination.next(context.buffer);
        var contexts = this.contexts;
        var spliceIndex = contexts ? contexts.indexOf(context) : -1;
        if (spliceIndex >= 0) {
            contexts.splice(contexts.indexOf(context), 1);
        }
    };
    return BufferTimeSubscriber;
}(__WEBPACK_IMPORTED_MODULE_2__Subscriber__["a" /* Subscriber */]));
function dispatchBufferTimeSpanOnly(state) {
    var subscriber = state.subscriber;
    var prevContext = state.context;
    if (prevContext) {
        subscriber.closeContext(prevContext);
    }
    if (!subscriber.closed) {
        state.context = subscriber.openContext();
        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);
    }
}
function dispatchBufferCreation(state) {
    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;
    var context = subscriber.openContext();
    var action = this;
    if (!subscriber.closed) {
        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));
        action.schedule(state, bufferCreationInterval);
    }
}
function dispatchBufferClose(arg) {
    var subscriber = arg.subscriber, context = arg.context;
    subscriber.closeContext(context);
}
//# sourceMappingURL=bufferTime.js.map


/***/ }),
/* 469 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = bufferToggle;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscription__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__ = __webpack_require__(13);
/** PURE_IMPORTS_START tslib,_Subscription,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */




function bufferToggle(openings, closingSelector) {
    return function bufferToggleOperatorFunction(source) {
        return source.lift(new BufferToggleOperator(openings, closingSelector));
    };
}
var BufferToggleOperator = /*@__PURE__*/ (function () {
    function BufferToggleOperator(openings, closingSelector) {
        this.openings = openings;
        this.closingSelector = closingSelector;
    }
    BufferToggleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));
    };
    return BufferToggleOperator;
}());
var BufferToggleSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](BufferToggleSubscriber, _super);
    function BufferToggleSubscriber(destination, openings, closingSelector) {
        var _this = _super.call(this, destination) || this;
        _this.openings = openings;
        _this.closingSelector = closingSelector;
        _this.contexts = [];
        _this.add(Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(_this, openings));
        return _this;
    }
    BufferToggleSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        var len = contexts.length;
        for (var i = 0; i < len; i++) {
            contexts[i].buffer.push(value);
        }
    };
    BufferToggleSubscriber.prototype._error = function (err) {
        var contexts = this.contexts;
        while (contexts.length > 0) {
            var context_1 = contexts.shift();
            context_1.subscription.unsubscribe();
            context_1.buffer = null;
            context_1.subscription = null;
        }
        this.contexts = null;
        _super.prototype._error.call(this, err);
    };
    BufferToggleSubscriber.prototype._complete = function () {
        var contexts = this.contexts;
        while (contexts.length > 0) {
            var context_2 = contexts.shift();
            this.destination.next(context_2.buffer);
            context_2.subscription.unsubscribe();
            context_2.buffer = null;
            context_2.subscription = null;
        }
        this.contexts = null;
        _super.prototype._complete.call(this);
    };
    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);
    };
    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {
        this.closeBuffer(innerSub.context);
    };
    BufferToggleSubscriber.prototype.openBuffer = function (value) {
        try {
            var closingSelector = this.closingSelector;
            var closingNotifier = closingSelector.call(this, value);
            if (closingNotifier) {
                this.trySubscribe(closingNotifier);
            }
        }
        catch (err) {
            this._error(err);
        }
    };
    BufferToggleSubscriber.prototype.closeBuffer = function (context) {
        var contexts = this.contexts;
        if (contexts && context) {
            var buffer = context.buffer, subscription = context.subscription;
            this.destination.next(buffer);
            contexts.splice(contexts.indexOf(context), 1);
            this.remove(subscription);
            subscription.unsubscribe();
        }
    };
    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {
        var contexts = this.contexts;
        var buffer = [];
        var subscription = new __WEBPACK_IMPORTED_MODULE_1__Subscription__["a" /* Subscription */]();
        var context = { buffer: buffer, subscription: subscription };
        contexts.push(context);
        var innerSubscription = Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(this, closingNotifier, context);
        if (!innerSubscription || innerSubscription.closed) {
            this.closeBuffer(context);
        }
        else {
            innerSubscription.context = context;
            this.add(innerSubscription);
            subscription.add(innerSubscription);
        }
    };
    return BufferToggleSubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=bufferToggle.js.map


/***/ }),
/* 470 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = bufferWhen;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscription__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_Subscription,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function bufferWhen(closingSelector) {
    return function (source) {
        return source.lift(new BufferWhenOperator(closingSelector));
    };
}
var BufferWhenOperator = /*@__PURE__*/ (function () {
    function BufferWhenOperator(closingSelector) {
        this.closingSelector = closingSelector;
    }
    BufferWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));
    };
    return BufferWhenOperator;
}());
var BufferWhenSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](BufferWhenSubscriber, _super);
    function BufferWhenSubscriber(destination, closingSelector) {
        var _this = _super.call(this, destination) || this;
        _this.closingSelector = closingSelector;
        _this.subscribing = false;
        _this.openBuffer();
        return _this;
    }
    BufferWhenSubscriber.prototype._next = function (value) {
        this.buffer.push(value);
    };
    BufferWhenSubscriber.prototype._complete = function () {
        var buffer = this.buffer;
        if (buffer) {
            this.destination.next(buffer);
        }
        _super.prototype._complete.call(this);
    };
    BufferWhenSubscriber.prototype._unsubscribe = function () {
        this.buffer = null;
        this.subscribing = false;
    };
    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.openBuffer();
    };
    BufferWhenSubscriber.prototype.notifyComplete = function () {
        if (this.subscribing) {
            this.complete();
        }
        else {
            this.openBuffer();
        }
    };
    BufferWhenSubscriber.prototype.openBuffer = function () {
        var closingSubscription = this.closingSubscription;
        if (closingSubscription) {
            this.remove(closingSubscription);
            closingSubscription.unsubscribe();
        }
        var buffer = this.buffer;
        if (this.buffer) {
            this.destination.next(buffer);
        }
        this.buffer = [];
        var closingNotifier;
        try {
            var closingSelector = this.closingSelector;
            closingNotifier = closingSelector();
        }
        catch (err) {
            return this.error(err);
        }
        closingSubscription = new __WEBPACK_IMPORTED_MODULE_1__Subscription__["a" /* Subscription */]();
        this.closingSubscription = closingSubscription;
        this.add(closingSubscription);
        this.subscribing = true;
        closingSubscription.add(Object(__WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__["a" /* subscribeToResult */])(this, closingNotifier));
        this.subscribing = false;
    };
    return BufferWhenSubscriber;
}(__WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=bufferWhen.js.map


/***/ }),
/* 471 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = catchError;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__InnerSubscriber__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function catchError(selector) {
    return function catchErrorOperatorFunction(source) {
        var operator = new CatchOperator(selector);
        var caught = source.lift(operator);
        return (operator.caught = caught);
    };
}
var CatchOperator = /*@__PURE__*/ (function () {
    function CatchOperator(selector) {
        this.selector = selector;
    }
    CatchOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));
    };
    return CatchOperator;
}());
var CatchSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](CatchSubscriber, _super);
    function CatchSubscriber(destination, selector, caught) {
        var _this = _super.call(this, destination) || this;
        _this.selector = selector;
        _this.caught = caught;
        return _this;
    }
    CatchSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var result = void 0;
            try {
                result = this.selector(err, this.caught);
            }
            catch (err2) {
                _super.prototype.error.call(this, err2);
                return;
            }
            this._unsubscribeAndRecycle();
            var innerSubscriber = new __WEBPACK_IMPORTED_MODULE_2__InnerSubscriber__["a" /* InnerSubscriber */](this, undefined, undefined);
            this.add(innerSubscriber);
            var innerSubscription = Object(__WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__["a" /* subscribeToResult */])(this, result, undefined, undefined, innerSubscriber);
            if (innerSubscription !== innerSubscriber) {
                this.add(innerSubscription);
            }
        }
    };
    return CatchSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=catchError.js.map


/***/ }),
/* 472 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = combineAll;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_combineLatest__ = __webpack_require__(112);
/** PURE_IMPORTS_START _observable_combineLatest PURE_IMPORTS_END */

function combineAll(project) {
    return function (source) { return source.lift(new __WEBPACK_IMPORTED_MODULE_0__observable_combineLatest__["a" /* CombineLatestOperator */](project)); };
}
//# sourceMappingURL=combineAll.js.map


/***/ }),
/* 473 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = combineLatest;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_isArray__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__observable_combineLatest__ = __webpack_require__(112);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__observable_from__ = __webpack_require__(39);
/** PURE_IMPORTS_START _util_isArray,_observable_combineLatest,_observable_from PURE_IMPORTS_END */



var none = {};
function combineLatest() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var project = null;
    if (typeof observables[observables.length - 1] === 'function') {
        project = observables.pop();
    }
    if (observables.length === 1 && Object(__WEBPACK_IMPORTED_MODULE_0__util_isArray__["a" /* isArray */])(observables[0])) {
        observables = observables[0].slice();
    }
    return function (source) { return source.lift.call(Object(__WEBPACK_IMPORTED_MODULE_2__observable_from__["a" /* from */])([source].concat(observables)), new __WEBPACK_IMPORTED_MODULE_1__observable_combineLatest__["a" /* CombineLatestOperator */](project)); };
}
//# sourceMappingURL=combineLatest.js.map


/***/ }),
/* 474 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = concat;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_concat__ = __webpack_require__(71);
/** PURE_IMPORTS_START _observable_concat PURE_IMPORTS_END */

function concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return function (source) { return source.lift.call(__WEBPACK_IMPORTED_MODULE_0__observable_concat__["a" /* concat */].apply(void 0, [source].concat(observables))); };
}
//# sourceMappingURL=concat.js.map


/***/ }),
/* 475 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = concatMapTo;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__concatMap__ = __webpack_require__(267);
/** PURE_IMPORTS_START _concatMap PURE_IMPORTS_END */

function concatMapTo(innerObservable, resultSelector) {
    return Object(__WEBPACK_IMPORTED_MODULE_0__concatMap__["a" /* concatMap */])(function () { return innerObservable; }, resultSelector);
}
//# sourceMappingURL=concatMapTo.js.map


/***/ }),
/* 476 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = count;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function count(predicate) {
    return function (source) { return source.lift(new CountOperator(predicate, source)); };
}
var CountOperator = /*@__PURE__*/ (function () {
    function CountOperator(predicate, source) {
        this.predicate = predicate;
        this.source = source;
    }
    CountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));
    };
    return CountOperator;
}());
var CountSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](CountSubscriber, _super);
    function CountSubscriber(destination, predicate, source) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.source = source;
        _this.count = 0;
        _this.index = 0;
        return _this;
    }
    CountSubscriber.prototype._next = function (value) {
        if (this.predicate) {
            this._tryPredicate(value);
        }
        else {
            this.count++;
        }
    };
    CountSubscriber.prototype._tryPredicate = function (value) {
        var result;
        try {
            result = this.predicate(value, this.index++, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this.count++;
        }
    };
    CountSubscriber.prototype._complete = function () {
        this.destination.next(this.count);
        this.destination.complete();
    };
    return CountSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=count.js.map


/***/ }),
/* 477 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = debounce;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function debounce(durationSelector) {
    return function (source) { return source.lift(new DebounceOperator(durationSelector)); };
}
var DebounceOperator = /*@__PURE__*/ (function () {
    function DebounceOperator(durationSelector) {
        this.durationSelector = durationSelector;
    }
    DebounceOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));
    };
    return DebounceOperator;
}());
var DebounceSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](DebounceSubscriber, _super);
    function DebounceSubscriber(destination, durationSelector) {
        var _this = _super.call(this, destination) || this;
        _this.durationSelector = durationSelector;
        _this.hasValue = false;
        _this.durationSubscription = null;
        return _this;
    }
    DebounceSubscriber.prototype._next = function (value) {
        try {
            var result = this.durationSelector.call(this, value);
            if (result) {
                this._tryNext(value, result);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    DebounceSubscriber.prototype._complete = function () {
        this.emitValue();
        this.destination.complete();
    };
    DebounceSubscriber.prototype._tryNext = function (value, duration) {
        var subscription = this.durationSubscription;
        this.value = value;
        this.hasValue = true;
        if (subscription) {
            subscription.unsubscribe();
            this.remove(subscription);
        }
        subscription = Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(this, duration);
        if (subscription && !subscription.closed) {
            this.add(this.durationSubscription = subscription);
        }
    };
    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.emitValue();
    };
    DebounceSubscriber.prototype.notifyComplete = function () {
        this.emitValue();
    };
    DebounceSubscriber.prototype.emitValue = function () {
        if (this.hasValue) {
            var value = this.value;
            var subscription = this.durationSubscription;
            if (subscription) {
                this.durationSubscription = null;
                subscription.unsubscribe();
                this.remove(subscription);
            }
            this.value = null;
            this.hasValue = false;
            _super.prototype._next.call(this, value);
        }
    };
    return DebounceSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=debounce.js.map


/***/ }),
/* 478 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = debounceTime;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scheduler_async__ = __webpack_require__(29);
/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */



function debounceTime(dueTime, scheduler) {
    if (scheduler === void 0) {
        scheduler = __WEBPACK_IMPORTED_MODULE_2__scheduler_async__["a" /* async */];
    }
    return function (source) { return source.lift(new DebounceTimeOperator(dueTime, scheduler)); };
}
var DebounceTimeOperator = /*@__PURE__*/ (function () {
    function DebounceTimeOperator(dueTime, scheduler) {
        this.dueTime = dueTime;
        this.scheduler = scheduler;
    }
    DebounceTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));
    };
    return DebounceTimeOperator;
}());
var DebounceTimeSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](DebounceTimeSubscriber, _super);
    function DebounceTimeSubscriber(destination, dueTime, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.dueTime = dueTime;
        _this.scheduler = scheduler;
        _this.debouncedSubscription = null;
        _this.lastValue = null;
        _this.hasValue = false;
        return _this;
    }
    DebounceTimeSubscriber.prototype._next = function (value) {
        this.clearDebounce();
        this.lastValue = value;
        this.hasValue = true;
        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));
    };
    DebounceTimeSubscriber.prototype._complete = function () {
        this.debouncedNext();
        this.destination.complete();
    };
    DebounceTimeSubscriber.prototype.debouncedNext = function () {
        this.clearDebounce();
        if (this.hasValue) {
            var lastValue = this.lastValue;
            this.lastValue = null;
            this.hasValue = false;
            this.destination.next(lastValue);
        }
    };
    DebounceTimeSubscriber.prototype.clearDebounce = function () {
        var debouncedSubscription = this.debouncedSubscription;
        if (debouncedSubscription !== null) {
            this.remove(debouncedSubscription);
            debouncedSubscription.unsubscribe();
            this.debouncedSubscription = null;
        }
    };
    return DebounceTimeSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
function dispatchNext(subscriber) {
    subscriber.debouncedNext();
}
//# sourceMappingURL=debounceTime.js.map


/***/ }),
/* 479 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = delay;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__scheduler_async__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isDate__ = __webpack_require__(268);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Notification__ = __webpack_require__(68);
/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_Subscriber,_Notification PURE_IMPORTS_END */





function delay(delay, scheduler) {
    if (scheduler === void 0) {
        scheduler = __WEBPACK_IMPORTED_MODULE_1__scheduler_async__["a" /* async */];
    }
    var absoluteDelay = Object(__WEBPACK_IMPORTED_MODULE_2__util_isDate__["a" /* isDate */])(delay);
    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);
    return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };
}
var DelayOperator = /*@__PURE__*/ (function () {
    function DelayOperator(delay, scheduler) {
        this.delay = delay;
        this.scheduler = scheduler;
    }
    DelayOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));
    };
    return DelayOperator;
}());
var DelaySubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](DelaySubscriber, _super);
    function DelaySubscriber(destination, delay, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.delay = delay;
        _this.scheduler = scheduler;
        _this.queue = [];
        _this.active = false;
        _this.errored = false;
        return _this;
    }
    DelaySubscriber.dispatch = function (state) {
        var source = state.source;
        var queue = source.queue;
        var scheduler = state.scheduler;
        var destination = state.destination;
        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {
            queue.shift().notification.observe(destination);
        }
        if (queue.length > 0) {
            var delay_1 = Math.max(0, queue[0].time - scheduler.now());
            this.schedule(state, delay_1);
        }
        else {
            this.unsubscribe();
            source.active = false;
        }
    };
    DelaySubscriber.prototype._schedule = function (scheduler) {
        this.active = true;
        var destination = this.destination;
        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {
            source: this, destination: this.destination, scheduler: scheduler
        }));
    };
    DelaySubscriber.prototype.scheduleNotification = function (notification) {
        if (this.errored === true) {
            return;
        }
        var scheduler = this.scheduler;
        var message = new DelayMessage(scheduler.now() + this.delay, notification);
        this.queue.push(message);
        if (this.active === false) {
            this._schedule(scheduler);
        }
    };
    DelaySubscriber.prototype._next = function (value) {
        this.scheduleNotification(__WEBPACK_IMPORTED_MODULE_4__Notification__["a" /* Notification */].createNext(value));
    };
    DelaySubscriber.prototype._error = function (err) {
        this.errored = true;
        this.queue = [];
        this.destination.error(err);
        this.unsubscribe();
    };
    DelaySubscriber.prototype._complete = function () {
        this.scheduleNotification(__WEBPACK_IMPORTED_MODULE_4__Notification__["a" /* Notification */].createComplete());
        this.unsubscribe();
    };
    return DelaySubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__Subscriber__["a" /* Subscriber */]));
var DelayMessage = /*@__PURE__*/ (function () {
    function DelayMessage(time, notification) {
        this.time = time;
        this.notification = notification;
    }
    return DelayMessage;
}());
//# sourceMappingURL=delay.js.map


/***/ }),
/* 480 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = delayWhen;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





function delayWhen(delayDurationSelector, subscriptionDelay) {
    if (subscriptionDelay) {
        return function (source) {
            return new SubscriptionDelayObservable(source, subscriptionDelay)
                .lift(new DelayWhenOperator(delayDurationSelector));
        };
    }
    return function (source) { return source.lift(new DelayWhenOperator(delayDurationSelector)); };
}
var DelayWhenOperator = /*@__PURE__*/ (function () {
    function DelayWhenOperator(delayDurationSelector) {
        this.delayDurationSelector = delayDurationSelector;
    }
    DelayWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));
    };
    return DelayWhenOperator;
}());
var DelayWhenSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](DelayWhenSubscriber, _super);
    function DelayWhenSubscriber(destination, delayDurationSelector) {
        var _this = _super.call(this, destination) || this;
        _this.delayDurationSelector = delayDurationSelector;
        _this.completed = false;
        _this.delayNotifierSubscriptions = [];
        _this.index = 0;
        return _this;
    }
    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(outerValue);
        this.removeSubscription(innerSub);
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {
        var value = this.removeSubscription(innerSub);
        if (value) {
            this.destination.next(value);
        }
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype._next = function (value) {
        var index = this.index++;
        try {
            var delayNotifier = this.delayDurationSelector(value, index);
            if (delayNotifier) {
                this.tryDelay(delayNotifier, value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    DelayWhenSubscriber.prototype._complete = function () {
        this.completed = true;
        this.tryComplete();
        this.unsubscribe();
    };
    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {
        subscription.unsubscribe();
        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);
        if (subscriptionIdx !== -1) {
            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);
        }
        return subscription.outerValue;
    };
    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {
        var notifierSubscription = Object(__WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__["a" /* subscribeToResult */])(this, delayNotifier, value);
        if (notifierSubscription && !notifierSubscription.closed) {
            var destination = this.destination;
            destination.add(notifierSubscription);
            this.delayNotifierSubscriptions.push(notifierSubscription);
        }
    };
    DelayWhenSubscriber.prototype.tryComplete = function () {
        if (this.completed && this.delayNotifierSubscriptions.length === 0) {
            this.destination.complete();
        }
    };
    return DelayWhenSubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__["a" /* OuterSubscriber */]));
var SubscriptionDelayObservable = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SubscriptionDelayObservable, _super);
    function SubscriptionDelayObservable(source, subscriptionDelay) {
        var _this = _super.call(this) || this;
        _this.source = source;
        _this.subscriptionDelay = subscriptionDelay;
        return _this;
    }
    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {
        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));
    };
    return SubscriptionDelayObservable;
}(__WEBPACK_IMPORTED_MODULE_2__Observable__["a" /* Observable */]));
var SubscriptionDelaySubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SubscriptionDelaySubscriber, _super);
    function SubscriptionDelaySubscriber(parent, source) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        _this.source = source;
        _this.sourceSubscribed = false;
        return _this;
    }
    SubscriptionDelaySubscriber.prototype._next = function (unused) {
        this.subscribeToSource();
    };
    SubscriptionDelaySubscriber.prototype._error = function (err) {
        this.unsubscribe();
        this.parent.error(err);
    };
    SubscriptionDelaySubscriber.prototype._complete = function () {
        this.unsubscribe();
        this.subscribeToSource();
    };
    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {
        if (!this.sourceSubscribed) {
            this.sourceSubscribed = true;
            this.unsubscribe();
            this.source.subscribe(this.parent);
        }
    };
    return SubscriptionDelaySubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=delayWhen.js.map


/***/ }),
/* 481 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = dematerialize;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function dematerialize() {
    return function dematerializeOperatorFunction(source) {
        return source.lift(new DeMaterializeOperator());
    };
}
var DeMaterializeOperator = /*@__PURE__*/ (function () {
    function DeMaterializeOperator() {
    }
    DeMaterializeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DeMaterializeSubscriber(subscriber));
    };
    return DeMaterializeOperator;
}());
var DeMaterializeSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](DeMaterializeSubscriber, _super);
    function DeMaterializeSubscriber(destination) {
        return _super.call(this, destination) || this;
    }
    DeMaterializeSubscriber.prototype._next = function (value) {
        value.observe(this.destination);
    };
    return DeMaterializeSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=dematerialize.js.map


/***/ }),
/* 482 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = distinct;
/* unused harmony export DistinctSubscriber */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function distinct(keySelector, flushes) {
    return function (source) { return source.lift(new DistinctOperator(keySelector, flushes)); };
}
var DistinctOperator = /*@__PURE__*/ (function () {
    function DistinctOperator(keySelector, flushes) {
        this.keySelector = keySelector;
        this.flushes = flushes;
    }
    DistinctOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));
    };
    return DistinctOperator;
}());
var DistinctSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](DistinctSubscriber, _super);
    function DistinctSubscriber(destination, keySelector, flushes) {
        var _this = _super.call(this, destination) || this;
        _this.keySelector = keySelector;
        _this.values = new Set();
        if (flushes) {
            _this.add(Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(_this, flushes));
        }
        return _this;
    }
    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.values.clear();
    };
    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    DistinctSubscriber.prototype._next = function (value) {
        if (this.keySelector) {
            this._useKeySelector(value);
        }
        else {
            this._finalizeNext(value, value);
        }
    };
    DistinctSubscriber.prototype._useKeySelector = function (value) {
        var key;
        var destination = this.destination;
        try {
            key = this.keySelector(value);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        this._finalizeNext(key, value);
    };
    DistinctSubscriber.prototype._finalizeNext = function (key, value) {
        var values = this.values;
        if (!values.has(key)) {
            values.add(key);
            this.destination.next(value);
        }
    };
    return DistinctSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));

//# sourceMappingURL=distinct.js.map


/***/ }),
/* 483 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = distinctUntilKeyChanged;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__distinctUntilChanged__ = __webpack_require__(269);
/** PURE_IMPORTS_START _distinctUntilChanged PURE_IMPORTS_END */

function distinctUntilKeyChanged(key, compare) {
    return Object(__WEBPACK_IMPORTED_MODULE_0__distinctUntilChanged__["a" /* distinctUntilChanged */])(function (x, y) { return compare ? compare(x[key], y[key]) : x[key] === y[key]; });
}
//# sourceMappingURL=distinctUntilKeyChanged.js.map


/***/ }),
/* 484 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = elementAt;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_ArgumentOutOfRangeError__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__filter__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__throwIfEmpty__ = __webpack_require__(74);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__defaultIfEmpty__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__take__ = __webpack_require__(118);
/** PURE_IMPORTS_START _util_ArgumentOutOfRangeError,_filter,_throwIfEmpty,_defaultIfEmpty,_take PURE_IMPORTS_END */





function elementAt(index, defaultValue) {
    if (index < 0) {
        throw new __WEBPACK_IMPORTED_MODULE_0__util_ArgumentOutOfRangeError__["a" /* ArgumentOutOfRangeError */]();
    }
    var hasDefaultValue = arguments.length >= 2;
    return function (source) {
        return source.pipe(Object(__WEBPACK_IMPORTED_MODULE_1__filter__["a" /* filter */])(function (v, i) { return i === index; }), Object(__WEBPACK_IMPORTED_MODULE_4__take__["a" /* take */])(1), hasDefaultValue
            ? Object(__WEBPACK_IMPORTED_MODULE_3__defaultIfEmpty__["a" /* defaultIfEmpty */])(defaultValue)
            : Object(__WEBPACK_IMPORTED_MODULE_2__throwIfEmpty__["a" /* throwIfEmpty */])(function () { return new __WEBPACK_IMPORTED_MODULE_0__util_ArgumentOutOfRangeError__["a" /* ArgumentOutOfRangeError */](); }));
    };
}
//# sourceMappingURL=elementAt.js.map


/***/ }),
/* 485 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = endWith;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_concat__ = __webpack_require__(71);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__observable_of__ = __webpack_require__(69);
/** PURE_IMPORTS_START _observable_concat,_observable_of PURE_IMPORTS_END */


function endWith() {
    var array = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        array[_i] = arguments[_i];
    }
    return function (source) { return Object(__WEBPACK_IMPORTED_MODULE_0__observable_concat__["a" /* concat */])(source, __WEBPACK_IMPORTED_MODULE_1__observable_of__["a" /* of */].apply(void 0, array)); };
}
//# sourceMappingURL=endWith.js.map


/***/ }),
/* 486 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = every;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function every(predicate, thisArg) {
    return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };
}
var EveryOperator = /*@__PURE__*/ (function () {
    function EveryOperator(predicate, thisArg, source) {
        this.predicate = predicate;
        this.thisArg = thisArg;
        this.source = source;
    }
    EveryOperator.prototype.call = function (observer, source) {
        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));
    };
    return EveryOperator;
}());
var EverySubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](EverySubscriber, _super);
    function EverySubscriber(destination, predicate, thisArg, source) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.thisArg = thisArg;
        _this.source = source;
        _this.index = 0;
        _this.thisArg = thisArg || _this;
        return _this;
    }
    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {
        this.destination.next(everyValueMatch);
        this.destination.complete();
    };
    EverySubscriber.prototype._next = function (value) {
        var result = false;
        try {
            result = this.predicate.call(this.thisArg, value, this.index++, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (!result) {
            this.notifyComplete(false);
        }
    };
    EverySubscriber.prototype._complete = function () {
        this.notifyComplete(true);
    };
    return EverySubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=every.js.map


/***/ }),
/* 487 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = exhaust;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function exhaust() {
    return function (source) { return source.lift(new SwitchFirstOperator()); };
}
var SwitchFirstOperator = /*@__PURE__*/ (function () {
    function SwitchFirstOperator() {
    }
    SwitchFirstOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchFirstSubscriber(subscriber));
    };
    return SwitchFirstOperator;
}());
var SwitchFirstSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SwitchFirstSubscriber, _super);
    function SwitchFirstSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.hasCompleted = false;
        _this.hasSubscription = false;
        return _this;
    }
    SwitchFirstSubscriber.prototype._next = function (value) {
        if (!this.hasSubscription) {
            this.hasSubscription = true;
            this.add(Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(this, value));
        }
    };
    SwitchFirstSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (!this.hasSubscription) {
            this.destination.complete();
        }
    };
    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {
        this.remove(innerSub);
        this.hasSubscription = false;
        if (this.hasCompleted) {
            this.destination.complete();
        }
    };
    return SwitchFirstSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=exhaust.js.map


/***/ }),
/* 488 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = exhaustMap;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__InnerSubscriber__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__map__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__observable_from__ = __webpack_require__(39);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */






function exhaustMap(project, resultSelector) {
    if (resultSelector) {
        return function (source) { return source.pipe(exhaustMap(function (a, i) { return Object(__WEBPACK_IMPORTED_MODULE_5__observable_from__["a" /* from */])(project(a, i)).pipe(Object(__WEBPACK_IMPORTED_MODULE_4__map__["a" /* map */])(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };
    }
    return function (source) {
        return source.lift(new ExhaustMapOperator(project));
    };
}
var ExhaustMapOperator = /*@__PURE__*/ (function () {
    function ExhaustMapOperator(project) {
        this.project = project;
    }
    ExhaustMapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));
    };
    return ExhaustMapOperator;
}());
var ExhaustMapSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ExhaustMapSubscriber, _super);
    function ExhaustMapSubscriber(destination, project) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.hasSubscription = false;
        _this.hasCompleted = false;
        _this.index = 0;
        return _this;
    }
    ExhaustMapSubscriber.prototype._next = function (value) {
        if (!this.hasSubscription) {
            this.tryNext(value);
        }
    };
    ExhaustMapSubscriber.prototype.tryNext = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.hasSubscription = true;
        this._innerSub(result, value, index);
    };
    ExhaustMapSubscriber.prototype._innerSub = function (result, value, index) {
        var innerSubscriber = new __WEBPACK_IMPORTED_MODULE_2__InnerSubscriber__["a" /* InnerSubscriber */](this, value, index);
        var destination = this.destination;
        destination.add(innerSubscriber);
        var innerSubscription = Object(__WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__["a" /* subscribeToResult */])(this, result, undefined, undefined, innerSubscriber);
        if (innerSubscription !== innerSubscriber) {
            destination.add(innerSubscription);
        }
    };
    ExhaustMapSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (!this.hasSubscription) {
            this.destination.complete();
        }
        this.unsubscribe();
    };
    ExhaustMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    ExhaustMapSubscriber.prototype.notifyError = function (err) {
        this.destination.error(err);
    };
    ExhaustMapSubscriber.prototype.notifyComplete = function (innerSub) {
        var destination = this.destination;
        destination.remove(innerSub);
        this.hasSubscription = false;
        if (this.hasCompleted) {
            this.destination.complete();
        }
    };
    return ExhaustMapSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=exhaustMap.js.map


/***/ }),
/* 489 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = expand;
/* unused harmony export ExpandOperator */
/* unused harmony export ExpandSubscriber */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function expand(project, concurrent, scheduler) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    if (scheduler === void 0) {
        scheduler = undefined;
    }
    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;
    return function (source) { return source.lift(new ExpandOperator(project, concurrent, scheduler)); };
}
var ExpandOperator = /*@__PURE__*/ (function () {
    function ExpandOperator(project, concurrent, scheduler) {
        this.project = project;
        this.concurrent = concurrent;
        this.scheduler = scheduler;
    }
    ExpandOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));
    };
    return ExpandOperator;
}());

var ExpandSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ExpandSubscriber, _super);
    function ExpandSubscriber(destination, project, concurrent, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.concurrent = concurrent;
        _this.scheduler = scheduler;
        _this.index = 0;
        _this.active = 0;
        _this.hasCompleted = false;
        if (concurrent < Number.POSITIVE_INFINITY) {
            _this.buffer = [];
        }
        return _this;
    }
    ExpandSubscriber.dispatch = function (arg) {
        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;
        subscriber.subscribeToProjection(result, value, index);
    };
    ExpandSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        if (destination.closed) {
            this._complete();
            return;
        }
        var index = this.index++;
        if (this.active < this.concurrent) {
            destination.next(value);
            try {
                var project = this.project;
                var result = project(value, index);
                if (!this.scheduler) {
                    this.subscribeToProjection(result, value, index);
                }
                else {
                    var state = { subscriber: this, result: result, value: value, index: index };
                    var destination_1 = this.destination;
                    destination_1.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));
                }
            }
            catch (e) {
                destination.error(e);
            }
        }
        else {
            this.buffer.push(value);
        }
    };
    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {
        this.active++;
        var destination = this.destination;
        destination.add(Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(this, result, value, index));
    };
    ExpandSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.hasCompleted && this.active === 0) {
            this.destination.complete();
        }
        this.unsubscribe();
    };
    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this._next(innerValue);
    };
    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        var destination = this.destination;
        destination.remove(innerSub);
        this.active--;
        if (buffer && buffer.length > 0) {
            this._next(buffer.shift());
        }
        if (this.hasCompleted && this.active === 0) {
            this.destination.complete();
        }
    };
    return ExpandSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));

//# sourceMappingURL=expand.js.map


/***/ }),
/* 490 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = finalize;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subscription__ = __webpack_require__(23);
/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription PURE_IMPORTS_END */



function finalize(callback) {
    return function (source) { return source.lift(new FinallyOperator(callback)); };
}
var FinallyOperator = /*@__PURE__*/ (function () {
    function FinallyOperator(callback) {
        this.callback = callback;
    }
    FinallyOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new FinallySubscriber(subscriber, this.callback));
    };
    return FinallyOperator;
}());
var FinallySubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](FinallySubscriber, _super);
    function FinallySubscriber(destination, callback) {
        var _this = _super.call(this, destination) || this;
        _this.add(new __WEBPACK_IMPORTED_MODULE_2__Subscription__["a" /* Subscription */](callback));
        return _this;
    }
    return FinallySubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=finalize.js.map


/***/ }),
/* 491 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = findIndex;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__operators_find__ = __webpack_require__(270);
/** PURE_IMPORTS_START _operators_find PURE_IMPORTS_END */

function findIndex(predicate, thisArg) {
    return function (source) { return source.lift(new __WEBPACK_IMPORTED_MODULE_0__operators_find__["a" /* FindValueOperator */](predicate, source, true, thisArg)); };
}
//# sourceMappingURL=findIndex.js.map


/***/ }),
/* 492 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = first;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_EmptyError__ = __webpack_require__(58);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__filter__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__take__ = __webpack_require__(118);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__defaultIfEmpty__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__throwIfEmpty__ = __webpack_require__(74);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_identity__ = __webpack_require__(43);
/** PURE_IMPORTS_START _util_EmptyError,_filter,_take,_defaultIfEmpty,_throwIfEmpty,_util_identity PURE_IMPORTS_END */






function first(predicate, defaultValue) {
    var hasDefaultValue = arguments.length >= 2;
    return function (source) { return source.pipe(predicate ? Object(__WEBPACK_IMPORTED_MODULE_1__filter__["a" /* filter */])(function (v, i) { return predicate(v, i, source); }) : __WEBPACK_IMPORTED_MODULE_5__util_identity__["a" /* identity */], Object(__WEBPACK_IMPORTED_MODULE_2__take__["a" /* take */])(1), hasDefaultValue ? Object(__WEBPACK_IMPORTED_MODULE_3__defaultIfEmpty__["a" /* defaultIfEmpty */])(defaultValue) : Object(__WEBPACK_IMPORTED_MODULE_4__throwIfEmpty__["a" /* throwIfEmpty */])(function () { return new __WEBPACK_IMPORTED_MODULE_0__util_EmptyError__["a" /* EmptyError */](); })); };
}
//# sourceMappingURL=first.js.map


/***/ }),
/* 493 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = ignoreElements;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function ignoreElements() {
    return function ignoreElementsOperatorFunction(source) {
        return source.lift(new IgnoreElementsOperator());
    };
}
var IgnoreElementsOperator = /*@__PURE__*/ (function () {
    function IgnoreElementsOperator() {
    }
    IgnoreElementsOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new IgnoreElementsSubscriber(subscriber));
    };
    return IgnoreElementsOperator;
}());
var IgnoreElementsSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](IgnoreElementsSubscriber, _super);
    function IgnoreElementsSubscriber() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IgnoreElementsSubscriber.prototype._next = function (unused) {
    };
    return IgnoreElementsSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=ignoreElements.js.map


/***/ }),
/* 494 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isEmpty;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function isEmpty() {
    return function (source) { return source.lift(new IsEmptyOperator()); };
}
var IsEmptyOperator = /*@__PURE__*/ (function () {
    function IsEmptyOperator() {
    }
    IsEmptyOperator.prototype.call = function (observer, source) {
        return source.subscribe(new IsEmptySubscriber(observer));
    };
    return IsEmptyOperator;
}());
var IsEmptySubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](IsEmptySubscriber, _super);
    function IsEmptySubscriber(destination) {
        return _super.call(this, destination) || this;
    }
    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {
        var destination = this.destination;
        destination.next(isEmpty);
        destination.complete();
    };
    IsEmptySubscriber.prototype._next = function (value) {
        this.notifyComplete(false);
    };
    IsEmptySubscriber.prototype._complete = function () {
        this.notifyComplete(true);
    };
    return IsEmptySubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=isEmpty.js.map


/***/ }),
/* 495 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = last;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_EmptyError__ = __webpack_require__(58);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__filter__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__takeLast__ = __webpack_require__(119);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__throwIfEmpty__ = __webpack_require__(74);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__defaultIfEmpty__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_identity__ = __webpack_require__(43);
/** PURE_IMPORTS_START _util_EmptyError,_filter,_takeLast,_throwIfEmpty,_defaultIfEmpty,_util_identity PURE_IMPORTS_END */






function last(predicate, defaultValue) {
    var hasDefaultValue = arguments.length >= 2;
    return function (source) { return source.pipe(predicate ? Object(__WEBPACK_IMPORTED_MODULE_1__filter__["a" /* filter */])(function (v, i) { return predicate(v, i, source); }) : __WEBPACK_IMPORTED_MODULE_5__util_identity__["a" /* identity */], Object(__WEBPACK_IMPORTED_MODULE_2__takeLast__["a" /* takeLast */])(1), hasDefaultValue ? Object(__WEBPACK_IMPORTED_MODULE_4__defaultIfEmpty__["a" /* defaultIfEmpty */])(defaultValue) : Object(__WEBPACK_IMPORTED_MODULE_3__throwIfEmpty__["a" /* throwIfEmpty */])(function () { return new __WEBPACK_IMPORTED_MODULE_0__util_EmptyError__["a" /* EmptyError */](); })); };
}
//# sourceMappingURL=last.js.map


/***/ }),
/* 496 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = mapTo;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function mapTo(value) {
    return function (source) { return source.lift(new MapToOperator(value)); };
}
var MapToOperator = /*@__PURE__*/ (function () {
    function MapToOperator(value) {
        this.value = value;
    }
    MapToOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MapToSubscriber(subscriber, this.value));
    };
    return MapToOperator;
}());
var MapToSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](MapToSubscriber, _super);
    function MapToSubscriber(destination, value) {
        var _this = _super.call(this, destination) || this;
        _this.value = value;
        return _this;
    }
    MapToSubscriber.prototype._next = function (x) {
        this.destination.next(this.value);
    };
    return MapToSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=mapTo.js.map


/***/ }),
/* 497 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = materialize;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Notification__ = __webpack_require__(68);
/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */



function materialize() {
    return function materializeOperatorFunction(source) {
        return source.lift(new MaterializeOperator());
    };
}
var MaterializeOperator = /*@__PURE__*/ (function () {
    function MaterializeOperator() {
    }
    MaterializeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MaterializeSubscriber(subscriber));
    };
    return MaterializeOperator;
}());
var MaterializeSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](MaterializeSubscriber, _super);
    function MaterializeSubscriber(destination) {
        return _super.call(this, destination) || this;
    }
    MaterializeSubscriber.prototype._next = function (value) {
        this.destination.next(__WEBPACK_IMPORTED_MODULE_2__Notification__["a" /* Notification */].createNext(value));
    };
    MaterializeSubscriber.prototype._error = function (err) {
        var destination = this.destination;
        destination.next(__WEBPACK_IMPORTED_MODULE_2__Notification__["a" /* Notification */].createError(err));
        destination.complete();
    };
    MaterializeSubscriber.prototype._complete = function () {
        var destination = this.destination;
        destination.next(__WEBPACK_IMPORTED_MODULE_2__Notification__["a" /* Notification */].createComplete());
        destination.complete();
    };
    return MaterializeSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=materialize.js.map


/***/ }),
/* 498 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = max;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__reduce__ = __webpack_require__(75);
/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */

function max(comparer) {
    var max = (typeof comparer === 'function')
        ? function (x, y) { return comparer(x, y) > 0 ? x : y; }
        : function (x, y) { return x > y ? x : y; };
    return Object(__WEBPACK_IMPORTED_MODULE_0__reduce__["a" /* reduce */])(max);
}
//# sourceMappingURL=max.js.map


/***/ }),
/* 499 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = merge;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_merge__ = __webpack_require__(261);
/** PURE_IMPORTS_START _observable_merge PURE_IMPORTS_END */

function merge() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return function (source) { return source.lift.call(__WEBPACK_IMPORTED_MODULE_0__observable_merge__["a" /* merge */].apply(void 0, [source].concat(observables))); };
}
//# sourceMappingURL=merge.js.map


/***/ }),
/* 500 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = mergeMapTo;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mergeMap__ = __webpack_require__(72);
/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */

function mergeMapTo(innerObservable, resultSelector, concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    if (typeof resultSelector === 'function') {
        return Object(__WEBPACK_IMPORTED_MODULE_0__mergeMap__["b" /* mergeMap */])(function () { return innerObservable; }, resultSelector, concurrent);
    }
    if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
    }
    return Object(__WEBPACK_IMPORTED_MODULE_0__mergeMap__["b" /* mergeMap */])(function () { return innerObservable; }, concurrent);
}
//# sourceMappingURL=mergeMapTo.js.map


/***/ }),
/* 501 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = mergeScan;
/* unused harmony export MergeScanOperator */
/* unused harmony export MergeScanSubscriber */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_subscribeToResult__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__InnerSubscriber__ = __webpack_require__(41);
/** PURE_IMPORTS_START tslib,_util_subscribeToResult,_OuterSubscriber,_InnerSubscriber PURE_IMPORTS_END */




function mergeScan(accumulator, seed, concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    return function (source) { return source.lift(new MergeScanOperator(accumulator, seed, concurrent)); };
}
var MergeScanOperator = /*@__PURE__*/ (function () {
    function MergeScanOperator(accumulator, seed, concurrent) {
        this.accumulator = accumulator;
        this.seed = seed;
        this.concurrent = concurrent;
    }
    MergeScanOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));
    };
    return MergeScanOperator;
}());

var MergeScanSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](MergeScanSubscriber, _super);
    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {
        var _this = _super.call(this, destination) || this;
        _this.accumulator = accumulator;
        _this.acc = acc;
        _this.concurrent = concurrent;
        _this.hasValue = false;
        _this.hasCompleted = false;
        _this.buffer = [];
        _this.active = 0;
        _this.index = 0;
        return _this;
    }
    MergeScanSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            var index = this.index++;
            var destination = this.destination;
            var ish = void 0;
            try {
                var accumulator = this.accumulator;
                ish = accumulator(this.acc, value, index);
            }
            catch (e) {
                return destination.error(e);
            }
            this.active++;
            this._innerSub(ish, value, index);
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {
        var innerSubscriber = new __WEBPACK_IMPORTED_MODULE_3__InnerSubscriber__["a" /* InnerSubscriber */](this, value, index);
        var destination = this.destination;
        destination.add(innerSubscriber);
        var innerSubscription = Object(__WEBPACK_IMPORTED_MODULE_1__util_subscribeToResult__["a" /* subscribeToResult */])(this, ish, undefined, undefined, innerSubscriber);
        if (innerSubscription !== innerSubscriber) {
            destination.add(innerSubscription);
        }
    };
    MergeScanSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            if (this.hasValue === false) {
                this.destination.next(this.acc);
            }
            this.destination.complete();
        }
        this.unsubscribe();
    };
    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var destination = this.destination;
        this.acc = innerValue;
        this.hasValue = true;
        destination.next(innerValue);
    };
    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        var destination = this.destination;
        destination.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            if (this.hasValue === false) {
                this.destination.next(this.acc);
            }
            this.destination.complete();
        }
    };
    return MergeScanSubscriber;
}(__WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__["a" /* OuterSubscriber */]));

//# sourceMappingURL=mergeScan.js.map


/***/ }),
/* 502 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = min;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__reduce__ = __webpack_require__(75);
/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */

function min(comparer) {
    var min = (typeof comparer === 'function')
        ? function (x, y) { return comparer(x, y) < 0 ? x : y; }
        : function (x, y) { return x < y ? x : y; };
    return Object(__WEBPACK_IMPORTED_MODULE_0__reduce__["a" /* reduce */])(min);
}
//# sourceMappingURL=min.js.map


/***/ }),
/* 503 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = onErrorResumeNext;
/* unused harmony export onErrorResumeNextStatic */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__observable_from__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_isArray__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__InnerSubscriber__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_observable_from,_util_isArray,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult PURE_IMPORTS_END */






function onErrorResumeNext() {
    var nextSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        nextSources[_i] = arguments[_i];
    }
    if (nextSources.length === 1 && Object(__WEBPACK_IMPORTED_MODULE_2__util_isArray__["a" /* isArray */])(nextSources[0])) {
        nextSources = nextSources[0];
    }
    return function (source) { return source.lift(new OnErrorResumeNextOperator(nextSources)); };
}
function onErrorResumeNextStatic() {
    var nextSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        nextSources[_i] = arguments[_i];
    }
    var source = null;
    if (nextSources.length === 1 && Object(__WEBPACK_IMPORTED_MODULE_2__util_isArray__["a" /* isArray */])(nextSources[0])) {
        nextSources = nextSources[0];
    }
    source = nextSources.shift();
    return Object(__WEBPACK_IMPORTED_MODULE_1__observable_from__["a" /* from */])(source, null).lift(new OnErrorResumeNextOperator(nextSources));
}
var OnErrorResumeNextOperator = /*@__PURE__*/ (function () {
    function OnErrorResumeNextOperator(nextSources) {
        this.nextSources = nextSources;
    }
    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));
    };
    return OnErrorResumeNextOperator;
}());
var OnErrorResumeNextSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](OnErrorResumeNextSubscriber, _super);
    function OnErrorResumeNextSubscriber(destination, nextSources) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.nextSources = nextSources;
        return _this;
    }
    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype._error = function (err) {
        this.subscribeToNextSource();
        this.unsubscribe();
    };
    OnErrorResumeNextSubscriber.prototype._complete = function () {
        this.subscribeToNextSource();
        this.unsubscribe();
    };
    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {
        var next = this.nextSources.shift();
        if (!!next) {
            var innerSubscriber = new __WEBPACK_IMPORTED_MODULE_4__InnerSubscriber__["a" /* InnerSubscriber */](this, undefined, undefined);
            var destination = this.destination;
            destination.add(innerSubscriber);
            var innerSubscription = Object(__WEBPACK_IMPORTED_MODULE_5__util_subscribeToResult__["a" /* subscribeToResult */])(this, next, undefined, undefined, innerSubscriber);
            if (innerSubscription !== innerSubscriber) {
                destination.add(innerSubscription);
            }
        }
        else {
            this.destination.complete();
        }
    };
    return OnErrorResumeNextSubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=onErrorResumeNext.js.map


/***/ }),
/* 504 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = pairwise;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function pairwise() {
    return function (source) { return source.lift(new PairwiseOperator()); };
}
var PairwiseOperator = /*@__PURE__*/ (function () {
    function PairwiseOperator() {
    }
    PairwiseOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new PairwiseSubscriber(subscriber));
    };
    return PairwiseOperator;
}());
var PairwiseSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](PairwiseSubscriber, _super);
    function PairwiseSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.hasPrev = false;
        return _this;
    }
    PairwiseSubscriber.prototype._next = function (value) {
        var pair;
        if (this.hasPrev) {
            pair = [this.prev, value];
        }
        else {
            this.hasPrev = true;
        }
        this.prev = value;
        if (pair) {
            this.destination.next(pair);
        }
    };
    return PairwiseSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=pairwise.js.map


/***/ }),
/* 505 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = partition;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_not__ = __webpack_require__(263);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__filter__ = __webpack_require__(48);
/** PURE_IMPORTS_START _util_not,_filter PURE_IMPORTS_END */


function partition(predicate, thisArg) {
    return function (source) {
        return [
            Object(__WEBPACK_IMPORTED_MODULE_1__filter__["a" /* filter */])(predicate, thisArg)(source),
            Object(__WEBPACK_IMPORTED_MODULE_1__filter__["a" /* filter */])(Object(__WEBPACK_IMPORTED_MODULE_0__util_not__["a" /* not */])(predicate, thisArg))(source)
        ];
    };
}
//# sourceMappingURL=partition.js.map


/***/ }),
/* 506 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = pluck;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__map__ = __webpack_require__(33);
/** PURE_IMPORTS_START _map PURE_IMPORTS_END */

function pluck() {
    var properties = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        properties[_i] = arguments[_i];
    }
    var length = properties.length;
    if (length === 0) {
        throw new Error('list of properties cannot be empty.');
    }
    return function (source) { return Object(__WEBPACK_IMPORTED_MODULE_0__map__["a" /* map */])(plucker(properties, length))(source); };
}
function plucker(props, length) {
    var mapper = function (x) {
        var currentProp = x;
        for (var i = 0; i < length; i++) {
            var p = currentProp != null ? currentProp[props[i]] : undefined;
            if (p !== void 0) {
                currentProp = p;
            }
            else {
                return undefined;
            }
        }
        return currentProp;
    };
    return mapper;
}
//# sourceMappingURL=pluck.js.map


/***/ }),
/* 507 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = publish;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Subject__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__multicast__ = __webpack_require__(49);
/** PURE_IMPORTS_START _Subject,_multicast PURE_IMPORTS_END */


function publish(selector) {
    return selector ?
        Object(__WEBPACK_IMPORTED_MODULE_1__multicast__["a" /* multicast */])(function () { return new __WEBPACK_IMPORTED_MODULE_0__Subject__["a" /* Subject */](); }, selector) :
        Object(__WEBPACK_IMPORTED_MODULE_1__multicast__["a" /* multicast */])(new __WEBPACK_IMPORTED_MODULE_0__Subject__["a" /* Subject */]());
}
//# sourceMappingURL=publish.js.map


/***/ }),
/* 508 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = publishBehavior;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__BehaviorSubject__ = __webpack_require__(250);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__multicast__ = __webpack_require__(49);
/** PURE_IMPORTS_START _BehaviorSubject,_multicast PURE_IMPORTS_END */


function publishBehavior(value) {
    return function (source) { return Object(__WEBPACK_IMPORTED_MODULE_1__multicast__["a" /* multicast */])(new __WEBPACK_IMPORTED_MODULE_0__BehaviorSubject__["a" /* BehaviorSubject */](value))(source); };
}
//# sourceMappingURL=publishBehavior.js.map


/***/ }),
/* 509 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = publishLast;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__AsyncSubject__ = __webpack_require__(70);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__multicast__ = __webpack_require__(49);
/** PURE_IMPORTS_START _AsyncSubject,_multicast PURE_IMPORTS_END */


function publishLast() {
    return function (source) { return Object(__WEBPACK_IMPORTED_MODULE_1__multicast__["a" /* multicast */])(new __WEBPACK_IMPORTED_MODULE_0__AsyncSubject__["a" /* AsyncSubject */]())(source); };
}
//# sourceMappingURL=publishLast.js.map


/***/ }),
/* 510 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = publishReplay;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ReplaySubject__ = __webpack_require__(108);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__multicast__ = __webpack_require__(49);
/** PURE_IMPORTS_START _ReplaySubject,_multicast PURE_IMPORTS_END */


function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {
    if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {
        scheduler = selectorOrScheduler;
    }
    var selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;
    var subject = new __WEBPACK_IMPORTED_MODULE_0__ReplaySubject__["a" /* ReplaySubject */](bufferSize, windowTime, scheduler);
    return function (source) { return Object(__WEBPACK_IMPORTED_MODULE_1__multicast__["a" /* multicast */])(function () { return subject; }, selector)(source); };
}
//# sourceMappingURL=publishReplay.js.map


/***/ }),
/* 511 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = race;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_isArray__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__observable_race__ = __webpack_require__(264);
/** PURE_IMPORTS_START _util_isArray,_observable_race PURE_IMPORTS_END */


function race() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return function raceOperatorFunction(source) {
        if (observables.length === 1 && Object(__WEBPACK_IMPORTED_MODULE_0__util_isArray__["a" /* isArray */])(observables[0])) {
            observables = observables[0];
        }
        return source.lift.call(__WEBPACK_IMPORTED_MODULE_1__observable_race__["a" /* race */].apply(void 0, [source].concat(observables)));
    };
}
//# sourceMappingURL=race.js.map


/***/ }),
/* 512 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = repeat;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__observable_empty__ = __webpack_require__(37);
/** PURE_IMPORTS_START tslib,_Subscriber,_observable_empty PURE_IMPORTS_END */



function repeat(count) {
    if (count === void 0) {
        count = -1;
    }
    return function (source) {
        if (count === 0) {
            return Object(__WEBPACK_IMPORTED_MODULE_2__observable_empty__["b" /* empty */])();
        }
        else if (count < 0) {
            return source.lift(new RepeatOperator(-1, source));
        }
        else {
            return source.lift(new RepeatOperator(count - 1, source));
        }
    };
}
var RepeatOperator = /*@__PURE__*/ (function () {
    function RepeatOperator(count, source) {
        this.count = count;
        this.source = source;
    }
    RepeatOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));
    };
    return RepeatOperator;
}());
var RepeatSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](RepeatSubscriber, _super);
    function RepeatSubscriber(destination, count, source) {
        var _this = _super.call(this, destination) || this;
        _this.count = count;
        _this.source = source;
        return _this;
    }
    RepeatSubscriber.prototype.complete = function () {
        if (!this.isStopped) {
            var _a = this, source = _a.source, count = _a.count;
            if (count === 0) {
                return _super.prototype.complete.call(this);
            }
            else if (count > -1) {
                this.count = count - 1;
            }
            source.subscribe(this._unsubscribeAndRecycle());
        }
    };
    return RepeatSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=repeat.js.map


/***/ }),
/* 513 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = repeatWhen;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subject__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function repeatWhen(notifier) {
    return function (source) { return source.lift(new RepeatWhenOperator(notifier)); };
}
var RepeatWhenOperator = /*@__PURE__*/ (function () {
    function RepeatWhenOperator(notifier) {
        this.notifier = notifier;
    }
    RepeatWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));
    };
    return RepeatWhenOperator;
}());
var RepeatWhenSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](RepeatWhenSubscriber, _super);
    function RepeatWhenSubscriber(destination, notifier, source) {
        var _this = _super.call(this, destination) || this;
        _this.notifier = notifier;
        _this.source = source;
        _this.sourceIsBeingSubscribedTo = true;
        return _this;
    }
    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.sourceIsBeingSubscribedTo = true;
        this.source.subscribe(this);
    };
    RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {
        if (this.sourceIsBeingSubscribedTo === false) {
            return _super.prototype.complete.call(this);
        }
    };
    RepeatWhenSubscriber.prototype.complete = function () {
        this.sourceIsBeingSubscribedTo = false;
        if (!this.isStopped) {
            if (!this.retries) {
                this.subscribeToRetries();
            }
            if (!this.retriesSubscription || this.retriesSubscription.closed) {
                return _super.prototype.complete.call(this);
            }
            this._unsubscribeAndRecycle();
            this.notifications.next();
        }
    };
    RepeatWhenSubscriber.prototype._unsubscribe = function () {
        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;
        if (notifications) {
            notifications.unsubscribe();
            this.notifications = null;
        }
        if (retriesSubscription) {
            retriesSubscription.unsubscribe();
            this.retriesSubscription = null;
        }
        this.retries = null;
    };
    RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {
        var _unsubscribe = this._unsubscribe;
        this._unsubscribe = null;
        _super.prototype._unsubscribeAndRecycle.call(this);
        this._unsubscribe = _unsubscribe;
        return this;
    };
    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {
        this.notifications = new __WEBPACK_IMPORTED_MODULE_1__Subject__["a" /* Subject */]();
        var retries;
        try {
            var notifier = this.notifier;
            retries = notifier(this.notifications);
        }
        catch (e) {
            return _super.prototype.complete.call(this);
        }
        this.retries = retries;
        this.retriesSubscription = Object(__WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__["a" /* subscribeToResult */])(this, retries);
    };
    return RepeatWhenSubscriber;
}(__WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=repeatWhen.js.map


/***/ }),
/* 514 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = retry;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function retry(count) {
    if (count === void 0) {
        count = -1;
    }
    return function (source) { return source.lift(new RetryOperator(count, source)); };
}
var RetryOperator = /*@__PURE__*/ (function () {
    function RetryOperator(count, source) {
        this.count = count;
        this.source = source;
    }
    RetryOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));
    };
    return RetryOperator;
}());
var RetrySubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](RetrySubscriber, _super);
    function RetrySubscriber(destination, count, source) {
        var _this = _super.call(this, destination) || this;
        _this.count = count;
        _this.source = source;
        return _this;
    }
    RetrySubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _a = this, source = _a.source, count = _a.count;
            if (count === 0) {
                return _super.prototype.error.call(this, err);
            }
            else if (count > -1) {
                this.count = count - 1;
            }
            source.subscribe(this._unsubscribeAndRecycle());
        }
    };
    return RetrySubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=retry.js.map


/***/ }),
/* 515 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = retryWhen;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subject__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function retryWhen(notifier) {
    return function (source) { return source.lift(new RetryWhenOperator(notifier, source)); };
}
var RetryWhenOperator = /*@__PURE__*/ (function () {
    function RetryWhenOperator(notifier, source) {
        this.notifier = notifier;
        this.source = source;
    }
    RetryWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));
    };
    return RetryWhenOperator;
}());
var RetryWhenSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](RetryWhenSubscriber, _super);
    function RetryWhenSubscriber(destination, notifier, source) {
        var _this = _super.call(this, destination) || this;
        _this.notifier = notifier;
        _this.source = source;
        return _this;
    }
    RetryWhenSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var errors = this.errors;
            var retries = this.retries;
            var retriesSubscription = this.retriesSubscription;
            if (!retries) {
                errors = new __WEBPACK_IMPORTED_MODULE_1__Subject__["a" /* Subject */]();
                try {
                    var notifier = this.notifier;
                    retries = notifier(errors);
                }
                catch (e) {
                    return _super.prototype.error.call(this, e);
                }
                retriesSubscription = Object(__WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__["a" /* subscribeToResult */])(this, retries);
            }
            else {
                this.errors = null;
                this.retriesSubscription = null;
            }
            this._unsubscribeAndRecycle();
            this.errors = errors;
            this.retries = retries;
            this.retriesSubscription = retriesSubscription;
            errors.next(err);
        }
    };
    RetryWhenSubscriber.prototype._unsubscribe = function () {
        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;
        if (errors) {
            errors.unsubscribe();
            this.errors = null;
        }
        if (retriesSubscription) {
            retriesSubscription.unsubscribe();
            this.retriesSubscription = null;
        }
        this.retries = null;
    };
    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var _unsubscribe = this._unsubscribe;
        this._unsubscribe = null;
        this._unsubscribeAndRecycle();
        this._unsubscribe = _unsubscribe;
        this.source.subscribe(this);
    };
    return RetryWhenSubscriber;
}(__WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=retryWhen.js.map


/***/ }),
/* 516 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = sample;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function sample(notifier) {
    return function (source) { return source.lift(new SampleOperator(notifier)); };
}
var SampleOperator = /*@__PURE__*/ (function () {
    function SampleOperator(notifier) {
        this.notifier = notifier;
    }
    SampleOperator.prototype.call = function (subscriber, source) {
        var sampleSubscriber = new SampleSubscriber(subscriber);
        var subscription = source.subscribe(sampleSubscriber);
        subscription.add(Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(sampleSubscriber, this.notifier));
        return subscription;
    };
    return SampleOperator;
}());
var SampleSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SampleSubscriber, _super);
    function SampleSubscriber() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.hasValue = false;
        return _this;
    }
    SampleSubscriber.prototype._next = function (value) {
        this.value = value;
        this.hasValue = true;
    };
    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.emitValue();
    };
    SampleSubscriber.prototype.notifyComplete = function () {
        this.emitValue();
    };
    SampleSubscriber.prototype.emitValue = function () {
        if (this.hasValue) {
            this.hasValue = false;
            this.destination.next(this.value);
        }
    };
    return SampleSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=sample.js.map


/***/ }),
/* 517 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = sampleTime;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scheduler_async__ = __webpack_require__(29);
/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */



function sampleTime(period, scheduler) {
    if (scheduler === void 0) {
        scheduler = __WEBPACK_IMPORTED_MODULE_2__scheduler_async__["a" /* async */];
    }
    return function (source) { return source.lift(new SampleTimeOperator(period, scheduler)); };
}
var SampleTimeOperator = /*@__PURE__*/ (function () {
    function SampleTimeOperator(period, scheduler) {
        this.period = period;
        this.scheduler = scheduler;
    }
    SampleTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));
    };
    return SampleTimeOperator;
}());
var SampleTimeSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SampleTimeSubscriber, _super);
    function SampleTimeSubscriber(destination, period, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.period = period;
        _this.scheduler = scheduler;
        _this.hasValue = false;
        _this.add(scheduler.schedule(dispatchNotification, period, { subscriber: _this, period: period }));
        return _this;
    }
    SampleTimeSubscriber.prototype._next = function (value) {
        this.lastValue = value;
        this.hasValue = true;
    };
    SampleTimeSubscriber.prototype.notifyNext = function () {
        if (this.hasValue) {
            this.hasValue = false;
            this.destination.next(this.lastValue);
        }
    };
    return SampleTimeSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
function dispatchNotification(state) {
    var subscriber = state.subscriber, period = state.period;
    subscriber.notifyNext();
    this.schedule(state, period);
}
//# sourceMappingURL=sampleTime.js.map


/***/ }),
/* 518 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = sequenceEqual;
/* unused harmony export SequenceEqualOperator */
/* unused harmony export SequenceEqualSubscriber */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function sequenceEqual(compareTo, comparator) {
    return function (source) { return source.lift(new SequenceEqualOperator(compareTo, comparator)); };
}
var SequenceEqualOperator = /*@__PURE__*/ (function () {
    function SequenceEqualOperator(compareTo, comparator) {
        this.compareTo = compareTo;
        this.comparator = comparator;
    }
    SequenceEqualOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));
    };
    return SequenceEqualOperator;
}());

var SequenceEqualSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SequenceEqualSubscriber, _super);
    function SequenceEqualSubscriber(destination, compareTo, comparator) {
        var _this = _super.call(this, destination) || this;
        _this.compareTo = compareTo;
        _this.comparator = comparator;
        _this._a = [];
        _this._b = [];
        _this._oneComplete = false;
        _this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));
        return _this;
    }
    SequenceEqualSubscriber.prototype._next = function (value) {
        if (this._oneComplete && this._b.length === 0) {
            this.emit(false);
        }
        else {
            this._a.push(value);
            this.checkValues();
        }
    };
    SequenceEqualSubscriber.prototype._complete = function () {
        if (this._oneComplete) {
            this.emit(this._a.length === 0 && this._b.length === 0);
        }
        else {
            this._oneComplete = true;
        }
        this.unsubscribe();
    };
    SequenceEqualSubscriber.prototype.checkValues = function () {
        var _c = this, _a = _c._a, _b = _c._b, comparator = _c.comparator;
        while (_a.length > 0 && _b.length > 0) {
            var a = _a.shift();
            var b = _b.shift();
            var areEqual = false;
            try {
                areEqual = comparator ? comparator(a, b) : a === b;
            }
            catch (e) {
                this.destination.error(e);
            }
            if (!areEqual) {
                this.emit(false);
            }
        }
    };
    SequenceEqualSubscriber.prototype.emit = function (value) {
        var destination = this.destination;
        destination.next(value);
        destination.complete();
    };
    SequenceEqualSubscriber.prototype.nextB = function (value) {
        if (this._oneComplete && this._a.length === 0) {
            this.emit(false);
        }
        else {
            this._b.push(value);
            this.checkValues();
        }
    };
    SequenceEqualSubscriber.prototype.completeB = function () {
        if (this._oneComplete) {
            this.emit(this._a.length === 0 && this._b.length === 0);
        }
        else {
            this._oneComplete = true;
        }
    };
    return SequenceEqualSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));

var SequenceEqualCompareToSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SequenceEqualCompareToSubscriber, _super);
    function SequenceEqualCompareToSubscriber(destination, parent) {
        var _this = _super.call(this, destination) || this;
        _this.parent = parent;
        return _this;
    }
    SequenceEqualCompareToSubscriber.prototype._next = function (value) {
        this.parent.nextB(value);
    };
    SequenceEqualCompareToSubscriber.prototype._error = function (err) {
        this.parent.error(err);
        this.unsubscribe();
    };
    SequenceEqualCompareToSubscriber.prototype._complete = function () {
        this.parent.completeB();
        this.unsubscribe();
    };
    return SequenceEqualCompareToSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=sequenceEqual.js.map


/***/ }),
/* 519 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = share;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__multicast__ = __webpack_require__(49);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__refCount__ = __webpack_require__(107);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subject__ = __webpack_require__(27);
/** PURE_IMPORTS_START _multicast,_refCount,_Subject PURE_IMPORTS_END */



function shareSubjectFactory() {
    return new __WEBPACK_IMPORTED_MODULE_2__Subject__["a" /* Subject */]();
}
function share() {
    return function (source) { return Object(__WEBPACK_IMPORTED_MODULE_1__refCount__["a" /* refCount */])()(Object(__WEBPACK_IMPORTED_MODULE_0__multicast__["a" /* multicast */])(shareSubjectFactory)(source)); };
}
//# sourceMappingURL=share.js.map


/***/ }),
/* 520 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = shareReplay;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ReplaySubject__ = __webpack_require__(108);
/** PURE_IMPORTS_START _ReplaySubject PURE_IMPORTS_END */

function shareReplay(configOrBufferSize, windowTime, scheduler) {
    var config;
    if (configOrBufferSize && typeof configOrBufferSize === 'object') {
        config = configOrBufferSize;
    }
    else {
        config = {
            bufferSize: configOrBufferSize,
            windowTime: windowTime,
            refCount: false,
            scheduler: scheduler
        };
    }
    return function (source) { return source.lift(shareReplayOperator(config)); };
}
function shareReplayOperator(_a) {
    var _b = _a.bufferSize, bufferSize = _b === void 0 ? Number.POSITIVE_INFINITY : _b, _c = _a.windowTime, windowTime = _c === void 0 ? Number.POSITIVE_INFINITY : _c, useRefCount = _a.refCount, scheduler = _a.scheduler;
    var subject;
    var refCount = 0;
    var subscription;
    var hasError = false;
    var isComplete = false;
    return function shareReplayOperation(source) {
        refCount++;
        var innerSub;
        if (!subject || hasError) {
            hasError = false;
            subject = new __WEBPACK_IMPORTED_MODULE_0__ReplaySubject__["a" /* ReplaySubject */](bufferSize, windowTime, scheduler);
            innerSub = subject.subscribe(this);
            subscription = source.subscribe({
                next: function (value) { subject.next(value); },
                error: function (err) {
                    hasError = true;
                    subject.error(err);
                },
                complete: function () {
                    isComplete = true;
                    subscription = undefined;
                    subject.complete();
                },
            });
        }
        else {
            innerSub = subject.subscribe(this);
        }
        this.add(function () {
            refCount--;
            innerSub.unsubscribe();
            if (subscription && !isComplete && useRefCount && refCount === 0) {
                subscription.unsubscribe();
                subscription = undefined;
                subject = undefined;
            }
        });
    };
}
//# sourceMappingURL=shareReplay.js.map


/***/ }),
/* 521 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = single;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_EmptyError__ = __webpack_require__(58);
/** PURE_IMPORTS_START tslib,_Subscriber,_util_EmptyError PURE_IMPORTS_END */



function single(predicate) {
    return function (source) { return source.lift(new SingleOperator(predicate, source)); };
}
var SingleOperator = /*@__PURE__*/ (function () {
    function SingleOperator(predicate, source) {
        this.predicate = predicate;
        this.source = source;
    }
    SingleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));
    };
    return SingleOperator;
}());
var SingleSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SingleSubscriber, _super);
    function SingleSubscriber(destination, predicate, source) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.source = source;
        _this.seenValue = false;
        _this.index = 0;
        return _this;
    }
    SingleSubscriber.prototype.applySingleValue = function (value) {
        if (this.seenValue) {
            this.destination.error('Sequence contains more than one element');
        }
        else {
            this.seenValue = true;
            this.singleValue = value;
        }
    };
    SingleSubscriber.prototype._next = function (value) {
        var index = this.index++;
        if (this.predicate) {
            this.tryNext(value, index);
        }
        else {
            this.applySingleValue(value);
        }
    };
    SingleSubscriber.prototype.tryNext = function (value, index) {
        try {
            if (this.predicate(value, index, this.source)) {
                this.applySingleValue(value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    SingleSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (this.index > 0) {
            destination.next(this.seenValue ? this.singleValue : undefined);
            destination.complete();
        }
        else {
            destination.error(new __WEBPACK_IMPORTED_MODULE_2__util_EmptyError__["a" /* EmptyError */]);
        }
    };
    return SingleSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=single.js.map


/***/ }),
/* 522 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = skip;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function skip(count) {
    return function (source) { return source.lift(new SkipOperator(count)); };
}
var SkipOperator = /*@__PURE__*/ (function () {
    function SkipOperator(total) {
        this.total = total;
    }
    SkipOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SkipSubscriber(subscriber, this.total));
    };
    return SkipOperator;
}());
var SkipSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SkipSubscriber, _super);
    function SkipSubscriber(destination, total) {
        var _this = _super.call(this, destination) || this;
        _this.total = total;
        _this.count = 0;
        return _this;
    }
    SkipSubscriber.prototype._next = function (x) {
        if (++this.count > this.total) {
            this.destination.next(x);
        }
    };
    return SkipSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=skip.js.map


/***/ }),
/* 523 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = skipLast;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_ArgumentOutOfRangeError__ = __webpack_require__(57);
/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError PURE_IMPORTS_END */



function skipLast(count) {
    return function (source) { return source.lift(new SkipLastOperator(count)); };
}
var SkipLastOperator = /*@__PURE__*/ (function () {
    function SkipLastOperator(_skipCount) {
        this._skipCount = _skipCount;
        if (this._skipCount < 0) {
            throw new __WEBPACK_IMPORTED_MODULE_2__util_ArgumentOutOfRangeError__["a" /* ArgumentOutOfRangeError */];
        }
    }
    SkipLastOperator.prototype.call = function (subscriber, source) {
        if (this._skipCount === 0) {
            return source.subscribe(new __WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */](subscriber));
        }
        else {
            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));
        }
    };
    return SkipLastOperator;
}());
var SkipLastSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SkipLastSubscriber, _super);
    function SkipLastSubscriber(destination, _skipCount) {
        var _this = _super.call(this, destination) || this;
        _this._skipCount = _skipCount;
        _this._count = 0;
        _this._ring = new Array(_skipCount);
        return _this;
    }
    SkipLastSubscriber.prototype._next = function (value) {
        var skipCount = this._skipCount;
        var count = this._count++;
        if (count < skipCount) {
            this._ring[count] = value;
        }
        else {
            var currentIndex = count % skipCount;
            var ring = this._ring;
            var oldValue = ring[currentIndex];
            ring[currentIndex] = value;
            this.destination.next(oldValue);
        }
    };
    return SkipLastSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=skipLast.js.map


/***/ }),
/* 524 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = skipUntil;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__InnerSubscriber__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function skipUntil(notifier) {
    return function (source) { return source.lift(new SkipUntilOperator(notifier)); };
}
var SkipUntilOperator = /*@__PURE__*/ (function () {
    function SkipUntilOperator(notifier) {
        this.notifier = notifier;
    }
    SkipUntilOperator.prototype.call = function (destination, source) {
        return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));
    };
    return SkipUntilOperator;
}());
var SkipUntilSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SkipUntilSubscriber, _super);
    function SkipUntilSubscriber(destination, notifier) {
        var _this = _super.call(this, destination) || this;
        _this.hasValue = false;
        var innerSubscriber = new __WEBPACK_IMPORTED_MODULE_2__InnerSubscriber__["a" /* InnerSubscriber */](_this, undefined, undefined);
        _this.add(innerSubscriber);
        _this.innerSubscription = innerSubscriber;
        var innerSubscription = Object(__WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__["a" /* subscribeToResult */])(_this, notifier, undefined, undefined, innerSubscriber);
        if (innerSubscription !== innerSubscriber) {
            _this.add(innerSubscription);
            _this.innerSubscription = innerSubscription;
        }
        return _this;
    }
    SkipUntilSubscriber.prototype._next = function (value) {
        if (this.hasValue) {
            _super.prototype._next.call(this, value);
        }
    };
    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.hasValue = true;
        if (this.innerSubscription) {
            this.innerSubscription.unsubscribe();
        }
    };
    SkipUntilSubscriber.prototype.notifyComplete = function () {
    };
    return SkipUntilSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=skipUntil.js.map


/***/ }),
/* 525 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = skipWhile;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function skipWhile(predicate) {
    return function (source) { return source.lift(new SkipWhileOperator(predicate)); };
}
var SkipWhileOperator = /*@__PURE__*/ (function () {
    function SkipWhileOperator(predicate) {
        this.predicate = predicate;
    }
    SkipWhileOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));
    };
    return SkipWhileOperator;
}());
var SkipWhileSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SkipWhileSubscriber, _super);
    function SkipWhileSubscriber(destination, predicate) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.skipping = true;
        _this.index = 0;
        return _this;
    }
    SkipWhileSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        if (this.skipping) {
            this.tryCallPredicate(value);
        }
        if (!this.skipping) {
            destination.next(value);
        }
    };
    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {
        try {
            var result = this.predicate(value, this.index++);
            this.skipping = Boolean(result);
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    return SkipWhileSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=skipWhile.js.map


/***/ }),
/* 526 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = startWith;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_concat__ = __webpack_require__(71);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_isScheduler__ = __webpack_require__(38);
/** PURE_IMPORTS_START _observable_concat,_util_isScheduler PURE_IMPORTS_END */


function startWith() {
    var array = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        array[_i] = arguments[_i];
    }
    var scheduler = array[array.length - 1];
    if (Object(__WEBPACK_IMPORTED_MODULE_1__util_isScheduler__["a" /* isScheduler */])(scheduler)) {
        array.pop();
        return function (source) { return Object(__WEBPACK_IMPORTED_MODULE_0__observable_concat__["a" /* concat */])(array, source, scheduler); };
    }
    else {
        return function (source) { return Object(__WEBPACK_IMPORTED_MODULE_0__observable_concat__["a" /* concat */])(array, source); };
    }
}
//# sourceMappingURL=startWith.js.map


/***/ }),
/* 527 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = subscribeOn;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_SubscribeOnObservable__ = __webpack_require__(528);
/** PURE_IMPORTS_START _observable_SubscribeOnObservable PURE_IMPORTS_END */

function subscribeOn(scheduler, delay) {
    if (delay === void 0) {
        delay = 0;
    }
    return function subscribeOnOperatorFunction(source) {
        return source.lift(new SubscribeOnOperator(scheduler, delay));
    };
}
var SubscribeOnOperator = /*@__PURE__*/ (function () {
    function SubscribeOnOperator(scheduler, delay) {
        this.scheduler = scheduler;
        this.delay = delay;
    }
    SubscribeOnOperator.prototype.call = function (subscriber, source) {
        return new __WEBPACK_IMPORTED_MODULE_0__observable_SubscribeOnObservable__["a" /* SubscribeOnObservable */](source, this.delay, this.scheduler).subscribe(subscriber);
    };
    return SubscribeOnOperator;
}());
//# sourceMappingURL=subscribeOn.js.map


/***/ }),
/* 528 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SubscribeOnObservable; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Observable__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scheduler_asap__ = __webpack_require__(255);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_isNumeric__ = __webpack_require__(73);
/** PURE_IMPORTS_START tslib,_Observable,_scheduler_asap,_util_isNumeric PURE_IMPORTS_END */




var SubscribeOnObservable = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](SubscribeOnObservable, _super);
    function SubscribeOnObservable(source, delayTime, scheduler) {
        if (delayTime === void 0) {
            delayTime = 0;
        }
        if (scheduler === void 0) {
            scheduler = __WEBPACK_IMPORTED_MODULE_2__scheduler_asap__["a" /* asap */];
        }
        var _this = _super.call(this) || this;
        _this.source = source;
        _this.delayTime = delayTime;
        _this.scheduler = scheduler;
        if (!Object(__WEBPACK_IMPORTED_MODULE_3__util_isNumeric__["a" /* isNumeric */])(delayTime) || delayTime < 0) {
            _this.delayTime = 0;
        }
        if (!scheduler || typeof scheduler.schedule !== 'function') {
            _this.scheduler = __WEBPACK_IMPORTED_MODULE_2__scheduler_asap__["a" /* asap */];
        }
        return _this;
    }
    SubscribeOnObservable.create = function (source, delay, scheduler) {
        if (delay === void 0) {
            delay = 0;
        }
        if (scheduler === void 0) {
            scheduler = __WEBPACK_IMPORTED_MODULE_2__scheduler_asap__["a" /* asap */];
        }
        return new SubscribeOnObservable(source, delay, scheduler);
    };
    SubscribeOnObservable.dispatch = function (arg) {
        var source = arg.source, subscriber = arg.subscriber;
        return this.add(source.subscribe(subscriber));
    };
    SubscribeOnObservable.prototype._subscribe = function (subscriber) {
        var delay = this.delayTime;
        var source = this.source;
        var scheduler = this.scheduler;
        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {
            source: source, subscriber: subscriber
        });
    };
    return SubscribeOnObservable;
}(__WEBPACK_IMPORTED_MODULE_1__Observable__["a" /* Observable */]));

//# sourceMappingURL=SubscribeOnObservable.js.map


/***/ }),
/* 529 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = switchAll;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__switchMap__ = __webpack_require__(121);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_identity__ = __webpack_require__(43);
/** PURE_IMPORTS_START _switchMap,_util_identity PURE_IMPORTS_END */


function switchAll() {
    return Object(__WEBPACK_IMPORTED_MODULE_0__switchMap__["a" /* switchMap */])(__WEBPACK_IMPORTED_MODULE_1__util_identity__["a" /* identity */]);
}
//# sourceMappingURL=switchAll.js.map


/***/ }),
/* 530 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = switchMapTo;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__switchMap__ = __webpack_require__(121);
/** PURE_IMPORTS_START _switchMap PURE_IMPORTS_END */

function switchMapTo(innerObservable, resultSelector) {
    return resultSelector ? Object(__WEBPACK_IMPORTED_MODULE_0__switchMap__["a" /* switchMap */])(function () { return innerObservable; }, resultSelector) : Object(__WEBPACK_IMPORTED_MODULE_0__switchMap__["a" /* switchMap */])(function () { return innerObservable; });
}
//# sourceMappingURL=switchMapTo.js.map


/***/ }),
/* 531 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = takeUntil;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function takeUntil(notifier) {
    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };
}
var TakeUntilOperator = /*@__PURE__*/ (function () {
    function TakeUntilOperator(notifier) {
        this.notifier = notifier;
    }
    TakeUntilOperator.prototype.call = function (subscriber, source) {
        var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);
        var notifierSubscription = Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(takeUntilSubscriber, this.notifier);
        if (notifierSubscription && !takeUntilSubscriber.seenValue) {
            takeUntilSubscriber.add(notifierSubscription);
            return source.subscribe(takeUntilSubscriber);
        }
        return takeUntilSubscriber;
    };
    return TakeUntilOperator;
}());
var TakeUntilSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](TakeUntilSubscriber, _super);
    function TakeUntilSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.seenValue = false;
        return _this;
    }
    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.seenValue = true;
        this.complete();
    };
    TakeUntilSubscriber.prototype.notifyComplete = function () {
    };
    return TakeUntilSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=takeUntil.js.map


/***/ }),
/* 532 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = takeWhile;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function takeWhile(predicate, inclusive) {
    if (inclusive === void 0) {
        inclusive = false;
    }
    return function (source) {
        return source.lift(new TakeWhileOperator(predicate, inclusive));
    };
}
var TakeWhileOperator = /*@__PURE__*/ (function () {
    function TakeWhileOperator(predicate, inclusive) {
        this.predicate = predicate;
        this.inclusive = inclusive;
    }
    TakeWhileOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));
    };
    return TakeWhileOperator;
}());
var TakeWhileSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](TakeWhileSubscriber, _super);
    function TakeWhileSubscriber(destination, predicate, inclusive) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.inclusive = inclusive;
        _this.index = 0;
        return _this;
    }
    TakeWhileSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        var result;
        try {
            result = this.predicate(value, this.index++);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        this.nextOrComplete(value, result);
    };
    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {
        var destination = this.destination;
        if (Boolean(predicateResult)) {
            destination.next(value);
        }
        else {
            if (this.inclusive) {
                destination.next(value);
            }
            destination.complete();
        }
    };
    return TakeWhileSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=takeWhile.js.map


/***/ }),
/* 533 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = tap;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_noop__ = __webpack_require__(111);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_isFunction__ = __webpack_require__(53);
/** PURE_IMPORTS_START tslib,_Subscriber,_util_noop,_util_isFunction PURE_IMPORTS_END */




function tap(nextOrObserver, error, complete) {
    return function tapOperatorFunction(source) {
        return source.lift(new DoOperator(nextOrObserver, error, complete));
    };
}
var DoOperator = /*@__PURE__*/ (function () {
    function DoOperator(nextOrObserver, error, complete) {
        this.nextOrObserver = nextOrObserver;
        this.error = error;
        this.complete = complete;
    }
    DoOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));
    };
    return DoOperator;
}());
var TapSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](TapSubscriber, _super);
    function TapSubscriber(destination, observerOrNext, error, complete) {
        var _this = _super.call(this, destination) || this;
        _this._tapNext = __WEBPACK_IMPORTED_MODULE_2__util_noop__["a" /* noop */];
        _this._tapError = __WEBPACK_IMPORTED_MODULE_2__util_noop__["a" /* noop */];
        _this._tapComplete = __WEBPACK_IMPORTED_MODULE_2__util_noop__["a" /* noop */];
        _this._tapError = error || __WEBPACK_IMPORTED_MODULE_2__util_noop__["a" /* noop */];
        _this._tapComplete = complete || __WEBPACK_IMPORTED_MODULE_2__util_noop__["a" /* noop */];
        if (Object(__WEBPACK_IMPORTED_MODULE_3__util_isFunction__["a" /* isFunction */])(observerOrNext)) {
            _this._context = _this;
            _this._tapNext = observerOrNext;
        }
        else if (observerOrNext) {
            _this._context = observerOrNext;
            _this._tapNext = observerOrNext.next || __WEBPACK_IMPORTED_MODULE_2__util_noop__["a" /* noop */];
            _this._tapError = observerOrNext.error || __WEBPACK_IMPORTED_MODULE_2__util_noop__["a" /* noop */];
            _this._tapComplete = observerOrNext.complete || __WEBPACK_IMPORTED_MODULE_2__util_noop__["a" /* noop */];
        }
        return _this;
    }
    TapSubscriber.prototype._next = function (value) {
        try {
            this._tapNext.call(this._context, value);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(value);
    };
    TapSubscriber.prototype._error = function (err) {
        try {
            this._tapError.call(this._context, err);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.error(err);
    };
    TapSubscriber.prototype._complete = function () {
        try {
            this._tapComplete.call(this._context);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        return this.destination.complete();
    };
    return TapSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=tap.js.map


/***/ }),
/* 534 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = throttleTime;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scheduler_async__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__throttle__ = __webpack_require__(271);
/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async,_throttle PURE_IMPORTS_END */




function throttleTime(duration, scheduler, config) {
    if (scheduler === void 0) {
        scheduler = __WEBPACK_IMPORTED_MODULE_2__scheduler_async__["a" /* async */];
    }
    if (config === void 0) {
        config = __WEBPACK_IMPORTED_MODULE_3__throttle__["a" /* defaultThrottleConfig */];
    }
    return function (source) { return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing)); };
}
var ThrottleTimeOperator = /*@__PURE__*/ (function () {
    function ThrottleTimeOperator(duration, scheduler, leading, trailing) {
        this.duration = duration;
        this.scheduler = scheduler;
        this.leading = leading;
        this.trailing = trailing;
    }
    ThrottleTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));
    };
    return ThrottleTimeOperator;
}());
var ThrottleTimeSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](ThrottleTimeSubscriber, _super);
    function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {
        var _this = _super.call(this, destination) || this;
        _this.duration = duration;
        _this.scheduler = scheduler;
        _this.leading = leading;
        _this.trailing = trailing;
        _this._hasTrailingValue = false;
        _this._trailingValue = null;
        return _this;
    }
    ThrottleTimeSubscriber.prototype._next = function (value) {
        if (this.throttled) {
            if (this.trailing) {
                this._trailingValue = value;
                this._hasTrailingValue = true;
            }
        }
        else {
            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));
            if (this.leading) {
                this.destination.next(value);
            }
            else if (this.trailing) {
                this._trailingValue = value;
                this._hasTrailingValue = true;
            }
        }
    };
    ThrottleTimeSubscriber.prototype._complete = function () {
        if (this._hasTrailingValue) {
            this.destination.next(this._trailingValue);
            this.destination.complete();
        }
        else {
            this.destination.complete();
        }
    };
    ThrottleTimeSubscriber.prototype.clearThrottle = function () {
        var throttled = this.throttled;
        if (throttled) {
            if (this.trailing && this._hasTrailingValue) {
                this.destination.next(this._trailingValue);
                this._trailingValue = null;
                this._hasTrailingValue = false;
            }
            throttled.unsubscribe();
            this.remove(throttled);
            this.throttled = null;
        }
    };
    return ThrottleTimeSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
function dispatchNext(arg) {
    var subscriber = arg.subscriber;
    subscriber.clearThrottle();
}
//# sourceMappingURL=throttleTime.js.map


/***/ }),
/* 535 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = timeInterval;
/* unused harmony export TimeInterval */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scheduler_async__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__scan__ = __webpack_require__(120);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__observable_defer__ = __webpack_require__(115);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__map__ = __webpack_require__(33);
/** PURE_IMPORTS_START _scheduler_async,_scan,_observable_defer,_map PURE_IMPORTS_END */




function timeInterval(scheduler) {
    if (scheduler === void 0) {
        scheduler = __WEBPACK_IMPORTED_MODULE_0__scheduler_async__["a" /* async */];
    }
    return function (source) {
        return Object(__WEBPACK_IMPORTED_MODULE_2__observable_defer__["a" /* defer */])(function () {
            return source.pipe(Object(__WEBPACK_IMPORTED_MODULE_1__scan__["a" /* scan */])(function (_a, value) {
                var current = _a.current;
                return ({ value: value, current: scheduler.now(), last: current });
            }, { current: scheduler.now(), value: undefined, last: undefined }), Object(__WEBPACK_IMPORTED_MODULE_3__map__["a" /* map */])(function (_a) {
                var current = _a.current, last = _a.last, value = _a.value;
                return new TimeInterval(value, current - last);
            }));
        });
    };
}
var TimeInterval = /*@__PURE__*/ (function () {
    function TimeInterval(value, interval) {
        this.value = value;
        this.interval = interval;
    }
    return TimeInterval;
}());

//# sourceMappingURL=timeInterval.js.map


/***/ }),
/* 536 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = timeout;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scheduler_async__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_TimeoutError__ = __webpack_require__(256);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__timeoutWith__ = __webpack_require__(272);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__observable_throwError__ = __webpack_require__(110);
/** PURE_IMPORTS_START _scheduler_async,_util_TimeoutError,_timeoutWith,_observable_throwError PURE_IMPORTS_END */




function timeout(due, scheduler) {
    if (scheduler === void 0) {
        scheduler = __WEBPACK_IMPORTED_MODULE_0__scheduler_async__["a" /* async */];
    }
    return Object(__WEBPACK_IMPORTED_MODULE_2__timeoutWith__["a" /* timeoutWith */])(due, Object(__WEBPACK_IMPORTED_MODULE_3__observable_throwError__["a" /* throwError */])(new __WEBPACK_IMPORTED_MODULE_1__util_TimeoutError__["a" /* TimeoutError */]()), scheduler);
}
//# sourceMappingURL=timeout.js.map


/***/ }),
/* 537 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = timestamp;
/* unused harmony export Timestamp */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scheduler_async__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__map__ = __webpack_require__(33);
/** PURE_IMPORTS_START _scheduler_async,_map PURE_IMPORTS_END */


function timestamp(scheduler) {
    if (scheduler === void 0) {
        scheduler = __WEBPACK_IMPORTED_MODULE_0__scheduler_async__["a" /* async */];
    }
    return Object(__WEBPACK_IMPORTED_MODULE_1__map__["a" /* map */])(function (value) { return new Timestamp(value, scheduler.now()); });
}
var Timestamp = /*@__PURE__*/ (function () {
    function Timestamp(value, timestamp) {
        this.value = value;
        this.timestamp = timestamp;
    }
    return Timestamp;
}());

//# sourceMappingURL=timestamp.js.map


/***/ }),
/* 538 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = toArray;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__reduce__ = __webpack_require__(75);
/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */

function toArrayReducer(arr, item, index) {
    if (index === 0) {
        return [item];
    }
    arr.push(item);
    return arr;
}
function toArray() {
    return Object(__WEBPACK_IMPORTED_MODULE_0__reduce__["a" /* reduce */])(toArrayReducer, []);
}
//# sourceMappingURL=toArray.js.map


/***/ }),
/* 539 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = window;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subject__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function window(windowBoundaries) {
    return function windowOperatorFunction(source) {
        return source.lift(new WindowOperator(windowBoundaries));
    };
}
var WindowOperator = /*@__PURE__*/ (function () {
    function WindowOperator(windowBoundaries) {
        this.windowBoundaries = windowBoundaries;
    }
    WindowOperator.prototype.call = function (subscriber, source) {
        var windowSubscriber = new WindowSubscriber(subscriber);
        var sourceSubscription = source.subscribe(windowSubscriber);
        if (!sourceSubscription.closed) {
            windowSubscriber.add(Object(__WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__["a" /* subscribeToResult */])(windowSubscriber, this.windowBoundaries));
        }
        return sourceSubscription;
    };
    return WindowOperator;
}());
var WindowSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](WindowSubscriber, _super);
    function WindowSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.window = new __WEBPACK_IMPORTED_MODULE_1__Subject__["a" /* Subject */]();
        destination.next(_this.window);
        return _this;
    }
    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.openWindow();
    };
    WindowSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    WindowSubscriber.prototype.notifyComplete = function (innerSub) {
        this._complete();
    };
    WindowSubscriber.prototype._next = function (value) {
        this.window.next(value);
    };
    WindowSubscriber.prototype._error = function (err) {
        this.window.error(err);
        this.destination.error(err);
    };
    WindowSubscriber.prototype._complete = function () {
        this.window.complete();
        this.destination.complete();
    };
    WindowSubscriber.prototype._unsubscribe = function () {
        this.window = null;
    };
    WindowSubscriber.prototype.openWindow = function () {
        var prevWindow = this.window;
        if (prevWindow) {
            prevWindow.complete();
        }
        var destination = this.destination;
        var newWindow = this.window = new __WEBPACK_IMPORTED_MODULE_1__Subject__["a" /* Subject */]();
        destination.next(newWindow);
    };
    return WindowSubscriber;
}(__WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=window.js.map


/***/ }),
/* 540 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = windowCount;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subject__ = __webpack_require__(27);
/** PURE_IMPORTS_START tslib,_Subscriber,_Subject PURE_IMPORTS_END */



function windowCount(windowSize, startWindowEvery) {
    if (startWindowEvery === void 0) {
        startWindowEvery = 0;
    }
    return function windowCountOperatorFunction(source) {
        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));
    };
}
var WindowCountOperator = /*@__PURE__*/ (function () {
    function WindowCountOperator(windowSize, startWindowEvery) {
        this.windowSize = windowSize;
        this.startWindowEvery = startWindowEvery;
    }
    WindowCountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));
    };
    return WindowCountOperator;
}());
var WindowCountSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](WindowCountSubscriber, _super);
    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.windowSize = windowSize;
        _this.startWindowEvery = startWindowEvery;
        _this.windows = [new __WEBPACK_IMPORTED_MODULE_2__Subject__["a" /* Subject */]()];
        _this.count = 0;
        destination.next(_this.windows[0]);
        return _this;
    }
    WindowCountSubscriber.prototype._next = function (value) {
        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;
        var destination = this.destination;
        var windowSize = this.windowSize;
        var windows = this.windows;
        var len = windows.length;
        for (var i = 0; i < len && !this.closed; i++) {
            windows[i].next(value);
        }
        var c = this.count - windowSize + 1;
        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {
            windows.shift().complete();
        }
        if (++this.count % startWindowEvery === 0 && !this.closed) {
            var window_1 = new __WEBPACK_IMPORTED_MODULE_2__Subject__["a" /* Subject */]();
            windows.push(window_1);
            destination.next(window_1);
        }
    };
    WindowCountSubscriber.prototype._error = function (err) {
        var windows = this.windows;
        if (windows) {
            while (windows.length > 0 && !this.closed) {
                windows.shift().error(err);
            }
        }
        this.destination.error(err);
    };
    WindowCountSubscriber.prototype._complete = function () {
        var windows = this.windows;
        if (windows) {
            while (windows.length > 0 && !this.closed) {
                windows.shift().complete();
            }
        }
        this.destination.complete();
    };
    WindowCountSubscriber.prototype._unsubscribe = function () {
        this.count = 0;
        this.windows = null;
    };
    return WindowCountSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__Subscriber__["a" /* Subscriber */]));
//# sourceMappingURL=windowCount.js.map


/***/ }),
/* 541 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = windowTime;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subject__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scheduler_async__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Subscriber__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_isNumeric__ = __webpack_require__(73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_isScheduler__ = __webpack_require__(38);
/** PURE_IMPORTS_START tslib,_Subject,_scheduler_async,_Subscriber,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */






function windowTime(windowTimeSpan) {
    var scheduler = __WEBPACK_IMPORTED_MODULE_2__scheduler_async__["a" /* async */];
    var windowCreationInterval = null;
    var maxWindowSize = Number.POSITIVE_INFINITY;
    if (Object(__WEBPACK_IMPORTED_MODULE_5__util_isScheduler__["a" /* isScheduler */])(arguments[3])) {
        scheduler = arguments[3];
    }
    if (Object(__WEBPACK_IMPORTED_MODULE_5__util_isScheduler__["a" /* isScheduler */])(arguments[2])) {
        scheduler = arguments[2];
    }
    else if (Object(__WEBPACK_IMPORTED_MODULE_4__util_isNumeric__["a" /* isNumeric */])(arguments[2])) {
        maxWindowSize = Number(arguments[2]);
    }
    if (Object(__WEBPACK_IMPORTED_MODULE_5__util_isScheduler__["a" /* isScheduler */])(arguments[1])) {
        scheduler = arguments[1];
    }
    else if (Object(__WEBPACK_IMPORTED_MODULE_4__util_isNumeric__["a" /* isNumeric */])(arguments[1])) {
        windowCreationInterval = Number(arguments[1]);
    }
    return function windowTimeOperatorFunction(source) {
        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));
    };
}
var WindowTimeOperator = /*@__PURE__*/ (function () {
    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
        this.windowTimeSpan = windowTimeSpan;
        this.windowCreationInterval = windowCreationInterval;
        this.maxWindowSize = maxWindowSize;
        this.scheduler = scheduler;
    }
    WindowTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));
    };
    return WindowTimeOperator;
}());
var CountedSubject = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](CountedSubject, _super);
    function CountedSubject() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._numberOfNextedValues = 0;
        return _this;
    }
    CountedSubject.prototype.next = function (value) {
        this._numberOfNextedValues++;
        _super.prototype.next.call(this, value);
    };
    Object.defineProperty(CountedSubject.prototype, "numberOfNextedValues", {
        get: function () {
            return this._numberOfNextedValues;
        },
        enumerable: true,
        configurable: true
    });
    return CountedSubject;
}(__WEBPACK_IMPORTED_MODULE_1__Subject__["a" /* Subject */]));
var WindowTimeSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](WindowTimeSubscriber, _super);
    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.windowTimeSpan = windowTimeSpan;
        _this.windowCreationInterval = windowCreationInterval;
        _this.maxWindowSize = maxWindowSize;
        _this.scheduler = scheduler;
        _this.windows = [];
        var window = _this.openWindow();
        if (windowCreationInterval !== null && windowCreationInterval >= 0) {
            var closeState = { subscriber: _this, window: window, context: null };
            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: _this, scheduler: scheduler };
            _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));
            _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));
        }
        else {
            var timeSpanOnlyState = { subscriber: _this, window: window, windowTimeSpan: windowTimeSpan };
            _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));
        }
        return _this;
    }
    WindowTimeSubscriber.prototype._next = function (value) {
        var windows = this.windows;
        var len = windows.length;
        for (var i = 0; i < len; i++) {
            var window_1 = windows[i];
            if (!window_1.closed) {
                window_1.next(value);
                if (window_1.numberOfNextedValues >= this.maxWindowSize) {
                    this.closeWindow(window_1);
                }
            }
        }
    };
    WindowTimeSubscriber.prototype._error = function (err) {
        var windows = this.windows;
        while (windows.length > 0) {
            windows.shift().error(err);
        }
        this.destination.error(err);
    };
    WindowTimeSubscriber.prototype._complete = function () {
        var windows = this.windows;
        while (windows.length > 0) {
            var window_2 = windows.shift();
            if (!window_2.closed) {
                window_2.complete();
            }
        }
        this.destination.complete();
    };
    WindowTimeSubscriber.prototype.openWindow = function () {
        var window = new CountedSubject();
        this.windows.push(window);
        var destination = this.destination;
        destination.next(window);
        return window;
    };
    WindowTimeSubscriber.prototype.closeWindow = function (window) {
        window.complete();
        var windows = this.windows;
        windows.splice(windows.indexOf(window), 1);
    };
    return WindowTimeSubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__Subscriber__["a" /* Subscriber */]));
function dispatchWindowTimeSpanOnly(state) {
    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;
    if (window) {
        subscriber.closeWindow(window);
    }
    state.window = subscriber.openWindow();
    this.schedule(state, windowTimeSpan);
}
function dispatchWindowCreation(state) {
    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;
    var window = subscriber.openWindow();
    var action = this;
    var context = { action: action, subscription: null };
    var timeSpanState = { subscriber: subscriber, window: window, context: context };
    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);
    action.add(context.subscription);
    action.schedule(state, windowCreationInterval);
}
function dispatchWindowClose(state) {
    var subscriber = state.subscriber, window = state.window, context = state.context;
    if (context && context.action && context.subscription) {
        context.action.remove(context.subscription);
    }
    subscriber.closeWindow(window);
}
//# sourceMappingURL=windowTime.js.map


/***/ }),
/* 542 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = windowToggle;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subject__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Subscription__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_Subject,_Subscription,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





function windowToggle(openings, closingSelector) {
    return function (source) { return source.lift(new WindowToggleOperator(openings, closingSelector)); };
}
var WindowToggleOperator = /*@__PURE__*/ (function () {
    function WindowToggleOperator(openings, closingSelector) {
        this.openings = openings;
        this.closingSelector = closingSelector;
    }
    WindowToggleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));
    };
    return WindowToggleOperator;
}());
var WindowToggleSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](WindowToggleSubscriber, _super);
    function WindowToggleSubscriber(destination, openings, closingSelector) {
        var _this = _super.call(this, destination) || this;
        _this.openings = openings;
        _this.closingSelector = closingSelector;
        _this.contexts = [];
        _this.add(_this.openSubscription = Object(__WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__["a" /* subscribeToResult */])(_this, openings, openings));
        return _this;
    }
    WindowToggleSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        if (contexts) {
            var len = contexts.length;
            for (var i = 0; i < len; i++) {
                contexts[i].window.next(value);
            }
        }
    };
    WindowToggleSubscriber.prototype._error = function (err) {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context_1 = contexts[index];
                context_1.window.error(err);
                context_1.subscription.unsubscribe();
            }
        }
        _super.prototype._error.call(this, err);
    };
    WindowToggleSubscriber.prototype._complete = function () {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context_2 = contexts[index];
                context_2.window.complete();
                context_2.subscription.unsubscribe();
            }
        }
        _super.prototype._complete.call(this);
    };
    WindowToggleSubscriber.prototype._unsubscribe = function () {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context_3 = contexts[index];
                context_3.window.unsubscribe();
                context_3.subscription.unsubscribe();
            }
        }
    };
    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (outerValue === this.openings) {
            var closingNotifier = void 0;
            try {
                var closingSelector = this.closingSelector;
                closingNotifier = closingSelector(innerValue);
            }
            catch (e) {
                return this.error(e);
            }
            var window_1 = new __WEBPACK_IMPORTED_MODULE_1__Subject__["a" /* Subject */]();
            var subscription = new __WEBPACK_IMPORTED_MODULE_2__Subscription__["a" /* Subscription */]();
            var context_4 = { window: window_1, subscription: subscription };
            this.contexts.push(context_4);
            var innerSubscription = Object(__WEBPACK_IMPORTED_MODULE_4__util_subscribeToResult__["a" /* subscribeToResult */])(this, closingNotifier, context_4);
            if (innerSubscription.closed) {
                this.closeWindow(this.contexts.length - 1);
            }
            else {
                innerSubscription.context = context_4;
                subscription.add(innerSubscription);
            }
            this.destination.next(window_1);
        }
        else {
            this.closeWindow(this.contexts.indexOf(outerValue));
        }
    };
    WindowToggleSubscriber.prototype.notifyError = function (err) {
        this.error(err);
    };
    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {
        if (inner !== this.openSubscription) {
            this.closeWindow(this.contexts.indexOf(inner.context));
        }
    };
    WindowToggleSubscriber.prototype.closeWindow = function (index) {
        if (index === -1) {
            return;
        }
        var contexts = this.contexts;
        var context = contexts[index];
        var window = context.window, subscription = context.subscription;
        contexts.splice(index, 1);
        window.complete();
        subscription.unsubscribe();
    };
    return WindowToggleSubscriber;
}(__WEBPACK_IMPORTED_MODULE_3__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=windowToggle.js.map


/***/ }),
/* 543 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = windowWhen;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Subject__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function windowWhen(closingSelector) {
    return function windowWhenOperatorFunction(source) {
        return source.lift(new WindowOperator(closingSelector));
    };
}
var WindowOperator = /*@__PURE__*/ (function () {
    function WindowOperator(closingSelector) {
        this.closingSelector = closingSelector;
    }
    WindowOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));
    };
    return WindowOperator;
}());
var WindowSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](WindowSubscriber, _super);
    function WindowSubscriber(destination, closingSelector) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.closingSelector = closingSelector;
        _this.openWindow();
        return _this;
    }
    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.openWindow(innerSub);
    };
    WindowSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    WindowSubscriber.prototype.notifyComplete = function (innerSub) {
        this.openWindow(innerSub);
    };
    WindowSubscriber.prototype._next = function (value) {
        this.window.next(value);
    };
    WindowSubscriber.prototype._error = function (err) {
        this.window.error(err);
        this.destination.error(err);
        this.unsubscribeClosingNotification();
    };
    WindowSubscriber.prototype._complete = function () {
        this.window.complete();
        this.destination.complete();
        this.unsubscribeClosingNotification();
    };
    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {
        if (this.closingNotification) {
            this.closingNotification.unsubscribe();
        }
    };
    WindowSubscriber.prototype.openWindow = function (innerSub) {
        if (innerSub === void 0) {
            innerSub = null;
        }
        if (innerSub) {
            this.remove(innerSub);
            innerSub.unsubscribe();
        }
        var prevWindow = this.window;
        if (prevWindow) {
            prevWindow.complete();
        }
        var window = this.window = new __WEBPACK_IMPORTED_MODULE_1__Subject__["a" /* Subject */]();
        this.destination.next(window);
        var closingNotifier;
        try {
            var closingSelector = this.closingSelector;
            closingNotifier = closingSelector();
        }
        catch (e) {
            this.destination.error(e);
            this.window.error(e);
            return;
        }
        this.add(this.closingNotification = Object(__WEBPACK_IMPORTED_MODULE_3__util_subscribeToResult__["a" /* subscribeToResult */])(this, closingNotifier));
    };
    return WindowSubscriber;
}(__WEBPACK_IMPORTED_MODULE_2__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=windowWhen.js.map


/***/ }),
/* 544 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = withLatestFrom;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__ = __webpack_require__(14);
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function withLatestFrom() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return function (source) {
        var project;
        if (typeof args[args.length - 1] === 'function') {
            project = args.pop();
        }
        var observables = args;
        return source.lift(new WithLatestFromOperator(observables, project));
    };
}
var WithLatestFromOperator = /*@__PURE__*/ (function () {
    function WithLatestFromOperator(observables, project) {
        this.observables = observables;
        this.project = project;
    }
    WithLatestFromOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));
    };
    return WithLatestFromOperator;
}());
var WithLatestFromSubscriber = /*@__PURE__*/ (function (_super) {
    __WEBPACK_IMPORTED_MODULE_0_tslib__["a" /* __extends */](WithLatestFromSubscriber, _super);
    function WithLatestFromSubscriber(destination, observables, project) {
        var _this = _super.call(this, destination) || this;
        _this.observables = observables;
        _this.project = project;
        _this.toRespond = [];
        var len = observables.length;
        _this.values = new Array(len);
        for (var i = 0; i < len; i++) {
            _this.toRespond.push(i);
        }
        for (var i = 0; i < len; i++) {
            var observable = observables[i];
            _this.add(Object(__WEBPACK_IMPORTED_MODULE_2__util_subscribeToResult__["a" /* subscribeToResult */])(_this, observable, observable, i));
        }
        return _this;
    }
    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.values[outerIndex] = innerValue;
        var toRespond = this.toRespond;
        if (toRespond.length > 0) {
            var found = toRespond.indexOf(outerIndex);
            if (found !== -1) {
                toRespond.splice(found, 1);
            }
        }
    };
    WithLatestFromSubscriber.prototype.notifyComplete = function () {
    };
    WithLatestFromSubscriber.prototype._next = function (value) {
        if (this.toRespond.length === 0) {
            var args = [value].concat(this.values);
            if (this.project) {
                this._tryProject(args);
            }
            else {
                this.destination.next(args);
            }
        }
    };
    WithLatestFromSubscriber.prototype._tryProject = function (args) {
        var result;
        try {
            result = this.project.apply(this, args);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return WithLatestFromSubscriber;
}(__WEBPACK_IMPORTED_MODULE_1__OuterSubscriber__["a" /* OuterSubscriber */]));
//# sourceMappingURL=withLatestFrom.js.map


/***/ }),
/* 545 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = zip;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_zip__ = __webpack_require__(116);
/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */

function zip() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return function zipOperatorFunction(source) {
        return source.lift.call(__WEBPACK_IMPORTED_MODULE_0__observable_zip__["b" /* zip */].apply(void 0, [source].concat(observables)));
    };
}
//# sourceMappingURL=zip.js.map


/***/ }),
/* 546 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = zipAll;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__observable_zip__ = __webpack_require__(116);
/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */

function zipAll(project) {
    return function (source) { return source.lift(new __WEBPACK_IMPORTED_MODULE_0__observable_zip__["a" /* ZipOperator */](project)); };
}
//# sourceMappingURL=zipAll.js.map


/***/ }),
/* 547 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

exports.reflectX = reflectX;
exports.reflectY = reflectY;
exports.ccw = ccw;
exports.inner = inner;
exports.positionDiff = positionDiff;
exports.fit = fit;
function reflectX(axis) {
    return function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2),
            x = _ref2[0],
            y = _ref2[1];

        return [-(x - axis) + axis, y];
    };
}

function reflectY(axis) {
    return function (_ref3) {
        var _ref4 = _slicedToArray(_ref3, 2),
            x = _ref4[0],
            y = _ref4[1];

        return [x, -(y - axis) + axis];
    };
}

function ccw(_ref5, _ref6) {
    var _ref8 = _slicedToArray(_ref5, 2),
        ax = _ref8[0],
        ay = _ref8[1];

    var _ref7 = _slicedToArray(_ref6, 2),
        bx = _ref7[0],
        by = _ref7[1];

    var v = ax * by - ay * bx;
    if (v > 0) return 1;
    if (v) return -1;
    return 0;
}

function inner(polygon, point) {
    var n = polygon.length;
    var c = [];
    for (var i = 0; i < n; ++i) {
        var p1 = polygon[i];
        var p2 = polygon[(i + 1) % n];
        c.push(ccw([p1[0] - point[0], p1[1] - point[1]], [p2[0] - point[0], p2[1] - point[1]]));
    }
    c = c.filter(function (q) {
        return q;
    });

    for (var _i = 1; _i < c.length; ++_i) {
        if (c[0] !== c[_i]) return false;
    }
    return true;
}

function positionDiff(from, to) {
    return {
        dx: to.x - from.x,
        dy: to.y - from.y
    };
}

function fit(outterWidth, outterHeight, innerWidth, innerHeight) {
    var heightMajor = outterWidth >= innerWidth * outterHeight / innerHeight;
    return heightMajor ? {
        width: innerWidth * outterHeight / innerHeight,
        height: outterHeight
    } : {
        width: outterWidth,
        height: innerHeight * outterWidth / innerWidth
    };
}

/***/ }),
/* 548 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

exports.draggable = draggable;
exports.parseCalcLength = parseCalcLength;
exports.parseLengthStyle = parseLengthStyle;
exports.getPosition = getPosition;
exports.applyStyle = applyStyle;
exports.moveTo = moveTo;

var _rxjs = __webpack_require__(101);

var _operators = __webpack_require__(117);

function draggable($el) {
    var mouseUp$ = (0, _rxjs.fromEvent)(window, 'mouseup');
    var mouseDown$ = (0, _rxjs.fromEvent)($el, 'mousedown');
    var toxy = function toxy(_ref) {
        var clientX = _ref.clientX,
            clientY = _ref.clientY;
        return { x: clientX, y: clientY };
    };

    return mouseDown$.pipe((0, _operators.switchMap)(function (e) {
        return (0, _rxjs.fromEvent)(window, 'mousemove').pipe((0, _operators.startWith)(e), (0, _operators.bufferCount)(2, 1), (0, _operators.takeUntil)(mouseUp$));
    }), (0, _operators.map)(function (_ref2) {
        var _ref3 = _slicedToArray(_ref2, 2),
            a = _ref3[0],
            b = _ref3[1];

        return {
            from: toxy(a),
            to: toxy(b)
        };
    }));
}

function parseCalcLength($el, len, key) {
    var str = len.substring(5, len.length - 1);
    var tokens = tokenize(str).map(function (s) {
        if (s.endsWith('%') || s.endsWith('px')) {
            return parseSimpleLength($el, s, key);
        }
        return s;
    });
    return eval(tokens.join(''));
}

function tokenize(s) {
    var re = /(((\+|\-)?\d+(\.\d+)?)(px|%)|(\+|\-))/g;
    var m = null;
    var ret = [];
    do {
        m = re.exec(s);
        if (m) ret.push(m[0]);
    } while (m);
    return ret;
}

function parseSimpleLength($el, len, key) {
    var trimmed = len.trim();
    if (trimmed.endsWith('%')) {
        var percent = parseInt(len);
        var width = ($el.parentElement ? parseInt($el.parentElement['offset' + key]) : 0) * percent / 100;
        return width;
    }
    return parseInt(len);
}

function parseLengthStyle($el, len, key) {
    if (len === 'auto') {
        return parseCalcLength($el, 'calc(100% - ' + $el['offset' + key] + 'px)', key);
    }
    if (len.startsWith('calc')) {
        return parseCalcLength($el, len, key);
    }
    return parseSimpleLength($el, len, key);
}

function getPosition($el) {
    var _$el$style = $el.style,
        top = _$el$style.top,
        left = _$el$style.left;

    return {
        x: parseLengthStyle($el, left, 'Width'),
        y: parseLengthStyle($el, top, 'Height')
    };
}

function applyStyle($el, styles) {
    Object.assign($el.style, styles);
}

function moveTo($el, x, y) {
    Object.assign($el.style, {
        left: x + 'px',
        top: y + 'px'
    });
}

/***/ }),
/* 549 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.toValidBase64Format = toValidBase64Format;
exports.parseSize = parseSize;
exports.dataToImage = dataToImage;

var _rxjs = __webpack_require__(101);

var _operators = __webpack_require__(117);

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var BCanvas = function () {
    function BCanvas($canvas, options) {
        _classCallCheck(this, BCanvas);

        this.$canvas = $canvas;
        this.ctx = $canvas.getContext('2d');
        this.ctx.save();
        this.bgColor = 'white';
        var toXy = (0, _operators.map)(function (_ref) {
            var offsetX = _ref.offsetX,
                offsetY = _ref.offsetY;
            return { x: offsetX, y: offsetY };
        });
        this.mouseMove$ = (0, _rxjs.fromEvent)($canvas, 'mousemove').pipe(toXy);
        this.mouseClick$ = (0, _rxjs.fromEvent)($canvas, 'mousedown').pipe((0, _operators.filter)(function (e) {
            return e.which === 1;
        }), toXy);

        this.mouseWheel$ = (0, _rxjs.fromEvent)($canvas, 'mousewheel').pipe((0, _operators.map)(function (_ref2) {
            var deltaY = _ref2.deltaY;
            return deltaY > 0 ? 1 : -1;
        }));

        this._id = 0;

        this.frameData = null;
        this.loops = [];
    }

    _createClass(BCanvas, [{
        key: 'abort',
        value: function abort() {
            this.scheduled = {};
        }
    }, {
        key: 'setFrame',
        value: function setFrame(fn) {
            fn(this);
            this.frameData = this.$canvas.toDataURL();
        }
    }, {
        key: 'setCompOp',
        value: function setCompOp(val) {
            this.ctx.globalCompositeOperation = val;
        }
    }, {
        key: 'triggerDrawLoops',
        value: function triggerDrawLoops(loops) {
            var _this = this;

            this.loops = loops;
            var id = ++this._id;
            this.ctx.save();
            this.setCompOp('copy');
            return this.drawImageData(this.frameData, 0, 0, this.$canvas.width, this.$canvas.height).then(function () {
                _this.ctx.restore();
                _this.setCompOp('destination-over');
                return _this.loops.reduce(function (pr, job) {
                    return pr.then(function () {
                        if (id === _this._id) {
                            return job(_this.ctx);
                        } else {
                            return;
                        }
                    });
                }, Promise.resolve());
            });
        }
    }, {
        key: 'drawImageData',
        value: function drawImageData(data, x, y) {
            var dx = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;

            var _this2 = this;

            var dy = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
            var encoding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'base64';

            var id = this._id;
            return dataToImage(data, encoding).then(function (img) {
                if (id !== _this2._id) return;
                if (dx === 0 || dy === 0) {
                    _this2.ctx.drawImage(img, x, y, img.width, img.height);
                } else {
                    _this2.ctx.drawImage(img, x, y, dx, dy);
                }
            });
        }
    }, {
        key: 'drawLine',
        value: function drawLine(x1, y1, x2, y2) {
            this.ctx.save();
            this.ctx.beginPath();
            this.ctx.moveTo(x1, y1);
            this.ctx.lineTo(x2, y2);
            this.ctx.stroke();
            this.ctx.restore();
        }
    }, {
        key: 'drawRect',
        value: function drawRect(x, y, dx, dy) {
            this.ctx.save();
            this.ctx.strokeStyle = 'black';
            this.ctx.strokeRect(x, y, dx, dy);
            this.ctx.restore();
        }
    }, {
        key: 'fillRect',
        value: function fillRect(x, y, dx, dy) {
            var color = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'black';

            this.ctx.save();
            this.ctx.fillStyle = color;
            this.ctx.fillRect(x, y, dx, dy);
            this.ctx.restore();
        }
    }, {
        key: 'fillPath',
        value: function fillPath(path) {
            var _ctx;

            var color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'black';

            this.ctx.save();
            this.ctx.fillStyle = color;
            this.ctx.beginPath();
            (_ctx = this.ctx).moveTo.apply(_ctx, _toConsumableArray(path[0]));
            for (var i = 1; i < path.length; ++i) {
                var _ctx2;

                (_ctx2 = this.ctx).lineTo.apply(_ctx2, _toConsumableArray(path[i]));
            }
            this.ctx.fill();
            this.ctx.restore();
        }
    }, {
        key: 'clearRect',
        value: function clearRect(x, y, dx, dy) {
            this.ctx.clearRect(x, y, dx, dy);
        }
    }, {
        key: 'clipRect',
        value: function clipRect(x, y, dx, dy, jobs) {
            var _this3 = this;

            this.ctx.save();
            this.ctx.beginPath();
            this.ctx.rect(x, y, dx, dy);
            this.ctx.clip();
            return Promise.resolve(jobs()).then(function () {
                return _this3.ctx.restore();
            });
        }
    }, {
        key: 'clear',
        value: function clear() {
            this.ctx.restore();
            this.ctx.save();
            this.ctx.clearRect(0, 0, this.$canvas.width, this.$canvas.height);
            this.ctx.restore();
        }
    }, {
        key: 'destroy',
        value: function destroy() {}
    }, {
        key: 'restoreImage',
        value: function restoreImage(imageData) {
            this.ctx.putImageData(imageData, 0, 0);
        }
    }, {
        key: 'saveImage',
        value: function saveImage() {
            return this.ctx.getImageData(0, 0, this.$canvas.width, this.$canvas.height);
        }
    }, {
        key: 'onMouseMove',
        get: function get() {
            return this.mouseMove$;
        }
    }, {
        key: 'onMouseClick',
        get: function get() {
            return this.mouseClick$;
        }
    }, {
        key: 'onMouseWheel',
        get: function get() {
            return this.mouseWheel$;
        }
    }]);

    return BCanvas;
}();

exports.default = BCanvas;
function toValidBase64Format(data) {
    if (data.startsWith('data:image')) return data;
    return 'data:image/png;base64,' + data;
}

function parseSize(x) {
    return function (sz) {
        if (typeof sz === 'number') return sz;
        return sz.endsWith('px') ? Number(sz.substring(0, sz.length - 2)) : x * Number(sz.substring(0, sz.length - 1)) / 100;
    };
}

function dataToImage(data) {
    var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'base64';

    return new Promise(function (resolve, reject) {
        if (encoding === 'base64') {
            var img = new Image();
            img.onload = function () {
                return resolve(img);
            };
            img.onerror = function (err) {
                return reject(err);
            };
            img.src = toValidBase64Format(data);
        }
    });
}

/***/ }),
/* 550 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsWrapper = __webpack_require__(18);

var _echartsWrapper2 = _interopRequireDefault(_echartsWrapper);

var _chartUtils = __webpack_require__(24);

var _chartUtils2 = _interopRequireDefault(_chartUtils);

var _echartsWordcloudOptionBuilder = __webpack_require__(551);

var _echartsWordcloudOptionBuilder2 = _interopRequireDefault(_echartsWordcloudOptionBuilder);

var _echartsWordcloudCalculatedOptionBuilder = __webpack_require__(552);

var _echartsWordcloudCalculatedOptionBuilder2 = _interopRequireDefault(_echartsWordcloudCalculatedOptionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * EChartsWordCloud
 * @param parentId
 * @param options
 * @constructor
 */
function EChartsWordCloud(parentId, options) {
    _echartsWrapper2.default.call(this, parentId, options);
}

EChartsWordCloud.prototype = Object.create(_echartsWrapper2.default.prototype);
EChartsWordCloud.prototype.constructor = EChartsWordCloud;

EChartsWordCloud.prototype.objectWithKeySorted = function (object) {
    var sortable = [];
    var newObj = [];
    for (var key in object) {
        if (object.hasOwnProperty(key)) sortable.push([key, object[key]]);
    }sortable.sort(function (a, b) {
        var x = a[1].name,
            y = b[1].name;
        if (Number(x)) x = Number(x);
        if (Number(y)) y = Number(y);
        return x < y ? -1 : x > y ? 1 : 0;
    });

    for (var i in sortable) {
        newObj.push(sortable[i][1]);
    }
    return newObj;
};

EChartsWordCloud.prototype.render = function () {
    if (this.options.source.localData[0].dataType === 'chartdata') {
        this.seriesHelper = new _echartsWordcloudCalculatedOptionBuilder2.default();
    } else {
        this.seriesHelper = new _echartsWordcloudOptionBuilder2.default();
    }
    var opt = this.seriesHelper.buildOptions(this.options);
    opt.series[0].data = this.objectWithKeySorted(opt.series[0].data);
    this._bindInternalOptions(this.seriesHelper);
    this._doDataValidation(opt);
    this._setEChartOption(opt);
    this._backupItemStyles();
};

EChartsWordCloud.prototype.getSeriesHelper = function () {
    if (this.isComplex) {
        return new Complex();
    } else if (this.options.source.localData[0].dataType == 'chartdata') {
        return new _echartsWordcloudCalculatedOptionBuilder2.default();
    } else {
        return new _echartsWordcloudOptionBuilder2.default();
    }
};

EChartsWordCloud.prototype._doDataValidation = function (opt) {
    _chartUtils2.default.limitMaxSeriesSize(opt.series);
};

exports.default = EChartsWordCloud;

/***/ }),
/* 551 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeOptionBuilder = __webpack_require__(19);

var _echartsAxisTypeOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeOptionBuilder);

var _aggregationOperator = __webpack_require__(16);

var _aggregationOperator2 = _interopRequireDefault(_aggregationOperator);

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsWordCloudOptionBuilder() {
    _echartsAxisTypeOptionBuilder2.default.call(this);
}

EChartsWordCloudOptionBuilder.prototype = Object.create(_echartsAxisTypeOptionBuilder2.default.prototype);
EChartsWordCloudOptionBuilder.prototype.constructor = EChartsWordCloudOptionBuilder;

EChartsWordCloudOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['radius', 'itemStyle', 'label', 'silent', 'center'];
    this._registerDecorator('tooltipWordCloud');
    this._registerDecorator('plotOptions');
    this.setSeriesKeyColumns([]);
    this.setSeriesDataColumns(this.bOptions.colorBy[0].selected);
    this.setSeriesDataColumns(this.bOptions.plotOptions.wordCloud.sizeBy[0].selected);
    this.setTooltipDataColumns(this.bOptions.colorBy[0].selected);
    this.setTooltipDataColumns(this.bOptions.plotOptions.wordCloud.sizeBy[0].selected);
};

EChartsWordCloudOptionBuilder.prototype._newSeriesExtractor = function (series) {
    var localData = this.getLocalData(0);
    var dataColumns = this.getSeriesDataColumns(0);
    var aggregation = 'count';
    if (dataColumns[dataColumns.length - 1] !== null && dataColumns[dataColumns.length - 1].aggregation && dataColumns[dataColumns.length - 1].aggregation !== 'none') aggregation = dataColumns[dataColumns.length - 1].aggregation;
    var colorByIndexes = this.getColumnIndexes(this.bOptions.colorBy[0].selected, localData.columns);
    var sizeByIndexes = this.getColumnIndexes(this.bOptions.plotOptions.wordCloud.sizeBy[0].selected, localData.columns);

    var extractor = new _echartsPointExtractor2.default();

    extractor.setTarget({
        index: colorByIndexes,
        type: 'category',
        isKey: true
    });

    extractor.setTarget({
        index: sizeByIndexes,
        type: 'value',
        isKey: false
    });

    var rankArray = [],
        rankObject = null;
    var getRank = function getRank(key) {
        if (rankObject) return rankObject[key];
        qsort(0, rankArray.length - 1);
        var rank = 0;
        rankObject = {};
        for (var i in rankArray) {
            rankObject[rankArray[i].key] = rank++;
        }return rankObject[key];
    };

    var qsort = function qsort(left, right) {
        if (left >= right) return;
        var m = rankArray[parseInt((left + right) / 2)].value,
            l = left - 1,
            r = right + 1,
            t = void 0;
        while (true) {
            while (m < rankArray[++l].value) {}
            while (m > rankArray[--r].value) {}
            if (l >= r) break;
            t = rankArray[l];rankArray[l] = rankArray[r];rankArray[r] = t;
        }
        qsort(left, l - 1);
        qsort(r + 1, right);
    };

    extractor.setExtractOperator(function (pointObject) {
        var operator = new _aggregationOperator2.default(pointObject.value);
        for (var i = 0; i < pointObject.indexList.length; i++) {
            operator.add(pointObject.indexList[i], pointObject.point[i] ? pointObject.point[i][pointObject.point[i].length - 1] : 1);
        }
        rankArray.push({ key: pointObject.value, value: operator.calc(aggregation) });
        return [{
            keys: pointObject.value,
            name: pointObject.value.join(' '),
            value: Math.abs(operator.calc(aggregation)),
            dataIndexes: pointObject.indexList,
            minusValue: operator.calc(aggregation) < 0 ? true : false,
            rank: function rank(key) {
                return getRank(key);
            }
            // percent: (0 + Math.abs(operator.calc(aggregation)) / localData.data.length).toFixed(4) * 100,
        }];
    });

    return extractor;
};

EChartsWordCloudOptionBuilder.prototype._buildSeries = function () {
    var series = {};
    var localData = this.getLocalData(0);
    var keyIndexes = this.getSeriesKeyColumnIndexes(0);

    var i, row, seriesName, seriesItem;
    for (i in localData.data) {
        row = localData.data[i];
        seriesName = this.getSeriesName(row, keyIndexes);
        seriesItem = this._getSeriesItem(series, seriesName);
        series[seriesName] = seriesItem;
        if (!seriesItem.extractor) {
            seriesItem.extractor = this._newSeriesExtractor();
        }
        seriesItem.extractor.push(row, i);
    }

    this._setSeries(series);
    this._buildSeriesData();
    this.eOptions.series = this.series;
};

EChartsWordCloudOptionBuilder.prototype._getSeriesItem = function (series, name) {
    var seriesItem = series[name];
    if (!seriesItem) {
        seriesItem = this._newSeriesItem();
        seriesItem.name = name;
    }
    return seriesItem;
};

EChartsWordCloudOptionBuilder.prototype._newSeriesItem = function () {
    var _this = this;
    var seriesItem = {
        type: 'wordCloud',
        shape: 'circle',
        left: 'center',
        top: 'center',
        width: '100%',
        height: '100%',
        sizeRange: [12, 100],
        rotationRange: [-90, 90],
        rotationStep: 45,
        gridSize: 8,
        drawOutOfBound: false,
        data: [],
        legendToggle: {},
        textStyle: {
            normal: {
                fontFamily: 'sans-serif',
                fontWeight: 'bold',
                color: function color(obj) {
                    return _this.bOptions.colorSet[obj.data.rank(obj.name) % _this.bOptions.colorSet.length];
                }
            },
            emphasis: {
                shadowBlur: 10,
                shadowColor: '#333'
            }
        }
    };

    return seriesItem;
};

EChartsWordCloudOptionBuilder.prototype._buildSeriesData = function (name) {
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
        for (var _iterator = this.series[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var s = _step.value;

            if (s.legendToggle[name]) delete s.legendToggle.name;else s.legendToggle.name = true;

            s.data = s.extractor.extract();
        }
    } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
    } finally {
        try {
            if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
            }
        } finally {
            if (_didIteratorError) {
                throw _iteratorError;
            }
        }
    }
};

EChartsWordCloudOptionBuilder.prototype._defaultOptions = function () {
    var opt = {
        tooltip: {
            trigger: 'item',
            showDelay: 0
        },
        toolbox: {
            show: false
        },
        legend: {
            show: false
        }
    };

    opt.color = this.bOptions.colorSet;
    opt.grid = this.bOptions.grid;
    $.extend(true, opt.tooltip, this.bOptions.tooltip, this.plotOptions.tooltip);
    return opt;
};

exports.default = EChartsWordCloudOptionBuilder;

/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _echartsAxisTypeCalculatedOptionBuilder = __webpack_require__(32);

var _echartsAxisTypeCalculatedOptionBuilder2 = _interopRequireDefault(_echartsAxisTypeCalculatedOptionBuilder);

var _echartsPointExtractor = __webpack_require__(11);

var _echartsPointExtractor2 = _interopRequireDefault(_echartsPointExtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function EChartsWordCloudCalculatedOptionBuilder() {
    _echartsAxisTypeCalculatedOptionBuilder2.default.call(this);
}

EChartsWordCloudCalculatedOptionBuilder.prototype = Object.create(_echartsAxisTypeCalculatedOptionBuilder2.default.prototype);
EChartsWordCloudCalculatedOptionBuilder.prototype.constructor = EChartsWordCloudCalculatedOptionBuilder;

EChartsWordCloudCalculatedOptionBuilder.prototype._setUpOptions = function () {
    this.plotOptionAttributes = ['radius', 'itemStyle', 'label', 'silent', 'center'];
    this._registerDecorator('tooltipwordCloudCalculated');
    this._registerDecorator('plotOptions');
    this._registerDecorator('axisRemoval');
    this._registerDecorator('brushRemoval');
    this.setSeriesKeyColumns([]);
    this.setSeriesDataColumns(this.bOptions.colorBy[0].selected);
    this.setSeriesDataColumns(this.bOptions.plotOptions.wordCloud.sizeBy[0].selected);
    this.setTooltipDataColumns(this.bOptions.colorBy[0].selected);
    this.setTooltipDataColumns(this.bOptions.plotOptions.wordCloud.sizeBy[0].selected);
};

EChartsWordCloudCalculatedOptionBuilder.prototype._newSeriesExtractor = function () {
    var localData = this.getLocalData(0);
    var colorByIndexes = this.getColumnIndexes([{ name: 'colorBy' }], localData.chartColumns);
    var sizeByIndexes = this.getColumnIndexes([{ name: 'sizeBy' }], localData.chartColumns);

    var extractor = new _echartsPointExtractor2.default();

    extractor.setTarget({
        index: colorByIndexes,
        type: 'category',
        isKey: true
    });

    extractor.setTarget({
        index: sizeByIndexes,
        type: 'value',
        isKey: false
    });

    extractor.setExtractOperator(function (pointObject) {
        var pointValue = pointObject.value;
        var names = [];
        for (var i in pointValue) {
            if ($.isArray(pointValue[i])) {
                for (var v in pointValue[i]) {
                    names.push(pointValue[i][v]);
                }
            } else {
                names.push(pointValue[i]);
            }
        }

        return [{
            keys: pointObject.value,
            name: names.join(' '),
            value: Math.abs(pointObject.point[0][1]),
            dataIndexes: pointObject.indexList,
            minusValue: pointObject.point[0][1] < 0 ? true : false
        }];
    });

    return extractor;
};

exports.default = EChartsWordCloudCalculatedOptionBuilder;

/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartAreaStacked = __webpack_require__(273);

var _bchartAreaStacked2 = _interopRequireDefault(_bchartAreaStacked);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-area-stacked100.js
 * Created by daewon.park on 2017-04-12.
 */
function BAreaStacked100Charts(parentId, options) {
    _bchartAreaStacked2.default.call(this, parentId, options);
}

BAreaStacked100Charts.prototype = Object.create(_bchartAreaStacked2.default.prototype);
BAreaStacked100Charts.prototype.constructor = BAreaStacked100Charts;

BAreaStacked100Charts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BAreaStacked100Charts.Attr.Key, this.$parent, this.options);
};

BAreaStacked100Charts.Attr = Object.assign({}, _bchartAreaStacked2.default.Attr, {
    Key: 'area-stacked-100',
    Label: '100% Stacked Area',
    Order: 32
});

exports.default = BAreaStacked100Charts;

/***/ }),
/* 554 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBarStacked = __webpack_require__(275);

var _bchartBarStacked2 = _interopRequireDefault(_bchartBarStacked);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-bar-stacked100.js
 * Created by daewon.park on 2017-04-19.
 */
function BBarStacked100Charts(parentId, options) {
    _bchartBarStacked2.default.call(this, parentId, options);
}

BBarStacked100Charts.prototype = Object.create(_bchartBarStacked2.default.prototype);
BBarStacked100Charts.prototype.constructor = BBarStacked100Charts;

BBarStacked100Charts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BBarStacked100Charts.Attr.Key, this.$parent, this.options);
};

BBarStacked100Charts.Attr = Object.assign({}, _bchartBarStacked2.default.Attr, {
    Key: 'bar-stacked-100',
    Label: '100% Stacked Bar',
    Order: 22
});

exports.default = BBarStacked100Charts;

/***/ }),
/* 555 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-biplot.js
 * Created by daewon.park on 2017-04-24.
 */
function BBiplotCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
}

BBiplotCharts.prototype = Object.create(_bchartBase2.default.prototype);
BBiplotCharts.prototype.constructor = BBiplotCharts;

BBiplotCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BBiplotCharts.Attr.Key, this.$parent, this.options);
};

//TODO: Biplot에서는 filter가 적용되지 않도록 하는 꽁수, 이후에 수정이 필요함
BBiplotCharts.prototype._lazyLoad = function (doneCallback, failCallback) {
    var _this = this;
    _this.chartInstanceId = _this.chartInstanceId || Date.now();
    _this.options.source.localData = [];
    _this._stopCurrentJob();
    _this._initFilter();

    for (var i = 0; i < _this.options.source.lazyData.length; i++) {
        if (typeof _this.options.source.lazyData[i].data === 'function') {
            var prepare = {
                chartInstanceId: _this.chartInstanceId + '-' + i,
                uid: Date.now(),
                index: i,
                options: {
                    chart: $.extend(true, {}, _this.options.chart),
                    xAxis: $.extend(true, {}, _this.options.xAxis),
                    yAxis: $.extend(true, {}, _this.options.yAxis),
                    colorBy: $.extend(true, {}, _this.options.colorBy),
                    plotOptions: $.extend(true, {}, _this.options.plotOptions)
                },
                fail: function fail(err) {
                    if (failCallback) failCallback(err);
                    delete _this.currentJob[this.uid];
                },
                done: function done(result) {
                    _this.options.source.localData[this.index] = _this.options.source.localData[this.index] || {};

                    _this.options.source.localData[this.index].dataType = result.dataType;
                    _this.options.source.localData[this.index].chartColumns = result.columns;

                    _this.options.source.localData[this.index].count = result.count;
                    _this.options.source.localData[this.index].offset = result.offset;

                    _this.options.source.localData[this.index].columns = _optionUtils2.default.getColumnList(_this.options.source, this.index);

                    _this.options.source.localData[this.index].data = result.data;

                    if (result.data.length === 0) {
                        failCallback(_this.options.noDataMessage != '' ? [_this.options.noDataMessage] : ['No data to display']);
                    } else if (doneCallback) doneCallback();
                    delete _this.currentJob[this.uid];
                }
            };
            _this.currentJob[prepare.uid] = prepare;
            _this.options.source.lazyData[i].data(prepare);
        } else {
            throw 'Callback function for data loading is not defined.';
        }
    }
};

//TODO: axis chart option control 구현 후 주석 해제 mk90.kim
// BBiplotCharts.prototype._createAxisTitle = function () {
//     BBaseCharts.prototype._createAxisTitle.export default
//     var _this = this;
//     this.x2AxisTitle = new Component.AxisTitle(this.$parent, function () {
//         return _this.options.xAxis[1].title
//     });
//     this.y2AxisTitle = new Component.AxisTitle(this.$parent, function () {
//         return _this.options.yAxis[1].title;
//     });
// };
//
// BBiplotCharts.prototype._destroyAxisTitle = function () {
//     BBaseCharts.prototype._destroyAxisTitle.export default
//     if (this.x2AxisTitle) {
//         this.x2AxisTitle.destroy();
//         this.x2AxisTitle = null;
//     }
//     if (this.y2AxisTitle) {
//         this.y2AxisTitle.destroy();
//         this.y2AxisTitle = null;
//     }
// };
//
//
// BBiplotCharts.prototype._renderFrame = function () {
//     BBaseCharts.prototype._renderFrame.export default
//     if (this.x2AxisTitle) {
//         this.x2AxisTitle.render(this.options.xAxis[1]);
//     }
//     if (this.y2AxisTitle) {
//         this.y2AxisTitle.render(this.options.yAxis[1]);
//     }
// };


BBiplotCharts.Attr = {
    Key: 'biplot',
    Label: 'Biplot',
    Order: 33,
    ColumnConf: {
        //FIXME: default axis 합의후 수정필요
        lineXAxis: {
            label: 'Line X-axis',
            aggregationEnabled: false,
            columnType: ['number'],
            mandatory: true
        },
        lineYAxis: {
            label: 'Line Y-axis',
            aggregationEnabled: false,
            columnType: ['number'],
            mandatory: true
        },
        //TODO: color by 구현필요
        // lineColorBy: {
        //     aggregationEnabled: false,
        //     multiple: true
        // },
        lineLabelBy: {
            label: 'Line Label By',
            aggregationEnabled: false,
            columnType: ['string', 'number']
        },
        scatterXAxis: {
            label: 'Scatter X-axis',
            aggregationEnabled: false,
            columnType: ['number'],
            mandatory: true
        },
        scatterYAxis: {
            label: 'Scatter Y-axis',
            aggregationEnabled: false,
            columnType: ['number'],
            mandatory: true
        },
        //TODO: color by 구현필요
        // scatterColorBy: {
        //     aggregationEnabled: false,
        //     multiple: true
        // },
        scatterLabelBy: {
            label: 'Scatter Label By',
            aggregationEnabled: false,
            columnType: ['string', 'number']
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        toolbar: {
            show: false
        },
        xAxis: [{
            selected: [] //line
            // axisTick: {show: false}
        }, {
            selected: [], //scatter
            // axisTick: {show: false},
            title: $.extend(true, {}, _defaultOptions2.default.Title, { left: '50%', top: '18px' }),
            axisLabel: {
                textStyle: {
                    color: 'red'
                }
            }
        }],
        yAxis: [{
            selected: [] //line
            // axisTick: {show: false}
        }, {
            selected: [], //scatter
            // axisTick: {show: false},
            title: $.extend(true, {}, _defaultOptions2.default.Title, { right: '-40px', top: '50%', rotate: 90 }),
            axisLabel: {
                textStyle: {
                    color: 'red'
                }
            }
        }],
        // colorBy: [{
        //     selected: []    //not use
        // }, {
        //     selected: []
        // }],
        plotOptions: {
            component: {
                labelBy: [{
                    selected: []
                }]
            },
            projection: {
                labelBy: [{
                    selected: []
                }]
            }
        }
    })
};

BBiplotCharts.prototype.setOptions = function (options) {
    var reload = this.isReload(options);
    if (!reload) reload |= this._isSelectionChanged(this.options.xAxis, options.xAxis);
    if (!reload) reload |= this._isSelectionChanged(this.options.yAxis, options.yAxis);
    this._changeOptions(options);
    this.render(reload);
};

BBiplotCharts.prototype.isReload = function (options) {
    var result = false;
    if (options.source) {
        result = true;
        if (options.source.dataType === 'local') {
            this.chart.clear();
            this.options.source = options.source;
        } else if (options.source.dataType === 'lazy' && !this.options.source.lazyData[0].data && !this.options.source.lazyData[1].data) {
            result = false;
        }
    }
    return result;
};

exports.default = BBiplotCharts;

/***/ }),
/* 556 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _bchartRegister = __webpack_require__(40);

var ChartRegistry = _interopRequireWildcard(_bchartRegister);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-boxplot.js
 * Created by daewon.park on 2017-03-30.
 */
function BBoxPlotCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
}

BBoxPlotCharts.prototype = Object.create(_bchartBase2.default.prototype);
BBoxPlotCharts.prototype.constructor = BBoxPlotCharts;

BBoxPlotCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BBoxPlotCharts.Attr.Key, this.$parent, this.options);
};

BBoxPlotCharts.prototype.setOptions = function (options) {
    $.extend(true, options, {
        plotOptions: {
            boxplot: {}
        }
    });

    var reload = this.isReload(options);
    if (!reload) reload |= this._isSelectionChanged(this.options.xAxis, options.xAxis);
    if (!reload) reload |= this._isSelectionChanged(this.options.yAxis, options.yAxis);
    if (!reload) reload |= this._isChanged(this.options.plotOptions.boxplot.separateColor, options.plotOptions.boxplot.separateColor);
    this._changeOptions(options);
    this.render(reload);
};

BBoxPlotCharts.prototype._reloadColumnConf = function () {
    var columnConf = ChartRegistry.getChartAttr('boxplot').ColumnConf;
    if (this.options.xAxis[0].axisType) {
        columnConf.yAxis.multiple = true;
    } else {
        columnConf.yAxis.multiple = false;
    }
};

BBoxPlotCharts.Attr = {
    Key: 'boxplot',
    Label: 'Box plot',
    Order: 2,
    ColumnConf: {
        xAxis: {
            label: 'X-axis',
            aggregationEnabled: false,
            axisTypeList: ['byColumnNames'],
            columnType: ['string', 'number'],
            mandatory: true
        },
        yAxis: {
            label: 'Y-axis',
            aggregationEnabled: false,
            columnType: ['number'],
            mandatory: true
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        plotOptions: {
            boxplot: {
                separateColor: false
            }
        }
    })
};

exports.default = BBoxPlotCharts;

/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-bubble.js
 * Created by ji_sung.park on 2017-09-05
 */
function BBubbleCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
}

BBubbleCharts.prototype = Object.create(_bchartBase2.default.prototype);
BBubbleCharts.prototype.constructor = BBubbleCharts;

BBubbleCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BBubbleCharts.Attr.Key, this.$parent, this.options);
};

BBubbleCharts.prototype.setOptions = function (options) {
    $.extend(true, options, {
        plotOptions: {
            bubble: {}
        }
    });

    var reload = this.isReload(options);
    if (!reload) reload |= this._isSelectionChanged(this.options.xAxis, options.xAxis);
    if (!reload) reload |= this._isSelectionChanged(this.options.yAxis, options.yAxis);
    if (!reload) reload |= this._isSelectionChanged(this.options.colorBy, options.colorBy);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.bubble.sizeBy, options.plotOptions.bubble.sizeBy);
    this._changeOptions(options);
    this.render(reload);
};

BBubbleCharts.Attr = {
    Key: 'bubble',
    Label: 'Bubble Chart',
    Order: 51,
    ColumnConf: {
        xAxis: {
            label: 'X-axis',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            mandatory: true
        },
        yAxis: {
            label: 'Y-axis',
            aggregationEnabled: false,
            columnType: ['number', 'string'],
            mandatory: true
        },
        colorBy: {
            label: 'Color By',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            multiple: true
        },
        sizeBy: {
            label: 'Size By',
            aggregationEnabled: true,
            aggregationMap: {
                number: _const2.default.extendAggregation(['SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
            },
            multiple: false,
            columnType: ['number', 'string']
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        toolbar: {
            show: true,
            menu: {
                // brush: {},
                zoom: { zoomAxis: 'all' // zoomAxis : all || xAxis || yAxis
                } }
        },
        plotOptions: {
            bubble: {
                marker: _defaultOptions2.default.Marker,
                stripLine: _defaultOptions2.default.StripLine,
                trendLine: _defaultOptions2.default.TrendLine,
                sizeBy: [{
                    selected: []
                }]
            }
        },
        xAxis: [{
            scale: true
        }],
        yAxis: [{
            scale: true
        }]
    })
};

exports.default = BBubbleCharts;

/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BCardCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
} /**
   * Created by sds on 2018-03-26.
   */


BCardCharts.prototype = Object.create(_bchartBase2.default.prototype);
BCardCharts.prototype.constructor = BCardCharts;

BCardCharts.prototype._createFrameComponent = function () {
    this._createTitle();
    this._createAxisTitle();
    this._createToolbar();
    this._createLoadingPanel();
    this._createErrorPanel();
};

BCardCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BCardCharts.Attr.Key, this.$parent, this.options);
};

BCardCharts.prototype._renderFrame = function () {
    if (this.title) {

        this.title.render(this.options.title.text);
    }

    if (this.toolbar) {
        this.toolbar.render();
    }
};

BCardCharts.prototype._lazyRenderTitle = function () {
    if (this.title) {
        var valueTitle = this.options.title.text ? this.options.title.text : _optionUtils2.default.getColumnLabel(this.options.plotOptions.card.valueBy[0].selected[0]);
        this.title.render(valueTitle, this.options.source.localData);
    }
};

BCardCharts.prototype.setOptions = function (options) {
    var reload = this.isReload(options);
    if (options.plotOptions) {
        if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.card.valueBy, options.plotOptions.card.valueBy);
        if (!reload) reload |= this._isChanged(this.options.plotOptions.card.label, options.plotOptions.card.label);
        if (!reload) reload |= this._isChanged(this.options.plotOptions.card.leng, options.plotOptions.card.leng);
        if (!reload) reload |= this._isChanged(this.options.plotOptions.card.numberFormat, options.plotOptions.card.numberFormat);
    }
    this._changeOptions(options);
    this.render(reload);
};

exports.default = BCardCharts;


BCardCharts.Attr = {
    Key: 'card',
    Label: 'Card',
    Order: 74,
    ColumnConf: {
        valueBy: {
            label: 'Value',
            aggregationEnabled: true,
            aggregationMap: {
                number: _const2.default.extendAggregation(['NONE', 'SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                string: _const2.default.extendAggregation(['NONE', 'COUNT', 'UNIQUE_COUNT'])
            },
            columnType: ['number', 'string'],
            mandatory: true
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        toolbar: {
            show: false
        },
        plotOptions: {
            card: {
                label: {
                    normal: {
                        formatter: function formatter(params) {
                            return params.value;
                        },
                        show: true,
                        position: 'inside',
                        textStyle: {
                            color: 'black',
                            fontSize: 24
                        }
                    }
                },
                valueBy: [{
                    selected: []
                }],
                leng: [{
                    selected: "0"
                }],
                numberFormat: { use: '' }
            }
        }
    })
};

/***/ }),
/* 559 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartColumnStacked = __webpack_require__(276);

var _bchartColumnStacked2 = _interopRequireDefault(_bchartColumnStacked);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-column-stacked100.js
 * Created by daewon.park on 2017-04-19.
 */
function BColumnStacked100Charts(parentId, options) {
    _bchartColumnStacked2.default.call(this, parentId, options);
}

BColumnStacked100Charts.prototype = Object.create(_bchartColumnStacked2.default.prototype);
BColumnStacked100Charts.prototype.constructor = BColumnStacked100Charts;

BColumnStacked100Charts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BColumnStacked100Charts.Attr.Key, this.$parent, this.options);
};

BColumnStacked100Charts.Attr = Object.assign({}, _bchartColumnStacked2.default.Attr, {
    Key: 'column-stacked-100',
    Label: '100% Stacked Column',
    Order: 12
});

exports.default = BColumnStacked100Charts;

/***/ }),
/* 560 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _chartComponent = __webpack_require__(61);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BComplexCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
} /**
   * Source: bchart-complex.js
   * Created by daewon.park on 2017-12-07.
   */

BComplexCharts.prototype = Object.create(_bchartBase2.default.prototype);
BComplexCharts.prototype.constructor = BComplexCharts;

BComplexCharts.prototype._createAxisTitle = function () {
    var _this = this;
    this.xAxisTitle = new _chartComponent.AxisTitle(this.$parent, function () {
        return _this.options.xAxis[0].title;
    });
    this.yAxisTitle = new _chartComponent.AxisTitle(this.$parent, function () {
        return _this.options.complex[0].yAxis[0].title;
    });
    this.y2AxisTitle = new _chartComponent.AxisTitle(this.$parent, function () {
        return _this.options.complex[1].yAxis[0].title;
    });
};

BComplexCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BComplexCharts.Attr.Key, this.$parent, this.options);
};

BComplexCharts.prototype.setOptions = function (options) {
    //todo : setOption 조건에 따라 Render 여부 로직 추가 필요
    // var reload = 0;
    // if (!reload) reload |= this._isSelectionChanged(this.options.xAxis, options.xAxis);
    // if (!reload) reload |= this._isSelectionChanged(this.options.yAxis, options.yAxis);
    // if (!reload) reload |= this._isSelectionChanged(this.options.colorBy, options.colorBy);
    this._changeOptions(options);
    this.render(1);
};

BComplexCharts.prototype._renderFrame = function () {
    if (this.title) {
        this.title.render(this.options.title.text);
    }
    if (this.xAxisTitle) {
        this.xAxisTitle.render(this.options.xAxis[0]);
    }
    if (this.yAxisTitle) {
        this.yAxisTitle.render(this.options.complex[0].yAxis[0]);
    }
    if (this.y2AxisTitle) {
        this.y2AxisTitle.render(this.options.complex[1].yAxis[0]);
    }
    if (this.toolbar) {
        this.toolbar.render();
        this._configureToolbar();
    }
};

BComplexCharts.prototype._configureToolbar = function () {};

BComplexCharts.Attr = {
    Key: 'complex',
    Label: 'Complex Chart',
    Order: 63,
    ColumnConf: {
        xAxis: {
            label: 'X-axis',
            aggregationEnabled: false,
            multiple: false,
            mandatory: true
        },
        yAxis: {
            scatter: {
                label: 'Y-axis',
                aggregationEnabled: true,
                multiple: false,
                aggregationMap: {
                    number: _const2.default.extendAggregation(['NONE', 'SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                    string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
                },
                columnType: ['string', 'number'],
                mandatory: true
            },
            line: {
                label: 'Y-axis',
                aggregationEnabled: true,
                multiple: false,
                aggregationMap: {
                    number: _const2.default.extendAggregation(['NONE', 'SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                    string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
                },
                columnType: ['string', 'number'],
                mandatory: true
            },
            column: {
                label: 'Y-axis',
                aggregationEnabled: true,
                multiple: false,
                aggregationMap: {
                    number: _const2.default.extendAggregation(['SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                    string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
                },
                columnType: ['string', 'number'],
                mandatory: true
            },
            area: {
                label: 'Y-axis',
                aggregationEnabled: true,
                multiple: false,
                aggregationMap: {
                    number: _const2.default.extendAggregation(['SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                    string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
                },
                columnType: ['string', 'number'],
                mandatory: true
            },
            bubble: {
                label: 'Y-axis',
                aggregationEnabled: false,
                multiple: false,
                columnType: ['number', 'string'],
                mandatory: true
            }
        },
        colorBy: {
            scatter: {
                label: 'Color By',
                columnType: ['string', 'number'],
                multiple: true
            },
            line: {
                label: 'Color By',
                columnType: ['string', 'number'],
                multiple: true
            },
            column: {
                label: 'Color By',
                columnType: ['string', 'number'],
                multiple: true
            },
            area: {
                label: 'Color By',
                aggregationEnabled: false,
                multiple: true,
                columnType: ['string', 'number']
            }
        },
        lineBy: {
            line: {
                label: 'Line By',
                aggregationEnabled: false,
                columnType: ['string', 'number'],
                multiple: true
            }
        },
        stackBy: {
            column: {
                label: 'Stack By',
                aggregationEnabled: false,
                multiple: true,
                columnType: ['string', 'number']
            }
        },
        sizeBy: {
            scatter: {
                label: 'Size By',
                aggregationEnabled: true,
                aggregationMap: {
                    number: _const2.default.extendAggregation(['SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                    string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
                },
                multiple: false,
                columnType: ['number', 'string']
            }
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        // toolbar: {
        //     show: true,
        //     menu: {
        //         // brush: {},
        //         // zoom: {}
        //     }
        // },
        complex: [{
            chart: {
                type: 'scatter'
            },
            yAxis: [{
                selected: [],
                title: $.extend(true, {}, _defaultOptions2.default.Title, { left: '8px', top: '50%', rotate: -90 }),
                axisTick: { show: true },
                axisLabel: _defaultOptions2.default.AxisLabel,
                splitLine: _defaultOptions2.default.SplitLine,
                zlevel: 1
            }],
            colorBy: [{
                selected: []
            }],
            plotOptions: {
                line: {
                    lineBy: [{
                        selected: []
                    }]
                }
            }
        }, {
            chart: {
                type: 'scatter'
            },
            yAxis: [{
                selected: [],
                title: $.extend(true, {}, _defaultOptions2.default.Title, { right: '8px', top: '50%', rotate: 90 }),
                axisTick: { show: true },
                axisLabel: _defaultOptions2.default.AxisLabel,
                splitLine: _defaultOptions2.default.SplitLine,
                zlevel: 1
            }],
            colorBy: [{
                selected: []
            }],
            plotOptions: {
                line: {
                    lineBy: [{
                        selected: []
                    }]
                }
            }
        }],
        plotOptions: {
            line: {
                marker: $.extend(true, {}, _defaultOptions2.default.Marker, {
                    leng: [{
                        selected: "0"
                    }],
                    numberFormat: { use: '' },
                    label: {
                        normal: {
                            show: false,
                            position: 'top',
                            formatter: function formatter(params) {
                                return params.value;
                            }
                        }

                    }
                }),
                stripLine: _defaultOptions2.default.StripLine,
                trendLine: _defaultOptions2.default.TrendLine,
                showSymbol: { all: 'auto' }
            },
            scatter: {
                marker: $.extend({}, _defaultOptions2.default.Marker, { symbolSize: 10 }),
                stripLine: _defaultOptions2.default.StripLine,
                trendLine: _defaultOptions2.default.TrendLine,
                emphasis: {
                    max: { use: false, controlLimit: { use: false, value: null }, color: '#313695' },
                    min: { use: false, controlLimit: { use: false, value: null }, color: '#313695' }
                }
            },
            column: {
                stackBy: [{
                    selected: []
                }],
                stripLine: _defaultOptions2.default.StripLine,
                trendLine: _defaultOptions2.default.TrendLine,
                marker: $.extend(true, {}, _defaultOptions2.default.Marker, {
                    leng: [{
                        selected: "0"
                    }],
                    numberFormat: { use: '' },
                    label: {
                        normal: {
                            show: false,
                            position: 'top',
                            formatter: function formatter(params) {
                                return params.value;
                            }
                        }

                    }
                }),
                emphasis: {
                    max: { use: false, controlLimit: { use: false, value: null }, color: '#313695' },
                    min: { use: false, controlLimit: { use: false, value: null }, color: '#313695' }
                }
            },
            bubble: {
                stripLine: _defaultOptions2.default.StripLine,
                trendLine: _defaultOptions2.default.TrendLine,
                sizeBy: [{
                    selected: []
                }]
            },
            area: {
                smooth: true,
                stackBy: [{
                    selected: []
                }],
                marker: $.extend(true, {}, _defaultOptions2.default.Marker, {
                    leng: [{
                        selected: "0"
                    }],
                    numberFormat: { use: '' },
                    label: {
                        normal: {
                            show: false,
                            position: 'top',
                            formatter: function formatter(params) {
                                return params.value;
                            }
                        }

                    }
                }),
                stripLine: _defaultOptions2.default.StripLine,
                trendLine: _defaultOptions2.default.TrendLine,
                tooltip: { trigger: 'item' },
                showSymbol: { all: 'auto' }
            }
        }
    })
};

exports.default = BComplexCharts;

/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BDecisionTreeCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
} /**
   * Source: bchart-area.js
   * Created by daewon.park on 2017-03-28.
   */


BDecisionTreeCharts.prototype = Object.create(_bchartBase2.default.prototype);
BDecisionTreeCharts.prototype.constructor = BDecisionTreeCharts;

BDecisionTreeCharts.prototype._createFrameComponent = function () {
    this._createTitle();
    this._createToolbar();
    this._createLoadingPanel();
    this._createErrorPanel();
};

BDecisionTreeCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BDecisionTreeCharts.Attr.Key, this.$parent, this.options);
};

BDecisionTreeCharts.prototype._renderFrame = function () {
    if (this.title) {
        this.title.render(this.options.title.text);
    }

    if (this.toolbar) {
        this.toolbar.render();
    }
};

BDecisionTreeCharts.prototype.setOptions = function (options) {
    $.extend(true, options, {
        plotOptions: {
            decisionTree: {}
        }
    });

    var reload = this.isReload(options);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.decisionTree.fromColumn, options.plotOptions.decisionTree.fromColumn);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.decisionTree.toColumn, options.plotOptions.decisionTree.toColumn);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.decisionTree.groupByColumn, options.plotOptions.decisionTree.groupByColumn);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.decisionTree.nodeLabelColumn, options.plotOptions.decisionTree.nodeLabelColumn);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.decisionTree.linkLabelColumn, options.plotOptions.decisionTree.linkLabelColumn);
    this._changeOptions(options);
    this.render(reload);
};

BDecisionTreeCharts.Attr = {
    Key: 'decisionTree',
    Label: 'Decision Tree',
    Order: 52,
    ColumnConf: {
        fromColumn: {
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            label: 'From Column',
            mandatory: true
        },
        toColumn: {
            label: 'To Column',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            multiple: true,
            multipleMaxCnt: 2,
            mandatory: true
        },
        groupByColumn: {
            label: 'GroupBy Column',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            multiple: true
        },
        nodeLabelColumn: {
            label: 'Node Label',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            multiple: true
        },
        linkLabelColumn: {
            label: 'Link Label',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            multiple: false
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        toolbar: {
            show: false
        },
        plotOptions: {
            decisionTree: {
                fromColumn: [{
                    selected: []
                }],
                toColumn: [{
                    selected: []
                }],
                groupByColumn: [{
                    selected: []
                }],
                nodeLabelColumn: [{
                    selected: []
                }],
                linkLabelColumn: [{
                    selected: []
                }],
                label: {
                    normal: {
                        show: true,
                        textStyle: {
                            color: '#000',
                            fontSize: 18,
                            fontFamily: '',
                            fontStyle: 'normal',
                            fontWeight: 'normal'
                        }
                    }
                },
                linkLabel: {
                    normal: {
                        show: true,
                        textStyle: {
                            color: '#000',
                            fontSize: 18,
                            fontFamily: '',
                            fontStyle: 'normal',
                            fontWeight: 'normal'
                        }
                    }
                },
                style: {
                    node: {
                        shape: 'circle',
                        size: 2,
                        color: '#4682B8',
                        opacity: 1
                    },
                    link: {
                        showArrow: true,
                        width: 2,
                        color: '#FFC14A',
                        opacity: 1
                    }
                }
            }
        }
    })
};

exports.default = BDecisionTreeCharts;

/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _chartComponent = __webpack_require__(61);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BDendrogramCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
}

BDendrogramCharts.prototype = Object.create(_bchartBase2.default.prototype);
BDendrogramCharts.prototype.constructor = BDendrogramCharts;

BDendrogramCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BDendrogramCharts.Attr.Key, this.$parent, this.options);
};

BDendrogramCharts.prototype.setOptions = function (options) {
    $.extend(true, options, {
        plotOptions: {
            dendrogram: {}
        }
    });

    var reload = this.isReload(options);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.dendrogram.clusterGroupColumn, options.plotOptions.dendrogram.clusterGroupColumn);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.dendrogram.clusterColumn, options.plotOptions.dendrogram.clusterColumn);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.dendrogram.heightColumn, options.plotOptions.dendrogram.heightColumn);
    this._changeOptions(options);
    this.render(reload);
};

BDendrogramCharts.prototype._createAxisTitle = function () {
    var _this = this;
    this.xAxisTitle = new _chartComponent.AxisTitle(this.$parent, function () {
        return _this.options.plotOptions.dendrogram.clusterGroupColumn[0].title;
    });
    this.yAxisTitle = new _chartComponent.AxisTitle(this.$parent, function () {
        return _this.options.plotOptions.dendrogram.heightColumn[0].title;
    });
};

BDendrogramCharts.prototype._renderFrame = function () {
    if (this.title) {
        this.title.render(this.options.title.text);
    }
    if (this.xAxisTitle) {
        this.xAxisTitle.render(this.options.plotOptions.dendrogram.clusterGroupColumn[0]);
    }
    if (this.yAxisTitle) {
        this.yAxisTitle.render(this.options.plotOptions.dendrogram.heightColumn[0]);
    }
    if (this.toolbar) {
        this.toolbar.render();
    }
};

BDendrogramCharts.Attr = {
    Key: 'dendrogram',
    Label: 'Dendrogram',
    Order: 53,
    ColumnConf: {
        clusterGroupColumn: {
            label: 'Cluster Group',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            mandatory: true
        },
        clusterColumn: {
            label: 'Clusters',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            multiple: true,
            mandatory: true
        },
        heightColumn: {
            label: 'Height',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            mandatory: true
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        plotOptions: {
            dendrogram: {
                clusterGroupColumn: [{
                    selected: [],
                    title: $.extend(true, {}, _defaultOptions2.default.Title, { left: '50%', bottom: '8px' }),
                    axisLabel: {
                        show: true,
                        rotate: 0,
                        textStyle: {
                            color: '#000000',
                            fontSize: 12,
                            fontFamily: ''
                        }
                    }
                }],
                clusterColumn: [{
                    selected: []
                }],
                heightColumn: [{
                    selected: [],
                    title: $.extend(true, {}, _defaultOptions2.default.Title, { left: '8px', top: '50%', rotate: -90 }),
                    axisLabel: {
                        show: true,
                        rotate: 0,
                        textStyle: {
                            color: '#000000',
                            fontSize: 12,
                            fontFamily: ''
                        }
                    }
                }],
                tooltip: { trigger: 'axis' }
            }
        }
    })
};

exports.default = BDendrogramCharts;

/***/ }),
/* 563 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartHeatmap = __webpack_require__(277);

var _bchartHeatmap2 = _interopRequireDefault(_bchartHeatmap);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BHeatmapMatrixCharts(parentId, options) {
    _bchartHeatmap2.default.call(this, parentId, options);
} /**
   * Source: bchart-heatmap.js
   * Created by daewon.park on 2017-04-16.
   */


BHeatmapMatrixCharts.prototype = Object.create(_bchartHeatmap2.default.prototype);
BHeatmapMatrixCharts.prototype.constructor = BHeatmapMatrixCharts;

BHeatmapMatrixCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BHeatmapMatrixCharts.Attr.Key, this.$parent, this.options);
};

BHeatmapMatrixCharts.prototype.setOptions = function (options) {
    $.extend(true, options, {
        plotOptions: {
            heatmap: {}
        }
    });

    var reload = this.isReload(options);
    if (!reload) reload |= this._isSelectionChanged(this.options.xAxis, options.xAxis);
    if (!reload) reload |= this._isSelectionChanged(this.options.yAxis, options.yAxis);
    this._changeOptions(options);
    this.render(reload);
};

BHeatmapMatrixCharts.Attr = {
    Key: 'heatmap-matrix',
    Label: 'Heat map(Matrix)',
    Order: 41,
    ColumnConf: {
        xAxis: {
            label: 'X-axis',
            aggregationEnabled: false,
            multiple: true,
            columnType: ['number'],
            mandatory: true
        },
        yAxis: {
            label: 'Y-axis',
            aggregationEnabled: false,
            columnType: ['string', 'number']
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        visualMap: _defaultOptions2.default.VisualMap,
        plotOptions: {
            heatmap: {}
        }
    })
};

exports.default = BHeatmapMatrixCharts;

/***/ }),
/* 564 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartColumn = __webpack_require__(122);

var _bchartColumn2 = _interopRequireDefault(_bchartColumn);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _chartComponent = __webpack_require__(61);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-histogram.js
 * Created by daewon.park on 2017-07-26.
 */
function BHistogramCharts(parentId, options) {
    _bchartColumn2.default.call(this, parentId, options);
}

BHistogramCharts.prototype = Object.create(_bchartColumn2.default.prototype);
BHistogramCharts.prototype.constructor = BHistogramCharts;

BHistogramCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BHistogramCharts.Attr.Key, this.$parent, this.options);
};

BHistogramCharts.prototype._createAxisTitle = function () {
    var _this = this;
    this.xAxisTitle = new _chartComponent.AxisTitle(this.$parent, function () {
        return _this.options.xAxis[0].title;
    });

    this.yAxisTitle = new _chartComponent.AxisTitle(this.$parent, function () {
        return _this.options.yAxis[0].title;
    });
};

BHistogramCharts.prototype._renderFrame = function () {
    if (this.title) {
        this.title.render(this.options.title.text);
    }
    if (this.xAxisTitle) {
        this.xAxisTitle.render(this.options.xAxis[0]);
    }
    if (this.yAxisTitle) {
        var title;
        if (this.options.yAxis[0] && this.options.yAxis[0].title && this.options.yAxis[0].title.text) {
            title = this.options.yAxis[0].title.text;
        } else {
            title = 'Count';
        }

        this.yAxisTitle.render(title);
    }
    if (this.toolbar) {
        this.toolbar.render();
    }
};

BHistogramCharts.prototype.setOptions = function (options) {
    $.extend(true, options, {
        plotOptions: {
            column: {}
        }
    });

    var reload = this.isReload(options);
    if (!reload) reload |= this._isSelectionChanged(this.options.xAxis, options.xAxis);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.column.binMethod, options.plotOptions.column.binMethod);
    this._changeOptions(options);
    this.render(reload);
};

BHistogramCharts.Attr = {
    Key: 'histogram',
    Label: 'Histogram',
    Order: 1,
    ColumnConf: {
        xAxis: {
            label: 'X-axis',
            aggregationEnabled: false,
            columnType: ['number'],
            mandatory: true
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        plotOptions: {
            column: {
                stripLine: _defaultOptions2.default.StripLine,
                trendLine: _defaultOptions2.default.TrendLine
            }
        }
    })
};

exports.default = BHistogramCharts;

/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _bchartRegister = __webpack_require__(40);

var ChartRegistry = _interopRequireWildcard(_bchartRegister);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BLineCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
} /**
   * Source: bchart-line.js
   * Created by daewon.park on 2017-03-28.
   */


BLineCharts.prototype = Object.create(_bchartBase2.default.prototype);
BLineCharts.prototype.constructor = BLineCharts;

BLineCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BLineCharts.Attr.Key, this.$parent, this.options);
};

BLineCharts.prototype._reloadColumnConf = function () {
    var columnConf = ChartRegistry.getChartAttr('line').ColumnConf;
    if (this.options.xAxis[0].axisType) {
        columnConf.yAxis.aggregationEnabled = false;
        columnConf.yAxis.columnType = ['number'];
    } else {
        columnConf.yAxis.aggregationEnabled = true;
        columnConf.yAxis.columnType = ['number', 'string'];
    }
};

BLineCharts.prototype.setOptions = function (options) {
    $.extend(true, options, {
        plotOptions: {
            line: {}
        }
    });

    var reload = this.isReload(options);
    if (!reload) reload |= this._isSelectionChanged(this.options.xAxis, options.xAxis);
    if (!reload) reload |= this._isSelectionChanged(this.options.yAxis, options.yAxis);
    if (!reload) reload |= this._isSelectionChanged(this.options.colorBy, options.colorBy);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.line.lineBy, options.plotOptions.line.lineBy);
    if (!reload) reload |= this._isChanged(this.options.plotOptions.line.trendLine, options.plotOptions.line.trendLine);
    this._changeOptions(options);
    this.render(reload);
};

BLineCharts.Attr = {
    Key: 'line',
    Label: 'Line',
    Order: 3,
    ColumnConf: {
        xAxis: {
            label: 'X-axis',
            aggregationEnabled: false,
            columnType: ['string', 'number', 'date'],
            axisTypeList: ['byColumnNames', 'byRowIndex'],
            mandatory: true
        },
        yAxis: {
            label: 'Y-axis',
            aggregationEnabled: true,
            multiple: true,
            aggregationMap: {
                number: _const2.default.extendAggregation(['NONE', 'SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
            },
            columnType: ['string', 'number'],
            mandatory: true
        },
        colorBy: {
            label: 'Color By',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            multiple: true
        },
        lineBy: {
            label: 'Line By',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            multiple: true
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        toolbar: {
            show: true,
            menu: {
                // brush: {},
                zoom: { zoomAxis: 'xAxis' // zoomAxis : all || xAxis || yAxis
                } }
        },
        plotOptions: {
            line: {
                marker: $.extend(true, {}, _defaultOptions2.default.Marker, {
                    leng: [{
                        selected: "0"
                    }],
                    numberFormat: { use: '' },
                    label: {
                        normal: {
                            show: false,
                            position: 'top',
                            formatter: function formatter(params) {
                                return params.value;
                            }
                        }

                    }
                }),
                stripLine: _defaultOptions2.default.StripLine,
                trendLine: _defaultOptions2.default.TrendLine,
                lineBy: [{
                    selected: []
                }],
                tooltip: { trigger: 'axis' },
                showSymbol: { all: 'auto' }
            }
        },
        xAxis: [{
            scale: true
        }],
        yAxis: [{
            scale: true
        }]
    })
};

exports.default = BLineCharts;

/***/ }),
/* 566 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-area.js
 * Created by daewon.park on 2017-03-28.
 */
function BNetworkCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
}

BNetworkCharts.prototype = Object.create(_bchartBase2.default.prototype);
BNetworkCharts.prototype.constructor = BNetworkCharts;

BNetworkCharts.prototype._createFrameComponent = function () {
    this._createTitle();
    this._createToolbar();
    this._createLoadingPanel();
    this._createErrorPanel();
};

BNetworkCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BNetworkCharts.Attr.Key, this.$parent, this.options);
};

BNetworkCharts.prototype._renderFrame = function () {
    if (this.title) {
        this.title.render(this.options.title.text);
    }

    if (this.toolbar) {
        this.toolbar.render();
    }
};

BNetworkCharts.prototype.setOptions = function (options) {
    $.extend(true, options, {
        plotOptions: {
            network: {}
        }
    });

    var reload = this.isReload(options);
    if (!reload) reload |= this._isSelectionChanged(this.options.colorBy, options.colorBy);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.network.fromColumn, options.plotOptions.network.fromColumn);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.network.toColumn, options.plotOptions.network.toColumn);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.network.nodeSizeBy, options.plotOptions.network.nodeSizeBy);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.network.style, options.plotOptions.network.style);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.network.label, options.plotOptions.network.label);
    this._changeOptions(options);
    this.render(reload);
};

BNetworkCharts.Attr = {
    Key: 'network',
    Label: 'Network',
    Order: 43,
    ColumnConf: {
        fromColumn: {
            label: 'From Column',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            mandatory: true
        },
        toColumn: {
            label: 'To Column',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            mandatory: true
        },
        nodeSizeBy: {
            label: 'Node Size By',
            aggregationEnabled: true,
            aggregationMap: {
                number: _const2.default.extendAggregation(['SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
            },
            columnType: ['string', 'number']
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        toolbar: {
            show: false
        },
        plotOptions: {
            network: {
                fromColumn: [{
                    selected: []
                }],
                toColumn: [{
                    selected: []
                }],
                nodeSizeBy: [{
                    selected: []
                }],
                label: {
                    normal: {
                        show: true,
                        textStyle: {
                            color: '#000000',
                            fontSize: 12,
                            fontFamily: '',
                            fontStyle: 'normal',
                            fontWeight: 'normal'
                        }
                    }
                },
                style: {
                    node: {
                        size: 1,
                        color: _defaultOptions2.default.ColorSet[1]
                    },
                    link: {
                        color: _defaultOptions2.default.ColorSet[0],
                        opacity: 1,
                        width: 1
                    },
                    edge: {
                        symbol: ['none', 'none'],
                        size: [10, 10]
                    }
                }
            }
        }
    })
};
exports.default = BNetworkCharts;

/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BPairwiseScatterCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
} /**
   * Source: bchart-scatter.js
   * Created by daewon.park on 2017-03-23.
   */


BPairwiseScatterCharts.prototype = Object.create(_bchartBase2.default.prototype);
BPairwiseScatterCharts.prototype.constructor = BPairwiseScatterCharts;

BPairwiseScatterCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BPairwiseScatterCharts.Attr.Key, this.$parent, this.options);
};

BPairwiseScatterCharts.prototype._configureOptions = function (options) {
    for (var position in options.grid) {
        if (options.grid[position] && String(options.grid[position]).indexOf('%') < 0) {
            options.grid[position] = '5%';
        }
    }
    return options;
};
BPairwiseScatterCharts.Attr = {
    Key: 'pairwise-scatter',
    Label: 'Pairwise Scatter plot',
    Order: 62,
    ColumnConf: {
        xAxis: {
            label: 'Axis',
            aggregationEnabled: false,
            multiple: true,
            columnType: ['number'],
            mandatory: true
        },
        colorBy: {
            label: 'Color By',
            aggregationEnabled: false,
            multiple: true,
            columnType: ['string', 'number']
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        grid: {
            left: '5%',
            right: '5%',
            top: '5%',
            bottom: '5%'
        },
        toolbar: {
            show: false
        },
        plotOptions: {
            scatter: {
                marker: $.extend({}, _defaultOptions2.default.Marker, { symbolSize: 5 })
                // stripLine: DefaultOptions.StripLine,
                // trendLine: DefaultOptions.TrendLine
            }
        }
    })
};

BPairwiseScatterCharts.prototype._createAxisTitle = function () {
    // var _this = this;
    // this.xAxisTitle = new Component.AxisTitle(this.$parent, function () {
    //     return _this.options.xAxis[0].title
    // });
};

exports.default = BPairwiseScatterCharts;

/***/ }),
/* 568 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-qqplot.js
 * Created by ji_sung.park on 2018-02-06.
 */
function BQQPlotCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
}

BQQPlotCharts.prototype = Object.create(_bchartBase2.default.prototype);
BQQPlotCharts.prototype.constructor = BQQPlotCharts;

BQQPlotCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BQQPlotCharts.Attr.Key, this.$parent, this.options);
};

BQQPlotCharts.prototype.setOptions = function (options) {
    $.extend(true, options, {
        plotOptions: {
            qqplot: {}
        }
    });

    var reload = this.isReload(options);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.qqplot.values, options.plotOptions.qqplot.values);
    if (!reload) reload |= this._isChanged(this.options.plotOptions.qqplot.distribution, options.plotOptions.qqplot.distribution);
    if (!reload) reload |= this._isChanged(this.options.plotOptions.qqplot.confidence, options.plotOptions.qqplot.confidence);
    this._changeOptions(options);
    this.render(reload);
};

BQQPlotCharts.prototype._renderFrame = function () {
    if (this.title) {
        this.title.render(this.options.title.text);
    }
    if (this.xAxisTitle) {
        var xAxis = $.extend(true, {}, this.options.xAxis[0]);
        if (!xAxis.title.text) xAxis.title.text = 'Theoretical Quantiles';
        this.xAxisTitle.render(xAxis);
    }
    if (this.yAxisTitle) {
        var yAxis = $.extend(true, {}, this.options.yAxis[0]);
        if (!yAxis.title.text) yAxis.title.text = 'Sample Quantiles';
        this.yAxisTitle.render(yAxis);
    }
    if (this.toolbar) {
        this.toolbar.render();
        this._configureToolbar();
    }
};

BQQPlotCharts.Attr = {
    Key: 'qqplot',
    Label: 'Q-Q Plot',
    Order: 61,
    ColumnConf: {
        values: {
            label: 'Values',
            aggregationEnabled: false,
            columnType: ['number'],
            mandatory: true
        },
        confidence: {
            label: 'Confidence Level',
            source: [{ label: "95%", value: "0.95" }, { label: "99%", value: "0.99" }]
        },
        distribution: {
            label: 'Distribution Type',
            source: _const2.default.extendDistribution(['NORMAL', 'EXP', 'GAMMA', 'LOGNORMAL', 'BETA'])
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        xAxis: [{
            title: {
                text: 'Theoretical Quantiles'
            }
        }],
        yAxis: [{
            title: {
                text: 'Sample Quantiles'
            }
        }],
        toolbar: {
            show: false,
            menu: {
                //brush: {},
                // zoom: {}
            }
        },
        plotOptions: {
            qqplot: {
                values: [{
                    selected: []
                }],
                distribution: [{}],
                confidence: [{
                    selected: '0.95'
                }],
                marker: $.extend({}, _defaultOptions2.default.Marker, { symbolSize: 4 })
            }
        }
    })
};

exports.default = BQQPlotCharts;

/***/ }),
/* 569 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-pie.js
 * Created by daewon.park on 2017-03-30.
 */
function BRadarCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
}

BRadarCharts.prototype = Object.create(_bchartBase2.default.prototype);
BRadarCharts.prototype.constructor = BRadarCharts;

BRadarCharts.prototype._createFrameComponent = function () {
    this._createTitle();
    this._createToolbar();
    this._createLoadingPanel();
    this._createErrorPanel();
};

BRadarCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BRadarCharts.Attr.Key, this.$parent, this.options);
};

BRadarCharts.Attr = {
    Key: 'radar',
    Label: 'Radar',
    Order: 60,
    ColumnConf: {
        yAxis: {
            label: 'Axis By',
            aggregationEnabled: true,
            aggregationMap: {
                number: _const2.default.extendAggregation(['NONE', 'SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
            },
            columnType: ['string', 'number'],
            mandatory: true,
            multiple: true
        },
        colorBy: {
            label: 'Group By',
            aggregationEnabled: false,
            multiple: false,
            columnType: ['string', 'number'],
            mandatory: true
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        plotOptions: {
            radar: {
                radius: '75%',
                center: ['50%', '50%'],
                name: {
                    show: true,
                    textStyle: {
                        color: '#000000',
                        fontSize: 12,
                        fontFamily: ''
                    }
                },
                splitArea: {
                    areaStyle: {
                        color: ['#fff']
                    }
                }
            }
        }
    })
};

exports.default = BRadarCharts;

/***/ }),
/* 570 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-line.js
 * Created by daewon.park on 2017-03-28.
 */
function BROCCurveCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
}

BROCCurveCharts.prototype = Object.create(_bchartBase2.default.prototype);
BROCCurveCharts.prototype.constructor = BROCCurveCharts;

BROCCurveCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BROCCurveCharts.Attr.Key, this.$parent, this.options);
};

BROCCurveCharts.Attr = {
    Key: 'roccurve',
    Label: 'ROC Curve',
    Order: 42,
    ColumnConf: {
        xAxis: {
            label: 'X-axis',
            aggregationEnabled: false,
            columnType: ['number'],
            mandatory: true
        },
        yAxis: {
            label: 'Y-axis',
            aggregationEnabled: true,
            aggregationMap: {
                number: _const2.default.extendAggregation(['NONE', 'SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
            },
            columnType: ['string', 'number'],
            mandatory: true
        },
        colorBy: {
            label: 'Color By',
            aggregationEnabled: false,
            multiple: true,
            columnType: ['string', 'number']
        },
        auroc: {
            label: 'AUC',
            aggregationEnabled: false,
            columnType: ['number']
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        plotOptions: {
            roccurve: {
                marker: _defaultOptions2.default.Marker,
                stripLine: _defaultOptions2.default.StripLine,
                trendLine: _defaultOptions2.default.TrendLine,
                baseLine: {},
                tooltip: { trigger: 'axis' }
            }
        },
        auroc: [{
            selected: []
        }]
    })
};

exports.default = BROCCurveCharts;

/***/ }),
/* 571 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _bchartRegister = __webpack_require__(40);

var ChartRegistry = _interopRequireWildcard(_bchartRegister);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BScatterCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
} /**
   * Source: bchart-scatter.js
   * Created by daewon.park on 2017-03-23.
   */


BScatterCharts.prototype = Object.create(_bchartBase2.default.prototype);
BScatterCharts.prototype.constructor = BScatterCharts;

BScatterCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BScatterCharts.Attr.Key, this.$parent, this.options);
};

BScatterCharts.prototype.setOptions = function (options) {
    $.extend(true, options, {
        plotOptions: {
            scatter: {}
        }
    });

    var reload = this.isReload(options);
    if (!reload) reload |= this._isSelectionChanged(this.options.xAxis, options.xAxis);
    if (!reload) reload |= this._isSelectionChanged(this.options.yAxis, options.yAxis);
    if (!reload) reload |= this._isSelectionChanged(this.options.colorBy, options.colorBy);
    if (!reload) reload |= this._isChanged(this.options.plotOptions.scatter.trendLine, options.plotOptions.scatter.trendLine);
    this._changeOptions(options);
    this.render(reload);
};

BScatterCharts.prototype._reloadColumnConf = function () {
    var columnConf = ChartRegistry.getChartAttr('scatter').ColumnConf;
    if (this.options.xAxis[0].axisType) {
        columnConf.yAxis.aggregationEnabled = false;
        columnConf.yAxis.columnType = ['number'];
    } else {
        columnConf.yAxis.aggregationEnabled = true;
        columnConf.yAxis.columnType = ['number', 'string'];
    }
};

BScatterCharts.prototype._configureToolbar = function () {
    if (this.options.xAxis[0] && this.options.xAxis[0].axisType === 'byColumnNames') {
        this.toolbar.setBrushTypeList(['rect']);
    } else if (this.options.xAxis[0] && this.options.xAxis[0].axisType === 'byRowIndex') {
        this.toolbar.hide();
    } else if (this.options.yAxis[0].selected[0] && this.options.yAxis[0].selected[0].aggregation !== 'none') {
        this.toolbar.setBrushTypeList(['lineX']);
    }
};

BScatterCharts.Attr = {
    Key: 'scatter',
    Label: 'Scatter plot',
    Order: 23,
    ColumnConf: {
        xAxis: {
            label: 'X-axis',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            axisTypeList: ['byColumnNames', 'byRowIndex'],
            mandatory: true
        },
        yAxis: {
            label: 'Y-axis',
            aggregationEnabled: true,
            multiple: true,
            aggregationMap: {
                number: _const2.default.extendAggregation(['NONE', 'SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
            },
            columnType: ['string', 'number'],
            mandatory: true
        },
        colorBy: {
            label: 'Color By',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            multiple: true
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        toolbar: {
            show: true,
            menu: {
                brush: {},
                zoom: { zoomAxis: 'all' // zoomAxis : all || xAxis || yAxis
                } }
        },
        plotOptions: {
            scatter: {
                marker: $.extend({}, _defaultOptions2.default.Marker, { symbolSize: 10 }),
                stripLine: _defaultOptions2.default.StripLine,
                trendLine: _defaultOptions2.default.TrendLine,
                emphasis: {
                    max: { use: false, controlLimit: { use: false, value: null }, color: '#313695' },
                    min: { use: false, controlLimit: { use: false, value: null }, color: '#313695' }
                }
            }
        }
    })
};

exports.default = BScatterCharts;

/***/ }),
/* 572 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// /**
//  * Source: bchart-scattermap.js
//  * Created by daewon.park on 2017-03-23.
//  */
// import BBaseCharts from '../bchart-base';
// import * as Wrapper from '../../wrapper/wrapper-register';
// import DefaultOptions from '../../env/default-options';
//
//
// function BScatterMapCharts(parentId, options) {
//     BBaseCharts.call(this, parentId, options);
// }
//
// BScatterMapCharts.prototype = Object.create(BBaseCharts.prototype);
// BScatterMapCharts.prototype.constructor = BScatterMapCharts;
//
// BScatterMapCharts.prototype._createFrameComponent = function () {
//     this._createTitle();
//     this._createToolbar();
//     this._createLoadingPanel();
//     this._createErrorPanel();
// };
//
// BScatterMapCharts.prototype._createChart = function () {
//     this.chart = Wrapper.createChartWrapper(BScatterMapCharts.Attr.Key,this.$parent, this.options);
// };
//
// BScatterMapCharts.prototype._renderFrame = function () {
//     if (this.title) {
//         this.title.render(this.options.title.text);
//     }
//
//     if (this.toolbar) {
//         this.toolbar.render();
//     }
// };
//
// BScatterMapCharts.prototype.setOptions = function (options) {
//     $.extend(true, options, {
//         plotOptions: {
//             scattermap: {}
//         }
//     });
//
//     var reload = this.isReload(options);
//     if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.scattermap.latitude, options.plotOptions.scattermap.latitude);
//     if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.scattermap.longitude, options.plotOptions.scattermap.longitude);
//     if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.scattermap.value, options.plotOptions.scattermap.value);
//     if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.scattermap.label, options.plotOptions.scattermap.label);
//     this._changeOptions(options);
//     this.render(reload);
// };
//
// BScatterMapCharts.Attr = {
//     Key: 'scatter-map',
//     Label: 'Scatter map',
//     Order: 61,
//     DefaultOptions: DefaultOptions.extend({
//         plotOptions: {
//             'scatter-map': {
//                 latitude: [{
//                     selected: []
//                 }],
//                 longitude: [{
//                     selected: []
//                 }],
//                 value: [{
//                     selected: []
//                 }],
//                 label: [{
//                     selected: []
//                 }],
//                 marker: $.extend({}, DefaultOptions.Marker, {symbolSize: 1}),
//                 stripLine: DefaultOptions.StripLine,
//                 trendLine: DefaultOptions.TrendLine
//             }
//         }
//     })
// };
//
// export default BScatterMapCharts


/***/ }),
/* 573 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BTableCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
} /**
   * Source: bchart-table.js
   * Created by daewon.park on 2017-04-23.
   */


BTableCharts.prototype = Object.create(_bchartBase2.default.prototype);
BTableCharts.prototype.constructor = BTableCharts;

BTableCharts.prototype._createFrameComponent = function () {
    // this._createTitle(); //TODO: table title 개발완료 후 주석해제할것. mk.kim
    this._createLoadingPanel();
    this._createErrorPanel();
};

BTableCharts.prototype._createChartComponent = function () {
    this._createChart();
    this.bindEvent('bindingComplete', this._lazyRenderChart.bind(this));
};

BTableCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BTableCharts.Attr.Key, this.$parent, this.options);
};

BTableCharts.prototype.setOptions = function (options) {
    var reload = this.isReload(options);
    this._changeOptions(options);
    this.render(reload);
};

BTableCharts.Attr = {
    Key: 'table',
    Label: 'Table',
    Order: 0,
    ColumnConf: {
        formatter: {
            label: 'Formatter',
            multiple: true
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        plotOptions: {
            table: {
                formatter: [],
                colWidths: [],
                rowIndex: { show: true }
                //viewColumnIndex:{start: 1, end: 2000}
            }
        }
    })
};

exports.default = BTableCharts;

/***/ }),
/* 574 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-treemap.js
 * Created by daewon.park on 2017-04-16.
 */
function BTreemapCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
}

BTreemapCharts.prototype = Object.create(_bchartBase2.default.prototype);
BTreemapCharts.prototype.constructor = BTreemapCharts;

BTreemapCharts.prototype._createFrameComponent = function () {
    this._createTitle();
    this._createToolbar();
    this._createLoadingPanel();
    this._createErrorPanel();
};

BTreemapCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BTreemapCharts.Attr.Key, this.$parent, this.options);
};

BTreemapCharts.prototype._renderFrame = function () {
    if (this.title) {
        this.title.render(this.options.title.text);
    }

    if (this.toolbar) {
        this.toolbar.render();
    }
};

BTreemapCharts.prototype.setOptions = function (options) {
    $.extend(true, options, {
        plotOptions: {
            treemap: {}
        }
    });

    var reload = this.isReload(options);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.treemap.hierarchyCol, options.plotOptions.treemap.hierarchyCol);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.treemap.sizeBy, options.plotOptions.treemap.sizeBy);
    this._changeOptions(options);
    this.render(reload);
};

BTreemapCharts.Attr = {
    Key: 'treemap',
    Label: 'Tree map',
    Order: 50,
    ColumnConf: {
        hierarchyCol: {
            label: 'Hierarchy',
            aggregationEnabled: false,
            multiple: true,
            columnType: ['string', 'number'],
            mandatory: true
        },
        sizeBy: {
            label: 'Size By',
            aggregationEnabled: true,
            aggregationMap: {
                number: _const2.default.extendAggregation(['SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
            },
            columnType: ['string', 'number'],
            mandatory: true
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        toolbar: {
            show: false
        },
        plotOptions: {
            treemap: {
                hierarchyCol: [{
                    selected: []
                }],
                sizeBy: [{
                    selected: []
                }]
            }
        }
    })
};

exports.default = BTreemapCharts;

/***/ }),
/* 575 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _bchartRegister = __webpack_require__(40);

var ChartRegistry = _interopRequireWildcard(_bchartRegister);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

var _bchartPie = __webpack_require__(278);

var _bchartPie2 = _interopRequireDefault(_bchartPie);

var _chartUtils = __webpack_require__(24);

var _chartUtils2 = _interopRequireDefault(_chartUtils);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BMapCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
} /**
   * Source: bchart-scatter.js
   * Created by daewon.park on 2017-03-23.
   */


BMapCharts.prototype = Object.create(_bchartBase2.default.prototype);
BMapCharts.prototype.constructor = BMapCharts;

BMapCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BMapCharts.Attr.Key, this.$parent, this.options);
};

BMapCharts.prototype._reloadColumnConf = function () {};

BMapCharts.prototype._createAxisTitle = function () {
    // do nothing
};
BMapCharts.prototype.setOptions = function (options) {
    $.extend(true, options, {
        plotOptions: {
            map: {}
        }
    });

    var reload = this.isReload(options);
    this._changeOptions(options);
    this.render(reload);
};

BMapCharts.Attr = {
    Key: 'map',
    Label: 'Map',
    Order: 80,
    ColumnConf: {
        lines: {
            type: 'lines',
            latitude: {
                aggregationEnabled: false,
                columnType: ['number']
            },
            longitude: {
                aggregationEnabled: false,
                columnType: ['number']
            },
            colorBy: {
                aggregationEnabled: false,
                columnType: ['string', 'number'],
                multiple: true
            },
            sortBy: {
                aggregationEnabled: false,
                columnType: ['string', 'number'],
                multiple: true
            }
        },
        point: {
            type: 'point',
            latitude: {
                aggregationEnabled: false,
                columnType: ['number']
            },
            longitude: {
                aggregationEnabled: false,
                columnType: ['number']
            },
            colorBy: {
                aggregationEnabled: false,
                columnType: ['string', 'number'],
                multiple: true
            },
            sizeBy: {
                aggregationEnabled: true,
                multiple: false,
                aggregationMap: {
                    number: _const2.default.extendAggregation(['SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                    string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
                },
                columnType: ['number', 'string']
            }
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        toolbar: {
            show: false,
            menu: {
                brush: {}
            }
        },
        plotOptions: {
            map: {
                marker: $.extend(true, {}, _defaultOptions2.default.Marker, { symbolSize: 8 }),
                mapName: '',
                layers: [],
                mapStyle: {
                    label: {
                        emphasis: {
                            show: true,
                            textStyle: {
                                color: '#000000',
                                fontSize: 12,
                                fontFamily: '',
                                fontStyle: 'normal',
                                fontWeight: 'normal'
                            }
                        }
                    },
                    itemStyle: {
                        normal: {
                            opacity: 1,
                            areaColor: '#eee',
                            borderColor: '#000',
                            borderWidth: 1,
                            borderType: 'solid'
                        },
                        emphasis: {
                            areaColor: '#eee'
                        }
                    }
                }
            }
        }
    }),
    Layers: {
        lines: {
            type: 'lines',
            latitude: [{ selected: [] }],
            longitude: [{ selected: [] }],
            colorBy: [{ selected: [] }],
            sortBy: [{ selected: [] }]
        },
        point: {
            type: 'point',
            latitude: [{ selected: [] }],
            longitude: [{ selected: [] }],
            colorBy: [{ selected: [] }],
            sizeBy: [{ selected: [] }]
        }
    }
};

exports.default = BMapCharts;

/***/ }),
/* 576 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-donut.js
 * Created by daewon.park on 2017-03-30.
 */
function BDonutCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
}

BDonutCharts.prototype = Object.create(_bchartBase2.default.prototype);
BDonutCharts.prototype.constructor = BDonutCharts;

BDonutCharts.prototype._createFrameComponent = function () {
    this._createTitle();
    this._createToolbar();
    this._createLoadingPanel();
    this._createErrorPanel();
};

BDonutCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BDonutCharts.Attr.Key, this.$parent, this.options);
};

BDonutCharts.prototype._renderFrame = function () {
    if (this.title) {
        this.title.render(this.options.title.text);
    }

    if (this.toolbar) {
        this.toolbar.render();
    }
};

BDonutCharts.prototype.setOptions = function (options) {
    $.extend(true, options, {
        plotOptions: {
            donut: {}
        }
    });

    var reload = this.isReload(options);
    if (!reload) reload |= this._isSelectionChanged(this.options.colorBy, options.colorBy);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.donut.sizeBy, options.plotOptions.donut.sizeBy);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.donut.label, options.plotOptions.donut.label);
    this._changeOptions(options);
    this.render(reload);
};

BDonutCharts.Attr = {
    Key: 'donut',
    Label: 'Donut',
    Order: 81,
    ColumnConf: {
        colorBy: {
            label: 'Color By',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            multiple: true,
            mandatory: true
        },
        sizeBy: {
            label: 'Size By',
            aggregationEnabled: true,
            aggregationMap: {
                number: _const2.default.extendAggregation(['SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
            },
            columnType: ['string', 'number']
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        toolbar: {
            show: false
        },
        plotOptions: {
            donut: {
                radius: ['25%', '75%'],
                axisSort: { sort: true, rule: 'asc', type: 'legend' },
                center: ['50%', '50%'],
                sizeBy: [{
                    selected: []
                }],
                label: {
                    show: true,
                    position: 'outside',
                    formatter: '{b}',
                    fontSize: 12
                }
            }
        }
    })
};

exports.default = BDonutCharts;

/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* -----------------------------------------------------
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *  bchart-image-grid.js
reated by hyunseok.oh@samsung.com on 2019-03-13.



var BImageGrid = function (_BBaseCharts) {
    _inherits(BImageGrid, _BBaseCharts);

    function BImageGrid(parentId, options) {
        _classCallCheck(this, BImageGrid);

        return _possibleConstructorReturn(this, (BImageGrid.__proto__ || Object.getPrototypeOf(BImageGrid)).call(this, parentId, options));
    }

    _createClass(BImageGrid, [{
        key: '_createChart',
        value: function _createChart() {
            this.chart = Wrapper.createChartWrapper(BImageGrid.Attr.Key, this.$parent, this.options);
        }
    }, {
        key: '_renderFrame',
        value: function _renderFrame() {
            if (this.title) {
                this.title.render(this.options.title.text);
            }

            if (this.toolbar) {
                this.toolbar.render();
            }
        }
    }, {
        key: 'setOptions',
        value: function setOptions(options) {
            var reload = this.isReload(options);
            this._changeOptions(options);
            this.render(reload);
        }
    }], [{
        key: 'Attr',
        get: function get() {
            return {
                Key: 'image-grid',
                Label: 'Image Grid',
                ColumnConf: {
                    imageColumn: {
                        label: 'Image',
                        aggregationEnabled: false,
                        columnType: ['image'],
                        mandatory: true
                    },
                    sortBy: {
                        label: 'Sort By',
                        aggregationEnabled: false,
                        multiple: true,
                        columnType: ['string', 'number']
                    },
                    labelColumn: {
                        label: 'Label',
                        aggregationEnabled: false,
                        multiple: false,
                        columnType: ['string', 'number']
                    }
                },
                DefaultOptions: _defaultOptions2.default.extend({
                    sortBy: [{
                        selected: []
                    }],
                    grid: {
                        row: 5,
                        column: 5,
                        cellWidth: 50,
                        cellHeight: 50,
                        showImageGrid: true
                    },
                    imageColumn: [{
                        selected: []
                    }],
                    labelColumn: [{
                        selected: []
                    }]
                })
            };
        }
    }]);

    return BImageGrid;
}(_bchartBase2.default);

exports.default = BImageGrid;

/***/ }),
/* 578 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _bchartBase = __webpack_require__(17);

var _bchartBase2 = _interopRequireDefault(_bchartBase);

var _wrapperRegister = __webpack_require__(6);

var Wrapper = _interopRequireWildcard(_wrapperRegister);

var _defaultOptions = __webpack_require__(9);

var _defaultOptions2 = _interopRequireDefault(_defaultOptions);

var _const = __webpack_require__(20);

var _const2 = _interopRequireDefault(_const);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Source: bchart-bubble.js
 * Created by ji_sung.park on 2017-09-05
 */
function BWordCloudCharts(parentId, options) {
    _bchartBase2.default.call(this, parentId, options);
}

BWordCloudCharts.prototype = Object.create(_bchartBase2.default.prototype);
BWordCloudCharts.prototype.constructor = BWordCloudCharts;

BWordCloudCharts.prototype._createFrameComponent = function () {
    this._createTitle();
    this._createToolbar();
    this._createLoadingPanel();
    this._createErrorPanel();
};

BWordCloudCharts.prototype._createChart = function () {
    this.chart = Wrapper.createChartWrapper(BWordCloudCharts.Attr.Key, this.$parent, this.options);
};

BWordCloudCharts.prototype._renderFrame = function () {
    if (this.title) {
        this.title.render(this.options.title.text);
    }

    if (this.toolbar) {
        this.toolbar.render();
    }
};

BWordCloudCharts.prototype.setOptions = function (options) {
    $.extend(true, options, {
        plotOptions: {
            wordCloud: {}
        }
    });

    var reload = this.isReload(options);
    // if (!reload) reload |= this._isSelectionChanged(this.options.colorBy, options.colorBy);
    if (!reload) reload |= this._isSelectionChanged(this.options.plotOptions.wordCloud.sizeBy, options.plotOptions.wordCloud.sizeBy);
    this._changeOptions(options);
    this.render(reload);
};

BWordCloudCharts.Attr = {
    Key: 'wordCloud',
    Label: 'Word Cloud Chart',
    Order: 51,
    ColumnConf: {
        colorBy: {
            label: 'Color By',
            aggregationEnabled: false,
            columnType: ['string', 'number'],
            multiple: false,
            mandatory: true
        },
        sizeBy: {
            label: 'Size By',
            aggregationEnabled: true,
            aggregationMap: {
                number: _const2.default.extendAggregation(['SUM', 'AVG', 'COUNT', 'UNIQUE_COUNT', 'MIN', 'MAX']),
                string: _const2.default.extendAggregation(['COUNT', 'UNIQUE_COUNT'])
            },
            columnType: ['string', 'number']
        }
    },
    DefaultOptions: _defaultOptions2.default.extend({
        toolbar: {
            show: false
        },
        plotOptions: {
            wordCloud: {
                radius: '75%',
                center: ['50%', '50%'],
                sizeBy: [{
                    selected: []
                }]
            }
        }
    })
};

exports.default = BWordCloudCharts;

/***/ }),
/* 579 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// from:https://github.com/jserz/js_piece/blob/master/DOM/ChildNode/remove()/remove().md
(function (arr) {
    arr.forEach(function (item) {
        if (item.hasOwnProperty('remove')) {
            return;
        }
        Object.defineProperty(item, 'remove', {
            configurable: true,
            enumerable: true,
            writable: true,
            value: function remove() {
                if (this.parentNode !== null) this.parentNode.removeChild(this);
            }
        });
    });
})([Element.prototype, CharacterData.prototype, DocumentType.prototype]);

/***/ }),
/* 580 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _optionUtils = __webpack_require__(1);

var _optionUtils2 = _interopRequireDefault(_optionUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function SelectionFilterHelper(filters) {
    this._filters = filters;
} /**
   * Source: filter-helper.js
   * Created by daewon.park on 2017-07-21.
   */

SelectionFilterHelper.prototype._getValue = function (columns, row, col) {
    var idx = _optionUtils2.default.getColumnIndex({ name: col }, columns);
    if (idx > -1) return row[idx];
};

SelectionFilterHelper.prototype._isMatched = function (selectionValue, targetValue) {
    if ($.isPlainObject(selectionValue)) {
        // {min: ?, max: ?}
        if (targetValue >= selectionValue.min && targetValue <= selectionValue.max) {
            // 적합
        } else {
            return false;
        }
    } else if (Array.isArray(selectionValue)) {
        if (selectionValue.indexOf(targetValue) > -1) {} else {
            return false;
        }
    } else if (Number.isNaN(selectionValue) || selectionValue === null) {
        if (selectionValue + '' !== targetValue + '') {
            return false;
        }
    } else {
        if (targetValue != selectionValue) {
            return false;
        }
    }
    return true;
};

SelectionFilterHelper.prototype._filterRow = function (columns, row) {
    for (var s in this._filters) {
        var matched = true;
        for (var col in this._filters[s]) {
            var selectedValue = this._filters[s][col];
            var targetValue = this._getValue(columns, row, col);
            if (typeof targetValue === 'undefined' || !this._isMatched(selectedValue, targetValue)) {
                matched = false;
                break;
            }
        }
        if (matched) return true;
    }
};

SelectionFilterHelper.prototype.filter = function (columns, data) {
    if (!this._filters) {
        return data;
    } else if (this._filters.length === 0) {
        return [];
    } else {
        var _this = this;
        return data.filter(function (row) {
            return _this._filterRow(columns, row);
        });
    }
};

exports.default = SelectionFilterHelper;

/***/ })
/******/ ]);