{
    "script": {
        "type": "",
        "content": ""
    },
    "specJson": {
        "category": "textanalytics",
        "func": "brightics.function.textanalytics$word2vec70578",
        "name": "brightics.function.textanalytics$word2vec",
        "context": "python",
        "label": "Word2Vec",
        "description": "\"Word2vec is a group of related models that are used to produce word embeddings. These models are shallow, two-layer neural networks that are trained to reconstruct linguistic contexts of words. Word2vec takes as its input a large corpus of text and produces a vector space, typically of several hundred dimensions, with each unique word in the corpus being assigned a corresponding vector in the space. Word vectors are positioned in the vector space such that words that share common contexts in the corpus are located in close proximity to one another in the space.\"\n\nReference:\n+ <https://en.wikipedia.org/wiki/Word2vec>",
        "tags": [],
        "version": "3.6",
        "inputs": {
            "table": ""
        },
        "outputs": {
        	"out_table": "",
        	"model": ""
        },
        "meta": {
            "table": {
                "type": "table"
            },
            "out_table": {
                "type": "table"
            },
            "model": {
                "type": "model"
            }
        },
        "params": [
            {
                "id": "input_col",
                "label": "Input Column",
                "description": "",
                "mandatory": true,
                "items": [],
                "visibleOption": [],
                "control": "ColumnSelector",
                "columnType": [
                    "String[]"
                ],
                "validation": [],
                "multiple": false
            },
            {
                "id": "sg",
                "label": "Training Algorithm",
                "description": "Training algorithm: skip-gram, CBOW.",
                "mandatory": false,
                "items": [
                    {
                        "label": "Skip-gram",
                        "value": "1",
                        "default": true
                    },
                    {
                        "label": "CBOW",
                        "value": "0",
                        "default": false
                    }
                ],
                "visibleOption": [],
                "control": "RadioButton",
                "columnType": [],
                "validation": []
            },
            {
                "id": "size",
                "label": "Dimension of Vectors",
                "description": "Dimensionality of the word vectors.",
                "mandatory": false,
                "items": [],
                "visibleOption": [],
                "control": "InputBox",
                "columnType": [],
                "validation": [],
                "placeHolder": "100 (value >= 1)",
                "type": "Integer",
                "min": 1
            },
            {
                "id": "window",
                "label": "Window Size",
                "description": "Maximum distance between the current and predicted word within a sentence.",
                "mandatory": false,
                "items": [],
                "visibleOption": [],
                "control": "InputBox",
                "columnType": [],
                "validation": [],
                "placeHolder": "5 (value >= 1)",
                "type": "Integer",
                "min": 1
            },
            {
                "id": "min_count",
                "label": "Minimum Count",
                "description": "Ignores all words with total frequency lower than this.",
                "mandatory": false,
                "items": [],
                "visibleOption": [],
                "control": "InputBox",
                "columnType": [],
                "validation": [],
                "placeHolder": "1 (value >= 1)",
                "type": "Integer",
                "min": 1
            },
            {
                "id": "alpha",
                "label": "Alpha",
                "description": "The initial learning rate.",
                "mandatory": false,
                "items": [],
                "visibleOption": [],
                "control": "InputBox",
                "columnType": [],
                "validation": [],
                "type": "Double",
                "placeHolder": "0.025"
            },
            {
                "id": "min_alpha",
                "label": "Minimum alpha",
                "description": "Learning rate will linearly drop to min_alpha as training progresses.",
                "mandatory": false,
                "items": [],
                "visibleOption": [],
                "control": "InputBox",
                "columnType": [],
                "validation": [],
                "placeHolder": "0.025",
                "type": "Double"
            },
            {
                "id": "seed",
                "label": "Seed",
                "description": "Seed for the random number generator. Initial vectors for each word are seeded with a hash of the concatenation of word + str(seed). Note that hash randomization that breaks reproducibility is used by default.",
                "mandatory": false,
                "items": [],
                "visibleOption": [],
                "control": "InputBox",
                "columnType": [],
                "validation": [],
                "type": "Integer"
            },
            {
                "id": "train_epoch",
                "label": "Train epoch",
                "description": "Number of iterations (epochs) over the corpus.",
                "mandatory": false,
                "items": [],
                "visibleOption": [],
                "control": "InputBox",
                "columnType": [],
                "validation": [],
                "type": "Integer",
                "min": 1,
                "placeHolder": "100"
            },
            {
                "id": "workers",
                "label": "Number of Workers",
                "description": "Use these many worker threads to train the model (=faster training with multicore machines).",
                "mandatory": false,
                "items": [],
                "visibleOption": [],
                "control": "InputBox",
                "columnType": [],
                "validation": [],
                "type": "Integer",
                "placeHolder": "1 (value >= 1)",
                "min": 1
            },
            {
                "id": "hs",
                "label": "Hierarchical softmax",
                "description": "If it is True, hierarchical softmax will be used for model training. If it is False, and Negative is non-zero, negative sampling will be used.",
                "mandatory": false,
                "items": [],
                "visibleOption": [],
                "control": "BooleanRadio",
                "columnType": [],
                "validation": [],
                "defaultValue": true
            },
            {
                "id": "negative",
                "label": "Negative",
                "description": "If Negative > 0, negative sampling will be used, the int for negative specifies how many noise words should be drawn (usually between 5-20).",
                "mandatory": false,
                "items": [],
                "visibleOption": [
                    {
                        "id": "hs",
                        "value": false
                    }
                ],
                "control": "InputBox",
                "columnType": [],
                "validation": [],
                "type": "Integer",
                "min": 1,
                "placeHolder": "5"
            },
            {
                "id": "ns_exponent",
                "label": "Negative sampling exponent",
                "description": "The exponent used to shape the negative sampling distribution. A value of 1.0 samples exactly in proportion to the frequencies, 0.0 samples all words equally, while a negative value samples low-frequency words more than high-frequency words. The popular default value of 0.75 was chosen by the original Word2Vec paper.",
                "mandatory": false,
                "items": [],
                "visibleOption": [
                    {
                        "id": "hs",
                        "value": false
                    }
                ],
                "control": "InputBox",
                "columnType": [],
                "validation": [],
                "placeHolder": "0.75",
                "type": "Integer"
            },
            {
                "id": "topn",
                "label": "Top N frequent words",
                "description": "Number of top-N frequent words to return.",
                "mandatory": false,
                "items": [],
                "visibleOption": [],
                "control": "InputBox",
                "columnType": [],
                "validation": [],
                "placeHolder": "30 (value >= 2)",
                "type": "Integer",
                "min": 2
            }
        ]
    },
    "md": ""
}